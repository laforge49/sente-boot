if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(loadFlags["lang"]))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.transpiledLanguages_) {
          goog.transpiledLanguages_ = {"es5":true, "es6":true, "es6-impl":true};
          try {
            goog.transpiledLanguages_["es5"] = eval("[1,].length!\x3d1");
            var es6implTest = "let a\x3d{};const X\x3dclass{constructor(){}x(z){return new Map([" + "...arguments]).get(z[0])\x3d\x3d3}};return new X().x([a,3])";
            var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
            if (eval('(()\x3d\x3e{"use strict";' + es6implTest + "})()")) {
              goog.transpiledLanguages_["es6-impl"] = false;
            }
            if (eval('(()\x3d\x3e{"use strict";' + es6fullTest + "})()")) {
              goog.transpiledLanguages_["es6"] = false;
            }
          } catch (err) {
          }
        }
      }
    }
    return !!goog.transpiledLanguages_[lang];
  };
  goog.transpiledLanguages_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var needsTranspile = goog.needsTranspile_(loadFlags["lang"]);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0;i < separators.length;i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / (v2);
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call((opt_obj), obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call((opt_obj), obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call((opt_obj), obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call((opt_this), obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1;i >= 0;i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0;value >= pow;i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0;i < this.bits_.length;i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0;i < len;i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0;i < arr_index;i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0;i <= len;i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0;i < 2 * len;i++) {
    arr[i] = 0;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    for (var j = 0;j < other.bits_.length;j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0;i < len;i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len;i < 2 * len;i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call((opt_obj), val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call((opt_obj), arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call((opt_obj), arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call((opt_obj), element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call((opt_obj), val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = (compareFn)(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0;i < arr.length;i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call((opt_obj), value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call((opt_obj), element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
      return new goog.math.Long(val | 0, val < 0 ? -1 : 0);
    });
  } else {
    return new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ZERO, function() {
    return goog.math.Long.fromInt(0);
  });
};
goog.math.Long.getOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ONE, function() {
    return goog.math.Long.fromInt(1);
  });
};
goog.math.Long.getNegOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.NEG_ONE, function() {
    return goog.math.Long.fromInt(-1);
  });
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, ZERO:3, ONE:4, NEG_ONE:5, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.9.229";
cljs.core._STAR_unchecked_if_STAR_ = false;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__25555__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__25555 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__25556__i = 0, G__25556__a = new Array(arguments.length - 0);
        while (G__25556__i < G__25556__a.length) {
          G__25556__a[G__25556__i] = arguments[G__25556__i + 0];
          ++G__25556__i;
        }
        args = new cljs.core.IndexedSeq(G__25556__a, 0);
      }
      return G__25555__delegate.call(this, args);
    };
    G__25555.cljs$lang$maxFixedArity = 0;
    G__25555.cljs$lang$applyTo = function(arglist__25557) {
      var args = cljs.core.seq(arglist__25557);
      return G__25555__delegate(args);
    };
    G__25555.cljs$core$IFn$_invoke$arity$variadic = G__25555__delegate;
    return G__25555;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__25558__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__25558 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__25559__i = 0, G__25559__a = new Array(arguments.length - 0);
        while (G__25559__i < G__25559__a.length) {
          G__25559__a[G__25559__i] = arguments[G__25559__i + 0];
          ++G__25559__i;
        }
        args = new cljs.core.IndexedSeq(G__25559__a, 0);
      }
      return G__25558__delegate.call(this, args);
    };
    G__25558.cljs$lang$maxFixedArity = 0;
    G__25558.cljs$lang$applyTo = function(arglist__25560) {
      var args = cljs.core.seq(arglist__25560);
      return G__25558__delegate(args);
    };
    G__25558.cljs$core$IFn$_invoke$arity$variadic = G__25558__delegate;
    return G__25558;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__8620__auto__ = ty;
    if (cljs.core.truth_(and__8620__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__8620__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args25561 = [];
  var len__9707__auto___25567 = arguments.length;
  var i__9708__auto___25568 = 0;
  while (true) {
    if (i__9708__auto___25568 < len__9707__auto___25567) {
      args25561.push(arguments[i__9708__auto___25568]);
      var G__25569 = i__9708__auto___25568 + 1;
      i__9708__auto___25568 = G__25569;
      continue;
    } else {
    }
    break;
  }
  var G__25566 = args25561.length;
  switch(G__25566) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25561.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__9547__auto___25571 = dimarray.length;
  var i_25572 = 0;
  while (true) {
    if (i_25572 < n__9547__auto___25571) {
      dimarray[i_25572] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__25573 = i_25572 + 1;
      i_25572 = G__25573;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq25562) {
  var G__25563 = cljs.core.first(seq25562);
  var seq25562__$1 = cljs.core.next(seq25562);
  var G__25564 = cljs.core.first(seq25562__$1);
  var seq25562__$2 = cljs.core.next(seq25562__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__25563, G__25564, seq25562__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__9547__auto___25574 = len;
  var i_25575 = 0;
  while (true) {
    if (i_25575 < n__9547__auto___25574) {
      new_arr[i_25575] = arr[i_25575];
      var G__25576 = i_25575 + 1;
      i_25575 = G__25576;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__25577 = i + 1;
      i = G__25577;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args25578 = [];
  var len__9707__auto___25587 = arguments.length;
  var i__9708__auto___25588 = 0;
  while (true) {
    if (i__9708__auto___25588 < len__9707__auto___25587) {
      args25578.push(arguments[i__9708__auto___25588]);
      var G__25589 = i__9708__auto___25588 + 1;
      i__9708__auto___25588 = G__25589;
      continue;
    } else {
    }
    break;
  }
  var G__25583 = args25578.length;
  switch(G__25583) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25578.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__25584 = cljs.core.aget;
  var G__25585 = array[i];
  var G__25586 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__25584, G__25585, G__25586) : cljs.core.apply.call(null, G__25584, G__25585, G__25586);
};
cljs.core.aget.cljs$lang$applyTo = function(seq25579) {
  var G__25580 = cljs.core.first(seq25579);
  var seq25579__$1 = cljs.core.next(seq25579);
  var G__25581 = cljs.core.first(seq25579__$1);
  var seq25579__$2 = cljs.core.next(seq25579__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__25580, G__25581, seq25579__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args25591 = [];
  var len__9707__auto___25602 = arguments.length;
  var i__9708__auto___25603 = 0;
  while (true) {
    if (i__9708__auto___25603 < len__9707__auto___25602) {
      args25591.push(arguments[i__9708__auto___25603]);
      var G__25604 = i__9708__auto___25603 + 1;
      i__9708__auto___25603 = G__25604;
      continue;
    } else {
    }
    break;
  }
  var G__25597 = args25591.length;
  switch(G__25597) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25591.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__25598 = cljs.core.aset;
  var G__25599 = array[idx];
  var G__25600 = idx2;
  var G__25601 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__25598, G__25599, G__25600, G__25601) : cljs.core.apply.call(null, G__25598, G__25599, G__25600, G__25601);
};
cljs.core.aset.cljs$lang$applyTo = function(seq25592) {
  var G__25593 = cljs.core.first(seq25592);
  var seq25592__$1 = cljs.core.next(seq25592);
  var G__25594 = cljs.core.first(seq25592__$1);
  var seq25592__$2 = cljs.core.next(seq25592__$1);
  var G__25595 = cljs.core.first(seq25592__$2);
  var seq25592__$3 = cljs.core.next(seq25592__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__25593, G__25594, G__25595, seq25592__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args25606 = [];
  var len__9707__auto___25612 = arguments.length;
  var i__9708__auto___25613 = 0;
  while (true) {
    if (i__9708__auto___25613 < len__9707__auto___25612) {
      args25606.push(arguments[i__9708__auto___25613]);
      var G__25614 = i__9708__auto___25613 + 1;
      i__9708__auto___25613 = G__25614;
      continue;
    } else {
    }
    break;
  }
  var G__25608 = args25606.length;
  switch(G__25608) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25606.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__25609 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__25610 = [];
  var G__25611 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__25609, G__25610, G__25611) : cljs.core.reduce.call(null, G__25609, G__25610, G__25611);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___25619 = arguments.length;
  var i__9708__auto___25620 = 0;
  while (true) {
    if (i__9708__auto___25620 < len__9707__auto___25619) {
      args__9714__auto__.push(arguments[i__9708__auto___25620]);
      var G__25621 = i__9708__auto___25620 + 1;
      i__9708__auto___25620 = G__25621;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq25616) {
  var G__25617 = cljs.core.first(seq25616);
  var seq25616__$1 = cljs.core.next(seq25616);
  var G__25618 = cljs.core.first(seq25616__$1);
  var seq25616__$2 = cljs.core.next(seq25616__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__25617, G__25618, seq25616__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args25622 = [];
  var len__9707__auto___25625 = arguments.length;
  var i__9708__auto___25626 = 0;
  while (true) {
    if (i__9708__auto___25626 < len__9707__auto___25625) {
      args25622.push(arguments[i__9708__auto___25626]);
      var G__25627 = i__9708__auto___25626 + 1;
      i__9708__auto___25626 = G__25627;
      continue;
    } else {
    }
    break;
  }
  var G__25624 = args25622.length;
  switch(G__25624) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25622.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__9296__auto__.call(null, this$);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__9296__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__9296__auto__.call(null, this$, a);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__9296__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__9296__auto__.call(null, this$, a, b);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__9296__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$4 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__9296__auto__.call(null, this$, a, b, c);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__9296__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$5 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__9296__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__9296__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$6 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__9296__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__9296__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$7 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__9296__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$8 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$9 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$10 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$11 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$12 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$13 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$14 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$15 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$16 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$17 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$18 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$19 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$20 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$21 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._invoke[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$22 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__9296__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__9296__auto____$1 = cljs.core._invoke["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__9296__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__9295__auto__ = value == null ? null : value;
    var m__9296__auto__ = cljs.core._clone[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__9296__auto__.call(null, value);
    } else {
      var m__9296__auto____$1 = cljs.core._clone["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__9296__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._count[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._count["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._empty[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._empty["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._conj[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__9296__auto__.call(null, coll, o);
    } else {
      var m__9296__auto____$1 = cljs.core._conj["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__9296__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args25629 = [];
  var len__9707__auto___25632 = arguments.length;
  var i__9708__auto___25633 = 0;
  while (true) {
    if (i__9708__auto___25633 < len__9707__auto___25632) {
      args25629.push(arguments[i__9708__auto___25633]);
      var G__25634 = i__9708__auto___25633 + 1;
      i__9708__auto___25633 = G__25634;
      continue;
    } else {
    }
    break;
  }
  var G__25631 = args25629.length;
  switch(G__25631) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25629.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._nth[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__9296__auto__.call(null, coll, n);
    } else {
      var m__9296__auto____$1 = cljs.core._nth["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__9296__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._nth[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__9296__auto__.call(null, coll, n, not_found);
    } else {
      var m__9296__auto____$1 = cljs.core._nth["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__9296__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._first[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._first["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._rest[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._rest["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._next[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._next["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args25636 = [];
  var len__9707__auto___25639 = arguments.length;
  var i__9708__auto___25640 = 0;
  while (true) {
    if (i__9708__auto___25640 < len__9707__auto___25639) {
      args25636.push(arguments[i__9708__auto___25640]);
      var G__25641 = i__9708__auto___25640 + 1;
      i__9708__auto___25640 = G__25641;
      continue;
    } else {
    }
    break;
  }
  var G__25638 = args25636.length;
  switch(G__25638) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25636.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._lookup[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__9296__auto__.call(null, o, k);
    } else {
      var m__9296__auto____$1 = cljs.core._lookup["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__9296__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._lookup[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__9296__auto__.call(null, o, k, not_found);
    } else {
      var m__9296__auto____$1 = cljs.core._lookup["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__9296__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__9296__auto__.call(null, coll, k);
    } else {
      var m__9296__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__9296__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._assoc[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__9296__auto__.call(null, coll, k, v);
    } else {
      var m__9296__auto____$1 = cljs.core._assoc["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__9296__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._dissoc[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__9296__auto__.call(null, coll, k);
    } else {
      var m__9296__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__9296__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._key[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._key["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._val[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._val["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._disjoin[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__9296__auto__.call(null, coll, v);
    } else {
      var m__9296__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__9296__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._peek[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._peek["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._pop[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._pop["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._assoc_n[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__9296__auto__.call(null, coll, n, val);
    } else {
      var m__9296__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__9296__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._deref[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto__.call(null, o);
    } else {
      var m__9296__auto____$1 = cljs.core._deref["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__9296__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__9296__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__9296__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._meta[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto__.call(null, o);
    } else {
      var m__9296__auto____$1 = cljs.core._meta["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._with_meta[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__9296__auto__.call(null, o, meta);
    } else {
      var m__9296__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__9296__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args25643 = [];
  var len__9707__auto___25646 = arguments.length;
  var i__9708__auto___25647 = 0;
  while (true) {
    if (i__9708__auto___25647 < len__9707__auto___25646) {
      args25643.push(arguments[i__9708__auto___25647]);
      var G__25648 = i__9708__auto___25647 + 1;
      i__9708__auto___25647 = G__25648;
      continue;
    } else {
    }
    break;
  }
  var G__25645 = args25643.length;
  switch(G__25645) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25643.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._reduce[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__9296__auto__.call(null, coll, f);
    } else {
      var m__9296__auto____$1 = cljs.core._reduce["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__9296__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._reduce[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__9296__auto__.call(null, coll, f, start);
    } else {
      var m__9296__auto____$1 = cljs.core._reduce["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__9296__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._kv_reduce[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__9296__auto__.call(null, coll, f, init);
    } else {
      var m__9296__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__9296__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._equiv[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__9296__auto__.call(null, o, other);
    } else {
      var m__9296__auto____$1 = cljs.core._equiv["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__9296__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._hash[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto__.call(null, o);
    } else {
      var m__9296__auto____$1 = cljs.core._hash["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._seq[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto__.call(null, o);
    } else {
      var m__9296__auto____$1 = cljs.core._seq["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__9296__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._rseq[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._rseq["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._sorted_seq[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__9296__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__9296__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__9296__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__9296__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__9296__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__9296__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._entry_key[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__9296__auto__.call(null, coll, entry);
    } else {
      var m__9296__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__9296__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._comparator[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._comparator["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__9295__auto__ = writer == null ? null : writer;
    var m__9296__auto__ = cljs.core._write[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__9296__auto__.call(null, writer, s);
    } else {
      var m__9296__auto____$1 = cljs.core._write["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__9296__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__9295__auto__ = writer == null ? null : writer;
    var m__9296__auto__ = cljs.core._flush[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__9296__auto__.call(null, writer);
    } else {
      var m__9296__auto____$1 = cljs.core._flush["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__9296__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._pr_writer[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__9296__auto__.call(null, o, writer, opts);
    } else {
      var m__9296__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__9296__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__9295__auto__ = x == null ? null : x;
    var m__9296__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto__.call(null, x);
    } else {
      var m__9296__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._notify_watches[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__9296__auto__.call(null, this$, oldval, newval);
    } else {
      var m__9296__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__9296__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._add_watch[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__9296__auto__.call(null, this$, key, f);
    } else {
      var m__9296__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__9296__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core._remove_watch[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__9296__auto__.call(null, this$, key);
    } else {
      var m__9296__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__9296__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._as_transient[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__9295__auto__ = tcoll == null ? null : tcoll;
    var m__9296__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__9296__auto__.call(null, tcoll, val);
    } else {
      var m__9296__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__9296__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__9295__auto__ = tcoll == null ? null : tcoll;
    var m__9296__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__9296__auto__.call(null, tcoll);
    } else {
      var m__9296__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__9296__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__9295__auto__ = tcoll == null ? null : tcoll;
    var m__9296__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__9296__auto__.call(null, tcoll, key, val);
    } else {
      var m__9296__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__9296__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__9295__auto__ = tcoll == null ? null : tcoll;
    var m__9296__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__9296__auto__.call(null, tcoll, key);
    } else {
      var m__9296__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__9296__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__9295__auto__ = tcoll == null ? null : tcoll;
    var m__9296__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__9296__auto__.call(null, tcoll, n, val);
    } else {
      var m__9296__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__9296__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__9295__auto__ = tcoll == null ? null : tcoll;
    var m__9296__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__9296__auto__.call(null, tcoll);
    } else {
      var m__9296__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__9296__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__9295__auto__ = tcoll == null ? null : tcoll;
    var m__9296__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__9296__auto__.call(null, tcoll, v);
    } else {
      var m__9296__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__9296__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__9295__auto__ = x == null ? null : x;
    var m__9296__auto__ = cljs.core._compare[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__9296__auto__.call(null, x, y);
    } else {
      var m__9296__auto____$1 = cljs.core._compare["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__9296__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._drop_first[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._chunked_first[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._chunked_rest[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._chunked_next[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__9295__auto__ = x == null ? null : x;
    var m__9296__auto__ = cljs.core._name[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto__.call(null, x);
    } else {
      var m__9296__auto____$1 = cljs.core._name["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__9295__auto__ = x == null ? null : x;
    var m__9296__auto__ = cljs.core._namespace[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto__.call(null, x);
    } else {
      var m__9296__auto____$1 = cljs.core._namespace["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__9296__auto__.call(null, o, new_value);
    } else {
      var m__9296__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__9296__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args25650 = [];
  var len__9707__auto___25653 = arguments.length;
  var i__9708__auto___25654 = 0;
  while (true) {
    if (i__9708__auto___25654 < len__9707__auto___25653) {
      args25650.push(arguments[i__9708__auto___25654]);
      var G__25655 = i__9708__auto___25654 + 1;
      i__9708__auto___25654 = G__25655;
      continue;
    } else {
    }
    break;
  }
  var G__25652 = args25650.length;
  switch(G__25652) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25650.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__9296__auto__.call(null, o, f);
    } else {
      var m__9296__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__9296__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__9296__auto__.call(null, o, f, a);
    } else {
      var m__9296__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__9296__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$4 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__9296__auto__.call(null, o, f, a, b);
    } else {
      var m__9296__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__9296__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$5 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__9296__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__9296__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__9296__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__9295__auto__ = o == null ? null : o;
    var m__9296__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__9296__auto__.call(null, o, new_value);
    } else {
      var m__9296__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__9296__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__9295__auto__ = coll == null ? null : coll;
    var m__9296__auto__ = cljs.core._iterator[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto__.call(null, coll);
    } else {
      var m__9296__auto____$1 = cljs.core._iterator["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__9296__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__25657 = i + 2;
        var G__25658 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__25657;
        h1 = G__25658;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__25661 = i + 1;
          var G__25662 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__25661;
          hash = G__25662;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__25670 = o;
        switch(G__25670) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = cljs.core.not(a.ns);
      if (and__8620__auto__) {
        return b.ns;
      } else {
        return and__8620__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__25678 = a.ns;
            var G__25679 = b.ns;
            return goog.array.defaultCompare(G__25678, G__25679);
          }();
          if (0 === nsc) {
            var G__25680 = a.name;
            var G__25681 = b.name;
            return goog.array.defaultCompare(G__25680, G__25681);
          } else {
            return nsc;
          }
        }
      } else {
        var G__25682 = a.name;
        var G__25683 = b.name;
        return goog.array.defaultCompare(G__25682, G__25683);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__25685 = null;
  var G__25685__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__25685__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__25685 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__25685__2.call(this, self__, coll);
      case 3:
        return G__25685__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25685.cljs$core$IFn$_invoke$arity$2 = G__25685__2;
  G__25685.cljs$core$IFn$_invoke$arity$3 = G__25685__3;
  return G__25685;
}();
cljs.core.Symbol.prototype.apply = function(self__, args25684) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25684)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__9067__auto__ = self__._hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args25686 = [];
  var len__9707__auto___25689 = arguments.length;
  var i__9708__auto___25690 = 0;
  while (true) {
    if (i__9708__auto___25690 < len__9707__auto___25689) {
      args25686.push(arguments[i__9708__auto___25690]);
      var G__25691 = i__9708__auto___25690 + 1;
      i__9708__auto___25690 = G__25691;
      continue;
    } else {
    }
    break;
  }
  var G__25688 = args25686.length;
  switch(G__25688) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25686.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str("#'"), cljs.core.str(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__25694 = this$__$1.sym;
    var G__25695 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__25694, G__25695) : cljs.core._EQ_.call(null, G__25694, G__25695);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__25740 = null;
  var G__25740__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__25740__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__25740__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__25740__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__25740__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__25740__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__25740__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__25740__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__25740__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__25740__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__25740__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__25740__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__25740__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__25740__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__25740__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__25740__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__25740__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__25740__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__25740__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__25740__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__25740__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__25740__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__25696 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__25697 = a;
    var G__25698 = b;
    var G__25699 = c;
    var G__25700 = d;
    var G__25701 = e;
    var G__25702 = f;
    var G__25703 = g;
    var G__25704 = h;
    var G__25705 = i;
    var G__25706 = j;
    var G__25707 = k;
    var G__25708 = l;
    var G__25709 = m;
    var G__25710 = n;
    var G__25711 = o;
    var G__25712 = p;
    var G__25713 = q;
    var G__25714 = r;
    var G__25715 = s;
    var G__25716 = t;
    var G__25717 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25696, G__25697, G__25698, G__25699, G__25700, G__25701, G__25702, G__25703, G__25704, G__25705, G__25706, G__25707, G__25708, G__25709, G__25710, G__25711, G__25712, G__25713, G__25714, G__25715, G__25716, G__25717) : cljs.core.apply.call(null, G__25696, G__25697, G__25698, G__25699, G__25700, G__25701, G__25702, G__25703, G__25704, G__25705, G__25706, G__25707, G__25708, G__25709, G__25710, 
    G__25711, G__25712, G__25713, G__25714, G__25715, G__25716, G__25717);
  };
  G__25740 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__25740__1.call(this, self__);
      case 2:
        return G__25740__2.call(this, self__, a);
      case 3:
        return G__25740__3.call(this, self__, a, b);
      case 4:
        return G__25740__4.call(this, self__, a, b, c);
      case 5:
        return G__25740__5.call(this, self__, a, b, c, d);
      case 6:
        return G__25740__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__25740__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__25740__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__25740__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__25740__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__25740__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__25740__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__25740__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__25740__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__25740__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__25740__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__25740__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__25740__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__25740__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__25740__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__25740__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__25740__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25740.cljs$core$IFn$_invoke$arity$1 = G__25740__1;
  G__25740.cljs$core$IFn$_invoke$arity$2 = G__25740__2;
  G__25740.cljs$core$IFn$_invoke$arity$3 = G__25740__3;
  G__25740.cljs$core$IFn$_invoke$arity$4 = G__25740__4;
  G__25740.cljs$core$IFn$_invoke$arity$5 = G__25740__5;
  G__25740.cljs$core$IFn$_invoke$arity$6 = G__25740__6;
  G__25740.cljs$core$IFn$_invoke$arity$7 = G__25740__7;
  G__25740.cljs$core$IFn$_invoke$arity$8 = G__25740__8;
  G__25740.cljs$core$IFn$_invoke$arity$9 = G__25740__9;
  G__25740.cljs$core$IFn$_invoke$arity$10 = G__25740__10;
  G__25740.cljs$core$IFn$_invoke$arity$11 = G__25740__11;
  G__25740.cljs$core$IFn$_invoke$arity$12 = G__25740__12;
  G__25740.cljs$core$IFn$_invoke$arity$13 = G__25740__13;
  G__25740.cljs$core$IFn$_invoke$arity$14 = G__25740__14;
  G__25740.cljs$core$IFn$_invoke$arity$15 = G__25740__15;
  G__25740.cljs$core$IFn$_invoke$arity$16 = G__25740__16;
  G__25740.cljs$core$IFn$_invoke$arity$17 = G__25740__17;
  G__25740.cljs$core$IFn$_invoke$arity$18 = G__25740__18;
  G__25740.cljs$core$IFn$_invoke$arity$19 = G__25740__19;
  G__25740.cljs$core$IFn$_invoke$arity$20 = G__25740__20;
  G__25740.cljs$core$IFn$_invoke$arity$21 = G__25740__21;
  G__25740.cljs$core$IFn$_invoke$arity$22 = G__25740__22;
  return G__25740;
}();
cljs.core.Var.prototype.apply = function(self__, args25693) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25693)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__25718 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__25719 = a;
  var G__25720 = b;
  var G__25721 = c;
  var G__25722 = d;
  var G__25723 = e;
  var G__25724 = f;
  var G__25725 = g;
  var G__25726 = h;
  var G__25727 = i;
  var G__25728 = j;
  var G__25729 = k;
  var G__25730 = l;
  var G__25731 = m;
  var G__25732 = n;
  var G__25733 = o;
  var G__25734 = p;
  var G__25735 = q;
  var G__25736 = r;
  var G__25737 = s;
  var G__25738 = t;
  var G__25739 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25718, G__25719, G__25720, G__25721, G__25722, G__25723, G__25724, G__25725, G__25726, G__25727, G__25728, G__25729, G__25730, G__25731, G__25732, G__25733, G__25734, G__25735, G__25736, G__25737, G__25738, G__25739) : cljs.core.apply.call(null, G__25718, G__25719, G__25720, G__25721, G__25722, G__25723, G__25724, G__25725, G__25726, G__25727, G__25728, G__25729, G__25730, G__25731, G__25732, 
  G__25733, G__25734, G__25735, G__25736, G__25737, G__25738, G__25739);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args25753 = [];
  var len__9707__auto___25759 = arguments.length;
  var i__9708__auto___25760 = 0;
  while (true) {
    if (i__9708__auto___25760 < len__9707__auto___25759) {
      args25753.push(arguments[i__9708__auto___25760]);
      var G__25761 = i__9708__auto___25760 + 1;
      i__9708__auto___25760 = G__25761;
      continue;
    } else {
    }
    break;
  }
  var G__25758 = args25753.length;
  switch(G__25758) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25753.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__25763 = y;
        var G__25764 = cljs.core.first(more);
        var G__25765 = cljs.core.next(more);
        x = G__25763;
        y = G__25764;
        more = G__25765;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq25754) {
  var G__25755 = cljs.core.first(seq25754);
  var seq25754__$1 = cljs.core.next(seq25754);
  var G__25756 = cljs.core.first(seq25754__$1);
  var seq25754__$2 = cljs.core.next(seq25754__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__25755, G__25756, seq25754__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__25766 = n + 1;
      var G__25767 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__25768 = cljs.core.next(coll__$1);
      n = G__25766;
      hash_code = G__25767;
      coll__$1 = G__25768;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__25769 = n + 1;
      var G__25770 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__25771 = cljs.core.next(coll__$1);
      n = G__25769;
      hash_code = G__25770;
      coll__$1 = G__25771;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__25772 = this$__$1.valueOf();
    var G__25773 = other.valueOf();
    return goog.array.defaultCompare(G__25772, G__25773);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__9295__auto__ = inst == null ? null : inst;
    var m__9296__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__9296__auto__.call(null, inst);
    } else {
      var m__9296__auto____$1 = cljs.core.inst_ms_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(inst) : m__9296__auto____$1.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = true;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args25776 = [];
  var len__9707__auto___25785 = arguments.length;
  var i__9708__auto___25786 = 0;
  while (true) {
    if (i__9708__auto___25786 < len__9707__auto___25785) {
      args25776.push(arguments[i__9708__auto___25786]);
      var G__25787 = i__9708__auto___25786 + 1;
      i__9708__auto___25786 = G__25787;
      continue;
    } else {
    }
    break;
  }
  var G__25778 = args25776.length;
  switch(G__25778) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25776.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__25779 = val;
          var G__25780 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25779, G__25780) : f.call(null, G__25779, G__25780);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__25789 = nval;
          var G__25790 = n + 1;
          val = G__25789;
          n = G__25790;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__25781 = val__$1;
        var G__25782 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25781, G__25782) : f.call(null, G__25781, G__25782);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__25791 = nval;
        var G__25792 = n + 1;
        val__$1 = G__25791;
        n = G__25792;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__25783 = val__$1;
        var G__25784 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25783, G__25784) : f.call(null, G__25783, G__25784);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__25793 = nval;
        var G__25794 = n + 1;
        val__$1 = G__25793;
        n = G__25794;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args25795 = [];
  var len__9707__auto___25804 = arguments.length;
  var i__9708__auto___25805 = 0;
  while (true) {
    if (i__9708__auto___25805 < len__9707__auto___25804) {
      args25795.push(arguments[i__9708__auto___25805]);
      var G__25806 = i__9708__auto___25805 + 1;
      i__9708__auto___25805 = G__25806;
      continue;
    } else {
    }
    break;
  }
  var G__25797 = args25795.length;
  switch(G__25797) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25795.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__25798 = val;
          var G__25799 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25798, G__25799) : f.call(null, G__25798, G__25799);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__25808 = nval;
          var G__25809 = n + 1;
          val = G__25808;
          n = G__25809;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__25800 = val__$1;
        var G__25801 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25800, G__25801) : f.call(null, G__25800, G__25801);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__25810 = nval;
        var G__25811 = n + 1;
        val__$1 = G__25810;
        n = G__25811;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__25802 = val__$1;
        var G__25803 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25802, G__25803) : f.call(null, G__25802, G__25803);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__25812 = nval;
        var G__25813 = n + 1;
        val__$1 = G__25812;
        n = G__25813;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args25818 = [];
  var len__9707__auto___25821 = arguments.length;
  var i__9708__auto___25822 = 0;
  while (true) {
    if (i__9708__auto___25822 < len__9707__auto___25821) {
      args25818.push(arguments[i__9708__auto___25822]);
      var G__25823 = i__9708__auto___25822 + 1;
      i__9708__auto___25822 = G__25823;
      continue;
    } else {
    }
    break;
  }
  var G__25820 = args25818.length;
  switch(G__25820) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25818.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__8963__auto__ = 0;
      var y__8964__auto__ = start + len;
      return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__25825 = idx + 1;
          idx = G__25825;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args25826 = [];
  var len__9707__auto___25829 = arguments.length;
  var i__9708__auto___25830 = 0;
  while (true) {
    if (i__9708__auto___25830 < len__9707__auto___25829) {
      args25826.push(arguments[i__9708__auto___25830]);
      var G__25831 = i__9708__auto___25830 + 1;
      i__9708__auto___25830 = G__25831;
      continue;
    } else {
    }
    break;
  }
  var G__25828 = args25826.length;
  switch(G__25828) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25826.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__8970__auto__ = len - 1;
      var y__8971__auto__ = start;
      return x__8970__auto__ < y__8971__auto__ ? x__8970__auto__ : y__8971__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__25833 = idx - 1;
          idx = G__25833;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__25834 = null;
  var G__25834__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__25834__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__25834 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__25834__1.call(this, x);
      case 2:
        return G__25834__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25834.cljs$core$IFn$_invoke$arity$1 = G__25834__1;
  G__25834.cljs$core$IFn$_invoke$arity$2 = G__25834__2;
  return G__25834;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__25835 = null;
  var G__25835__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__25835__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__25835 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__25835__1.call(this, x);
      case 2:
        return G__25835__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25835.cljs$core$IFn$_invoke$arity$1 = G__25835__1;
  G__25835.cljs$core$IFn$_invoke$arity$2 = G__25835__2;
  return G__25835;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__8963__auto__ = 0;
  var y__8964__auto__ = self__.arr.length - self__.i;
  return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args25836 = [];
  var len__9707__auto___25839 = arguments.length;
  var i__9708__auto___25840 = 0;
  while (true) {
    if (i__9708__auto___25840 < len__9707__auto___25839) {
      args25836.push(arguments[i__9708__auto___25840]);
      var G__25841 = i__9708__auto___25840 + 1;
      i__9708__auto___25840 = G__25841;
      continue;
    } else {
    }
    break;
  }
  var G__25838 = args25836.length;
  switch(G__25838) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25836.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args25843 = [];
  var len__9707__auto___25846 = arguments.length;
  var i__9708__auto___25847 = 0;
  while (true) {
    if (i__9708__auto___25847 < len__9707__auto___25846) {
      args25843.push(arguments[i__9708__auto___25847]);
      var G__25848 = i__9708__auto___25847 + 1;
      i__9708__auto___25847 = G__25848;
      continue;
    } else {
    }
    break;
  }
  var G__25845 = args25843.length;
  switch(G__25845) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25843.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__25852 = null;
  var G__25852__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__25852__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__25852 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__25852__1.call(this, x);
      case 2:
        return G__25852__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25852.cljs$core$IFn$_invoke$arity$1 = G__25852__1;
  G__25852.cljs$core$IFn$_invoke$arity$2 = G__25852__2;
  return G__25852;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__25853 = null;
  var G__25853__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__25853__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__25853 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__25853__1.call(this, x);
      case 2:
        return G__25853__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25853.cljs$core$IFn$_invoke$arity$1 = G__25853__1;
  G__25853.cljs$core$IFn$_invoke$arity$2 = G__25853__2;
  return G__25853;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__25850 = cljs.core.List.EMPTY;
  var G__25851 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__25850, G__25851) : cljs.core.with_meta.call(null, G__25850, G__25851);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__25854 = sn;
      s = G__25854;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args25855 = [];
  var len__9707__auto___25861 = arguments.length;
  var i__9708__auto___25862 = 0;
  while (true) {
    if (i__9708__auto___25862 < len__9707__auto___25861) {
      args25855.push(arguments[i__9708__auto___25862]);
      var G__25863 = i__9708__auto___25862 + 1;
      i__9708__auto___25862 = G__25863;
      continue;
    } else {
    }
    break;
  }
  var G__25860 = args25855.length;
  switch(G__25860) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25855.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    var x__9466__auto__ = x;
    return cljs.core._conj(cljs.core.List.EMPTY, x__9466__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__25865 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__25866 = cljs.core.first(xs);
      var G__25867 = cljs.core.next(xs);
      coll = G__25865;
      x = G__25866;
      xs = G__25867;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq25856) {
  var G__25857 = cljs.core.first(seq25856);
  var seq25856__$1 = cljs.core.next(seq25856);
  var G__25858 = cljs.core.first(seq25856__$1);
  var seq25856__$2 = cljs.core.next(seq25856__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__25857, G__25858, seq25856__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__25868 = cljs.core.next(s);
      var G__25869 = acc + 1;
      s = G__25868;
      acc = G__25869;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args25874 = [];
  var len__9707__auto___25877 = arguments.length;
  var i__9708__auto___25878 = 0;
  while (true) {
    if (i__9708__auto___25878 < len__9707__auto___25877) {
      args25874.push(arguments[i__9708__auto___25878]);
      var G__25879 = i__9708__auto___25878 + 1;
      i__9708__auto___25878 = G__25879;
      continue;
    } else {
    }
    break;
  }
  var G__25876 = args25874.length;
  switch(G__25876) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25874.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__25881 = cljs.core.next(coll);
            var G__25882 = n - 1;
            coll = G__25881;
            n = G__25882;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__25883 = cljs.core.next(coll);
            var G__25884 = n - 1;
            var G__25885 = not_found;
            coll = G__25883;
            n = G__25884;
            not_found = G__25885;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args25886 = [];
  var len__9707__auto___25893 = arguments.length;
  var i__9708__auto___25894 = 0;
  while (true) {
    if (i__9708__auto___25894 < len__9707__auto___25893) {
      args25886.push(arguments[i__9708__auto___25894]);
      var G__25895 = i__9708__auto___25894 + 1;
      i__9708__auto___25894 = G__25895;
      continue;
    } else {
    }
    break;
  }
  var G__25888 = args25886.length;
  switch(G__25888) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25886.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__25897 = n__$1 - 1;
      var G__25898 = cljs.core.rest(xs);
      n__$1 = G__25897;
      xs = G__25898;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args25899 = [];
  var len__9707__auto___25904 = arguments.length;
  var i__9708__auto___25905 = 0;
  while (true) {
    if (i__9708__auto___25905 < len__9707__auto___25904) {
      args25899.push(arguments[i__9708__auto___25905]);
      var G__25906 = i__9708__auto___25905 + 1;
      i__9708__auto___25905 = G__25906;
      continue;
    } else {
    }
    break;
  }
  var G__25901 = args25899.length;
  switch(G__25901) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25899.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args25908 = [];
  var len__9707__auto___25915 = arguments.length;
  var i__9708__auto___25916 = 0;
  while (true) {
    if (i__9708__auto___25916 < len__9707__auto___25915) {
      args25908.push(arguments[i__9708__auto___25916]);
      var G__25917 = i__9708__auto___25916 + 1;
      i__9708__auto___25916 = G__25917;
      continue;
    } else {
    }
    break;
  }
  var G__25914 = args25908.length;
  switch(G__25914) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25908.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__25919 = ret;
      var G__25920 = cljs.core.first(kvs);
      var G__25921 = cljs.core.second(kvs);
      var G__25922 = cljs.core.nnext(kvs);
      coll = G__25919;
      k = G__25920;
      v = G__25921;
      kvs = G__25922;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq25909) {
  var G__25910 = cljs.core.first(seq25909);
  var seq25909__$1 = cljs.core.next(seq25909);
  var G__25911 = cljs.core.first(seq25909__$1);
  var seq25909__$2 = cljs.core.next(seq25909__$1);
  var G__25912 = cljs.core.first(seq25909__$2);
  var seq25909__$3 = cljs.core.next(seq25909__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__25910, G__25911, G__25912, seq25909__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args25923 = [];
  var len__9707__auto___25929 = arguments.length;
  var i__9708__auto___25930 = 0;
  while (true) {
    if (i__9708__auto___25930 < len__9707__auto___25929) {
      args25923.push(arguments[i__9708__auto___25930]);
      var G__25931 = i__9708__auto___25930 + 1;
      i__9708__auto___25930 = G__25931;
      continue;
    } else {
    }
    break;
  }
  var G__25928 = args25923.length;
  switch(G__25928) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25923.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__25933 = ret;
        var G__25934 = cljs.core.first(ks);
        var G__25935 = cljs.core.next(ks);
        coll = G__25933;
        k = G__25934;
        ks = G__25935;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq25924) {
  var G__25925 = cljs.core.first(seq25924);
  var seq25924__$1 = cljs.core.next(seq25924);
  var G__25926 = cljs.core.first(seq25924__$1);
  var seq25924__$2 = cljs.core.next(seq25924__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__25925, G__25926, seq25924__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__8632__auto__ = goog.isFunction(f);
  if (or__8632__auto__) {
    return or__8632__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__25941 = null;
  var G__25941__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__25941__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__25941__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__25941__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__25941__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__25941__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__25941__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__25941__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__25941__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__25941__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__25941__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__25941__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__25941__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__25941__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__25941__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__25941__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__25941__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__25941__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__25941__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__25941__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__25941__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__25941__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__25941 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__25941__1.call(this, self__);
      case 2:
        return G__25941__2.call(this, self__, a);
      case 3:
        return G__25941__3.call(this, self__, a, b);
      case 4:
        return G__25941__4.call(this, self__, a, b, c);
      case 5:
        return G__25941__5.call(this, self__, a, b, c, d);
      case 6:
        return G__25941__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__25941__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__25941__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__25941__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__25941__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__25941__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__25941__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__25941__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__25941__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__25941__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__25941__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__25941__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__25941__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__25941__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__25941__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__25941__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__25941__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__25941.cljs$core$IFn$_invoke$arity$1 = G__25941__1;
  G__25941.cljs$core$IFn$_invoke$arity$2 = G__25941__2;
  G__25941.cljs$core$IFn$_invoke$arity$3 = G__25941__3;
  G__25941.cljs$core$IFn$_invoke$arity$4 = G__25941__4;
  G__25941.cljs$core$IFn$_invoke$arity$5 = G__25941__5;
  G__25941.cljs$core$IFn$_invoke$arity$6 = G__25941__6;
  G__25941.cljs$core$IFn$_invoke$arity$7 = G__25941__7;
  G__25941.cljs$core$IFn$_invoke$arity$8 = G__25941__8;
  G__25941.cljs$core$IFn$_invoke$arity$9 = G__25941__9;
  G__25941.cljs$core$IFn$_invoke$arity$10 = G__25941__10;
  G__25941.cljs$core$IFn$_invoke$arity$11 = G__25941__11;
  G__25941.cljs$core$IFn$_invoke$arity$12 = G__25941__12;
  G__25941.cljs$core$IFn$_invoke$arity$13 = G__25941__13;
  G__25941.cljs$core$IFn$_invoke$arity$14 = G__25941__14;
  G__25941.cljs$core$IFn$_invoke$arity$15 = G__25941__15;
  G__25941.cljs$core$IFn$_invoke$arity$16 = G__25941__16;
  G__25941.cljs$core$IFn$_invoke$arity$17 = G__25941__17;
  G__25941.cljs$core$IFn$_invoke$arity$18 = G__25941__18;
  G__25941.cljs$core$IFn$_invoke$arity$19 = G__25941__19;
  G__25941.cljs$core$IFn$_invoke$arity$20 = G__25941__20;
  G__25941.cljs$core$IFn$_invoke$arity$21 = G__25941__21;
  G__25941.cljs$core$IFn$_invoke$arity$22 = G__25941__22;
  return G__25941;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args25940) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args25940)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__8620__auto__ = !(o == null);
    if (and__8620__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__8620__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args25946 = [];
  var len__9707__auto___25952 = arguments.length;
  var i__9708__auto___25953 = 0;
  while (true) {
    if (i__9708__auto___25953 < len__9707__auto___25952) {
      args25946.push(arguments[i__9708__auto___25953]);
      var G__25954 = i__9708__auto___25953 + 1;
      i__9708__auto___25953 = G__25954;
      continue;
    } else {
    }
    break;
  }
  var G__25951 = args25946.length;
  switch(G__25951) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25946.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__25956 = ret;
        var G__25957 = cljs.core.first(ks);
        var G__25958 = cljs.core.next(ks);
        coll = G__25956;
        k = G__25957;
        ks = G__25958;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq25947) {
  var G__25948 = cljs.core.first(seq25947);
  var seq25947__$1 = cljs.core.next(seq25947);
  var G__25949 = cljs.core.first(seq25947__$1);
  var seq25947__$2 = cljs.core.next(seq25947__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__25948, G__25949, seq25947__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args25979 = [];
  var len__9707__auto___25985 = arguments.length;
  var i__9708__auto___25986 = 0;
  while (true) {
    if (i__9708__auto___25986 < len__9707__auto___25985) {
      args25979.push(arguments[i__9708__auto___25986]);
      var G__25987 = i__9708__auto___25986 + 1;
      i__9708__auto___25986 = G__25987;
      continue;
    } else {
    }
    break;
  }
  var G__25982 = args25979.length;
  switch(G__25982) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args25979.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__9726__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq25980) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq25980));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__25991_25993 = obj;
  var G__25992_25994 = function(G__25991_25993, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__25991_25993, keys);
  goog.object.forEach(G__25991_25993, G__25992_25994);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__25995 = i__$1 + 1;
      var G__25996 = j__$1 + 1;
      var G__25997 = len__$1 - 1;
      i__$1 = G__25995;
      j__$1 = G__25996;
      len__$1 = G__25997;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__25998 = i__$1 - 1;
      var G__25999 = j__$1 - 1;
      var G__26000 = len__$1 - 1;
      i__$1 = G__25998;
      j__$1 = G__25999;
      len__$1 = G__26000;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__8632__auto__ = cljs.core.fn_QMARK_(f);
  if (or__8632__auto__) {
    return or__8632__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0) || x === 0;
  } else {
    if (x instanceof goog.math.Integer) {
      var or__8632__auto__ = cljs.core.not(x.isNegative());
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        return x.isZero();
      }
    } else {
      if (x instanceof goog.math.Long) {
        var or__8632__auto__ = cljs.core.not(x.isNegative());
        if (or__8632__auto__) {
          return or__8632__auto__;
        } else {
          return x.isZero();
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args26011 = [];
  var len__9707__auto___26017 = arguments.length;
  var i__9708__auto___26018 = 0;
  while (true) {
    if (i__9708__auto___26018 < len__9707__auto___26017) {
      args26011.push(arguments[i__9708__auto___26018]);
      var G__26019 = i__9708__auto___26018 + 1;
      i__9708__auto___26018 = G__26019;
      continue;
    } else {
    }
    break;
  }
  var G__26016 = args26011.length;
  switch(G__26016) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26011.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__26021 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__26022 = etc;
          s = G__26021;
          xs = G__26022;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq26012) {
  var G__26013 = cljs.core.first(seq26012);
  var seq26012__$1 = cljs.core.next(seq26012);
  var G__26014 = cljs.core.first(seq26012__$1);
  var seq26012__$2 = cljs.core.next(seq26012__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__26013, G__26014, seq26012__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args26025 = [];
  var len__9707__auto___26028 = arguments.length;
  var i__9708__auto___26029 = 0;
  while (true) {
    if (i__9708__auto___26029 < len__9707__auto___26028) {
      args26025.push(arguments[i__9708__auto___26029]);
      var G__26030 = i__9708__auto___26029 + 1;
      i__9708__auto___26029 = G__26030;
      continue;
    } else {
    }
    break;
  }
  var G__26027 = args26025.length;
  switch(G__26027) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26025.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__26032 = xs;
      var G__26033 = ys;
      var G__26034 = len;
      var G__26035 = n + 1;
      xs = G__26032;
      ys = G__26033;
      len = G__26034;
      n = G__26035;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args26036 = [];
  var len__9707__auto___26041 = arguments.length;
  var i__9708__auto___26042 = 0;
  while (true) {
    if (i__9708__auto___26042 < len__9707__auto___26041) {
      args26036.push(arguments[i__9708__auto___26042]);
      var G__26043 = i__9708__auto___26042 + 1;
      i__9708__auto___26042 = G__26043;
      continue;
    } else {
    }
    break;
  }
  var G__26038 = args26036.length;
  switch(G__26038) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26036.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__26039_26045 = a;
    var G__26040_26046 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__26039_26045, G__26040_26046);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args26047 = [];
  var len__9707__auto___26050 = arguments.length;
  var i__9708__auto___26051 = 0;
  while (true) {
    if (i__9708__auto___26051 < len__9707__auto___26050) {
      args26047.push(arguments[i__9708__auto___26051]);
      var G__26052 = i__9708__auto___26051 + 1;
      i__9708__auto___26051 = G__26052;
      continue;
    } else {
    }
    break;
  }
  var G__26049 = args26047.length;
  switch(G__26049) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26047.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args26054 = [];
  var len__9707__auto___26062 = arguments.length;
  var i__9708__auto___26063 = 0;
  while (true) {
    if (i__9708__auto___26063 < len__9707__auto___26062) {
      args26054.push(arguments[i__9708__auto___26063]);
      var G__26064 = i__9708__auto___26063 + 1;
      i__9708__auto___26063 = G__26064;
      continue;
    } else {
    }
    break;
  }
  var G__26056 = args26054.length;
  switch(G__26056) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26054.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__26057 = f;
    var G__26058 = cljs.core.first(s);
    var G__26059 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__26057, G__26058, G__26059) : cljs.core.reduce.call(null, G__26057, G__26058, G__26059);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__26060 = val__$1;
        var G__26061 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26060, G__26061) : f.call(null, G__26060, G__26061);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__26066 = nval;
        var G__26067 = cljs.core.next(coll__$1);
        val__$1 = G__26066;
        coll__$1 = G__26067;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args26068 = [];
  var len__9707__auto___26073 = arguments.length;
  var i__9708__auto___26074 = 0;
  while (true) {
    if (i__9708__auto___26074 < len__9707__auto___26073) {
      args26068.push(arguments[i__9708__auto___26074]);
      var G__26075 = i__9708__auto___26074 + 1;
      i__9708__auto___26074 = G__26075;
      continue;
    } else {
    }
    break;
  }
  var G__26070 = args26068.length;
  switch(G__26070) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26068.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args26077 = [];
  var len__9707__auto___26080 = arguments.length;
  var i__9708__auto___26081 = 0;
  while (true) {
    if (i__9708__auto___26081 < len__9707__auto___26080) {
      args26077.push(arguments[i__9708__auto___26081]);
      var G__26082 = i__9708__auto___26081 + 1;
      i__9708__auto___26081 = G__26082;
      continue;
    } else {
    }
    break;
  }
  var G__26079 = args26077.length;
  switch(G__26079) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26077.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__26084 = null;
    var G__26084__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__26084__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__26084__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__26084 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__26084__0.call(this);
        case 1:
          return G__26084__1.call(this, x);
        case 2:
          return G__26084__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26084.cljs$core$IFn$_invoke$arity$0 = G__26084__0;
    G__26084.cljs$core$IFn$_invoke$arity$1 = G__26084__1;
    G__26084.cljs$core$IFn$_invoke$arity$2 = G__26084__2;
    return G__26084;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args26085 = [];
  var len__9707__auto___26088 = arguments.length;
  var i__9708__auto___26089 = 0;
  while (true) {
    if (i__9708__auto___26089 < len__9707__auto___26088) {
      args26085.push(arguments[i__9708__auto___26089]);
      var G__26090 = i__9708__auto___26089 + 1;
      i__9708__auto___26089 = G__26090;
      continue;
    } else {
    }
    break;
  }
  var G__26087 = args26085.length;
  switch(G__26087) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26085.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args26092 = [];
  var len__9707__auto___26098 = arguments.length;
  var i__9708__auto___26099 = 0;
  while (true) {
    if (i__9708__auto___26099 < len__9707__auto___26098) {
      args26092.push(arguments[i__9708__auto___26099]);
      var G__26100 = i__9708__auto___26099 + 1;
      i__9708__auto___26099 = G__26100;
      continue;
    } else {
    }
    break;
  }
  var G__26097 = args26092.length;
  switch(G__26097) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26092.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq26093) {
  var G__26094 = cljs.core.first(seq26093);
  var seq26093__$1 = cljs.core.next(seq26093);
  var G__26095 = cljs.core.first(seq26093__$1);
  var seq26093__$2 = cljs.core.next(seq26093__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__26094, G__26095, seq26093__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args26102 = [];
  var len__9707__auto___26108 = arguments.length;
  var i__9708__auto___26109 = 0;
  while (true) {
    if (i__9708__auto___26109 < len__9707__auto___26108) {
      args26102.push(arguments[i__9708__auto___26109]);
      var G__26110 = i__9708__auto___26109 + 1;
      i__9708__auto___26109 = G__26110;
      continue;
    } else {
    }
    break;
  }
  var G__26107 = args26102.length;
  switch(G__26107) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26102.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq26103) {
  var G__26104 = cljs.core.first(seq26103);
  var seq26103__$1 = cljs.core.next(seq26103);
  var G__26105 = cljs.core.first(seq26103__$1);
  var seq26103__$2 = cljs.core.next(seq26103__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__26104, G__26105, seq26103__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args26112 = [];
  var len__9707__auto___26118 = arguments.length;
  var i__9708__auto___26119 = 0;
  while (true) {
    if (i__9708__auto___26119 < len__9707__auto___26118) {
      args26112.push(arguments[i__9708__auto___26119]);
      var G__26120 = i__9708__auto___26119 + 1;
      i__9708__auto___26119 = G__26120;
      continue;
    } else {
    }
    break;
  }
  var G__26117 = args26112.length;
  switch(G__26117) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26112.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq26113) {
  var G__26114 = cljs.core.first(seq26113);
  var seq26113__$1 = cljs.core.next(seq26113);
  var G__26115 = cljs.core.first(seq26113__$1);
  var seq26113__$2 = cljs.core.next(seq26113__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__26114, G__26115, seq26113__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args26122 = [];
  var len__9707__auto___26128 = arguments.length;
  var i__9708__auto___26129 = 0;
  while (true) {
    if (i__9708__auto___26129 < len__9707__auto___26128) {
      args26122.push(arguments[i__9708__auto___26129]);
      var G__26130 = i__9708__auto___26129 + 1;
      i__9708__auto___26129 = G__26130;
      continue;
    } else {
    }
    break;
  }
  var G__26127 = args26122.length;
  switch(G__26127) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26122.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq26123) {
  var G__26124 = cljs.core.first(seq26123);
  var seq26123__$1 = cljs.core.next(seq26123);
  var G__26125 = cljs.core.first(seq26123__$1);
  var seq26123__$2 = cljs.core.next(seq26123__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__26124, G__26125, seq26123__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args26132 = [];
  var len__9707__auto___26138 = arguments.length;
  var i__9708__auto___26139 = 0;
  while (true) {
    if (i__9708__auto___26139 < len__9707__auto___26138) {
      args26132.push(arguments[i__9708__auto___26139]);
      var G__26140 = i__9708__auto___26139 + 1;
      i__9708__auto___26139 = G__26140;
      continue;
    } else {
    }
    break;
  }
  var G__26137 = args26132.length;
  switch(G__26137) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26132.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__26142 = y;
        var G__26143 = cljs.core.first(more);
        var G__26144 = cljs.core.next(more);
        x = G__26142;
        y = G__26143;
        more = G__26144;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq26133) {
  var G__26134 = cljs.core.first(seq26133);
  var seq26133__$1 = cljs.core.next(seq26133);
  var G__26135 = cljs.core.first(seq26133__$1);
  var seq26133__$2 = cljs.core.next(seq26133__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__26134, G__26135, seq26133__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args26145 = [];
  var len__9707__auto___26151 = arguments.length;
  var i__9708__auto___26152 = 0;
  while (true) {
    if (i__9708__auto___26152 < len__9707__auto___26151) {
      args26145.push(arguments[i__9708__auto___26152]);
      var G__26153 = i__9708__auto___26152 + 1;
      i__9708__auto___26152 = G__26153;
      continue;
    } else {
    }
    break;
  }
  var G__26150 = args26145.length;
  switch(G__26150) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26145.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__26155 = y;
        var G__26156 = cljs.core.first(more);
        var G__26157 = cljs.core.next(more);
        x = G__26155;
        y = G__26156;
        more = G__26157;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq26146) {
  var G__26147 = cljs.core.first(seq26146);
  var seq26146__$1 = cljs.core.next(seq26146);
  var G__26148 = cljs.core.first(seq26146__$1);
  var seq26146__$2 = cljs.core.next(seq26146__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__26147, G__26148, seq26146__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args26158 = [];
  var len__9707__auto___26164 = arguments.length;
  var i__9708__auto___26165 = 0;
  while (true) {
    if (i__9708__auto___26165 < len__9707__auto___26164) {
      args26158.push(arguments[i__9708__auto___26165]);
      var G__26166 = i__9708__auto___26165 + 1;
      i__9708__auto___26165 = G__26166;
      continue;
    } else {
    }
    break;
  }
  var G__26163 = args26158.length;
  switch(G__26163) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26158.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__26168 = y;
        var G__26169 = cljs.core.first(more);
        var G__26170 = cljs.core.next(more);
        x = G__26168;
        y = G__26169;
        more = G__26170;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq26159) {
  var G__26160 = cljs.core.first(seq26159);
  var seq26159__$1 = cljs.core.next(seq26159);
  var G__26161 = cljs.core.first(seq26159__$1);
  var seq26159__$2 = cljs.core.next(seq26159__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__26160, G__26161, seq26159__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args26171 = [];
  var len__9707__auto___26177 = arguments.length;
  var i__9708__auto___26178 = 0;
  while (true) {
    if (i__9708__auto___26178 < len__9707__auto___26177) {
      args26171.push(arguments[i__9708__auto___26178]);
      var G__26179 = i__9708__auto___26178 + 1;
      i__9708__auto___26178 = G__26179;
      continue;
    } else {
    }
    break;
  }
  var G__26176 = args26171.length;
  switch(G__26176) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26171.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__26181 = y;
        var G__26182 = cljs.core.first(more);
        var G__26183 = cljs.core.next(more);
        x = G__26181;
        y = G__26182;
        more = G__26183;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq26172) {
  var G__26173 = cljs.core.first(seq26172);
  var seq26172__$1 = cljs.core.next(seq26172);
  var G__26174 = cljs.core.first(seq26172__$1);
  var seq26172__$2 = cljs.core.next(seq26172__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__26173, G__26174, seq26172__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args26184 = [];
  var len__9707__auto___26190 = arguments.length;
  var i__9708__auto___26191 = 0;
  while (true) {
    if (i__9708__auto___26191 < len__9707__auto___26190) {
      args26184.push(arguments[i__9708__auto___26191]);
      var G__26192 = i__9708__auto___26191 + 1;
      i__9708__auto___26191 = G__26192;
      continue;
    } else {
    }
    break;
  }
  var G__26189 = args26184.length;
  switch(G__26189) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26184.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__8963__auto__ = x;
  var y__8964__auto__ = y;
  return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__8963__auto__ = x;
    var y__8964__auto__ = y;
    return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq26185) {
  var G__26186 = cljs.core.first(seq26185);
  var seq26185__$1 = cljs.core.next(seq26185);
  var G__26187 = cljs.core.first(seq26185__$1);
  var seq26185__$2 = cljs.core.next(seq26185__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__26186, G__26187, seq26185__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args26194 = [];
  var len__9707__auto___26200 = arguments.length;
  var i__9708__auto___26201 = 0;
  while (true) {
    if (i__9708__auto___26201 < len__9707__auto___26200) {
      args26194.push(arguments[i__9708__auto___26201]);
      var G__26202 = i__9708__auto___26201 + 1;
      i__9708__auto___26201 = G__26202;
      continue;
    } else {
    }
    break;
  }
  var G__26199 = args26194.length;
  switch(G__26199) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26194.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__8970__auto__ = x;
  var y__8971__auto__ = y;
  return x__8970__auto__ < y__8971__auto__ ? x__8970__auto__ : y__8971__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__8970__auto__ = x;
    var y__8971__auto__ = y;
    return x__8970__auto__ < y__8971__auto__ ? x__8970__auto__ : y__8971__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq26195) {
  var G__26196 = cljs.core.first(seq26195);
  var seq26195__$1 = cljs.core.next(seq26195);
  var G__26197 = cljs.core.first(seq26195__$1);
  var seq26195__$2 = cljs.core.next(seq26195__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__26196, G__26197, seq26195__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args26204 = [];
  var len__9707__auto___26210 = arguments.length;
  var i__9708__auto___26211 = 0;
  while (true) {
    if (i__9708__auto___26211 < len__9707__auto___26210) {
      args26204.push(arguments[i__9708__auto___26211]);
      var G__26212 = i__9708__auto___26211 + 1;
      i__9708__auto___26211 = G__26212;
      continue;
    } else {
    }
    break;
  }
  var G__26209 = args26204.length;
  switch(G__26209) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26204.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq26205) {
  var G__26206 = cljs.core.first(seq26205);
  var seq26205__$1 = cljs.core.next(seq26205);
  var G__26207 = cljs.core.first(seq26205__$1);
  var seq26205__$2 = cljs.core.next(seq26205__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__26206, G__26207, seq26205__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args26214 = [];
  var len__9707__auto___26220 = arguments.length;
  var i__9708__auto___26221 = 0;
  while (true) {
    if (i__9708__auto___26221 < len__9707__auto___26220) {
      args26214.push(arguments[i__9708__auto___26221]);
      var G__26222 = i__9708__auto___26221 + 1;
      i__9708__auto___26221 = G__26222;
      continue;
    } else {
    }
    break;
  }
  var G__26219 = args26214.length;
  switch(G__26219) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26214.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq26215) {
  var G__26216 = cljs.core.first(seq26215);
  var seq26215__$1 = cljs.core.next(seq26215);
  var G__26217 = cljs.core.first(seq26215__$1);
  var seq26215__$2 = cljs.core.next(seq26215__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__26216, G__26217, seq26215__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args26224 = [];
  var len__9707__auto___26230 = arguments.length;
  var i__9708__auto___26231 = 0;
  while (true) {
    if (i__9708__auto___26231 < len__9707__auto___26230) {
      args26224.push(arguments[i__9708__auto___26231]);
      var G__26232 = i__9708__auto___26231 + 1;
      i__9708__auto___26231 = G__26232;
      continue;
    } else {
    }
    break;
  }
  var G__26229 = args26224.length;
  switch(G__26229) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26224.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq26225) {
  var G__26226 = cljs.core.first(seq26225);
  var seq26225__$1 = cljs.core.next(seq26225);
  var G__26227 = cljs.core.first(seq26225__$1);
  var seq26225__$2 = cljs.core.next(seq26225__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__26226, G__26227, seq26225__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args26234 = [];
  var len__9707__auto___26240 = arguments.length;
  var i__9708__auto___26241 = 0;
  while (true) {
    if (i__9708__auto___26241 < len__9707__auto___26240) {
      args26234.push(arguments[i__9708__auto___26241]);
      var G__26242 = i__9708__auto___26241 + 1;
      i__9708__auto___26241 = G__26242;
      continue;
    } else {
    }
    break;
  }
  var G__26239 = args26234.length;
  switch(G__26239) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26234.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq26235) {
  var G__26236 = cljs.core.first(seq26235);
  var seq26235__$1 = cljs.core.next(seq26235);
  var G__26237 = cljs.core.first(seq26235__$1);
  var seq26235__$2 = cljs.core.next(seq26235__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__26236, G__26237, seq26235__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args26244 = [];
  var len__9707__auto___26250 = arguments.length;
  var i__9708__auto___26251 = 0;
  while (true) {
    if (i__9708__auto___26251 < len__9707__auto___26250) {
      args26244.push(arguments[i__9708__auto___26251]);
      var G__26252 = i__9708__auto___26251 + 1;
      i__9708__auto___26251 = G__26252;
      continue;
    } else {
    }
    break;
  }
  var G__26249 = args26244.length;
  switch(G__26249) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26244.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq26245) {
  var G__26246 = cljs.core.first(seq26245);
  var seq26245__$1 = cljs.core.next(seq26245);
  var G__26247 = cljs.core.first(seq26245__$1);
  var seq26245__$2 = cljs.core.next(seq26245__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__26246, G__26247, seq26245__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args26254 = [];
  var len__9707__auto___26260 = arguments.length;
  var i__9708__auto___26261 = 0;
  while (true) {
    if (i__9708__auto___26261 < len__9707__auto___26260) {
      args26254.push(arguments[i__9708__auto___26261]);
      var G__26262 = i__9708__auto___26261 + 1;
      i__9708__auto___26261 = G__26262;
      continue;
    } else {
    }
    break;
  }
  var G__26259 = args26254.length;
  switch(G__26259) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26254.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq26255) {
  var G__26256 = cljs.core.first(seq26255);
  var seq26255__$1 = cljs.core.next(seq26255);
  var G__26257 = cljs.core.first(seq26255__$1);
  var seq26255__$2 = cljs.core.next(seq26255__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__26256, G__26257, seq26255__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args26264 = [];
  var len__9707__auto___26270 = arguments.length;
  var i__9708__auto___26271 = 0;
  while (true) {
    if (i__9708__auto___26271 < len__9707__auto___26270) {
      args26264.push(arguments[i__9708__auto___26271]);
      var G__26272 = i__9708__auto___26271 + 1;
      i__9708__auto___26271 = G__26272;
      continue;
    } else {
    }
    break;
  }
  var G__26269 = args26264.length;
  switch(G__26269) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26264.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq26265) {
  var G__26266 = cljs.core.first(seq26265);
  var seq26265__$1 = cljs.core.next(seq26265);
  var G__26267 = cljs.core.first(seq26265__$1);
  var seq26265__$2 = cljs.core.next(seq26265__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__26266, G__26267, seq26265__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args26274 = [];
  var len__9707__auto___26280 = arguments.length;
  var i__9708__auto___26281 = 0;
  while (true) {
    if (i__9708__auto___26281 < len__9707__auto___26280) {
      args26274.push(arguments[i__9708__auto___26281]);
      var G__26282 = i__9708__auto___26281 + 1;
      i__9708__auto___26281 = G__26282;
      continue;
    } else {
    }
    break;
  }
  var G__26279 = args26274.length;
  switch(G__26279) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26274.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq26275) {
  var G__26276 = cljs.core.first(seq26275);
  var seq26275__$1 = cljs.core.next(seq26275);
  var G__26277 = cljs.core.first(seq26275__$1);
  var seq26275__$2 = cljs.core.next(seq26275__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__26276, G__26277, seq26275__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args26284 = [];
  var len__9707__auto___26290 = arguments.length;
  var i__9708__auto___26291 = 0;
  while (true) {
    if (i__9708__auto___26291 < len__9707__auto___26290) {
      args26284.push(arguments[i__9708__auto___26291]);
      var G__26292 = i__9708__auto___26291 + 1;
      i__9708__auto___26291 = G__26292;
      continue;
    } else {
    }
    break;
  }
  var G__26289 = args26284.length;
  switch(G__26289) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26284.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq26285) {
  var G__26286 = cljs.core.first(seq26285);
  var seq26285__$1 = cljs.core.next(seq26285);
  var G__26287 = cljs.core.first(seq26285__$1);
  var seq26285__$2 = cljs.core.next(seq26285__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__26286, G__26287, seq26285__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args26294 = [];
  var len__9707__auto___26300 = arguments.length;
  var i__9708__auto___26301 = 0;
  while (true) {
    if (i__9708__auto___26301 < len__9707__auto___26300) {
      args26294.push(arguments[i__9708__auto___26301]);
      var G__26302 = i__9708__auto___26301 + 1;
      i__9708__auto___26301 = G__26302;
      continue;
    } else {
    }
    break;
  }
  var G__26299 = args26294.length;
  switch(G__26299) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26294.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq26295) {
  var G__26296 = cljs.core.first(seq26295);
  var seq26295__$1 = cljs.core.next(seq26295);
  var G__26297 = cljs.core.first(seq26295__$1);
  var seq26295__$2 = cljs.core.next(seq26295__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__26296, G__26297, seq26295__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args26304 = [];
  var len__9707__auto___26310 = arguments.length;
  var i__9708__auto___26311 = 0;
  while (true) {
    if (i__9708__auto___26311 < len__9707__auto___26310) {
      args26304.push(arguments[i__9708__auto___26311]);
      var G__26312 = i__9708__auto___26311 + 1;
      i__9708__auto___26311 = G__26312;
      continue;
    } else {
    }
    break;
  }
  var G__26309 = args26304.length;
  switch(G__26309) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26304.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq26305) {
  var G__26306 = cljs.core.first(seq26305);
  var seq26305__$1 = cljs.core.next(seq26305);
  var G__26307 = cljs.core.first(seq26305__$1);
  var seq26305__$2 = cljs.core.next(seq26305__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__26306, G__26307, seq26305__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args26314 = [];
  var len__9707__auto___26320 = arguments.length;
  var i__9708__auto___26321 = 0;
  while (true) {
    if (i__9708__auto___26321 < len__9707__auto___26320) {
      args26314.push(arguments[i__9708__auto___26321]);
      var G__26322 = i__9708__auto___26321 + 1;
      i__9708__auto___26321 = G__26322;
      continue;
    } else {
    }
    break;
  }
  var G__26319 = args26314.length;
  switch(G__26319) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26314.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__26324 = y;
        var G__26325 = cljs.core.first(more);
        var G__26326 = cljs.core.next(more);
        x = G__26324;
        y = G__26325;
        more = G__26326;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq26315) {
  var G__26316 = cljs.core.first(seq26315);
  var seq26315__$1 = cljs.core.next(seq26315);
  var G__26317 = cljs.core.first(seq26315__$1);
  var seq26315__$2 = cljs.core.next(seq26315__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__26316, G__26317, seq26315__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__26327 = n__$1 - 1;
      var G__26328 = cljs.core.next(xs);
      n__$1 = G__26327;
      xs = G__26328;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args26329 = [];
  var len__9707__auto___26334 = arguments.length;
  var i__9708__auto___26335 = 0;
  while (true) {
    if (i__9708__auto___26335 < len__9707__auto___26334) {
      args26329.push(arguments[i__9708__auto___26335]);
      var G__26336 = i__9708__auto___26335 + 1;
      i__9708__auto___26335 = G__26336;
      continue;
    } else {
    }
    break;
  }
  var G__26333 = args26329.length;
  switch(G__26333) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26329.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9726__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__26338 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__26339 = cljs.core.next(more);
      sb = G__26338;
      more = G__26339;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq26330) {
  var G__26331 = cljs.core.first(seq26330);
  var seq26330__$1 = cljs.core.next(seq26330);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__26331, seq26330__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args26340 = [];
  var len__9707__auto___26343 = arguments.length;
  var i__9708__auto___26344 = 0;
  while (true) {
    if (i__9708__auto___26344 < len__9707__auto___26343) {
      args26340.push(arguments[i__9708__auto___26344]);
      var G__26345 = i__9708__auto___26344 + 1;
      i__9708__auto___26344 = G__26345;
      continue;
    } else {
    }
    break;
  }
  var G__26342 = args26340.length;
  switch(G__26342) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26340.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__26347 = cljs.core.next(xs);
            var G__26348 = cljs.core.next(ys);
            xs = G__26347;
            ys = G__26348;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__26349 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__26350 = cljs.core.next(s);
        res = G__26349;
        s = G__26350;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__26351 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__26352 = cljs.core.next(s);
      h = G__26351;
      s = G__26352;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__26353 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__26354 = cljs.core.next(s__$1);
      h = G__26353;
      s__$1 = G__26354;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__26365_26375 = cljs.core.seq(fn_map);
  var chunk__26366_26376 = null;
  var count__26367_26377 = 0;
  var i__26368_26378 = 0;
  while (true) {
    if (i__26368_26378 < count__26367_26377) {
      var vec__26369_26379 = chunk__26366_26376.cljs$core$IIndexed$_nth$arity$2(null, i__26368_26378);
      var key_name_26380 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26369_26379, 0, null);
      var f_26381 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26369_26379, 1, null);
      var str_name_26382 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_26380) : cljs.core.name.call(null, key_name_26380);
      obj[str_name_26382] = f_26381;
      var G__26383 = seq__26365_26375;
      var G__26384 = chunk__26366_26376;
      var G__26385 = count__26367_26377;
      var G__26386 = i__26368_26378 + 1;
      seq__26365_26375 = G__26383;
      chunk__26366_26376 = G__26384;
      count__26367_26377 = G__26385;
      i__26368_26378 = G__26386;
      continue;
    } else {
      var temp__4657__auto___26387 = cljs.core.seq(seq__26365_26375);
      if (temp__4657__auto___26387) {
        var seq__26365_26388__$1 = temp__4657__auto___26387;
        if (cljs.core.chunked_seq_QMARK_(seq__26365_26388__$1)) {
          var c__9443__auto___26389 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__26365_26388__$1) : cljs.core.chunk_first.call(null, seq__26365_26388__$1);
          var G__26390 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__26365_26388__$1) : cljs.core.chunk_rest.call(null, seq__26365_26388__$1);
          var G__26391 = c__9443__auto___26389;
          var G__26392 = cljs.core.count(c__9443__auto___26389);
          var G__26393 = 0;
          seq__26365_26375 = G__26390;
          chunk__26366_26376 = G__26391;
          count__26367_26377 = G__26392;
          i__26368_26378 = G__26393;
          continue;
        } else {
          var vec__26372_26394 = cljs.core.first(seq__26365_26388__$1);
          var key_name_26395 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26372_26394, 0, null);
          var f_26396 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26372_26394, 1, null);
          var str_name_26397 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_26395) : cljs.core.name.call(null, key_name_26395);
          obj[str_name_26397] = f_26396;
          var G__26398 = cljs.core.next(seq__26365_26388__$1);
          var G__26399 = null;
          var G__26400 = 0;
          var G__26401 = 0;
          seq__26365_26375 = G__26398;
          chunk__26366_26376 = G__26399;
          count__26367_26377 = G__26400;
          i__26368_26378 = G__26401;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__26402 = null;
  var G__26402__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__26402__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26402 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26402__1.call(this, x);
      case 2:
        return G__26402__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26402.cljs$core$IFn$_invoke$arity$1 = G__26402__1;
  G__26402.cljs$core$IFn$_invoke$arity$2 = G__26402__2;
  return G__26402;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__26403 = null;
  var G__26403__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__26403__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26403 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26403__1.call(this, x);
      case 2:
        return G__26403__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26403.cljs$core$IFn$_invoke$arity$1 = G__26403__1;
  G__26403.cljs$core$IFn$_invoke$arity$2 = G__26403__2;
  return G__26403;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__26406 = null;
  var G__26406__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__26406__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26406 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26406__1.call(this, x);
      case 2:
        return G__26406__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26406.cljs$core$IFn$_invoke$arity$1 = G__26406__1;
  G__26406.cljs$core$IFn$_invoke$arity$2 = G__26406__2;
  return G__26406;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__26407 = null;
  var G__26407__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__26407__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26407 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26407__1.call(this, x);
      case 2:
        return G__26407__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26407.cljs$core$IFn$_invoke$arity$1 = G__26407__1;
  G__26407.cljs$core$IFn$_invoke$arity$2 = G__26407__2;
  return G__26407;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___26411 = arguments.length;
  var i__9708__auto___26412 = 0;
  while (true) {
    if (i__9708__auto___26412 < len__9707__auto___26411) {
      args__9714__auto__.push(arguments[i__9708__auto___26412]);
      var G__26413 = i__9708__auto___26412 + 1;
      i__9708__auto___26412 = G__26413;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__26414 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__26414;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__26415 = i - 1;
      var G__26416 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__26415;
      r = G__26416;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq26410) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq26410));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__26417 = null;
  var G__26417__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__26417__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26417 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26417__1.call(this, x);
      case 2:
        return G__26417__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26417.cljs$core$IFn$_invoke$arity$1 = G__26417__1;
  G__26417.cljs$core$IFn$_invoke$arity$2 = G__26417__2;
  return G__26417;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__26418 = null;
  var G__26418__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__26418__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26418 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26418__1.call(this, x);
      case 2:
        return G__26418__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26418.cljs$core$IFn$_invoke$arity$1 = G__26418__1;
  G__26418.cljs$core$IFn$_invoke$arity$2 = G__26418__2;
  return G__26418;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__8632__auto__ = coll == null;
    if (or__8632__auto__) {
      return or__8632__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = cljs.core.not(a.ns);
      if (and__8620__auto__) {
        return b.ns;
      } else {
        return and__8620__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__26429 = a.ns;
            var G__26430 = b.ns;
            return goog.array.defaultCompare(G__26429, G__26430);
          }();
          if (0 === nsc) {
            var G__26431 = a.name;
            var G__26432 = b.name;
            return goog.array.defaultCompare(G__26431, G__26432);
          } else {
            return nsc;
          }
        }
      } else {
        var G__26433 = a.name;
        var G__26434 = b.name;
        return goog.array.defaultCompare(G__26433, G__26434);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__26436 = null;
  var G__26436__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__26436__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__26436 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__26436__2.call(this, self__, coll);
      case 3:
        return G__26436__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26436.cljs$core$IFn$_invoke$arity$2 = G__26436__2;
  G__26436.cljs$core$IFn$_invoke$arity$3 = G__26436__3;
  return G__26436;
}();
cljs.core.Keyword.prototype.apply = function(self__, args26435) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args26435)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__9067__auto__ = self__._hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  var and__8620__auto__ = cljs.core.ident_QMARK_(x);
  if (and__8620__auto__) {
    var and__8620__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__8620__auto____$1)) {
      return true;
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  var and__8620__auto__ = x instanceof cljs.core.Symbol;
  if (and__8620__auto__) {
    var and__8620__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__8620__auto____$1)) {
      return true;
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  var and__8620__auto__ = x instanceof cljs.core.Keyword;
  if (and__8620__auto__) {
    var and__8620__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__8620__auto____$1)) {
      return true;
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args26439 = [];
  var len__9707__auto___26442 = arguments.length;
  var i__9708__auto___26443 = 0;
  while (true) {
    if (i__9708__auto___26443 < len__9707__auto___26442) {
      args26439.push(arguments[i__9708__auto___26443]);
      var G__26444 = i__9708__auto___26443 + 1;
      i__9708__auto___26443 = G__26444;
      continue;
    } else {
    }
    break;
  }
  var G__26441 = args26439.length;
  switch(G__26441) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26439.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__26446 = null;
  var G__26446__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__26446__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26446 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26446__1.call(this, x);
      case 2:
        return G__26446__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26446.cljs$core$IFn$_invoke$arity$1 = G__26446__1;
  G__26446.cljs$core$IFn$_invoke$arity$2 = G__26446__2;
  return G__26446;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__26447 = null;
  var G__26447__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__26447__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26447 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26447__1.call(this, x);
      case 2:
        return G__26447__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26447.cljs$core$IFn$_invoke$arity$1 = G__26447__1;
  G__26447.cljs$core$IFn$_invoke$arity$2 = G__26447__2;
  return G__26447;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__26448 = ls.sval();
        ls = G__26448;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args26449 = [];
  var len__9707__auto___26452 = arguments.length;
  var i__9708__auto___26453 = 0;
  while (true) {
    if (i__9708__auto___26453 < len__9707__auto___26452) {
      args26449.push(arguments[i__9708__auto___26453]);
      var G__26454 = i__9708__auto___26453 + 1;
      i__9708__auto___26453 = G__26454;
      continue;
    } else {
    }
    break;
  }
  var G__26451 = args26449.length;
  switch(G__26451) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26449.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__26456 = null;
  var G__26456__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__26456__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26456 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26456__1.call(this, x);
      case 2:
        return G__26456__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26456.cljs$core$IFn$_invoke$arity$1 = G__26456__1;
  G__26456.cljs$core$IFn$_invoke$arity$2 = G__26456__2;
  return G__26456;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__26457 = null;
  var G__26457__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__26457__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26457 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26457__1.call(this, x);
      case 2:
        return G__26457__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26457.cljs$core$IFn$_invoke$arity$1 = G__26457__1;
  G__26457.cljs$core$IFn$_invoke$arity$2 = G__26457__2;
  return G__26457;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__26460 = cljs.core.next(s__$1);
      s__$1 = G__26460;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_26461 = 0;
  var xs_26462 = cljs.core.seq(coll);
  while (true) {
    if (xs_26462) {
      ret[i_26461] = cljs.core.to_array(cljs.core.first(xs_26462));
      var G__26463 = i_26461 + 1;
      var G__26464 = cljs.core.next(xs_26462);
      i_26461 = G__26463;
      xs_26462 = G__26464;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args26465 = [];
  var len__9707__auto___26468 = arguments.length;
  var i__9708__auto___26469 = 0;
  while (true) {
    if (i__9708__auto___26469 < len__9707__auto___26468) {
      args26465.push(arguments[i__9708__auto___26469]);
      var G__26470 = i__9708__auto___26469 + 1;
      i__9708__auto___26469 = G__26470;
      continue;
    } else {
    }
    break;
  }
  var G__26467 = args26465.length;
  switch(G__26467) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26465.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__26472 = i + 1;
        var G__26473 = cljs.core.next(s__$1);
        i = G__26472;
        s__$1 = G__26473;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__9547__auto___26474 = size;
    var i_26475 = 0;
    while (true) {
      if (i_26475 < n__9547__auto___26474) {
        a[i_26475] = init_val_or_seq;
        var G__26476 = i_26475 + 1;
        i_26475 = G__26476;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args26477 = [];
  var len__9707__auto___26480 = arguments.length;
  var i__9708__auto___26481 = 0;
  while (true) {
    if (i__9708__auto___26481 < len__9707__auto___26480) {
      args26477.push(arguments[i__9708__auto___26481]);
      var G__26482 = i__9708__auto___26481 + 1;
      i__9708__auto___26481 = G__26482;
      continue;
    } else {
    }
    break;
  }
  var G__26479 = args26477.length;
  switch(G__26479) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26477.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__26484 = i + 1;
        var G__26485 = cljs.core.next(s__$1);
        i = G__26484;
        s__$1 = G__26485;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__9547__auto___26486 = size;
    var i_26487 = 0;
    while (true) {
      if (i_26487 < n__9547__auto___26486) {
        a[i_26487] = init_val_or_seq;
        var G__26488 = i_26487 + 1;
        i_26487 = G__26488;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args26489 = [];
  var len__9707__auto___26492 = arguments.length;
  var i__9708__auto___26493 = 0;
  while (true) {
    if (i__9708__auto___26493 < len__9707__auto___26492) {
      args26489.push(arguments[i__9708__auto___26493]);
      var G__26494 = i__9708__auto___26493 + 1;
      i__9708__auto___26493 = G__26494;
      continue;
    } else {
    }
    break;
  }
  var G__26491 = args26489.length;
  switch(G__26491) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26489.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__26496 = i + 1;
        var G__26497 = cljs.core.next(s__$1);
        i = G__26496;
        s__$1 = G__26497;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__9547__auto___26498 = size;
    var i_26499 = 0;
    while (true) {
      if (i_26499 < n__9547__auto___26498) {
        a[i_26499] = init_val_or_seq;
        var G__26500 = i_26499 + 1;
        i_26499 = G__26500;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args26501 = [];
  var len__9707__auto___26504 = arguments.length;
  var i__9708__auto___26505 = 0;
  while (true) {
    if (i__9708__auto___26505 < len__9707__auto___26504) {
      args26501.push(arguments[i__9708__auto___26505]);
      var G__26506 = i__9708__auto___26505 + 1;
      i__9708__auto___26505 = G__26506;
      continue;
    } else {
    }
    break;
  }
  var G__26503 = args26501.length;
  switch(G__26503) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26501.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__26508 = i + 1;
        var G__26509 = cljs.core.next(s__$1);
        i = G__26508;
        s__$1 = G__26509;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__9547__auto___26510 = size;
    var i_26511 = 0;
    while (true) {
      if (i_26511 < n__9547__auto___26510) {
        a[i_26511] = init_val_or_seq;
        var G__26512 = i_26511 + 1;
        i_26511 = G__26512;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__26513 = i + 1;
        var G__26514 = cljs.core.next(s);
        i = G__26513;
        s = G__26514;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args26516 = [];
  var len__9707__auto___26528 = arguments.length;
  var i__9708__auto___26529 = 0;
  while (true) {
    if (i__9708__auto___26529 < len__9707__auto___26528) {
      args26516.push(arguments[i__9708__auto___26529]);
      var G__26530 = i__9708__auto___26529 + 1;
      i__9708__auto___26529 = G__26530;
      continue;
    } else {
    }
    break;
  }
  var G__26521 = args26516.length;
  switch(G__26521) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26516.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq26517) {
  var G__26518 = cljs.core.first(seq26517);
  var seq26517__$1 = cljs.core.next(seq26517);
  var G__26519 = cljs.core.first(seq26517__$1);
  var seq26517__$2 = cljs.core.next(seq26517__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__26518, G__26519, seq26517__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args26532 = [];
  var len__9707__auto___26540 = arguments.length;
  var i__9708__auto___26541 = 0;
  while (true) {
    if (i__9708__auto___26541 < len__9707__auto___26540) {
      args26532.push(arguments[i__9708__auto___26541]);
      var G__26542 = i__9708__auto___26541 + 1;
      i__9708__auto___26541 = G__26542;
      continue;
    } else {
    }
    break;
  }
  var G__26539 = args26532.length;
  switch(G__26539) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26532.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9726__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq26533) {
  var G__26534 = cljs.core.first(seq26533);
  var seq26533__$1 = cljs.core.next(seq26533);
  var G__26535 = cljs.core.first(seq26533__$1);
  var seq26533__$2 = cljs.core.next(seq26533__$1);
  var G__26536 = cljs.core.first(seq26533__$2);
  var seq26533__$3 = cljs.core.next(seq26533__$2);
  var G__26537 = cljs.core.first(seq26533__$3);
  var seq26533__$4 = cljs.core.next(seq26533__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__26534, G__26535, G__26536, G__26537, seq26533__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args26544 = [];
  var len__9707__auto___26550 = arguments.length;
  var i__9708__auto___26551 = 0;
  while (true) {
    if (i__9708__auto___26551 < len__9707__auto___26550) {
      args26544.push(arguments[i__9708__auto___26551]);
      var G__26552 = i__9708__auto___26551 + 1;
      i__9708__auto___26551 = G__26552;
      continue;
    } else {
    }
    break;
  }
  var G__26549 = args26544.length;
  switch(G__26549) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26544.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__26554 = ntcoll;
      var G__26555 = cljs.core.first(vals);
      var G__26556 = cljs.core.next(vals);
      tcoll = G__26554;
      val = G__26555;
      vals = G__26556;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq26545) {
  var G__26546 = cljs.core.first(seq26545);
  var seq26545__$1 = cljs.core.next(seq26545);
  var G__26547 = cljs.core.first(seq26545__$1);
  var seq26545__$2 = cljs.core.next(seq26545__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26546, G__26547, seq26545__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args26557 = [];
  var len__9707__auto___26564 = arguments.length;
  var i__9708__auto___26565 = 0;
  while (true) {
    if (i__9708__auto___26565 < len__9707__auto___26564) {
      args26557.push(arguments[i__9708__auto___26565]);
      var G__26566 = i__9708__auto___26565 + 1;
      i__9708__auto___26565 = G__26566;
      continue;
    } else {
    }
    break;
  }
  var G__26563 = args26557.length;
  switch(G__26563) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26557.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__26568 = ntcoll;
      var G__26569 = cljs.core.first(kvs);
      var G__26570 = cljs.core.second(kvs);
      var G__26571 = cljs.core.nnext(kvs);
      tcoll = G__26568;
      key = G__26569;
      val = G__26570;
      kvs = G__26571;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq26558) {
  var G__26559 = cljs.core.first(seq26558);
  var seq26558__$1 = cljs.core.next(seq26558);
  var G__26560 = cljs.core.first(seq26558__$1);
  var seq26558__$2 = cljs.core.next(seq26558__$1);
  var G__26561 = cljs.core.first(seq26558__$2);
  var seq26558__$3 = cljs.core.next(seq26558__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26559, G__26560, G__26561, seq26558__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args26572 = [];
  var len__9707__auto___26578 = arguments.length;
  var i__9708__auto___26579 = 0;
  while (true) {
    if (i__9708__auto___26579 < len__9707__auto___26578) {
      args26572.push(arguments[i__9708__auto___26579]);
      var G__26580 = i__9708__auto___26579 + 1;
      i__9708__auto___26579 = G__26580;
      continue;
    } else {
    }
    break;
  }
  var G__26577 = args26572.length;
  switch(G__26577) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26572.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__26582 = ntcoll;
      var G__26583 = cljs.core.first(ks);
      var G__26584 = cljs.core.next(ks);
      tcoll = G__26582;
      key = G__26583;
      ks = G__26584;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq26573) {
  var G__26574 = cljs.core.first(seq26573);
  var seq26573__$1 = cljs.core.next(seq26573);
  var G__26575 = cljs.core.first(seq26573__$1);
  var seq26573__$2 = cljs.core.next(seq26573__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26574, G__26575, seq26573__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args26585 = [];
  var len__9707__auto___26591 = arguments.length;
  var i__9708__auto___26592 = 0;
  while (true) {
    if (i__9708__auto___26592 < len__9707__auto___26591) {
      args26585.push(arguments[i__9708__auto___26592]);
      var G__26593 = i__9708__auto___26592 + 1;
      i__9708__auto___26592 = G__26593;
      continue;
    } else {
    }
    break;
  }
  var G__26590 = args26585.length;
  switch(G__26590) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26585.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__26595 = ntcoll;
      var G__26596 = cljs.core.first(vals);
      var G__26597 = cljs.core.next(vals);
      tcoll = G__26595;
      val = G__26596;
      vals = G__26597;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq26586) {
  var G__26587 = cljs.core.first(seq26586);
  var seq26586__$1 = cljs.core.next(seq26586);
  var G__26588 = cljs.core.first(seq26586__$1);
  var seq26586__$2 = cljs.core.next(seq26586__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26587, G__26588, seq26586__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a9591 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a9591);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a9591) : f.call(null, a9591);
      }
    } else {
      var b9592 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a9591, b9592);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a9591, b9592) : f.call(null, a9591, b9592);
        }
      } else {
        var c9593 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a9591, b9592, c9593);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a9591, b9592, c9593) : f.call(null, a9591, b9592, c9593);
          }
        } else {
          var d9594 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a9591, b9592, c9593, d9594);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a9591, b9592, c9593, d9594) : f.call(null, a9591, b9592, c9593, d9594);
            }
          } else {
            var e9595 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a9591, b9592, c9593, d9594, e9595);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a9591, b9592, c9593, d9594, e9595) : f.call(null, a9591, b9592, c9593, d9594, e9595);
              }
            } else {
              var f9596 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a9591, b9592, c9593, d9594, e9595, f9596);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a9591, b9592, c9593, d9594, e9595, f9596) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596);
                }
              } else {
                var g9597 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a9591, b9592, c9593, d9594, e9595, f9596, g9597);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a9591, b9592, c9593, d9594, e9595, f9596, g9597) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597);
                  }
                } else {
                  var h9598 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598);
                    }
                  } else {
                    var i9599 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599);
                      }
                    } else {
                      var j9600 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600);
                        }
                      } else {
                        var k9601 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601);
                          }
                        } else {
                          var l9602 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602);
                            }
                          } else {
                            var m9603 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603);
                              }
                            } else {
                              var n9604 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604);
                                }
                              } else {
                                var o9605 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605);
                                  }
                                } else {
                                  var p9606 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606);
                                    }
                                  } else {
                                    var q9607 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607);
                                      }
                                    } else {
                                      var r9608 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608);
                                        }
                                      } else {
                                        var s9609 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608, s9609);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608, s9609) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608, s9609);
                                          }
                                        } else {
                                          var t9610 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608, s9609, t9610);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608, s9609, t9610) : f.call(null, a9591, b9592, c9593, d9594, e9595, f9596, g9597, h9598, i9599, j9600, k9601, l9602, m9603, n9604, o9605, p9606, q9607, r9608, s9609, t9610);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args26598 = [];
  var len__9707__auto___26607 = arguments.length;
  var i__9708__auto___26608 = 0;
  while (true) {
    if (i__9708__auto___26608 < len__9707__auto___26607) {
      args26598.push(arguments[i__9708__auto___26608]);
      var G__26609 = i__9708__auto___26608 + 1;
      i__9708__auto___26608 = G__26609;
      continue;
    } else {
    }
    break;
  }
  var G__26606 = args26598.length;
  switch(G__26606) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26598.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__9726__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq26599) {
  var G__26600 = cljs.core.first(seq26599);
  var seq26599__$1 = cljs.core.next(seq26599);
  var G__26601 = cljs.core.first(seq26599__$1);
  var seq26599__$2 = cljs.core.next(seq26599__$1);
  var G__26602 = cljs.core.first(seq26599__$2);
  var seq26599__$3 = cljs.core.next(seq26599__$2);
  var G__26603 = cljs.core.first(seq26599__$3);
  var seq26599__$4 = cljs.core.next(seq26599__$3);
  var G__26604 = cljs.core.first(seq26599__$4);
  var seq26599__$5 = cljs.core.next(seq26599__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__26600, G__26601, G__26602, G__26603, G__26604, seq26599__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args26611 = [];
  var len__9707__auto___26636 = arguments.length;
  var i__9708__auto___26637 = 0;
  while (true) {
    if (i__9708__auto___26637 < len__9707__auto___26636) {
      args26611.push(arguments[i__9708__auto___26637]);
      var G__26638 = i__9708__auto___26637 + 1;
      i__9708__auto___26637 = G__26638;
      continue;
    } else {
    }
    break;
  }
  var G__26620 = args26611.length;
  switch(G__26620) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26611.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__9726__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__26621 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26621) : f.call(null, G__26621);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__26622 = cljs.core.meta(obj);
    var G__26623 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26622, G__26623) : f.call(null, G__26622, G__26623);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__26624 = cljs.core.meta(obj);
    var G__26625 = a;
    var G__26626 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26624, G__26625, G__26626) : f.call(null, G__26624, G__26625, G__26626);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__26627 = cljs.core.meta(obj);
    var G__26628 = a;
    var G__26629 = b;
    var G__26630 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26627, G__26628, G__26629, G__26630) : f.call(null, G__26627, G__26628, G__26629, G__26630);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__26631 = cljs.core.meta(obj);
    var G__26632 = a;
    var G__26633 = b;
    var G__26634 = c;
    var G__26635 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26631, G__26632, G__26633, G__26634, G__26635) : f.call(null, G__26631, G__26632, G__26633, G__26634, G__26635);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq26612) {
  var G__26613 = cljs.core.first(seq26612);
  var seq26612__$1 = cljs.core.next(seq26612);
  var G__26614 = cljs.core.first(seq26612__$1);
  var seq26612__$2 = cljs.core.next(seq26612__$1);
  var G__26615 = cljs.core.first(seq26612__$2);
  var seq26612__$3 = cljs.core.next(seq26612__$2);
  var G__26616 = cljs.core.first(seq26612__$3);
  var seq26612__$4 = cljs.core.next(seq26612__$3);
  var G__26617 = cljs.core.first(seq26612__$4);
  var seq26612__$5 = cljs.core.next(seq26612__$4);
  var G__26618 = cljs.core.first(seq26612__$5);
  var seq26612__$6 = cljs.core.next(seq26612__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__26613, G__26614, G__26615, G__26616, G__26617, G__26618, seq26612__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args26640 = [];
  var len__9707__auto___26646 = arguments.length;
  var i__9708__auto___26647 = 0;
  while (true) {
    if (i__9708__auto___26647 < len__9707__auto___26646) {
      args26640.push(arguments[i__9708__auto___26647]);
      var G__26648 = i__9708__auto___26647 + 1;
      i__9708__auto___26647 = G__26648;
      continue;
    } else {
    }
    break;
  }
  var G__26645 = args26640.length;
  switch(G__26645) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26640.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq26641) {
  var G__26642 = cljs.core.first(seq26641);
  var seq26641__$1 = cljs.core.next(seq26641);
  var G__26643 = cljs.core.first(seq26641__$1);
  var seq26641__$2 = cljs.core.next(seq26641__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__26642, G__26643, seq26641__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core26653 !== "undefined") {
  } else {
    cljs.core.t_cljs$core26653 = function(nil_iter, meta26654) {
      this.nil_iter = nil_iter;
      this.meta26654 = meta26654;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core26653.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26655, meta26654__$1) {
      var self__ = this;
      var _26655__$1 = this;
      return new cljs.core.t_cljs$core26653(self__.nil_iter, meta26654__$1);
    };
    cljs.core.t_cljs$core26653.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26655) {
      var self__ = this;
      var _26655__$1 = this;
      return self__.meta26654;
    };
    cljs.core.t_cljs$core26653.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core26653.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core26653.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core26653.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta26654", "meta26654", -375034237, null)], 
      null);
    };
    cljs.core.t_cljs$core26653.cljs$lang$type = true;
    cljs.core.t_cljs$core26653.cljs$lang$ctorStr = "cljs.core/t_cljs$core26653";
    cljs.core.t_cljs$core26653.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write(writer__9239__auto__, "cljs.core/t_cljs$core26653");
    };
    cljs.core.__GT_t_cljs$core26653 = function cljs$core$nil_iter_$___GT_t_cljs$core26653(nil_iter__$1, meta26654) {
      return new cljs.core.t_cljs$core26653(nil_iter__$1, meta26654);
    };
  }
  return new cljs.core.t_cljs$core26653(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = !(lt.stepper == null);
      if (and__8620__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__8620__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__26656 = lt;
        var G__26657 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__26656, G__26657) : self__.xform.call(null, G__26656, G__26657);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__26658 = cljs.core.next(iters__$1);
        iters__$1 = G__26658;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__9547__auto___26659 = self__.iters.length;
  var i_26660 = 0;
  while (true) {
    if (i_26660 < n__9547__auto___26659) {
      self__.nexts[i_26660] = self__.iters[i_26660].next();
      var G__26661 = i_26660 + 1;
      i_26660 = G__26661;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = !(lt.stepper == null);
      if (and__8620__auto__) {
        return this$.hasNext();
      } else {
        return and__8620__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args26662 = [];
  var len__9707__auto___26665 = arguments.length;
  var i__9708__auto___26666 = 0;
  while (true) {
    if (i__9708__auto___26666 < len__9707__auto___26665) {
      args26662.push(arguments[i__9708__auto___26666]);
      var G__26667 = i__9708__auto___26666 + 1;
      i__9708__auto___26666 = G__26667;
      continue;
    } else {
    }
    break;
  }
  var G__26664 = args26662.length;
  switch(G__26664) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26662.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__26669 = null;
  var G__26669__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__26669__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26669 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26669__1.call(this, x);
      case 2:
        return G__26669__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26669.cljs$core$IFn$_invoke$arity$1 = G__26669__1;
  G__26669.cljs$core$IFn$_invoke$arity$2 = G__26669__2;
  return G__26669;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__26670 = null;
  var G__26670__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__26670__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__26670 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__26670__1.call(this, x);
      case 2:
        return G__26670__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__26670.cljs$core$IFn$_invoke$arity$1 = G__26670__1;
  G__26670.cljs$core$IFn$_invoke$arity$2 = G__26670__2;
  return G__26670;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__26671_26675 = cljs.core.seq(colls);
  var chunk__26672_26676 = null;
  var count__26673_26677 = 0;
  var i__26674_26678 = 0;
  while (true) {
    if (i__26674_26678 < count__26673_26677) {
      var coll_26679 = chunk__26672_26676.cljs$core$IIndexed$_nth$arity$2(null, i__26674_26678);
      iters.push(cljs.core.iter(coll_26679));
      var G__26680 = seq__26671_26675;
      var G__26681 = chunk__26672_26676;
      var G__26682 = count__26673_26677;
      var G__26683 = i__26674_26678 + 1;
      seq__26671_26675 = G__26680;
      chunk__26672_26676 = G__26681;
      count__26673_26677 = G__26682;
      i__26674_26678 = G__26683;
      continue;
    } else {
      var temp__4657__auto___26684 = cljs.core.seq(seq__26671_26675);
      if (temp__4657__auto___26684) {
        var seq__26671_26685__$1 = temp__4657__auto___26684;
        if (cljs.core.chunked_seq_QMARK_(seq__26671_26685__$1)) {
          var c__9443__auto___26686 = cljs.core.chunk_first(seq__26671_26685__$1);
          var G__26687 = cljs.core.chunk_rest(seq__26671_26685__$1);
          var G__26688 = c__9443__auto___26686;
          var G__26689 = cljs.core.count(c__9443__auto___26686);
          var G__26690 = 0;
          seq__26671_26675 = G__26687;
          chunk__26672_26676 = G__26688;
          count__26673_26677 = G__26689;
          i__26674_26678 = G__26690;
          continue;
        } else {
          var coll_26691 = cljs.core.first(seq__26671_26685__$1);
          iters.push(cljs.core.iter(coll_26691));
          var G__26692 = cljs.core.next(seq__26671_26685__$1);
          var G__26693 = null;
          var G__26694 = 0;
          var G__26695 = 0;
          seq__26671_26675 = G__26692;
          chunk__26672_26676 = G__26693;
          count__26673_26677 = G__26694;
          i__26674_26678 = G__26695;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args26696 = [];
  var len__9707__auto___26702 = arguments.length;
  var i__9708__auto___26703 = 0;
  while (true) {
    if (i__9708__auto___26703 < len__9707__auto___26702) {
      args26696.push(arguments[i__9708__auto___26703]);
      var G__26704 = i__9708__auto___26703 + 1;
      i__9708__auto___26703 = G__26704;
      continue;
    } else {
    }
    break;
  }
  var G__26701 = args26696.length;
  switch(G__26701) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26696.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__8632__auto__ = cljs.core.seq(coll);
    if (or__8632__auto__) {
      return or__8632__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq26697) {
  var G__26698 = cljs.core.first(seq26697);
  var seq26697__$1 = cljs.core.next(seq26697);
  var G__26699 = cljs.core.first(seq26697__$1);
  var seq26697__$2 = cljs.core.next(seq26697__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__26698, G__26699, seq26697__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__26707 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26707) : pred.call(null, G__26707);
      }())) {
        var G__26708 = pred;
        var G__26709 = cljs.core.next(coll);
        pred = G__26708;
        coll = G__26709;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__8632__auto__ = function() {
        var G__26713 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26713) : pred.call(null, G__26713);
      }();
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var G__26714 = pred;
        var G__26715 = cljs.core.next(coll);
        pred = G__26714;
        coll = G__26715;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__26716 = null;
    var G__26716__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__26716__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__26716__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__26716__3 = function() {
      var G__26717__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__26717 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__26718__i = 0, G__26718__a = new Array(arguments.length - 2);
          while (G__26718__i < G__26718__a.length) {
            G__26718__a[G__26718__i] = arguments[G__26718__i + 2];
            ++G__26718__i;
          }
          zs = new cljs.core.IndexedSeq(G__26718__a, 0);
        }
        return G__26717__delegate.call(this, x, y, zs);
      };
      G__26717.cljs$lang$maxFixedArity = 2;
      G__26717.cljs$lang$applyTo = function(arglist__26719) {
        var x = cljs.core.first(arglist__26719);
        arglist__26719 = cljs.core.next(arglist__26719);
        var y = cljs.core.first(arglist__26719);
        var zs = cljs.core.rest(arglist__26719);
        return G__26717__delegate(x, y, zs);
      };
      G__26717.cljs$core$IFn$_invoke$arity$variadic = G__26717__delegate;
      return G__26717;
    }();
    G__26716 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__26716__0.call(this);
        case 1:
          return G__26716__1.call(this, x);
        case 2:
          return G__26716__2.call(this, x, y);
        default:
          var G__26720 = null;
          if (arguments.length > 2) {
            var G__26721__i = 0, G__26721__a = new Array(arguments.length - 2);
            while (G__26721__i < G__26721__a.length) {
              G__26721__a[G__26721__i] = arguments[G__26721__i + 2];
              ++G__26721__i;
            }
            G__26720 = new cljs.core.IndexedSeq(G__26721__a, 0);
          }
          return G__26716__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__26720);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26716.cljs$lang$maxFixedArity = 2;
    G__26716.cljs$lang$applyTo = G__26716__3.cljs$lang$applyTo;
    G__26716.cljs$core$IFn$_invoke$arity$0 = G__26716__0;
    G__26716.cljs$core$IFn$_invoke$arity$1 = G__26716__1;
    G__26716.cljs$core$IFn$_invoke$arity$2 = G__26716__2;
    G__26716.cljs$core$IFn$_invoke$arity$variadic = G__26716__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__26716;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__26722__delegate = function(args) {
      return x;
    };
    var G__26722 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__26723__i = 0, G__26723__a = new Array(arguments.length - 0);
        while (G__26723__i < G__26723__a.length) {
          G__26723__a[G__26723__i] = arguments[G__26723__i + 0];
          ++G__26723__i;
        }
        args = new cljs.core.IndexedSeq(G__26723__a, 0);
      }
      return G__26722__delegate.call(this, args);
    };
    G__26722.cljs$lang$maxFixedArity = 0;
    G__26722.cljs$lang$applyTo = function(arglist__26724) {
      var args = cljs.core.seq(arglist__26724);
      return G__26722__delegate(args);
    };
    G__26722.cljs$core$IFn$_invoke$arity$variadic = G__26722__delegate;
    return G__26722;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args26725 = [];
  var len__9707__auto___26747 = arguments.length;
  var i__9708__auto___26748 = 0;
  while (true) {
    if (i__9708__auto___26748 < len__9707__auto___26747) {
      args26725.push(arguments[i__9708__auto___26748]);
      var G__26749 = i__9708__auto___26748 + 1;
      i__9708__auto___26748 = G__26749;
      continue;
    } else {
    }
    break;
  }
  var G__26731 = args26725.length;
  switch(G__26731) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26725.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__26751 = null;
    var G__26751__0 = function() {
      var G__26732 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26732) : f.call(null, G__26732);
    };
    var G__26751__1 = function(x) {
      var G__26733 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26733) : f.call(null, G__26733);
    };
    var G__26751__2 = function(x, y) {
      var G__26734 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26734) : f.call(null, G__26734);
    };
    var G__26751__3 = function(x, y, z) {
      var G__26735 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26735) : f.call(null, G__26735);
    };
    var G__26751__4 = function() {
      var G__26752__delegate = function(x, y, z, args) {
        var G__26736 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26736) : f.call(null, G__26736);
      };
      var G__26752 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26753__i = 0, G__26753__a = new Array(arguments.length - 3);
          while (G__26753__i < G__26753__a.length) {
            G__26753__a[G__26753__i] = arguments[G__26753__i + 3];
            ++G__26753__i;
          }
          args = new cljs.core.IndexedSeq(G__26753__a, 0);
        }
        return G__26752__delegate.call(this, x, y, z, args);
      };
      G__26752.cljs$lang$maxFixedArity = 3;
      G__26752.cljs$lang$applyTo = function(arglist__26754) {
        var x = cljs.core.first(arglist__26754);
        arglist__26754 = cljs.core.next(arglist__26754);
        var y = cljs.core.first(arglist__26754);
        arglist__26754 = cljs.core.next(arglist__26754);
        var z = cljs.core.first(arglist__26754);
        var args = cljs.core.rest(arglist__26754);
        return G__26752__delegate(x, y, z, args);
      };
      G__26752.cljs$core$IFn$_invoke$arity$variadic = G__26752__delegate;
      return G__26752;
    }();
    G__26751 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26751__0.call(this);
        case 1:
          return G__26751__1.call(this, x);
        case 2:
          return G__26751__2.call(this, x, y);
        case 3:
          return G__26751__3.call(this, x, y, z);
        default:
          var G__26755 = null;
          if (arguments.length > 3) {
            var G__26756__i = 0, G__26756__a = new Array(arguments.length - 3);
            while (G__26756__i < G__26756__a.length) {
              G__26756__a[G__26756__i] = arguments[G__26756__i + 3];
              ++G__26756__i;
            }
            G__26755 = new cljs.core.IndexedSeq(G__26756__a, 0);
          }
          return G__26751__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26755);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26751.cljs$lang$maxFixedArity = 3;
    G__26751.cljs$lang$applyTo = G__26751__4.cljs$lang$applyTo;
    G__26751.cljs$core$IFn$_invoke$arity$0 = G__26751__0;
    G__26751.cljs$core$IFn$_invoke$arity$1 = G__26751__1;
    G__26751.cljs$core$IFn$_invoke$arity$2 = G__26751__2;
    G__26751.cljs$core$IFn$_invoke$arity$3 = G__26751__3;
    G__26751.cljs$core$IFn$_invoke$arity$variadic = G__26751__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26751;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__26757 = null;
    var G__26757__0 = function() {
      var G__26737 = function() {
        var G__26738 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26738) : g.call(null, G__26738);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26737) : f.call(null, G__26737);
    };
    var G__26757__1 = function(x) {
      var G__26739 = function() {
        var G__26740 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26740) : g.call(null, G__26740);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26739) : f.call(null, G__26739);
    };
    var G__26757__2 = function(x, y) {
      var G__26741 = function() {
        var G__26742 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26742) : g.call(null, G__26742);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26741) : f.call(null, G__26741);
    };
    var G__26757__3 = function(x, y, z) {
      var G__26743 = function() {
        var G__26744 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26744) : g.call(null, G__26744);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26743) : f.call(null, G__26743);
    };
    var G__26757__4 = function() {
      var G__26758__delegate = function(x, y, z, args) {
        var G__26745 = function() {
          var G__26746 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26746) : g.call(null, G__26746);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26745) : f.call(null, G__26745);
      };
      var G__26758 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26759__i = 0, G__26759__a = new Array(arguments.length - 3);
          while (G__26759__i < G__26759__a.length) {
            G__26759__a[G__26759__i] = arguments[G__26759__i + 3];
            ++G__26759__i;
          }
          args = new cljs.core.IndexedSeq(G__26759__a, 0);
        }
        return G__26758__delegate.call(this, x, y, z, args);
      };
      G__26758.cljs$lang$maxFixedArity = 3;
      G__26758.cljs$lang$applyTo = function(arglist__26760) {
        var x = cljs.core.first(arglist__26760);
        arglist__26760 = cljs.core.next(arglist__26760);
        var y = cljs.core.first(arglist__26760);
        arglist__26760 = cljs.core.next(arglist__26760);
        var z = cljs.core.first(arglist__26760);
        var args = cljs.core.rest(arglist__26760);
        return G__26758__delegate(x, y, z, args);
      };
      G__26758.cljs$core$IFn$_invoke$arity$variadic = G__26758__delegate;
      return G__26758;
    }();
    G__26757 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26757__0.call(this);
        case 1:
          return G__26757__1.call(this, x);
        case 2:
          return G__26757__2.call(this, x, y);
        case 3:
          return G__26757__3.call(this, x, y, z);
        default:
          var G__26761 = null;
          if (arguments.length > 3) {
            var G__26762__i = 0, G__26762__a = new Array(arguments.length - 3);
            while (G__26762__i < G__26762__a.length) {
              G__26762__a[G__26762__i] = arguments[G__26762__i + 3];
              ++G__26762__i;
            }
            G__26761 = new cljs.core.IndexedSeq(G__26762__a, 0);
          }
          return G__26757__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26761);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26757.cljs$lang$maxFixedArity = 3;
    G__26757.cljs$lang$applyTo = G__26757__4.cljs$lang$applyTo;
    G__26757.cljs$core$IFn$_invoke$arity$0 = G__26757__0;
    G__26757.cljs$core$IFn$_invoke$arity$1 = G__26757__1;
    G__26757.cljs$core$IFn$_invoke$arity$2 = G__26757__2;
    G__26757.cljs$core$IFn$_invoke$arity$3 = G__26757__3;
    G__26757.cljs$core$IFn$_invoke$arity$variadic = G__26757__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26757;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__26763__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__26764 = cljs.core.first(fs__$2).call(null, ret);
            var G__26765 = cljs.core.next(fs__$2);
            ret = G__26764;
            fs__$2 = G__26765;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__26763 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__26766__i = 0, G__26766__a = new Array(arguments.length - 0);
          while (G__26766__i < G__26766__a.length) {
            G__26766__a[G__26766__i] = arguments[G__26766__i + 0];
            ++G__26766__i;
          }
          args = new cljs.core.IndexedSeq(G__26766__a, 0);
        }
        return G__26763__delegate.call(this, args);
      };
      G__26763.cljs$lang$maxFixedArity = 0;
      G__26763.cljs$lang$applyTo = function(arglist__26767) {
        var args = cljs.core.seq(arglist__26767);
        return G__26763__delegate(args);
      };
      G__26763.cljs$core$IFn$_invoke$arity$variadic = G__26763__delegate;
      return G__26763;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq26726) {
  var G__26727 = cljs.core.first(seq26726);
  var seq26726__$1 = cljs.core.next(seq26726);
  var G__26728 = cljs.core.first(seq26726__$1);
  var seq26726__$2 = cljs.core.next(seq26726__$1);
  var G__26729 = cljs.core.first(seq26726__$2);
  var seq26726__$3 = cljs.core.next(seq26726__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__26727, G__26728, G__26729, seq26726__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args26768 = [];
  var len__9707__auto___26776 = arguments.length;
  var i__9708__auto___26777 = 0;
  while (true) {
    if (i__9708__auto___26777 < len__9707__auto___26776) {
      args26768.push(arguments[i__9708__auto___26777]);
      var G__26778 = i__9708__auto___26777 + 1;
      i__9708__auto___26777 = G__26778;
      continue;
    } else {
    }
    break;
  }
  var G__26775 = args26768.length;
  switch(G__26775) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26768.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9726__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__26780 = null;
    var G__26780__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__26780__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__26780__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__26780__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__26780__4 = function() {
      var G__26781__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__26781 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26782__i = 0, G__26782__a = new Array(arguments.length - 3);
          while (G__26782__i < G__26782__a.length) {
            G__26782__a[G__26782__i] = arguments[G__26782__i + 3];
            ++G__26782__i;
          }
          args = new cljs.core.IndexedSeq(G__26782__a, 0);
        }
        return G__26781__delegate.call(this, x, y, z, args);
      };
      G__26781.cljs$lang$maxFixedArity = 3;
      G__26781.cljs$lang$applyTo = function(arglist__26783) {
        var x = cljs.core.first(arglist__26783);
        arglist__26783 = cljs.core.next(arglist__26783);
        var y = cljs.core.first(arglist__26783);
        arglist__26783 = cljs.core.next(arglist__26783);
        var z = cljs.core.first(arglist__26783);
        var args = cljs.core.rest(arglist__26783);
        return G__26781__delegate(x, y, z, args);
      };
      G__26781.cljs$core$IFn$_invoke$arity$variadic = G__26781__delegate;
      return G__26781;
    }();
    G__26780 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26780__0.call(this);
        case 1:
          return G__26780__1.call(this, x);
        case 2:
          return G__26780__2.call(this, x, y);
        case 3:
          return G__26780__3.call(this, x, y, z);
        default:
          var G__26784 = null;
          if (arguments.length > 3) {
            var G__26785__i = 0, G__26785__a = new Array(arguments.length - 3);
            while (G__26785__i < G__26785__a.length) {
              G__26785__a[G__26785__i] = arguments[G__26785__i + 3];
              ++G__26785__i;
            }
            G__26784 = new cljs.core.IndexedSeq(G__26785__a, 0);
          }
          return G__26780__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26784);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26780.cljs$lang$maxFixedArity = 3;
    G__26780.cljs$lang$applyTo = G__26780__4.cljs$lang$applyTo;
    G__26780.cljs$core$IFn$_invoke$arity$0 = G__26780__0;
    G__26780.cljs$core$IFn$_invoke$arity$1 = G__26780__1;
    G__26780.cljs$core$IFn$_invoke$arity$2 = G__26780__2;
    G__26780.cljs$core$IFn$_invoke$arity$3 = G__26780__3;
    G__26780.cljs$core$IFn$_invoke$arity$variadic = G__26780__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26780;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__26786 = null;
    var G__26786__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__26786__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__26786__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__26786__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__26786__4 = function() {
      var G__26787__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__26787 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26788__i = 0, G__26788__a = new Array(arguments.length - 3);
          while (G__26788__i < G__26788__a.length) {
            G__26788__a[G__26788__i] = arguments[G__26788__i + 3];
            ++G__26788__i;
          }
          args = new cljs.core.IndexedSeq(G__26788__a, 0);
        }
        return G__26787__delegate.call(this, x, y, z, args);
      };
      G__26787.cljs$lang$maxFixedArity = 3;
      G__26787.cljs$lang$applyTo = function(arglist__26789) {
        var x = cljs.core.first(arglist__26789);
        arglist__26789 = cljs.core.next(arglist__26789);
        var y = cljs.core.first(arglist__26789);
        arglist__26789 = cljs.core.next(arglist__26789);
        var z = cljs.core.first(arglist__26789);
        var args = cljs.core.rest(arglist__26789);
        return G__26787__delegate(x, y, z, args);
      };
      G__26787.cljs$core$IFn$_invoke$arity$variadic = G__26787__delegate;
      return G__26787;
    }();
    G__26786 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26786__0.call(this);
        case 1:
          return G__26786__1.call(this, x);
        case 2:
          return G__26786__2.call(this, x, y);
        case 3:
          return G__26786__3.call(this, x, y, z);
        default:
          var G__26790 = null;
          if (arguments.length > 3) {
            var G__26791__i = 0, G__26791__a = new Array(arguments.length - 3);
            while (G__26791__i < G__26791__a.length) {
              G__26791__a[G__26791__i] = arguments[G__26791__i + 3];
              ++G__26791__i;
            }
            G__26790 = new cljs.core.IndexedSeq(G__26791__a, 0);
          }
          return G__26786__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26790);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26786.cljs$lang$maxFixedArity = 3;
    G__26786.cljs$lang$applyTo = G__26786__4.cljs$lang$applyTo;
    G__26786.cljs$core$IFn$_invoke$arity$0 = G__26786__0;
    G__26786.cljs$core$IFn$_invoke$arity$1 = G__26786__1;
    G__26786.cljs$core$IFn$_invoke$arity$2 = G__26786__2;
    G__26786.cljs$core$IFn$_invoke$arity$3 = G__26786__3;
    G__26786.cljs$core$IFn$_invoke$arity$variadic = G__26786__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26786;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__26792 = null;
    var G__26792__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__26792__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__26792__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__26792__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__26792__4 = function() {
      var G__26793__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__26793 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__26794__i = 0, G__26794__a = new Array(arguments.length - 3);
          while (G__26794__i < G__26794__a.length) {
            G__26794__a[G__26794__i] = arguments[G__26794__i + 3];
            ++G__26794__i;
          }
          args = new cljs.core.IndexedSeq(G__26794__a, 0);
        }
        return G__26793__delegate.call(this, x, y, z, args);
      };
      G__26793.cljs$lang$maxFixedArity = 3;
      G__26793.cljs$lang$applyTo = function(arglist__26795) {
        var x = cljs.core.first(arglist__26795);
        arglist__26795 = cljs.core.next(arglist__26795);
        var y = cljs.core.first(arglist__26795);
        arglist__26795 = cljs.core.next(arglist__26795);
        var z = cljs.core.first(arglist__26795);
        var args = cljs.core.rest(arglist__26795);
        return G__26793__delegate(x, y, z, args);
      };
      G__26793.cljs$core$IFn$_invoke$arity$variadic = G__26793__delegate;
      return G__26793;
    }();
    G__26792 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__26792__0.call(this);
        case 1:
          return G__26792__1.call(this, x);
        case 2:
          return G__26792__2.call(this, x, y);
        case 3:
          return G__26792__3.call(this, x, y, z);
        default:
          var G__26796 = null;
          if (arguments.length > 3) {
            var G__26797__i = 0, G__26797__a = new Array(arguments.length - 3);
            while (G__26797__i < G__26797__a.length) {
              G__26797__a[G__26797__i] = arguments[G__26797__i + 3];
              ++G__26797__i;
            }
            G__26796 = new cljs.core.IndexedSeq(G__26797__a, 0);
          }
          return G__26792__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__26796);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26792.cljs$lang$maxFixedArity = 3;
    G__26792.cljs$lang$applyTo = G__26792__4.cljs$lang$applyTo;
    G__26792.cljs$core$IFn$_invoke$arity$0 = G__26792__0;
    G__26792.cljs$core$IFn$_invoke$arity$1 = G__26792__1;
    G__26792.cljs$core$IFn$_invoke$arity$2 = G__26792__2;
    G__26792.cljs$core$IFn$_invoke$arity$3 = G__26792__3;
    G__26792.cljs$core$IFn$_invoke$arity$variadic = G__26792__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26792;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__26798__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__26798 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__26799__i = 0, G__26799__a = new Array(arguments.length - 0);
        while (G__26799__i < G__26799__a.length) {
          G__26799__a[G__26799__i] = arguments[G__26799__i + 0];
          ++G__26799__i;
        }
        args = new cljs.core.IndexedSeq(G__26799__a, 0);
      }
      return G__26798__delegate.call(this, args);
    };
    G__26798.cljs$lang$maxFixedArity = 0;
    G__26798.cljs$lang$applyTo = function(arglist__26800) {
      var args = cljs.core.seq(arglist__26800);
      return G__26798__delegate(args);
    };
    G__26798.cljs$core$IFn$_invoke$arity$variadic = G__26798__delegate;
    return G__26798;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq26769) {
  var G__26770 = cljs.core.first(seq26769);
  var seq26769__$1 = cljs.core.next(seq26769);
  var G__26771 = cljs.core.first(seq26769__$1);
  var seq26769__$2 = cljs.core.next(seq26769__$1);
  var G__26772 = cljs.core.first(seq26769__$2);
  var seq26769__$3 = cljs.core.next(seq26769__$2);
  var G__26773 = cljs.core.first(seq26769__$3);
  var seq26769__$4 = cljs.core.next(seq26769__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__26770, G__26771, G__26772, G__26773, seq26769__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args26801 = [];
  var len__9707__auto___26820 = arguments.length;
  var i__9708__auto___26821 = 0;
  while (true) {
    if (i__9708__auto___26821 < len__9707__auto___26820) {
      args26801.push(arguments[i__9708__auto___26821]);
      var G__26822 = i__9708__auto___26821 + 1;
      i__9708__auto___26821 = G__26822;
      continue;
    } else {
    }
    break;
  }
  var G__26803 = args26801.length;
  switch(G__26803) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26801.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__26824 = null;
    var G__26824__1 = function(a) {
      var G__26804 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26804) : f.call(null, G__26804);
    };
    var G__26824__2 = function(a, b) {
      var G__26805 = a == null ? x : a;
      var G__26806 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26805, G__26806) : f.call(null, G__26805, G__26806);
    };
    var G__26824__3 = function(a, b, c) {
      var G__26807 = a == null ? x : a;
      var G__26808 = b;
      var G__26809 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26807, G__26808, G__26809) : f.call(null, G__26807, G__26808, G__26809);
    };
    var G__26824__4 = function() {
      var G__26825__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__26825 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__26826__i = 0, G__26826__a = new Array(arguments.length - 3);
          while (G__26826__i < G__26826__a.length) {
            G__26826__a[G__26826__i] = arguments[G__26826__i + 3];
            ++G__26826__i;
          }
          ds = new cljs.core.IndexedSeq(G__26826__a, 0);
        }
        return G__26825__delegate.call(this, a, b, c, ds);
      };
      G__26825.cljs$lang$maxFixedArity = 3;
      G__26825.cljs$lang$applyTo = function(arglist__26827) {
        var a = cljs.core.first(arglist__26827);
        arglist__26827 = cljs.core.next(arglist__26827);
        var b = cljs.core.first(arglist__26827);
        arglist__26827 = cljs.core.next(arglist__26827);
        var c = cljs.core.first(arglist__26827);
        var ds = cljs.core.rest(arglist__26827);
        return G__26825__delegate(a, b, c, ds);
      };
      G__26825.cljs$core$IFn$_invoke$arity$variadic = G__26825__delegate;
      return G__26825;
    }();
    G__26824 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__26824__1.call(this, a);
        case 2:
          return G__26824__2.call(this, a, b);
        case 3:
          return G__26824__3.call(this, a, b, c);
        default:
          var G__26828 = null;
          if (arguments.length > 3) {
            var G__26829__i = 0, G__26829__a = new Array(arguments.length - 3);
            while (G__26829__i < G__26829__a.length) {
              G__26829__a[G__26829__i] = arguments[G__26829__i + 3];
              ++G__26829__i;
            }
            G__26828 = new cljs.core.IndexedSeq(G__26829__a, 0);
          }
          return G__26824__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__26828);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26824.cljs$lang$maxFixedArity = 3;
    G__26824.cljs$lang$applyTo = G__26824__4.cljs$lang$applyTo;
    G__26824.cljs$core$IFn$_invoke$arity$1 = G__26824__1;
    G__26824.cljs$core$IFn$_invoke$arity$2 = G__26824__2;
    G__26824.cljs$core$IFn$_invoke$arity$3 = G__26824__3;
    G__26824.cljs$core$IFn$_invoke$arity$variadic = G__26824__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26824;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__26830 = null;
    var G__26830__2 = function(a, b) {
      var G__26810 = a == null ? x : a;
      var G__26811 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26810, G__26811) : f.call(null, G__26810, G__26811);
    };
    var G__26830__3 = function(a, b, c) {
      var G__26812 = a == null ? x : a;
      var G__26813 = b == null ? y : b;
      var G__26814 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26812, G__26813, G__26814) : f.call(null, G__26812, G__26813, G__26814);
    };
    var G__26830__4 = function() {
      var G__26831__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__26831 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__26832__i = 0, G__26832__a = new Array(arguments.length - 3);
          while (G__26832__i < G__26832__a.length) {
            G__26832__a[G__26832__i] = arguments[G__26832__i + 3];
            ++G__26832__i;
          }
          ds = new cljs.core.IndexedSeq(G__26832__a, 0);
        }
        return G__26831__delegate.call(this, a, b, c, ds);
      };
      G__26831.cljs$lang$maxFixedArity = 3;
      G__26831.cljs$lang$applyTo = function(arglist__26833) {
        var a = cljs.core.first(arglist__26833);
        arglist__26833 = cljs.core.next(arglist__26833);
        var b = cljs.core.first(arglist__26833);
        arglist__26833 = cljs.core.next(arglist__26833);
        var c = cljs.core.first(arglist__26833);
        var ds = cljs.core.rest(arglist__26833);
        return G__26831__delegate(a, b, c, ds);
      };
      G__26831.cljs$core$IFn$_invoke$arity$variadic = G__26831__delegate;
      return G__26831;
    }();
    G__26830 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__26830__2.call(this, a, b);
        case 3:
          return G__26830__3.call(this, a, b, c);
        default:
          var G__26834 = null;
          if (arguments.length > 3) {
            var G__26835__i = 0, G__26835__a = new Array(arguments.length - 3);
            while (G__26835__i < G__26835__a.length) {
              G__26835__a[G__26835__i] = arguments[G__26835__i + 3];
              ++G__26835__i;
            }
            G__26834 = new cljs.core.IndexedSeq(G__26835__a, 0);
          }
          return G__26830__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__26834);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26830.cljs$lang$maxFixedArity = 3;
    G__26830.cljs$lang$applyTo = G__26830__4.cljs$lang$applyTo;
    G__26830.cljs$core$IFn$_invoke$arity$2 = G__26830__2;
    G__26830.cljs$core$IFn$_invoke$arity$3 = G__26830__3;
    G__26830.cljs$core$IFn$_invoke$arity$variadic = G__26830__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26830;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__26836 = null;
    var G__26836__2 = function(a, b) {
      var G__26815 = a == null ? x : a;
      var G__26816 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26815, G__26816) : f.call(null, G__26815, G__26816);
    };
    var G__26836__3 = function(a, b, c) {
      var G__26817 = a == null ? x : a;
      var G__26818 = b == null ? y : b;
      var G__26819 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26817, G__26818, G__26819) : f.call(null, G__26817, G__26818, G__26819);
    };
    var G__26836__4 = function() {
      var G__26837__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__26837 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__26838__i = 0, G__26838__a = new Array(arguments.length - 3);
          while (G__26838__i < G__26838__a.length) {
            G__26838__a[G__26838__i] = arguments[G__26838__i + 3];
            ++G__26838__i;
          }
          ds = new cljs.core.IndexedSeq(G__26838__a, 0);
        }
        return G__26837__delegate.call(this, a, b, c, ds);
      };
      G__26837.cljs$lang$maxFixedArity = 3;
      G__26837.cljs$lang$applyTo = function(arglist__26839) {
        var a = cljs.core.first(arglist__26839);
        arglist__26839 = cljs.core.next(arglist__26839);
        var b = cljs.core.first(arglist__26839);
        arglist__26839 = cljs.core.next(arglist__26839);
        var c = cljs.core.first(arglist__26839);
        var ds = cljs.core.rest(arglist__26839);
        return G__26837__delegate(a, b, c, ds);
      };
      G__26837.cljs$core$IFn$_invoke$arity$variadic = G__26837__delegate;
      return G__26837;
    }();
    G__26836 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__26836__2.call(this, a, b);
        case 3:
          return G__26836__3.call(this, a, b, c);
        default:
          var G__26840 = null;
          if (arguments.length > 3) {
            var G__26841__i = 0, G__26841__a = new Array(arguments.length - 3);
            while (G__26841__i < G__26841__a.length) {
              G__26841__a[G__26841__i] = arguments[G__26841__i + 3];
              ++G__26841__i;
            }
            G__26840 = new cljs.core.IndexedSeq(G__26841__a, 0);
          }
          return G__26836__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__26840);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__26836.cljs$lang$maxFixedArity = 3;
    G__26836.cljs$lang$applyTo = G__26836__4.cljs$lang$applyTo;
    G__26836.cljs$core$IFn$_invoke$arity$2 = G__26836__2;
    G__26836.cljs$core$IFn$_invoke$arity$3 = G__26836__3;
    G__26836.cljs$core$IFn$_invoke$arity$variadic = G__26836__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__26836;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args26842 = [];
  var len__9707__auto___26873 = arguments.length;
  var i__9708__auto___26874 = 0;
  while (true) {
    if (i__9708__auto___26874 < len__9707__auto___26873) {
      args26842.push(arguments[i__9708__auto___26874]);
      var G__26875 = i__9708__auto___26874 + 1;
      i__9708__auto___26874 = G__26875;
      continue;
    } else {
    }
    break;
  }
  var G__26844 = args26842.length;
  switch(G__26844) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26842.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__26877 = null;
        var G__26877__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__26877__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__26877__2 = function(result, input) {
          var G__26845 = result;
          var G__26846 = function() {
            var G__26847 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__26848 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26847, G__26848) : f.call(null, G__26847, G__26848);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26845, G__26846) : rf.call(null, G__26845, G__26846);
        };
        G__26877 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__26877__0.call(this);
            case 1:
              return G__26877__1.call(this, result);
            case 2:
              return G__26877__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__26877.cljs$core$IFn$_invoke$arity$0 = G__26877__0;
        G__26877.cljs$core$IFn$_invoke$arity$1 = G__26877__1;
        G__26877.cljs$core$IFn$_invoke$arity$2 = G__26877__2;
        return G__26877;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__9547__auto___26878 = size;
          var i_26879 = 0;
          while (true) {
            if (i_26879 < n__9547__auto___26878) {
              cljs.core.chunk_append(b, function() {
                var G__26869 = idx + i_26879;
                var G__26870 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_26879);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26869, G__26870) : f.call(null, G__26869, G__26870);
              }());
              var G__26880 = i_26879 + 1;
              i_26879 = G__26880;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__26871 = idx;
            var G__26872 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26871, G__26872) : f.call(null, G__26871, G__26872);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args26881 = [];
  var len__9707__auto___26886 = arguments.length;
  var i__9708__auto___26887 = 0;
  while (true) {
    if (i__9708__auto___26887 < len__9707__auto___26886) {
      args26881.push(arguments[i__9708__auto___26887]);
      var G__26888 = i__9708__auto___26887 + 1;
      i__9708__auto___26887 = G__26888;
      continue;
    } else {
    }
    break;
  }
  var G__26883 = args26881.length;
  switch(G__26883) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26881.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__26890 = null;
      var G__26890__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__26890__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__26890__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__26890 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__26890__0.call(this);
          case 1:
            return G__26890__1.call(this, result);
          case 2:
            return G__26890__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__26890.cljs$core$IFn$_invoke$arity$0 = G__26890__0;
      G__26890.cljs$core$IFn$_invoke$arity$1 = G__26890__1;
      G__26890.cljs$core$IFn$_invoke$arity$2 = G__26890__2;
      return G__26890;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__9547__auto___26891 = size;
        var i_26892 = 0;
        while (true) {
          if (i_26892 < n__9547__auto___26891) {
            var x_26893 = function() {
              var G__26884 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_26892);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26884) : f.call(null, G__26884);
            }();
            if (x_26893 == null) {
            } else {
              cljs.core.chunk_append(b, x_26893);
            }
            var G__26894 = i_26892 + 1;
            i_26892 = G__26894;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__26885 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26885) : f.call(null, G__26885);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__26895 = cljs.core.seq(self__.watches);
  var chunk__26896 = null;
  var count__26897 = 0;
  var i__26898 = 0;
  while (true) {
    if (i__26898 < count__26897) {
      var vec__26899 = chunk__26896.cljs$core$IIndexed$_nth$arity$2(null, i__26898);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26899, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26899, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__26905 = seq__26895;
      var G__26906 = chunk__26896;
      var G__26907 = count__26897;
      var G__26908 = i__26898 + 1;
      seq__26895 = G__26905;
      chunk__26896 = G__26906;
      count__26897 = G__26907;
      i__26898 = G__26908;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__26895);
      if (temp__4657__auto__) {
        var seq__26895__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__26895__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__26895__$1);
          var G__26909 = cljs.core.chunk_rest(seq__26895__$1);
          var G__26910 = c__9443__auto__;
          var G__26911 = cljs.core.count(c__9443__auto__);
          var G__26912 = 0;
          seq__26895 = G__26909;
          chunk__26896 = G__26910;
          count__26897 = G__26911;
          i__26898 = G__26912;
          continue;
        } else {
          var vec__26902 = cljs.core.first(seq__26895__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26902, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26902, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__26913 = cljs.core.next(seq__26895__$1);
          var G__26914 = null;
          var G__26915 = 0;
          var G__26916 = 0;
          seq__26895 = G__26913;
          chunk__26896 = G__26914;
          count__26897 = G__26915;
          i__26898 = G__26916;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args26917 = [];
  var len__9707__auto___26925 = arguments.length;
  var i__9708__auto___26926 = 0;
  while (true) {
    if (i__9708__auto___26926 < len__9707__auto___26925) {
      args26917.push(arguments[i__9708__auto___26926]);
      var G__26927 = i__9708__auto___26926 + 1;
      i__9708__auto___26926 = G__26927;
      continue;
    } else {
    }
    break;
  }
  var G__26921 = args26917.length;
  switch(G__26921) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26917.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9726__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__26922) {
  var map__26923 = p__26922;
  var map__26923__$1 = (!(map__26923 == null) ? map__26923.cljs$lang$protocol_mask$partition0$ & 64 || map__26923.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__26923) : map__26923;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26923__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26923__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq26918) {
  var G__26919 = cljs.core.first(seq26918);
  var seq26918__$1 = cljs.core.next(seq26918);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__26919, seq26918__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args26929 = [];
  var len__9707__auto___26943 = arguments.length;
  var i__9708__auto___26944 = 0;
  while (true) {
    if (i__9708__auto___26944 < len__9707__auto___26943) {
      args26929.push(arguments[i__9708__auto___26944]);
      var G__26945 = i__9708__auto___26944 + 1;
      i__9708__auto___26944 = G__26945;
      continue;
    } else {
    }
    break;
  }
  var G__26936 = args26929.length;
  switch(G__26936) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26929.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9726__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__26937 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26937) : f.call(null, G__26937);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__26938 = a.state;
      var G__26939 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26938, G__26939) : f.call(null, G__26938, G__26939);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__26940 = a.state;
      var G__26941 = x;
      var G__26942 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26940, G__26941, G__26942) : f.call(null, G__26940, G__26941, G__26942);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq26930) {
  var G__26931 = cljs.core.first(seq26930);
  var seq26930__$1 = cljs.core.next(seq26930);
  var G__26932 = cljs.core.first(seq26930__$1);
  var seq26930__$2 = cljs.core.next(seq26930__$1);
  var G__26933 = cljs.core.first(seq26930__$2);
  var seq26930__$3 = cljs.core.next(seq26930__$2);
  var G__26934 = cljs.core.first(seq26930__$3);
  var seq26930__$4 = cljs.core.next(seq26930__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26931, G__26932, G__26933, G__26934, seq26930__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args26947 = [];
  var len__9707__auto___26978 = arguments.length;
  var i__9708__auto___26979 = 0;
  while (true) {
    if (i__9708__auto___26979 < len__9707__auto___26978) {
      args26947.push(arguments[i__9708__auto___26979]);
      var G__26980 = i__9708__auto___26979 + 1;
      i__9708__auto___26979 = G__26980;
      continue;
    } else {
    }
    break;
  }
  var G__26949 = args26947.length;
  switch(G__26949) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26947.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__26982 = null;
        var G__26982__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__26982__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__26982__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__26982 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__26982__0.call(this);
            case 1:
              return G__26982__1.call(this, result);
            case 2:
              return G__26982__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__26982.cljs$core$IFn$_invoke$arity$0 = G__26982__0;
        G__26982.cljs$core$IFn$_invoke$arity$1 = G__26982__1;
        G__26982.cljs$core$IFn$_invoke$arity$2 = G__26982__2;
        return G__26982;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__9547__auto___26983 = size;
          var i_26984 = 0;
          while (true) {
            if (i_26984 < n__9547__auto___26983) {
              var x_26985 = function() {
                var G__26974 = idx + i_26984;
                var G__26975 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_26984);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26974, G__26975) : f.call(null, G__26974, G__26975);
              }();
              if (x_26985 == null) {
              } else {
                cljs.core.chunk_append(b, x_26985);
              }
              var G__26986 = i_26984 + 1;
              i_26984 = G__26986;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__26976 = idx;
            var G__26977 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26976, G__26977) : f.call(null, G__26976, G__26977);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args26993 = [];
  var len__9707__auto___27000 = arguments.length;
  var i__9708__auto___27001 = 0;
  while (true) {
    if (i__9708__auto___27001 < len__9707__auto___27000) {
      args26993.push(arguments[i__9708__auto___27001]);
      var G__27002 = i__9708__auto___27001 + 1;
      i__9708__auto___27001 = G__27002;
      continue;
    } else {
    }
    break;
  }
  var G__26999 = args26993.length;
  switch(G__26999) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args26993.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          var and__8620__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__8620__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__8620__auto____$1;
          }
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__27004__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__8620__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__8620__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__8620__auto__;
          }
        }());
      };
      var G__27004 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__27005__i = 0, G__27005__a = new Array(arguments.length - 3);
          while (G__27005__i < G__27005__a.length) {
            G__27005__a[G__27005__i] = arguments[G__27005__i + 3];
            ++G__27005__i;
          }
          args = new cljs.core.IndexedSeq(G__27005__a, 0);
        }
        return G__27004__delegate.call(this, x, y, z, args);
      };
      G__27004.cljs$lang$maxFixedArity = 3;
      G__27004.cljs$lang$applyTo = function(arglist__27006) {
        var x = cljs.core.first(arglist__27006);
        arglist__27006 = cljs.core.next(arglist__27006);
        var y = cljs.core.first(arglist__27006);
        arglist__27006 = cljs.core.next(arglist__27006);
        var z = cljs.core.first(arglist__27006);
        var args = cljs.core.rest(arglist__27006);
        return G__27004__delegate(x, y, z, args);
      };
      G__27004.cljs$core$IFn$_invoke$arity$variadic = G__27004__delegate;
      return G__27004;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__27007 = null;
          if (arguments.length > 3) {
            var G__27008__i = 0, G__27008__a = new Array(arguments.length - 3);
            while (G__27008__i < G__27008__a.length) {
              G__27008__a[G__27008__i] = arguments[G__27008__i + 3];
              ++G__27008__i;
            }
            G__27007 = new cljs.core.IndexedSeq(G__27008__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27007);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          var and__8620__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__8620__auto____$1)) {
            var and__8620__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__8620__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__8620__auto____$2;
            }
          } else {
            return and__8620__auto____$1;
          }
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          var and__8620__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__8620__auto____$1)) {
            var and__8620__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__8620__auto____$2)) {
              var and__8620__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__8620__auto____$3)) {
                var and__8620__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__8620__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__8620__auto____$4;
                }
              } else {
                return and__8620__auto____$3;
              }
            } else {
              return and__8620__auto____$2;
            }
          } else {
            return and__8620__auto____$1;
          }
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__27009__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__8620__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__8620__auto__)) {
            return cljs.core.every_QMARK_(function(and__8620__auto__) {
              return function(p1__26987_SHARP_) {
                var and__8620__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__26987_SHARP_) : p1.call(null, p1__26987_SHARP_);
                if (cljs.core.truth_(and__8620__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__26987_SHARP_) : p2.call(null, p1__26987_SHARP_);
                } else {
                  return and__8620__auto____$1;
                }
              };
            }(and__8620__auto__), args);
          } else {
            return and__8620__auto__;
          }
        }());
      };
      var G__27009 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__27010__i = 0, G__27010__a = new Array(arguments.length - 3);
          while (G__27010__i < G__27010__a.length) {
            G__27010__a[G__27010__i] = arguments[G__27010__i + 3];
            ++G__27010__i;
          }
          args = new cljs.core.IndexedSeq(G__27010__a, 0);
        }
        return G__27009__delegate.call(this, x, y, z, args);
      };
      G__27009.cljs$lang$maxFixedArity = 3;
      G__27009.cljs$lang$applyTo = function(arglist__27011) {
        var x = cljs.core.first(arglist__27011);
        arglist__27011 = cljs.core.next(arglist__27011);
        var y = cljs.core.first(arglist__27011);
        arglist__27011 = cljs.core.next(arglist__27011);
        var z = cljs.core.first(arglist__27011);
        var args = cljs.core.rest(arglist__27011);
        return G__27009__delegate(x, y, z, args);
      };
      G__27009.cljs$core$IFn$_invoke$arity$variadic = G__27009__delegate;
      return G__27009;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__27012 = null;
          if (arguments.length > 3) {
            var G__27013__i = 0, G__27013__a = new Array(arguments.length - 3);
            while (G__27013__i < G__27013__a.length) {
              G__27013__a[G__27013__i] = arguments[G__27013__i + 3];
              ++G__27013__i;
            }
            G__27012 = new cljs.core.IndexedSeq(G__27013__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27012);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          var and__8620__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__8620__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__8620__auto____$1;
          }
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          var and__8620__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__8620__auto____$1)) {
            var and__8620__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__8620__auto____$2)) {
              var and__8620__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__8620__auto____$3)) {
                var and__8620__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__8620__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__8620__auto____$4;
                }
              } else {
                return and__8620__auto____$3;
              }
            } else {
              return and__8620__auto____$2;
            }
          } else {
            return and__8620__auto____$1;
          }
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__8620__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__8620__auto__)) {
          var and__8620__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__8620__auto____$1)) {
            var and__8620__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__8620__auto____$2)) {
              var and__8620__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__8620__auto____$3)) {
                var and__8620__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__8620__auto____$4)) {
                  var and__8620__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__8620__auto____$5)) {
                    var and__8620__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__8620__auto____$6)) {
                      var and__8620__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__8620__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__8620__auto____$7;
                      }
                    } else {
                      return and__8620__auto____$6;
                    }
                  } else {
                    return and__8620__auto____$5;
                  }
                } else {
                  return and__8620__auto____$4;
                }
              } else {
                return and__8620__auto____$3;
              }
            } else {
              return and__8620__auto____$2;
            }
          } else {
            return and__8620__auto____$1;
          }
        } else {
          return and__8620__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__27014__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__8620__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__8620__auto__)) {
            return cljs.core.every_QMARK_(function(and__8620__auto__) {
              return function(p1__26988_SHARP_) {
                var and__8620__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__26988_SHARP_) : p1.call(null, p1__26988_SHARP_);
                if (cljs.core.truth_(and__8620__auto____$1)) {
                  var and__8620__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__26988_SHARP_) : p2.call(null, p1__26988_SHARP_);
                  if (cljs.core.truth_(and__8620__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__26988_SHARP_) : p3.call(null, p1__26988_SHARP_);
                  } else {
                    return and__8620__auto____$2;
                  }
                } else {
                  return and__8620__auto____$1;
                }
              };
            }(and__8620__auto__), args);
          } else {
            return and__8620__auto__;
          }
        }());
      };
      var G__27014 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__27015__i = 0, G__27015__a = new Array(arguments.length - 3);
          while (G__27015__i < G__27015__a.length) {
            G__27015__a[G__27015__i] = arguments[G__27015__i + 3];
            ++G__27015__i;
          }
          args = new cljs.core.IndexedSeq(G__27015__a, 0);
        }
        return G__27014__delegate.call(this, x, y, z, args);
      };
      G__27014.cljs$lang$maxFixedArity = 3;
      G__27014.cljs$lang$applyTo = function(arglist__27016) {
        var x = cljs.core.first(arglist__27016);
        arglist__27016 = cljs.core.next(arglist__27016);
        var y = cljs.core.first(arglist__27016);
        arglist__27016 = cljs.core.next(arglist__27016);
        var z = cljs.core.first(arglist__27016);
        var args = cljs.core.rest(arglist__27016);
        return G__27014__delegate(x, y, z, args);
      };
      G__27014.cljs$core$IFn$_invoke$arity$variadic = G__27014__delegate;
      return G__27014;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__27017 = null;
          if (arguments.length > 3) {
            var G__27018__i = 0, G__27018__a = new Array(arguments.length - 3);
            while (G__27018__i < G__27018__a.length) {
              G__27018__a[G__27018__i] = arguments[G__27018__i + 3];
              ++G__27018__i;
            }
            G__27017 = new cljs.core.IndexedSeq(G__27018__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27017);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__26989_SHARP_) {
            return p1__26989_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26989_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__26989_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__26990_SHARP_) {
            var and__8620__auto__ = p1__26990_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26990_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__26990_SHARP_.call(null, x);
            if (cljs.core.truth_(and__8620__auto__)) {
              return p1__26990_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26990_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__26990_SHARP_.call(null, y);
            } else {
              return and__8620__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__26991_SHARP_) {
            var and__8620__auto__ = p1__26991_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26991_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__26991_SHARP_.call(null, x);
            if (cljs.core.truth_(and__8620__auto__)) {
              var and__8620__auto____$1 = p1__26991_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26991_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__26991_SHARP_.call(null, y);
              if (cljs.core.truth_(and__8620__auto____$1)) {
                return p1__26991_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26991_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__26991_SHARP_.call(null, z);
              } else {
                return and__8620__auto____$1;
              }
            } else {
              return and__8620__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__27019__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__8620__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__8620__auto__)) {
              return cljs.core.every_QMARK_(function(and__8620__auto__, ps__$1) {
                return function(p1__26992_SHARP_) {
                  return cljs.core.every_QMARK_(p1__26992_SHARP_, args);
                };
              }(and__8620__auto__, ps__$1), ps__$1);
            } else {
              return and__8620__auto__;
            }
          }());
        };
        var G__27019 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__27020__i = 0, G__27020__a = new Array(arguments.length - 3);
            while (G__27020__i < G__27020__a.length) {
              G__27020__a[G__27020__i] = arguments[G__27020__i + 3];
              ++G__27020__i;
            }
            args = new cljs.core.IndexedSeq(G__27020__a, 0);
          }
          return G__27019__delegate.call(this, x, y, z, args);
        };
        G__27019.cljs$lang$maxFixedArity = 3;
        G__27019.cljs$lang$applyTo = function(arglist__27021) {
          var x = cljs.core.first(arglist__27021);
          arglist__27021 = cljs.core.next(arglist__27021);
          var y = cljs.core.first(arglist__27021);
          arglist__27021 = cljs.core.next(arglist__27021);
          var z = cljs.core.first(arglist__27021);
          var args = cljs.core.rest(arglist__27021);
          return G__27019__delegate(x, y, z, args);
        };
        G__27019.cljs$core$IFn$_invoke$arity$variadic = G__27019__delegate;
        return G__27019;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__27022 = null;
            if (arguments.length > 3) {
              var G__27023__i = 0, G__27023__a = new Array(arguments.length - 3);
              while (G__27023__i < G__27023__a.length) {
                G__27023__a[G__27023__i] = arguments[G__27023__i + 3];
                ++G__27023__i;
              }
              G__27022 = new cljs.core.IndexedSeq(G__27023__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27022);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq26994) {
  var G__26995 = cljs.core.first(seq26994);
  var seq26994__$1 = cljs.core.next(seq26994);
  var G__26996 = cljs.core.first(seq26994__$1);
  var seq26994__$2 = cljs.core.next(seq26994__$1);
  var G__26997 = cljs.core.first(seq26994__$2);
  var seq26994__$3 = cljs.core.next(seq26994__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__26995, G__26996, G__26997, seq26994__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args27030 = [];
  var len__9707__auto___27037 = arguments.length;
  var i__9708__auto___27038 = 0;
  while (true) {
    if (i__9708__auto___27038 < len__9707__auto___27037) {
      args27030.push(arguments[i__9708__auto___27038]);
      var G__27039 = i__9708__auto___27038 + 1;
      i__9708__auto___27038 = G__27039;
      continue;
    } else {
    }
    break;
  }
  var G__27036 = args27030.length;
  switch(G__27036) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27030.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__8632__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__8632__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__27041__delegate = function(x, y, z, args) {
        var or__8632__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__27041 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__27042__i = 0, G__27042__a = new Array(arguments.length - 3);
          while (G__27042__i < G__27042__a.length) {
            G__27042__a[G__27042__i] = arguments[G__27042__i + 3];
            ++G__27042__i;
          }
          args = new cljs.core.IndexedSeq(G__27042__a, 0);
        }
        return G__27041__delegate.call(this, x, y, z, args);
      };
      G__27041.cljs$lang$maxFixedArity = 3;
      G__27041.cljs$lang$applyTo = function(arglist__27043) {
        var x = cljs.core.first(arglist__27043);
        arglist__27043 = cljs.core.next(arglist__27043);
        var y = cljs.core.first(arglist__27043);
        arglist__27043 = cljs.core.next(arglist__27043);
        var z = cljs.core.first(arglist__27043);
        var args = cljs.core.rest(arglist__27043);
        return G__27041__delegate(x, y, z, args);
      };
      G__27041.cljs$core$IFn$_invoke$arity$variadic = G__27041__delegate;
      return G__27041;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__27044 = null;
          if (arguments.length > 3) {
            var G__27045__i = 0, G__27045__a = new Array(arguments.length - 3);
            while (G__27045__i < G__27045__a.length) {
              G__27045__a[G__27045__i] = arguments[G__27045__i + 3];
              ++G__27045__i;
            }
            G__27044 = new cljs.core.IndexedSeq(G__27045__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27044);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__8632__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__8632__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          var or__8632__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__8632__auto____$2)) {
            return or__8632__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__8632__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          var or__8632__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__8632__auto____$2)) {
            return or__8632__auto____$2;
          } else {
            var or__8632__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__8632__auto____$3)) {
              return or__8632__auto____$3;
            } else {
              var or__8632__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__8632__auto____$4)) {
                return or__8632__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__27046__delegate = function(x, y, z, args) {
        var or__8632__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return cljs.core.some(function(or__8632__auto__) {
            return function(p1__27024_SHARP_) {
              var or__8632__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__27024_SHARP_) : p1.call(null, p1__27024_SHARP_);
              if (cljs.core.truth_(or__8632__auto____$1)) {
                return or__8632__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__27024_SHARP_) : p2.call(null, p1__27024_SHARP_);
              }
            };
          }(or__8632__auto__), args);
        }
      };
      var G__27046 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__27047__i = 0, G__27047__a = new Array(arguments.length - 3);
          while (G__27047__i < G__27047__a.length) {
            G__27047__a[G__27047__i] = arguments[G__27047__i + 3];
            ++G__27047__i;
          }
          args = new cljs.core.IndexedSeq(G__27047__a, 0);
        }
        return G__27046__delegate.call(this, x, y, z, args);
      };
      G__27046.cljs$lang$maxFixedArity = 3;
      G__27046.cljs$lang$applyTo = function(arglist__27048) {
        var x = cljs.core.first(arglist__27048);
        arglist__27048 = cljs.core.next(arglist__27048);
        var y = cljs.core.first(arglist__27048);
        arglist__27048 = cljs.core.next(arglist__27048);
        var z = cljs.core.first(arglist__27048);
        var args = cljs.core.rest(arglist__27048);
        return G__27046__delegate(x, y, z, args);
      };
      G__27046.cljs$core$IFn$_invoke$arity$variadic = G__27046__delegate;
      return G__27046;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__27049 = null;
          if (arguments.length > 3) {
            var G__27050__i = 0, G__27050__a = new Array(arguments.length - 3);
            while (G__27050__i < G__27050__a.length) {
              G__27050__a[G__27050__i] = arguments[G__27050__i + 3];
              ++G__27050__i;
            }
            G__27049 = new cljs.core.IndexedSeq(G__27050__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27049);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__8632__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__8632__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          var or__8632__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__8632__auto____$2)) {
            return or__8632__auto____$2;
          } else {
            var or__8632__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__8632__auto____$3)) {
              return or__8632__auto____$3;
            } else {
              var or__8632__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__8632__auto____$4)) {
                return or__8632__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__8632__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          var or__8632__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__8632__auto____$2)) {
            return or__8632__auto____$2;
          } else {
            var or__8632__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__8632__auto____$3)) {
              return or__8632__auto____$3;
            } else {
              var or__8632__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__8632__auto____$4)) {
                return or__8632__auto____$4;
              } else {
                var or__8632__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__8632__auto____$5)) {
                  return or__8632__auto____$5;
                } else {
                  var or__8632__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__8632__auto____$6)) {
                    return or__8632__auto____$6;
                  } else {
                    var or__8632__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__8632__auto____$7)) {
                      return or__8632__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__27051__delegate = function(x, y, z, args) {
        var or__8632__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return cljs.core.some(function(or__8632__auto__) {
            return function(p1__27025_SHARP_) {
              var or__8632__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__27025_SHARP_) : p1.call(null, p1__27025_SHARP_);
              if (cljs.core.truth_(or__8632__auto____$1)) {
                return or__8632__auto____$1;
              } else {
                var or__8632__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__27025_SHARP_) : p2.call(null, p1__27025_SHARP_);
                if (cljs.core.truth_(or__8632__auto____$2)) {
                  return or__8632__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__27025_SHARP_) : p3.call(null, p1__27025_SHARP_);
                }
              }
            };
          }(or__8632__auto__), args);
        }
      };
      var G__27051 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__27052__i = 0, G__27052__a = new Array(arguments.length - 3);
          while (G__27052__i < G__27052__a.length) {
            G__27052__a[G__27052__i] = arguments[G__27052__i + 3];
            ++G__27052__i;
          }
          args = new cljs.core.IndexedSeq(G__27052__a, 0);
        }
        return G__27051__delegate.call(this, x, y, z, args);
      };
      G__27051.cljs$lang$maxFixedArity = 3;
      G__27051.cljs$lang$applyTo = function(arglist__27053) {
        var x = cljs.core.first(arglist__27053);
        arglist__27053 = cljs.core.next(arglist__27053);
        var y = cljs.core.first(arglist__27053);
        arglist__27053 = cljs.core.next(arglist__27053);
        var z = cljs.core.first(arglist__27053);
        var args = cljs.core.rest(arglist__27053);
        return G__27051__delegate(x, y, z, args);
      };
      G__27051.cljs$core$IFn$_invoke$arity$variadic = G__27051__delegate;
      return G__27051;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__27054 = null;
          if (arguments.length > 3) {
            var G__27055__i = 0, G__27055__a = new Array(arguments.length - 3);
            while (G__27055__i < G__27055__a.length) {
              G__27055__a[G__27055__i] = arguments[G__27055__i + 3];
              ++G__27055__i;
            }
            G__27054 = new cljs.core.IndexedSeq(G__27055__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27054);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__27026_SHARP_) {
            return p1__27026_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27026_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__27026_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__27027_SHARP_) {
            var or__8632__auto__ = p1__27027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27027_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__27027_SHARP_.call(null, x);
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return p1__27027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27027_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__27027_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__27028_SHARP_) {
            var or__8632__auto__ = p1__27028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27028_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__27028_SHARP_.call(null, x);
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              var or__8632__auto____$1 = p1__27028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27028_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__27028_SHARP_.call(null, y);
              if (cljs.core.truth_(or__8632__auto____$1)) {
                return or__8632__auto____$1;
              } else {
                return p1__27028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27028_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__27028_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__27056__delegate = function(x, y, z, args) {
          var or__8632__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            return cljs.core.some(function(or__8632__auto__, ps__$1) {
              return function(p1__27029_SHARP_) {
                return cljs.core.some(p1__27029_SHARP_, args);
              };
            }(or__8632__auto__, ps__$1), ps__$1);
          }
        };
        var G__27056 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__27057__i = 0, G__27057__a = new Array(arguments.length - 3);
            while (G__27057__i < G__27057__a.length) {
              G__27057__a[G__27057__i] = arguments[G__27057__i + 3];
              ++G__27057__i;
            }
            args = new cljs.core.IndexedSeq(G__27057__a, 0);
          }
          return G__27056__delegate.call(this, x, y, z, args);
        };
        G__27056.cljs$lang$maxFixedArity = 3;
        G__27056.cljs$lang$applyTo = function(arglist__27058) {
          var x = cljs.core.first(arglist__27058);
          arglist__27058 = cljs.core.next(arglist__27058);
          var y = cljs.core.first(arglist__27058);
          arglist__27058 = cljs.core.next(arglist__27058);
          var z = cljs.core.first(arglist__27058);
          var args = cljs.core.rest(arglist__27058);
          return G__27056__delegate(x, y, z, args);
        };
        G__27056.cljs$core$IFn$_invoke$arity$variadic = G__27056__delegate;
        return G__27056;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__27059 = null;
            if (arguments.length > 3) {
              var G__27060__i = 0, G__27060__a = new Array(arguments.length - 3);
              while (G__27060__i < G__27060__a.length) {
                G__27060__a[G__27060__i] = arguments[G__27060__i + 3];
                ++G__27060__i;
              }
              G__27059 = new cljs.core.IndexedSeq(G__27060__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__27059);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq27031) {
  var G__27032 = cljs.core.first(seq27031);
  var seq27031__$1 = cljs.core.next(seq27031);
  var G__27033 = cljs.core.first(seq27031__$1);
  var seq27031__$2 = cljs.core.next(seq27031__$1);
  var G__27034 = cljs.core.first(seq27031__$2);
  var seq27031__$3 = cljs.core.next(seq27031__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__27032, G__27033, G__27034, seq27031__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args27062 = [];
  var len__9707__auto___27082 = arguments.length;
  var i__9708__auto___27083 = 0;
  while (true) {
    if (i__9708__auto___27083 < len__9707__auto___27082) {
      args27062.push(arguments[i__9708__auto___27083]);
      var G__27084 = i__9708__auto___27083 + 1;
      i__9708__auto___27083 = G__27084;
      continue;
    } else {
    }
    break;
  }
  var G__27069 = args27062.length;
  switch(G__27069) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27062.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9726__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__27086 = null;
      var G__27086__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__27086__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__27086__2 = function(result, input) {
        var G__27070 = result;
        var G__27071 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27070, G__27071) : rf.call(null, G__27070, G__27071);
      };
      var G__27086__3 = function() {
        var G__27087__delegate = function(result, input, inputs) {
          var G__27072 = result;
          var G__27073 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27072, G__27073) : rf.call(null, G__27072, G__27073);
        };
        var G__27087 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__27088__i = 0, G__27088__a = new Array(arguments.length - 2);
            while (G__27088__i < G__27088__a.length) {
              G__27088__a[G__27088__i] = arguments[G__27088__i + 2];
              ++G__27088__i;
            }
            inputs = new cljs.core.IndexedSeq(G__27088__a, 0);
          }
          return G__27087__delegate.call(this, result, input, inputs);
        };
        G__27087.cljs$lang$maxFixedArity = 2;
        G__27087.cljs$lang$applyTo = function(arglist__27089) {
          var result = cljs.core.first(arglist__27089);
          arglist__27089 = cljs.core.next(arglist__27089);
          var input = cljs.core.first(arglist__27089);
          var inputs = cljs.core.rest(arglist__27089);
          return G__27087__delegate(result, input, inputs);
        };
        G__27087.cljs$core$IFn$_invoke$arity$variadic = G__27087__delegate;
        return G__27087;
      }();
      G__27086 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__27086__0.call(this);
          case 1:
            return G__27086__1.call(this, result);
          case 2:
            return G__27086__2.call(this, result, input);
          default:
            var G__27090 = null;
            if (arguments.length > 2) {
              var G__27091__i = 0, G__27091__a = new Array(arguments.length - 2);
              while (G__27091__i < G__27091__a.length) {
                G__27091__a[G__27091__i] = arguments[G__27091__i + 2];
                ++G__27091__i;
              }
              G__27090 = new cljs.core.IndexedSeq(G__27091__a, 0);
            }
            return G__27086__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__27090);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__27086.cljs$lang$maxFixedArity = 2;
      G__27086.cljs$lang$applyTo = G__27086__3.cljs$lang$applyTo;
      G__27086.cljs$core$IFn$_invoke$arity$0 = G__27086__0;
      G__27086.cljs$core$IFn$_invoke$arity$1 = G__27086__1;
      G__27086.cljs$core$IFn$_invoke$arity$2 = G__27086__2;
      G__27086.cljs$core$IFn$_invoke$arity$variadic = G__27086__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__27086;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__9547__auto___27092 = size;
        var i_27093 = 0;
        while (true) {
          if (i_27093 < n__9547__auto___27092) {
            cljs.core.chunk_append(b, function() {
              var G__27074 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_27093);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27074) : f.call(null, G__27074);
            }());
            var G__27094 = i_27093 + 1;
            i_27093 = G__27094;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__27075 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27075) : f.call(null, G__27075);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__27076 = cljs.core.first(s1);
        var G__27077 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27076, G__27077) : f.call(null, G__27076, G__27077);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__27078 = cljs.core.first(s1);
        var G__27079 = cljs.core.first(s2);
        var G__27080 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27078, G__27079, G__27080) : f.call(null, G__27078, G__27079, G__27080);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__27061_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__27061_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq27063) {
  var G__27064 = cljs.core.first(seq27063);
  var seq27063__$1 = cljs.core.next(seq27063);
  var G__27065 = cljs.core.first(seq27063__$1);
  var seq27063__$2 = cljs.core.next(seq27063__$1);
  var G__27066 = cljs.core.first(seq27063__$2);
  var seq27063__$3 = cljs.core.next(seq27063__$2);
  var G__27067 = cljs.core.first(seq27063__$3);
  var seq27063__$4 = cljs.core.next(seq27063__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__27064, G__27065, G__27066, G__27067, seq27063__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args27095 = [];
  var len__9707__auto___27098 = arguments.length;
  var i__9708__auto___27099 = 0;
  while (true) {
    if (i__9708__auto___27099 < len__9707__auto___27098) {
      args27095.push(arguments[i__9708__auto___27099]);
      var G__27100 = i__9708__auto___27099 + 1;
      i__9708__auto___27099 = G__27100;
      continue;
    } else {
    }
    break;
  }
  var G__27097 = args27095.length;
  switch(G__27097) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27095.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__27102 = null;
        var G__27102__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__27102__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__27102__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__27102 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__27102__0.call(this);
            case 1:
              return G__27102__1.call(this, result);
            case 2:
              return G__27102__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__27102.cljs$core$IFn$_invoke$arity$0 = G__27102__0;
        G__27102.cljs$core$IFn$_invoke$arity$1 = G__27102__1;
        G__27102.cljs$core$IFn$_invoke$arity$2 = G__27102__2;
        return G__27102;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args27103 = [];
  var len__9707__auto___27106 = arguments.length;
  var i__9708__auto___27107 = 0;
  while (true) {
    if (i__9708__auto___27107 < len__9707__auto___27106) {
      args27103.push(arguments[i__9708__auto___27107]);
      var G__27108 = i__9708__auto___27107 + 1;
      i__9708__auto___27107 = G__27108;
      continue;
    } else {
    }
    break;
  }
  var G__27105 = args27103.length;
  switch(G__27105) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27103.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__27110 = null;
        var G__27110__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__27110__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__27110__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__27110 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__27110__0.call(this);
            case 1:
              return G__27110__1.call(this, result);
            case 2:
              return G__27110__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__27110.cljs$core$IFn$_invoke$arity$0 = G__27110__0;
        G__27110.cljs$core$IFn$_invoke$arity$1 = G__27110__1;
        G__27110.cljs$core$IFn$_invoke$arity$2 = G__27110__2;
        return G__27110;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__27111 = n__$1 - 1;
        var G__27112 = cljs.core.rest(s);
        n__$1 = G__27111;
        coll__$1 = G__27112;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args27113 = [];
  var len__9707__auto___27116 = arguments.length;
  var i__9708__auto___27117 = 0;
  while (true) {
    if (i__9708__auto___27117 < len__9707__auto___27116) {
      args27113.push(arguments[i__9708__auto___27117]);
      var G__27118 = i__9708__auto___27117 + 1;
      i__9708__auto___27117 = G__27118;
      continue;
    } else {
    }
    break;
  }
  var G__27115 = args27113.length;
  switch(G__27115) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27113.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__27120 = cljs.core.next(s);
      var G__27121 = cljs.core.next(lead);
      s = G__27120;
      lead = G__27121;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args27122 = [];
  var len__9707__auto___27127 = arguments.length;
  var i__9708__auto___27128 = 0;
  while (true) {
    if (i__9708__auto___27128 < len__9707__auto___27127) {
      args27122.push(arguments[i__9708__auto___27128]);
      var G__27129 = i__9708__auto___27128 + 1;
      i__9708__auto___27128 = G__27129;
      continue;
    } else {
    }
    break;
  }
  var G__27124 = args27122.length;
  switch(G__27124) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27122.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__27131 = null;
        var G__27131__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__27131__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__27131__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__8620__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__8620__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__8620__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__27131 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__27131__0.call(this);
            case 1:
              return G__27131__1.call(this, result);
            case 2:
              return G__27131__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__27131.cljs$core$IFn$_invoke$arity$0 = G__27131__0;
        G__27131.cljs$core$IFn$_invoke$arity$1 = G__27131__1;
        G__27131.cljs$core$IFn$_invoke$arity$2 = G__27131__2;
        return G__27131;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__8620__auto__ = s;
        if (and__8620__auto__) {
          var G__27126 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__27126) : pred__$1.call(null, G__27126);
        } else {
          return and__8620__auto__;
        }
      }())) {
        var G__27132 = pred__$1;
        var G__27133 = cljs.core.rest(s);
        pred__$1 = G__27132;
        coll__$1 = G__27133;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args27134 = [];
  var len__9707__auto___27137 = arguments.length;
  var i__9708__auto___27138 = 0;
  while (true) {
    if (i__9708__auto___27138 < len__9707__auto___27137) {
      args27134.push(arguments[i__9708__auto___27138]);
      var G__27139 = i__9708__auto___27138 + 1;
      i__9708__auto___27138 = G__27139;
      continue;
    } else {
    }
    break;
  }
  var G__27136 = args27134.length;
  switch(G__27136) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27134.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args27141 = [];
  var len__9707__auto___27144 = arguments.length;
  var i__9708__auto___27145 = 0;
  while (true) {
    if (i__9708__auto___27145 < len__9707__auto___27144) {
      args27141.push(arguments[i__9708__auto___27145]);
      var G__27146 = i__9708__auto___27145 + 1;
      i__9708__auto___27145 = G__27146;
      continue;
    } else {
    }
    break;
  }
  var G__27143 = args27141.length;
  switch(G__27143) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27141.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args27150 = [];
  var len__9707__auto___27156 = arguments.length;
  var i__9708__auto___27157 = 0;
  while (true) {
    if (i__9708__auto___27157 < len__9707__auto___27156) {
      args27150.push(arguments[i__9708__auto___27157]);
      var G__27158 = i__9708__auto___27157 + 1;
      i__9708__auto___27157 = G__27158;
      continue;
    } else {
    }
    break;
  }
  var G__27155 = args27150.length;
  switch(G__27155) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27150.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq27151) {
  var G__27152 = cljs.core.first(seq27151);
  var seq27151__$1 = cljs.core.next(seq27151);
  var G__27153 = cljs.core.first(seq27151__$1);
  var seq27151__$2 = cljs.core.next(seq27151__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__27152, G__27153, seq27151__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args27160 = [];
  var len__9707__auto___27163 = arguments.length;
  var i__9708__auto___27164 = 0;
  while (true) {
    if (i__9708__auto___27164 < len__9707__auto___27163) {
      args27160.push(arguments[i__9708__auto___27164]);
      var G__27165 = i__9708__auto___27164 + 1;
      i__9708__auto___27164 = G__27165;
      continue;
    } else {
    }
    break;
  }
  var G__27162 = args27160.length;
  switch(G__27162) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27160.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__27167 = null;
        var G__27167__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__27167__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__27167__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__27167 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__27167__0.call(this);
            case 1:
              return G__27167__1.call(this, result);
            case 2:
              return G__27167__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__27167.cljs$core$IFn$_invoke$arity$0 = G__27167__0;
        G__27167.cljs$core$IFn$_invoke$arity$1 = G__27167__1;
        G__27167.cljs$core$IFn$_invoke$arity$2 = G__27167__2;
        return G__27167;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args27176 = [];
  var len__9707__auto___27181 = arguments.length;
  var i__9708__auto___27182 = 0;
  while (true) {
    if (i__9708__auto___27182 < len__9707__auto___27181) {
      args27176.push(arguments[i__9708__auto___27182]);
      var G__27183 = i__9708__auto___27182 + 1;
      i__9708__auto___27182 = G__27183;
      continue;
    } else {
    }
    break;
  }
  var G__27180 = args27176.length;
  switch(G__27180) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27176.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9726__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq27177) {
  var G__27178 = cljs.core.first(seq27177);
  var seq27177__$1 = cljs.core.next(seq27177);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__27178, seq27177__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args27185 = [];
  var len__9707__auto___27189 = arguments.length;
  var i__9708__auto___27190 = 0;
  while (true) {
    if (i__9708__auto___27190 < len__9707__auto___27189) {
      args27185.push(arguments[i__9708__auto___27190]);
      var G__27191 = i__9708__auto___27190 + 1;
      i__9708__auto___27190 = G__27191;
      continue;
    } else {
    }
    break;
  }
  var G__27187 = args27185.length;
  switch(G__27187) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27185.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__27193 = null;
      var G__27193__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__27193__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__27193__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__27193 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__27193__0.call(this);
          case 1:
            return G__27193__1.call(this, result);
          case 2:
            return G__27193__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__27193.cljs$core$IFn$_invoke$arity$0 = G__27193__0;
      G__27193.cljs$core$IFn$_invoke$arity$1 = G__27193__1;
      G__27193.cljs$core$IFn$_invoke$arity$2 = G__27193__2;
      return G__27193;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__9547__auto___27194 = size;
        var i_27195 = 0;
        while (true) {
          if (i_27195 < n__9547__auto___27194) {
            if (cljs.core.truth_(function() {
              var G__27188 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_27195);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27188) : pred.call(null, G__27188);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_27195));
            } else {
            }
            var G__27196 = i_27195 + 1;
            i_27195 = G__27196;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args27197 = [];
  var len__9707__auto___27200 = arguments.length;
  var i__9708__auto___27201 = 0;
  while (true) {
    if (i__9708__auto___27201 < len__9707__auto___27200) {
      args27197.push(arguments[i__9708__auto___27201]);
      var G__27202 = i__9708__auto___27201 + 1;
      i__9708__auto___27201 = G__27202;
      continue;
    } else {
    }
    break;
  }
  var G__27199 = args27197.length;
  switch(G__27199) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27197.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__27204_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__27204_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args27205 = [];
  var len__9707__auto___27210 = arguments.length;
  var i__9708__auto___27211 = 0;
  while (true) {
    if (i__9708__auto___27211 < len__9707__auto___27210) {
      args27205.push(arguments[i__9708__auto___27211]);
      var G__27212 = i__9708__auto___27211 + 1;
      i__9708__auto___27211 = G__27212;
      continue;
    } else {
    }
    break;
  }
  var G__27207 = args27205.length;
  switch(G__27207) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27205.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args27214 = [];
  var len__9707__auto___27222 = arguments.length;
  var i__9708__auto___27223 = 0;
  while (true) {
    if (i__9708__auto___27223 < len__9707__auto___27222) {
      args27214.push(arguments[i__9708__auto___27223]);
      var G__27224 = i__9708__auto___27223 + 1;
      i__9708__auto___27223 = G__27224;
      continue;
    } else {
    }
    break;
  }
  var G__27221 = args27214.length;
  switch(G__27221) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27214.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9726__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq27215) {
  var G__27216 = cljs.core.first(seq27215);
  var seq27215__$1 = cljs.core.next(seq27215);
  var G__27217 = cljs.core.first(seq27215__$1);
  var seq27215__$2 = cljs.core.next(seq27215__$1);
  var G__27218 = cljs.core.first(seq27215__$2);
  var seq27215__$3 = cljs.core.next(seq27215__$2);
  var G__27219 = cljs.core.first(seq27215__$3);
  var seq27215__$4 = cljs.core.next(seq27215__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__27216, G__27217, G__27218, G__27219, seq27215__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args27226 = [];
  var len__9707__auto___27229 = arguments.length;
  var i__9708__auto___27230 = 0;
  while (true) {
    if (i__9708__auto___27230 < len__9707__auto___27229) {
      args27226.push(arguments[i__9708__auto___27230]);
      var G__27231 = i__9708__auto___27230 + 1;
      i__9708__auto___27230 = G__27231;
      continue;
    } else {
    }
    break;
  }
  var G__27228 = args27226.length;
  switch(G__27228) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27226.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        var x__9466__auto__ = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad));
        return cljs.core._conj(cljs.core.List.EMPTY, x__9466__auto__);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args27233 = [];
  var len__9707__auto___27236 = arguments.length;
  var i__9708__auto___27237 = 0;
  while (true) {
    if (i__9708__auto___27237 < len__9707__auto___27236) {
      args27233.push(arguments[i__9708__auto___27237]);
      var G__27238 = i__9708__auto___27237 + 1;
      i__9708__auto___27237 = G__27238;
      continue;
    } else {
    }
    break;
  }
  var G__27235 = args27233.length;
  switch(G__27235) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27233.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__27240 = sentinel;
        var G__27241 = m__$2;
        var G__27242 = cljs.core.next(ks__$1);
        sentinel = G__27240;
        m__$1 = G__27241;
        ks__$1 = G__27242;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__27243, v) {
  var vec__27250 = p__27243;
  var seq__27251 = cljs.core.seq(vec__27250);
  var first__27252 = cljs.core.first(seq__27251);
  var seq__27251__$1 = cljs.core.next(seq__27251);
  var k = first__27252;
  var ks = seq__27251__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args27253 = [];
  var len__9707__auto___27293 = arguments.length;
  var i__9708__auto___27294 = 0;
  while (true) {
    if (i__9708__auto___27294 < len__9707__auto___27293) {
      args27253.push(arguments[i__9708__auto___27294]);
      var G__27295 = i__9708__auto___27294 + 1;
      i__9708__auto___27294 = G__27295;
      continue;
    } else {
    }
    break;
  }
  var G__27262 = args27253.length;
  switch(G__27262) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27253.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__9726__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__27263, f) {
  var vec__27264 = p__27263;
  var seq__27265 = cljs.core.seq(vec__27264);
  var first__27266 = cljs.core.first(seq__27265);
  var seq__27265__$1 = cljs.core.next(seq__27265);
  var k = first__27266;
  var ks = seq__27265__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__27267 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27267) : f.call(null, G__27267);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__27268, f, a) {
  var vec__27269 = p__27268;
  var seq__27270 = cljs.core.seq(vec__27269);
  var first__27271 = cljs.core.first(seq__27270);
  var seq__27270__$1 = cljs.core.next(seq__27270);
  var k = first__27271;
  var ks = seq__27270__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__27272 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__27273 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27272, G__27273) : f.call(null, G__27272, G__27273);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__27274, f, a, b) {
  var vec__27275 = p__27274;
  var seq__27276 = cljs.core.seq(vec__27275);
  var first__27277 = cljs.core.first(seq__27276);
  var seq__27276__$1 = cljs.core.next(seq__27276);
  var k = first__27277;
  var ks = seq__27276__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__27278 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__27279 = a;
      var G__27280 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27278, G__27279, G__27280) : f.call(null, G__27278, G__27279, G__27280);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__27281, f, a, b, c) {
  var vec__27282 = p__27281;
  var seq__27283 = cljs.core.seq(vec__27282);
  var first__27284 = cljs.core.first(seq__27283);
  var seq__27283__$1 = cljs.core.next(seq__27283);
  var k = first__27284;
  var ks = seq__27283__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__27285 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__27286 = a;
      var G__27287 = b;
      var G__27288 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27285, G__27286, G__27287, G__27288) : f.call(null, G__27285, G__27286, G__27287, G__27288);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__27289, f, a, b, c, args) {
  var vec__27290 = p__27289;
  var seq__27291 = cljs.core.seq(vec__27290);
  var first__27292 = cljs.core.first(seq__27291);
  var seq__27291__$1 = cljs.core.next(seq__27291);
  var k = first__27292;
  var ks = seq__27291__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq27254) {
  var G__27255 = cljs.core.first(seq27254);
  var seq27254__$1 = cljs.core.next(seq27254);
  var G__27256 = cljs.core.first(seq27254__$1);
  var seq27254__$2 = cljs.core.next(seq27254__$1);
  var G__27257 = cljs.core.first(seq27254__$2);
  var seq27254__$3 = cljs.core.next(seq27254__$2);
  var G__27258 = cljs.core.first(seq27254__$3);
  var seq27254__$4 = cljs.core.next(seq27254__$3);
  var G__27259 = cljs.core.first(seq27254__$4);
  var seq27254__$5 = cljs.core.next(seq27254__$4);
  var G__27260 = cljs.core.first(seq27254__$5);
  var seq27254__$6 = cljs.core.next(seq27254__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__27255, G__27256, G__27257, G__27258, G__27259, G__27260, seq27254__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args27297 = [];
  var len__9707__auto___27317 = arguments.length;
  var i__9708__auto___27318 = 0;
  while (true) {
    if (i__9708__auto___27318 < len__9707__auto___27317) {
      args27297.push(arguments[i__9708__auto___27318]);
      var G__27319 = i__9708__auto___27318 + 1;
      i__9708__auto___27318 = G__27319;
      continue;
    } else {
    }
    break;
  }
  var G__27306 = args27297.length;
  switch(G__27306) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27297.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__9726__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__27307 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27307) : f.call(null, G__27307);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__27308 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__27309 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27308, G__27309) : f.call(null, G__27308, G__27309);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__27310 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__27311 = x;
    var G__27312 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27310, G__27311, G__27312) : f.call(null, G__27310, G__27311, G__27312);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__27313 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__27314 = x;
    var G__27315 = y;
    var G__27316 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27313, G__27314, G__27315, G__27316) : f.call(null, G__27313, G__27314, G__27315, G__27316);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq27298) {
  var G__27299 = cljs.core.first(seq27298);
  var seq27298__$1 = cljs.core.next(seq27298);
  var G__27300 = cljs.core.first(seq27298__$1);
  var seq27298__$2 = cljs.core.next(seq27298__$1);
  var G__27301 = cljs.core.first(seq27298__$2);
  var seq27298__$3 = cljs.core.next(seq27298__$2);
  var G__27302 = cljs.core.first(seq27298__$3);
  var seq27298__$4 = cljs.core.next(seq27298__$3);
  var G__27303 = cljs.core.first(seq27298__$4);
  var seq27298__$5 = cljs.core.next(seq27298__$4);
  var G__27304 = cljs.core.first(seq27298__$5);
  var seq27298__$6 = cljs.core.next(seq27298__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__27299, G__27300, G__27301, G__27302, G__27303, G__27304, seq27298__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__27321 = ll - 5;
      var G__27322 = r;
      ll = G__27321;
      ret = G__27322;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__27327 = cljs.core.pv_aget(node, 0);
      var G__27328 = level - 5;
      node = G__27327;
      level = G__27328;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__27329 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__27330 = level - 5;
        node = G__27329;
        level = G__27330;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__27349 = null;
  var G__27349__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27349__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27349 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27349__1.call(this, x);
      case 2:
        return G__27349__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27349.cljs$core$IFn$_invoke$arity$1 = G__27349__1;
  G__27349.cljs$core$IFn$_invoke$arity$2 = G__27349__2;
  return G__27349;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__27350 = null;
  var G__27350__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27350__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27350 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27350__1.call(this, x);
      case 2:
        return G__27350__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27350.cljs$core$IFn$_invoke$arity$1 = G__27350__1;
  G__27350.cljs$core$IFn$_invoke$arity$2 = G__27350__2;
  return G__27350;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__27340 = init__$2;
              var G__27341 = j + i;
              var G__27342 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27340, G__27341, G__27342) : f.call(null, G__27340, G__27341, G__27342);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__27351 = j + 1;
              var G__27352 = init__$3;
              j = G__27351;
              init__$2 = G__27352;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__27353 = i + len;
        var G__27354 = init__$2;
        i = G__27353;
        init__$1 = G__27354;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__27343 = init__$2;
              var G__27344 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27343, G__27344) : f.call(null, G__27343, G__27344);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__27355 = j + 1;
              var G__27356 = init__$3;
              j = G__27355;
              init__$2 = G__27356;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__27357 = i + len;
        var G__27358 = init__$2;
        i = G__27357;
        init__$1 = G__27358;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__27345 = coll__$1;
      var G__27346 = cljs.core.first_array_for_longvec(coll__$1);
      var G__27347 = 0;
      var G__27348 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27345, G__27346, G__27347, G__27348) : cljs.core.chunked_seq.call(null, G__27345, G__27346, G__27347, G__27348);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__9547__auto___27359 = len;
    var i_27360 = 0;
    while (true) {
      if (i_27360 < n__9547__auto___27359) {
        new_tail[i_27360] = self__.tail[i_27360];
        var G__27361 = i_27360 + 1;
        i_27360 = G__27361;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__27362 = null;
  var G__27362__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__27362__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__27362 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27362__2.call(this, self__, k);
      case 3:
        return G__27362__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27362.cljs$core$IFn$_invoke$arity$2 = G__27362__2;
  G__27362.cljs$core$IFn$_invoke$arity$3 = G__27362__3;
  return G__27362;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args27339) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27339)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__27363 = i + 1;
        var G__27364 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__27363;
        out = G__27364;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27366 = arguments.length;
  var i__9708__auto___27367 = 0;
  while (true) {
    if (i__9708__auto___27367 < len__9707__auto___27366) {
      args__9714__auto__.push(arguments[i__9708__auto___27367]);
      var G__27368 = i__9708__auto___27367 + 1;
      i__9708__auto___27367 = G__27368;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq27365) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27365));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__27391 = null;
  var G__27391__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27391__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27391 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27391__1.call(this, x);
      case 2:
        return G__27391__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27391.cljs$core$IFn$_invoke$arity$1 = G__27391__1;
  G__27391.cljs$core$IFn$_invoke$arity$2 = G__27391__2;
  return G__27391;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__27392 = null;
  var G__27392__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27392__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27392 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27392__1.call(this, x);
      case 2:
        return G__27392__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27392.cljs$core$IFn$_invoke$arity$1 = G__27392__1;
  G__27392.cljs$core$IFn$_invoke$arity$2 = G__27392__2;
  return G__27392;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__27369 = self__.vec;
      var G__27370 = self__.node;
      var G__27371 = self__.i;
      var G__27372 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27369, G__27370, G__27371, G__27372) : cljs.core.chunked_seq.call(null, G__27369, G__27370, G__27371, G__27372);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__27373 = self__.vec;
    var G__27374 = self__.i + self__.off;
    var G__27375 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27373, G__27374, G__27375) : cljs.core.subvec.call(null, G__27373, G__27374, G__27375);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__27376 = self__.vec;
    var G__27377 = self__.i + self__.off;
    var G__27378 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27376, G__27377, G__27378) : cljs.core.subvec.call(null, G__27376, G__27377, G__27378);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__27379 = self__.vec;
      var G__27380 = self__.node;
      var G__27381 = self__.i;
      var G__27382 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27379, G__27380, G__27381, G__27382) : cljs.core.chunked_seq.call(null, G__27379, G__27380, G__27381, G__27382);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__27383 = self__.vec;
    var G__27384 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__27385 = end;
    var G__27386 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27383, G__27384, G__27385, G__27386) : cljs.core.chunked_seq.call(null, G__27383, G__27384, G__27385, G__27386);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__27387 = self__.vec;
    var G__27388 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__27389 = end;
    var G__27390 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27387, G__27388, G__27389, G__27390) : cljs.core.chunked_seq.call(null, G__27387, G__27388, G__27389, G__27390);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args27393 = [];
  var len__9707__auto___27396 = arguments.length;
  var i__9708__auto___27397 = 0;
  while (true) {
    if (i__9708__auto___27397 < len__9707__auto___27396) {
      args27393.push(arguments[i__9708__auto___27397]);
      var G__27398 = i__9708__auto___27397 + 1;
      i__9708__auto___27397 = G__27398;
      continue;
    } else {
    }
    break;
  }
  var G__27395 = args27393.length;
  switch(G__27395) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27393.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__27420 = null;
  var G__27420__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27420__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__27420 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__27420__1.call(this, x);
      case 2:
        return G__27420__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27420.cljs$core$IFn$_invoke$arity$1 = G__27420__1;
  G__27420.cljs$core$IFn$_invoke$arity$2 = G__27420__2;
  return G__27420;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__27421 = null;
  var G__27421__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27421__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__27421 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__27421__1.call(this, x);
      case 2:
        return G__27421__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27421.cljs$core$IFn$_invoke$arity$1 = G__27421__1;
  G__27421.cljs$core$IFn$_invoke$arity$2 = G__27421__2;
  return G__27421;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__27401 = init__$1;
        var G__27402 = j;
        var G__27403 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27401, G__27402, G__27403) : f.call(null, G__27401, G__27402, G__27403);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__27422 = i + 1;
        var G__27423 = j + 1;
        var G__27424 = init__$2;
        i = G__27422;
        j = G__27423;
        init__$1 = G__27424;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__27404 = self__.meta;
  var G__27405 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__27406 = self__.start;
  var G__27407 = function() {
    var x__8963__auto__ = self__.end;
    var y__8964__auto__ = v_pos + 1;
    return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
  }();
  var G__27408 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27404, G__27405, G__27406, G__27407, G__27408) : cljs.core.build_subvec.call(null, G__27404, G__27405, G__27406, G__27407, G__27408);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__27409 = self__.meta;
    var G__27410 = self__.v;
    var G__27411 = self__.start;
    var G__27412 = self__.end - 1;
    var G__27413 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27409, G__27410, G__27411, G__27412, G__27413) : cljs.core.build_subvec.call(null, G__27409, G__27410, G__27411, G__27412, G__27413);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__27415 = self__.meta;
  var G__27416 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__27417 = self__.start;
  var G__27418 = self__.end + 1;
  var G__27419 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27415, G__27416, G__27417, G__27418, G__27419) : cljs.core.build_subvec.call(null, G__27415, G__27416, G__27417, G__27418, G__27419);
};
cljs.core.Subvec.prototype.call = function() {
  var G__27425 = null;
  var G__27425__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__27425__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__27425 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27425__2.call(this, self__, k);
      case 3:
        return G__27425__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27425.cljs$core$IFn$_invoke$arity$2 = G__27425__2;
  G__27425.cljs$core$IFn$_invoke$arity$3 = G__27425__3;
  return G__27425;
}();
cljs.core.Subvec.prototype.apply = function(self__, args27400) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27400)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__27426 = meta;
      var G__27427 = v.v;
      var G__27428 = v.start + start;
      var G__27429 = v.start + end;
      var G__27430 = __hash;
      meta = G__27426;
      v = G__27427;
      start = G__27428;
      end = G__27429;
      __hash = G__27430;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args27431 = [];
  var len__9707__auto___27434 = arguments.length;
  var i__9708__auto___27435 = 0;
  while (true) {
    if (i__9708__auto___27435 < len__9707__auto___27434) {
      args27431.push(arguments[i__9708__auto___27435]);
      var G__27436 = i__9708__auto___27435 + 1;
      i__9708__auto___27435 = G__27436;
      continue;
    } else {
    }
    break;
  }
  var G__27433 = args27431.length;
  switch(G__27433) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27431.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__27449 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__27450 = level - 5;
        node = G__27449;
        level = G__27450;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__27454 = null;
  var G__27454__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27454__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27454 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27454__2.call(this, self__, k);
      case 3:
        return G__27454__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27454.cljs$core$IFn$_invoke$arity$2 = G__27454__2;
  G__27454.cljs$core$IFn$_invoke$arity$3 = G__27454__3;
  return G__27454;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args27451) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27451)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__8632__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__8632__auto__) {
    return or__8632__auto__;
  } else {
    var and__8620__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__8620__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__8620__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__27455 = null;
  var G__27455__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27455__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27455 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27455__1.call(this, x);
      case 2:
        return G__27455__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27455.cljs$core$IFn$_invoke$arity$1 = G__27455__1;
  G__27455.cljs$core$IFn$_invoke$arity$2 = G__27455__2;
  return G__27455;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__27456 = null;
  var G__27456__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27456__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27456 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27456__1.call(this, x);
      case 2:
        return G__27456__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27456.cljs$core$IFn$_invoke$arity$1 = G__27456__1;
  G__27456.cljs$core$IFn$_invoke$arity$2 = G__27456__2;
  return G__27456;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__27457 = null;
  var G__27457__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27457__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27457 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27457__1.call(this, x);
      case 2:
        return G__27457__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27457.cljs$core$IFn$_invoke$arity$1 = G__27457__1;
  G__27457.cljs$core$IFn$_invoke$arity$2 = G__27457__2;
  return G__27457;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__27458 = null;
  var G__27458__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__27458__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27458 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27458__1.call(this, x);
      case 2:
        return G__27458__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27458.cljs$core$IFn$_invoke$arity$1 = G__27458__1;
  G__27458.cljs$core$IFn$_invoke$arity$2 = G__27458__2;
  return G__27458;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__8632__auto__ = self__.front;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__8632__auto__ = self__.rear;
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__27459 = i + incr;
        i = G__27459;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__27460 = i + 1;
      var G__27461 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__27460;
      out = G__27461;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_27466 = 0;
  while (true) {
    if (i_27466 < l) {
      var k_27467 = ks[i_27466];
      new_obj[k_27467] = obj[k_27467];
      var G__27468 = i_27466 + 1;
      i_27466 = G__27468;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__27471 = init__$1;
        var G__27472 = k;
        var G__27473 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27471, G__27472, G__27473) : f.call(null, G__27471, G__27472, G__27473);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__27474 = cljs.core.rest(keys__$1);
        var G__27475 = init__$2;
        keys__$1 = G__27474;
        init__$1 = G__27475;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__27469_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__27469_SHARP_, self__.strobj[p1__27469_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__27476 = null;
  var G__27476__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27476__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27476 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27476__2.call(this, self__, k);
      case 3:
        return G__27476__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27476.cljs$core$IFn$_invoke$arity$2 = G__27476__2;
  G__27476.cljs$core$IFn$_invoke$arity$3 = G__27476__3;
  return G__27476;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args27470) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27470)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__8632__auto__ = self__.i < self__.base_count;
  if (or__8632__auto__) {
    return or__8632__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__27479 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27479, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27479, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__27482 = i + 2;
        i = G__27482;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__27483 = i + 2;
        i = G__27483;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__27484 = i + 2;
        i = G__27484;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__27485 = i + 2;
        i = G__27485;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__27486 = i + 2;
        i = G__27486;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_27487 = 0;
  while (true) {
    if (i_27487 < l) {
      narr[i_27487] = arr[i_27487];
      var G__27488 = i_27487 + 1;
      i_27487 = G__27488;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__27489 = null;
  var G__27489__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27489__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27489 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27489__1.call(this, x);
      case 2:
        return G__27489__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27489.cljs$core$IFn$_invoke$arity$1 = G__27489__1;
  G__27489.cljs$core$IFn$_invoke$arity$2 = G__27489__2;
  return G__27489;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__27490 = null;
  var G__27490__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27490__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27490 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27490__1.call(this, x);
      case 2:
        return G__27490__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27490.cljs$core$IFn$_invoke$arity$1 = G__27490__1;
  G__27490.cljs$core$IFn$_invoke$arity$2 = G__27490__2;
  return G__27490;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__27492 = cljs.core.seq(coll);
  var chunk__27493 = null;
  var count__27494 = 0;
  var i__27495 = 0;
  while (true) {
    if (i__27495 < count__27494) {
      var vec__27496 = chunk__27493.cljs$core$IIndexed$_nth$arity$2(null, i__27495);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27496, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27496, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__27509 = seq__27492;
      var G__27510 = chunk__27493;
      var G__27511 = count__27494;
      var G__27512 = i__27495 + 1;
      seq__27492 = G__27509;
      chunk__27493 = G__27510;
      count__27494 = G__27511;
      i__27495 = G__27512;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__27492);
      if (temp__4657__auto__) {
        var seq__27492__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__27492__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__27492__$1);
          var G__27513 = cljs.core.chunk_rest(seq__27492__$1);
          var G__27514 = c__9443__auto__;
          var G__27515 = cljs.core.count(c__9443__auto__);
          var G__27516 = 0;
          seq__27492 = G__27513;
          chunk__27493 = G__27514;
          count__27494 = G__27515;
          i__27495 = G__27516;
          continue;
        } else {
          var vec__27499 = cljs.core.first(seq__27492__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27499, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27499, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__27517 = cljs.core.next(seq__27492__$1);
          var G__27518 = null;
          var G__27519 = 0;
          var G__27520 = 0;
          seq__27492 = G__27517;
          chunk__27493 = G__27518;
          count__27494 = G__27519;
          i__27495 = G__27520;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__27502 = init__$1;
        var G__27503 = self__.arr[i];
        var G__27504 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27502, G__27503, G__27504) : f.call(null, G__27502, G__27503, G__27504);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__27521 = i + 2;
        var G__27522 = init__$2;
        i = G__27521;
        init__$1 = G__27522;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__27523 = i + 2;
              i = G__27523;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__27524 = s + 2;
            var G__27525 = d;
            s = G__27524;
            d = G__27525;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__27526 = s + 2;
            var G__27527 = d + 2;
            s = G__27526;
            d = G__27527;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__27508 = cljs.core.aclone(self__.arr);
        G__27508[idx + 1] = v;
        return G__27508;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__27528 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__27529 = cljs.core.next(es);
          ret = G__27528;
          es = G__27529;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__27530 = null;
  var G__27530__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27530__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27530 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27530__2.call(this, self__, k);
      case 3:
        return G__27530__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27530.cljs$core$IFn$_invoke$arity$2 = G__27530__2;
  G__27530.cljs$core$IFn$_invoke$arity$3 = G__27530__3;
  return G__27530;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args27491) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27491)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_27531 = 0;
    while (true) {
      if (i_27531 < arr__$1.length) {
        var k_27532 = arr__$1[i_27531];
        var v_27533 = arr__$1[i_27531 + 1];
        var idx_27534 = cljs.core.array_index_of(ret, k_27532);
        if (idx_27534 === -1) {
          ret.push(k_27532);
          ret.push(v_27533);
        } else {
        }
        var G__27535 = i_27531 + 2;
        i_27531 = G__27535;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__27538 = cljs.core.next(es);
          var G__27539 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__27538;
          tcoll__$2 = G__27539;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__27537_27540 = self__.arr;
      G__27537_27540.pop();
      G__27537_27540.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__27541 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__27542 = i + 2;
      out = G__27541;
      i = G__27542;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args27543 = [];
  var len__9707__auto___27548 = arguments.length;
  var i__9708__auto___27549 = 0;
  while (true) {
    if (i__9708__auto___27549 < len__9707__auto___27548) {
      args27543.push(arguments[i__9708__auto___27549]);
      var G__27550 = i__9708__auto___27549 + 1;
      i__9708__auto___27549 = G__27550;
      continue;
    } else {
    }
    break;
  }
  var G__27545 = args27543.length;
  switch(G__27545) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27543.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__27546 = cljs.core.aclone(arr);
  G__27546[i] = a;
  return G__27546;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__27547 = cljs.core.aclone(arr);
  G__27547[i] = a;
  G__27547[j] = b;
  return G__27547;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args27552 = [];
  var len__9707__auto___27555 = arguments.length;
  var i__9708__auto___27556 = 0;
  while (true) {
    if (i__9708__auto___27556 < len__9707__auto___27555) {
      args27552.push(arguments[i__9708__auto___27556]);
      var G__27557 = i__9708__auto___27556 + 1;
      i__9708__auto___27556 = G__27557;
      continue;
    } else {
    }
    break;
  }
  var G__27554 = args27552.length;
  switch(G__27554) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27552.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__27562 = init__$1;
          var G__27563 = k;
          var G__27564 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27562, G__27563, G__27564) : f.call(null, G__27562, G__27563, G__27564);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__27565 = i + 2;
        var G__27566 = init__$2;
        i = G__27565;
        init__$1 = G__27566;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__8632__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__8632__auto__) {
    return or__8632__auto__;
  } else {
    var or__8632__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__8632__auto____$1) {
      return or__8632__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_27580 = 0;
        var j_27581 = 0;
        while (true) {
          if (i_27580 < 32) {
            if ((self__.bitmap >>> i_27580 & 1) === 0) {
              var G__27582 = i_27580 + 1;
              var G__27583 = j_27581;
              i_27580 = G__27582;
              j_27581 = G__27583;
              continue;
            } else {
              nodes[i_27580] = !(self__.arr[j_27581] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_27581]), self__.arr[j_27581], self__.arr[j_27581 + 1], added_leaf_QMARK_) : self__.arr[j_27581 + 1];
              var G__27584 = i_27580 + 1;
              var G__27585 = j_27581 + 2;
              i_27580 = G__27584;
              j_27581 = G__27585;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__27567 = edit__$1;
          var G__27568 = shift + 5;
          var G__27569 = key_or_nil;
          var G__27570 = val_or_node;
          var G__27571 = hash;
          var G__27572 = key;
          var G__27573 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__27567, G__27568, G__27569, G__27570, G__27571, G__27572, G__27573) : cljs.core.create_node.call(null, G__27567, G__27568, G__27569, G__27570, G__27571, G__27572, G__27573);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_27586 = 0;
      var j_27587 = 0;
      while (true) {
        if (i_27586 < 32) {
          if ((self__.bitmap >>> i_27586 & 1) === 0) {
            var G__27588 = i_27586 + 1;
            var G__27589 = j_27587;
            i_27586 = G__27588;
            j_27587 = G__27589;
            continue;
          } else {
            nodes[i_27586] = !(self__.arr[j_27587] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_27587]), self__.arr[j_27587], self__.arr[j_27587 + 1], added_leaf_QMARK_) : self__.arr[j_27587 + 1];
            var G__27590 = i_27586 + 1;
            var G__27591 = j_27587 + 2;
            i_27586 = G__27590;
            j_27587 = G__27591;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__27574 = shift + 5;
          var G__27575 = key_or_nil;
          var G__27576 = val_or_node;
          var G__27577 = hash;
          var G__27578 = key;
          var G__27579 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__27574, G__27575, G__27576, G__27577, G__27578, G__27579) : cljs.core.create_node.call(null, G__27574, G__27575, G__27576, G__27577, G__27578, G__27579);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__27592 = i + 1;
        var G__27593 = j + 2;
        var G__27594 = bitmap | 1 << i;
        i = G__27592;
        j = G__27593;
        bitmap = G__27594;
        continue;
      } else {
        var G__27595 = i + 1;
        var G__27596 = j;
        var G__27597 = bitmap;
        i = G__27595;
        j = G__27596;
        bitmap = G__27597;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__27598 = i + 1;
          var G__27599 = init__$2;
          i = G__27598;
          init__$1 = G__27599;
          continue;
        }
      } else {
        var G__27600 = i + 1;
        var G__27601 = init__$1;
        i = G__27600;
        init__$1 = G__27601;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__27602 = i + 2;
        i = G__27602;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args27603 = [];
  var len__9707__auto___27606 = arguments.length;
  var i__9708__auto___27607 = 0;
  while (true) {
    if (i__9708__auto___27607 < len__9707__auto___27606) {
      args27603.push(arguments[i__9708__auto___27607]);
      var G__27608 = i__9708__auto___27607 + 1;
      i__9708__auto___27607 = G__27608;
      continue;
    } else {
    }
    break;
  }
  var G__27605 = args27603.length;
  switch(G__27605) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27603.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__27616 = null;
  var G__27616__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27616__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27616 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27616__1.call(this, x);
      case 2:
        return G__27616__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27616.cljs$core$IFn$_invoke$arity$1 = G__27616__1;
  G__27616.cljs$core$IFn$_invoke$arity$2 = G__27616__2;
  return G__27616;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__27617 = null;
  var G__27617__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27617__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27617 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27617__1.call(this, x);
      case 2:
        return G__27617__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27617.cljs$core$IFn$_invoke$arity$1 = G__27617__1;
  G__27617.cljs$core$IFn$_invoke$arity$2 = G__27617__2;
  return G__27617;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? function() {
    var G__27610 = self__.nodes;
    var G__27611 = self__.i + 2;
    var G__27612 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27610, G__27611, G__27612) : cljs.core.create_inode_seq.call(null, G__27610, G__27611, G__27612);
  }() : function() {
    var G__27613 = self__.nodes;
    var G__27614 = self__.i;
    var G__27615 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27613, G__27614, G__27615) : cljs.core.create_inode_seq.call(null, G__27613, G__27614, G__27615);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args27618 = [];
  var len__9707__auto___27621 = arguments.length;
  var i__9708__auto___27622 = 0;
  while (true) {
    if (i__9708__auto___27622 < len__9707__auto___27621) {
      args27618.push(arguments[i__9708__auto___27622]);
      var G__27623 = i__9708__auto___27622 + 1;
      i__9708__auto___27622 = G__27623;
      continue;
    } else {
    }
    break;
  }
  var G__27620 = args27618.length;
  switch(G__27620) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27618.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__27625 = j + 2;
              j = G__27625;
              continue;
            }
          } else {
            var G__27626 = j + 2;
            j = G__27626;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__27631 = null;
  var G__27631__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27631__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27631 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27631__1.call(this, x);
      case 2:
        return G__27631__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27631.cljs$core$IFn$_invoke$arity$1 = G__27631__1;
  G__27631.cljs$core$IFn$_invoke$arity$2 = G__27631__2;
  return G__27631;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__27632 = null;
  var G__27632__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27632__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27632 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27632__1.call(this, x);
      case 2:
        return G__27632__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27632.cljs$core$IFn$_invoke$arity$1 = G__27632__1;
  G__27632.cljs$core$IFn$_invoke$arity$2 = G__27632__2;
  return G__27632;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = function() {
    var G__27627 = null;
    var G__27628 = self__.nodes;
    var G__27629 = self__.i;
    var G__27630 = cljs.core.next(self__.s);
    return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__27627, G__27628, G__27629, G__27630) : cljs.core.create_array_node_seq.call(null, G__27627, G__27628, G__27629, G__27630);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args27633 = [];
  var len__9707__auto___27636 = arguments.length;
  var i__9708__auto___27637 = 0;
  while (true) {
    if (i__9708__auto___27637 < len__9707__auto___27636) {
      args27633.push(arguments[i__9708__auto___27637]);
      var G__27638 = i__9708__auto___27637 + 1;
      i__9708__auto___27637 = G__27638;
      continue;
    } else {
    }
    break;
  }
  var G__27635 = args27633.length;
  switch(G__27635) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27633.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__27640 = j + 1;
            j = G__27640;
            continue;
          }
        } else {
          var G__27641 = j + 1;
          j = G__27641;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__27643 = cljs.core.seq(coll);
  var chunk__27644 = null;
  var count__27645 = 0;
  var i__27646 = 0;
  while (true) {
    if (i__27646 < count__27645) {
      var vec__27647 = chunk__27644.cljs$core$IIndexed$_nth$arity$2(null, i__27646);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27647, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27647, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__27655 = seq__27643;
      var G__27656 = chunk__27644;
      var G__27657 = count__27645;
      var G__27658 = i__27646 + 1;
      seq__27643 = G__27655;
      chunk__27644 = G__27656;
      count__27645 = G__27657;
      i__27646 = G__27658;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__27643);
      if (temp__4657__auto__) {
        var seq__27643__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__27643__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__27643__$1);
          var G__27659 = cljs.core.chunk_rest(seq__27643__$1);
          var G__27660 = c__9443__auto__;
          var G__27661 = cljs.core.count(c__9443__auto__);
          var G__27662 = 0;
          seq__27643 = G__27659;
          chunk__27644 = G__27660;
          count__27645 = G__27661;
          i__27646 = G__27662;
          continue;
        } else {
          var vec__27650 = cljs.core.first(seq__27643__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27650, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27650, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__27663 = cljs.core.next(seq__27643__$1);
          var G__27664 = null;
          var G__27665 = 0;
          var G__27666 = 0;
          seq__27643 = G__27663;
          chunk__27644 = G__27664;
          count__27645 = G__27665;
          i__27646 = G__27666;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__27667 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__27668 = cljs.core.next(es);
          ret = G__27667;
          es = G__27668;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__27669 = null;
  var G__27669__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27669__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27669 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27669__2.call(this, self__, k);
      case 3:
        return G__27669__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27669.cljs$core$IFn$_invoke$arity$2 = G__27669__2;
  G__27669.cljs$core$IFn$_invoke$arity$3 = G__27669__3;
  return G__27669;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args27642) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27642)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__27670 = i + 2;
      var G__27671 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__27670;
      ret = G__27671;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__27672 = i + 1;
      var G__27673 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__27672;
      out = G__27673;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__27675 = cljs.core.next(es);
          var G__27676 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__27675;
          tcoll__$1 = G__27676;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__27677 = ascending_QMARK_ ? t.left : t.right;
      var G__27678 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__27677;
      stack__$1 = G__27678;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__27679 = null;
  var G__27679__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27679__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27679 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27679__1.call(this, x);
      case 2:
        return G__27679__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27679.cljs$core$IFn$_invoke$arity$1 = G__27679__1;
  G__27679.cljs$core$IFn$_invoke$arity$2 = G__27679__2;
  return G__27679;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__27680 = null;
  var G__27680__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27680__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27680 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27680__1.call(this, x);
      case 2:
        return G__27680__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27680.cljs$core$IFn$_invoke$arity$1 = G__27680__1;
  G__27680.cljs$core$IFn$_invoke$arity$2 = G__27680__2;
  return G__27680;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__27690 = init__$1;
      var G__27691 = node.key;
      var G__27692 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27690, G__27691, G__27692) : f.call(null, G__27690, G__27691, G__27692);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__27694 = null;
  var G__27694__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27694__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27694 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27694__1.call(this, x);
      case 2:
        return G__27694__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27694.cljs$core$IFn$_invoke$arity$1 = G__27694__1;
  G__27694.cljs$core$IFn$_invoke$arity$2 = G__27694__2;
  return G__27694;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__27695 = null;
  var G__27695__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27695__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27695 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27695__1.call(this, x);
      case 2:
        return G__27695__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27695.cljs$core$IFn$_invoke$arity$1 = G__27695__1;
  G__27695.cljs$core$IFn$_invoke$arity$2 = G__27695__2;
  return G__27695;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__9466__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__9466__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__9466__auto____$1);
  }(), x__9466__auto__);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__27696 = null;
  var G__27696__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27696__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27696 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27696__2.call(this, self__, k);
      case 3:
        return G__27696__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27696.cljs$core$IFn$_invoke$arity$2 = G__27696__2;
  G__27696.cljs$core$IFn$_invoke$arity$3 = G__27696__3;
  return G__27696;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args27693) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27693)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__27698 = null;
  var G__27698__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27698__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27698 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27698__1.call(this, x);
      case 2:
        return G__27698__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27698.cljs$core$IFn$_invoke$arity$1 = G__27698__1;
  G__27698.cljs$core$IFn$_invoke$arity$2 = G__27698__2;
  return G__27698;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__27699 = null;
  var G__27699__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27699__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27699 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27699__1.call(this, x);
      case 2:
        return G__27699__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27699.cljs$core$IFn$_invoke$arity$1 = G__27699__1;
  G__27699.cljs$core$IFn$_invoke$arity$2 = G__27699__2;
  return G__27699;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__9466__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__9466__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__9466__auto____$1);
  }(), x__9466__auto__);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__27700 = null;
  var G__27700__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27700__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27700 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27700__2.call(this, self__, k);
      case 3:
        return G__27700__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27700.cljs$core$IFn$_invoke$arity$2 = G__27700__2;
  G__27700.cljs$core$IFn$_invoke$arity$3 = G__27700__3;
  return G__27700;
}();
cljs.core.RedNode.prototype.apply = function(self__, args27697) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27697)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__27713 = k;
      var G__27714 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27713, G__27714) : comp.call(null, G__27713, G__27714);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__27733 = k;
      var G__27734 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27733, G__27734) : comp.call(null, G__27733, G__27734);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__27744 = cljs.core.seq(coll);
  var chunk__27745 = null;
  var count__27746 = 0;
  var i__27747 = 0;
  while (true) {
    if (i__27747 < count__27746) {
      var vec__27748 = chunk__27745.cljs$core$IIndexed$_nth$arity$2(null, i__27747);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27748, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27748, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__27758 = seq__27744;
      var G__27759 = chunk__27745;
      var G__27760 = count__27746;
      var G__27761 = i__27747 + 1;
      seq__27744 = G__27758;
      chunk__27745 = G__27759;
      count__27746 = G__27760;
      i__27747 = G__27761;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__27744);
      if (temp__4657__auto__) {
        var seq__27744__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__27744__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__27744__$1);
          var G__27762 = cljs.core.chunk_rest(seq__27744__$1);
          var G__27763 = c__9443__auto__;
          var G__27764 = cljs.core.count(c__9443__auto__);
          var G__27765 = 0;
          seq__27744 = G__27762;
          chunk__27745 = G__27763;
          count__27746 = G__27764;
          i__27747 = G__27765;
          continue;
        } else {
          var vec__27751 = cljs.core.first(seq__27744__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27751, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27751, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__27766 = cljs.core.next(seq__27744__$1);
          var G__27767 = null;
          var G__27768 = 0;
          var G__27769 = 0;
          seq__27744 = G__27766;
          chunk__27745 = G__27767;
          count__27746 = G__27768;
          i__27747 = G__27769;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__27754 = k;
        var G__27755 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27754, G__27755) : self__.comp.call(null, G__27754, G__27755);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__27770 = t.left;
          t = G__27770;
          continue;
        } else {
          var G__27771 = t.right;
          t = G__27771;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__27772 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__27773 = cljs.core.next(es);
          ret = G__27772;
          es = G__27773;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__27774 = null;
  var G__27774__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27774__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27774 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27774__2.call(this, self__, k);
      case 3:
        return G__27774__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27774.cljs$core$IFn$_invoke$arity$2 = G__27774__2;
  G__27774.cljs$core$IFn$_invoke$arity$3 = G__27774__3;
  return G__27774;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args27743) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27743)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__27756 = k;
          var G__27757 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27756, G__27757) : self__.comp.call(null, G__27756, G__27757);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__27775 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__27776 = t.left;
              stack = G__27775;
              t = G__27776;
              continue;
            } else {
              var G__27777 = stack;
              var G__27778 = t.right;
              stack = G__27777;
              t = G__27778;
              continue;
            }
          } else {
            if (c > 0) {
              var G__27779 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__27780 = t.right;
              stack = G__27779;
              t = G__27780;
              continue;
            } else {
              var G__27781 = stack;
              var G__27782 = t.left;
              stack = G__27781;
              t = G__27782;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27784 = arguments.length;
  var i__9708__auto___27785 = 0;
  while (true) {
    if (i__9708__auto___27785 < len__9707__auto___27784) {
      args__9714__auto__.push(arguments[i__9708__auto___27785]);
      var G__27786 = i__9708__auto___27785 + 1;
      i__9708__auto___27785 = G__27786;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__27787 = cljs.core.nnext(in$);
      var G__27788 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__27787;
      out = G__27788;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq27783) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27783));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27790 = arguments.length;
  var i__9708__auto___27791 = 0;
  while (true) {
    if (i__9708__auto___27791 < len__9707__auto___27790) {
      args__9714__auto__.push(arguments[i__9708__auto___27791]);
      var G__27792 = i__9708__auto___27791 + 1;
      i__9708__auto___27791 = G__27792;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq27789) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27789));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27796 = arguments.length;
  var i__9708__auto___27797 = 0;
  while (true) {
    if (i__9708__auto___27797 < len__9707__auto___27796) {
      args__9714__auto__.push(arguments[i__9708__auto___27797]);
      var G__27798 = i__9708__auto___27797 + 1;
      i__9708__auto___27797 = G__27798;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__27799 = cljs.core.nnext(kvs);
      kvs = G__27799;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq27793) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27793));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27801 = arguments.length;
  var i__9708__auto___27802 = 0;
  while (true) {
    if (i__9708__auto___27802 < len__9707__auto___27801) {
      args__9714__auto__.push(arguments[i__9708__auto___27802]);
      var G__27803 = i__9708__auto___27802 + 1;
      i__9708__auto___27802 = G__27803;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__27804 = cljs.core.nnext(in$);
      var G__27805 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__27804;
      out = G__27805;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq27800) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27800));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27808 = arguments.length;
  var i__9708__auto___27809 = 0;
  while (true) {
    if (i__9708__auto___27809 < len__9707__auto___27808) {
      args__9714__auto__.push(arguments[i__9708__auto___27809]);
      var G__27810 = i__9708__auto___27809 + 1;
      i__9708__auto___27809 = G__27810;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__27811 = cljs.core.nnext(in$);
      var G__27812 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__27811;
      out = G__27812;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq27806) {
  var G__27807 = cljs.core.first(seq27806);
  var seq27806__$1 = cljs.core.next(seq27806);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__27807, seq27806__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__27815 = null;
  var G__27815__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27815__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27815 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27815__1.call(this, x);
      case 2:
        return G__27815__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27815.cljs$core$IFn$_invoke$arity$1 = G__27815__1;
  G__27815.cljs$core$IFn$_invoke$arity$2 = G__27815__2;
  return G__27815;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__27816 = null;
  var G__27816__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27816__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27816 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27816__1.call(this, x);
      case 2:
        return G__27816__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27816.cljs$core$IFn$_invoke$arity$1 = G__27816__1;
  G__27816.cljs$core$IFn$_invoke$arity$2 = G__27816__2;
  return G__27816;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__27819 = null;
  var G__27819__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__27819__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27819 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27819__1.call(this, x);
      case 2:
        return G__27819__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27819.cljs$core$IFn$_invoke$arity$1 = G__27819__1;
  G__27819.cljs$core$IFn$_invoke$arity$2 = G__27819__2;
  return G__27819;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__27820 = null;
  var G__27820__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__27820__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__27820 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__27820__1.call(this, x);
      case 2:
        return G__27820__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27820.cljs$core$IFn$_invoke$arity$1 = G__27820__1;
  G__27820.cljs$core$IFn$_invoke$arity$2 = G__27820__2;
  return G__27820;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27824 = arguments.length;
  var i__9708__auto___27825 = 0;
  while (true) {
    if (i__9708__auto___27825 < len__9707__auto___27824) {
      args__9714__auto__.push(arguments[i__9708__auto___27825]);
      var G__27826 = i__9708__auto___27825 + 1;
      i__9708__auto___27825 = G__27826;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__27821_SHARP_, p2__27822_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__8632__auto__ = p1__27821_SHARP_;
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__27822_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq27823) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27823));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27831 = arguments.length;
  var i__9708__auto___27832 = 0;
  while (true) {
    if (i__9708__auto___27832 < len__9707__auto___27831) {
      args__9714__auto__.push(arguments[i__9708__auto___27832]);
      var G__27833 = i__9708__auto___27832 + 1;
      i__9708__auto___27832 = G__27833;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__27829 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__27830 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27829, G__27830) : f.call(null, G__27829, G__27830);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__8632__auto__ = m1;
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq27827) {
  var G__27828 = cljs.core.first(seq27827);
  var seq27827__$1 = cljs.core.next(seq27827);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__27828, seq27827__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__27834 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__27835 = cljs.core.next(keys);
      ret = G__27834;
      keys = G__27835;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__27838 = cljs.core.seq(coll);
  var chunk__27839 = null;
  var count__27840 = 0;
  var i__27841 = 0;
  while (true) {
    if (i__27841 < count__27840) {
      var vec__27842 = chunk__27839.cljs$core$IIndexed$_nth$arity$2(null, i__27841);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27842, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27842, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__27848 = seq__27838;
      var G__27849 = chunk__27839;
      var G__27850 = count__27840;
      var G__27851 = i__27841 + 1;
      seq__27838 = G__27848;
      chunk__27839 = G__27849;
      count__27840 = G__27850;
      i__27841 = G__27851;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__27838);
      if (temp__4657__auto__) {
        var seq__27838__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__27838__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__27838__$1);
          var G__27852 = cljs.core.chunk_rest(seq__27838__$1);
          var G__27853 = c__9443__auto__;
          var G__27854 = cljs.core.count(c__9443__auto__);
          var G__27855 = 0;
          seq__27838 = G__27852;
          chunk__27839 = G__27853;
          count__27840 = G__27854;
          i__27841 = G__27855;
          continue;
        } else {
          var vec__27845 = cljs.core.first(seq__27838__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27845, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27845, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__27856 = cljs.core.next(seq__27838__$1);
          var G__27857 = null;
          var G__27858 = 0;
          var G__27859 = 0;
          seq__27838 = G__27856;
          chunk__27839 = G__27857;
          count__27840 = G__27858;
          i__27841 = G__27859;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__27836_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__27836_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__27860 = null;
  var G__27860__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27860__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27860 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27860__2.call(this, self__, k);
      case 3:
        return G__27860__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27860.cljs$core$IFn$_invoke$arity$2 = G__27860__2;
  G__27860.cljs$core$IFn$_invoke$arity$3 = G__27860__3;
  return G__27860;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args27837) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27837)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__27861 = i + 1;
        var G__27862 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__27861;
        out = G__27862;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__27863 = i + 1;
        var G__27864 = cljs.core._conj_BANG_(out, items[i]);
        i = G__27863;
        out = G__27864;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__27866 = null;
  var G__27866__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__27866__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__27866 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27866__2.call(this, self__, k);
      case 3:
        return G__27866__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27866.cljs$core$IFn$_invoke$arity$2 = G__27866__2;
  G__27866.cljs$core$IFn$_invoke$arity$3 = G__27866__3;
  return G__27866;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args27865) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27865)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__27869 = cljs.core.seq(coll);
  var chunk__27870 = null;
  var count__27871 = 0;
  var i__27872 = 0;
  while (true) {
    if (i__27872 < count__27871) {
      var vec__27873 = chunk__27870.cljs$core$IIndexed$_nth$arity$2(null, i__27872);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27873, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27873, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__27879 = seq__27869;
      var G__27880 = chunk__27870;
      var G__27881 = count__27871;
      var G__27882 = i__27872 + 1;
      seq__27869 = G__27879;
      chunk__27870 = G__27880;
      count__27871 = G__27881;
      i__27872 = G__27882;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__27869);
      if (temp__4657__auto__) {
        var seq__27869__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__27869__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__27869__$1);
          var G__27883 = cljs.core.chunk_rest(seq__27869__$1);
          var G__27884 = c__9443__auto__;
          var G__27885 = cljs.core.count(c__9443__auto__);
          var G__27886 = 0;
          seq__27869 = G__27883;
          chunk__27870 = G__27884;
          count__27871 = G__27885;
          i__27872 = G__27886;
          continue;
        } else {
          var vec__27876 = cljs.core.first(seq__27869__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27876, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27876, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__27887 = cljs.core.next(seq__27869__$1);
          var G__27888 = null;
          var G__27889 = 0;
          var G__27890 = 0;
          seq__27869 = G__27887;
          chunk__27870 = G__27888;
          count__27871 = G__27889;
          i__27872 = G__27890;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__27867_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__27867_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__27891 = null;
  var G__27891__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27891__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27891 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27891__2.call(this, self__, k);
      case 3:
        return G__27891__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__27891.cljs$core$IFn$_invoke$arity$2 = G__27891__2;
  G__27891.cljs$core$IFn$_invoke$arity$3 = G__27891__3;
  return G__27891;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args27868) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args27868)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__9541__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__9541__auto__.length) {
        var G__27892 = i + 1;
        var G__27893 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__27892;
        res = G__27893;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__27894 = cljs.core.next(in$__$1);
          var G__27895 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__27894;
          out = G__27895;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args27896 = [];
  var len__9707__auto___27900 = arguments.length;
  var i__9708__auto___27901 = 0;
  while (true) {
    if (i__9708__auto___27901 < len__9707__auto___27900) {
      args27896.push(arguments[i__9708__auto___27901]);
      var G__27902 = i__9708__auto___27901 + 1;
      i__9708__auto___27901 = G__27902;
      continue;
    } else {
    }
    break;
  }
  var G__27899 = args27896.length;
  switch(G__27899) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27896.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__9726__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq27897) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27897));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27905 = arguments.length;
  var i__9708__auto___27906 = 0;
  while (true) {
    if (i__9708__auto___27906 < len__9707__auto___27905) {
      args__9714__auto__.push(arguments[i__9708__auto___27906]);
      var G__27907 = i__9708__auto___27906 + 1;
      i__9708__auto___27906 = G__27907;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq27904) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq27904));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___27910 = arguments.length;
  var i__9708__auto___27911 = 0;
  while (true) {
    if (i__9708__auto___27911 < len__9707__auto___27910) {
      args__9714__auto__.push(arguments[i__9708__auto___27911]);
      var G__27912 = i__9708__auto___27911 + 1;
      i__9708__auto___27911 = G__27912;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq27908) {
  var G__27909 = cljs.core.first(seq27908);
  var seq27908__$1 = cljs.core.next(seq27908);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__27909, seq27908__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args27915 = [];
  var len__9707__auto___27918 = arguments.length;
  var i__9708__auto___27919 = 0;
  while (true) {
    if (i__9708__auto___27919 < len__9707__auto___27918) {
      args27915.push(arguments[i__9708__auto___27919]);
      var G__27920 = i__9708__auto___27919 + 1;
      i__9708__auto___27919 = G__27920;
      continue;
    } else {
    }
    break;
  }
  var G__27917 = args27915.length;
  switch(G__27917) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27915.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__27913_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__27913_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__27913_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__27914_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__27914_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__27914_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args27922 = [];
  var len__9707__auto___27935 = arguments.length;
  var i__9708__auto___27936 = 0;
  while (true) {
    if (i__9708__auto___27936 < len__9707__auto___27935) {
      args27922.push(arguments[i__9708__auto___27936]);
      var G__27937 = i__9708__auto___27936 + 1;
      i__9708__auto___27936 = G__27937;
      continue;
    } else {
    }
    break;
  }
  var G__27924 = args27922.length;
  switch(G__27924) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27922.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__27939 = null;
        var G__27939__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__27939__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__27939__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__27939 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__27939__0.call(this);
            case 1:
              return G__27939__1.call(this, result);
            case 2:
              return G__27939__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__27939.cljs$core$IFn$_invoke$arity$0 = G__27939__0;
        G__27939.cljs$core$IFn$_invoke$arity$1 = G__27939__1;
        G__27939.cljs$core$IFn$_invoke$arity$2 = G__27939__2;
        return G__27939;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__27931, seen__$1) {
        while (true) {
          var vec__27932 = p__27931;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27932, 0, null);
          var xs__$1 = vec__27932;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__27940 = cljs.core.rest(s);
              var G__27941 = seen__$1;
              p__27931 = G__27940;
              seen__$1 = G__27941;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__27942 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__27943 = cljs.core.next(s__$1);
      ret = G__27942;
      s__$1 = G__27943;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__27946 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__27947 = cljs.core.next(ks);
      var G__27948 = cljs.core.next(vs);
      map = G__27946;
      ks = G__27947;
      vs = G__27948;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args27951 = [];
  var len__9707__auto___27958 = arguments.length;
  var i__9708__auto___27959 = 0;
  while (true) {
    if (i__9708__auto___27959 < len__9707__auto___27958) {
      args27951.push(arguments[i__9708__auto___27959]);
      var G__27960 = i__9708__auto___27959 + 1;
      i__9708__auto___27959 = G__27960;
      continue;
    } else {
    }
    break;
  }
  var G__27957 = args27951.length;
  switch(G__27957) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27951.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__27949_SHARP_, p2__27950_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__27949_SHARP_, p2__27950_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq27952) {
  var G__27953 = cljs.core.first(seq27952);
  var seq27952__$1 = cljs.core.next(seq27952);
  var G__27954 = cljs.core.first(seq27952__$1);
  var seq27952__$2 = cljs.core.next(seq27952__$1);
  var G__27955 = cljs.core.first(seq27952__$2);
  var seq27952__$3 = cljs.core.next(seq27952__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__27953, G__27954, G__27955, seq27952__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args27964 = [];
  var len__9707__auto___27971 = arguments.length;
  var i__9708__auto___27972 = 0;
  while (true) {
    if (i__9708__auto___27972 < len__9707__auto___27971) {
      args27964.push(arguments[i__9708__auto___27972]);
      var G__27973 = i__9708__auto___27972 + 1;
      i__9708__auto___27972 = G__27973;
      continue;
    } else {
    }
    break;
  }
  var G__27970 = args27964.length;
  switch(G__27970) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args27964.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__27962_SHARP_, p2__27963_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__27962_SHARP_, p2__27963_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq27965) {
  var G__27966 = cljs.core.first(seq27965);
  var seq27965__$1 = cljs.core.next(seq27965);
  var G__27967 = cljs.core.first(seq27965__$1);
  var seq27965__$2 = cljs.core.next(seq27965__$1);
  var G__27968 = cljs.core.first(seq27965__$2);
  var seq27965__$3 = cljs.core.next(seq27965__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__27966, G__27967, G__27968, seq27965__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args27975 = [];
  var len__9707__auto___27978 = arguments.length;
  var i__9708__auto___27979 = 0;
  while (true) {
    if (i__9708__auto___27979 < len__9707__auto___27978) {
      args27975.push(arguments[i__9708__auto___27979]);
      var G__27980 = i__9708__auto___27979 + 1;
      i__9708__auto___27979 = G__27980;
      continue;
    } else {
    }
    break;
  }
  var G__27977 = args27975.length;
  switch(G__27977) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27975.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__27982 = null;
        var G__27982__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__27982__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__27982__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__27982 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__27982__0.call(this);
            case 1:
              return G__27982__1.call(this, result);
            case 2:
              return G__27982__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__27982.cljs$core$IFn$_invoke$arity$0 = G__27982__0;
        G__27982.cljs$core$IFn$_invoke$arity$1 = G__27982__1;
        G__27982.cljs$core$IFn$_invoke$arity$2 = G__27982__2;
        return G__27982;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args27983 = [];
  var len__9707__auto___27987 = arguments.length;
  var i__9708__auto___27988 = 0;
  while (true) {
    if (i__9708__auto___27988 < len__9707__auto___27987) {
      args27983.push(arguments[i__9708__auto___27988]);
      var G__27989 = i__9708__auto___27988 + 1;
      i__9708__auto___27988 = G__27989;
      continue;
    } else {
    }
    break;
  }
  var G__27985 = args27983.length;
  switch(G__27985) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27983.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__27991 = null;
      var G__27991__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__27991__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__27991__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__27991 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__27991__0.call(this);
          case 1:
            return G__27991__1.call(this, result);
          case 2:
            return G__27991__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__27991.cljs$core$IFn$_invoke$arity$0 = G__27991__0;
      G__27991.cljs$core$IFn$_invoke$arity$1 = G__27991__1;
      G__27991.cljs$core$IFn$_invoke$arity$2 = G__27991__2;
      return G__27991;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__27986 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27986) : pred.call(null, G__27986);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__27996 = function() {
      var G__27998 = cljs.core._entry_key(sc, e);
      var G__27999 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27998, G__27999) : comp.call(null, G__27998, G__27999);
    }();
    var G__27997 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27996, G__27997) : test.call(null, G__27996, G__27997);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args28000 = [];
  var len__9707__auto___28009 = arguments.length;
  var i__9708__auto___28010 = 0;
  while (true) {
    if (i__9708__auto___28010 < len__9707__auto___28009) {
      args28000.push(arguments[i__9708__auto___28010]);
      var G__28011 = i__9708__auto___28010 + 1;
      i__9708__auto___28010 = G__28011;
      continue;
    } else {
    }
    break;
  }
  var G__28002 = args28000.length;
  switch(G__28002) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28000.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__28003 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28003, 0, null);
      var s = vec__28003;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__28006 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28006, 0, null);
    var s = vec__28006;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args28013 = [];
  var len__9707__auto___28022 = arguments.length;
  var i__9708__auto___28023 = 0;
  while (true) {
    if (i__9708__auto___28023 < len__9707__auto___28022) {
      args28013.push(arguments[i__9708__auto___28023]);
      var G__28024 = i__9708__auto___28023 + 1;
      i__9708__auto___28023 = G__28024;
      continue;
    } else {
    }
    break;
  }
  var G__28015 = args28013.length;
  switch(G__28015) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28013.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__28016 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28016, 0, null);
      var s = vec__28016;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__28019 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28019, 0, null);
    var s = vec__28019;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__28027 = null;
  var G__28027__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__28027__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__28027 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__28027__1.call(this, x);
      case 2:
        return G__28027__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28027.cljs$core$IFn$_invoke$arity$1 = G__28027__1;
  G__28027.cljs$core$IFn$_invoke$arity$2 = G__28027__2;
  return G__28027;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__28028 = null;
  var G__28028__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__28028__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__28028 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__28028__1.call(this, x);
      case 2:
        return G__28028__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28028.cljs$core$IFn$_invoke$arity$1 = G__28028__1;
  G__28028.cljs$core$IFn$_invoke$arity$2 = G__28028__2;
  return G__28028;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__28026 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__28026);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__28029 = i + self__.step;
        var G__28030 = ret__$1;
        i = G__28029;
        ret = G__28030;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args28031 = [];
  var len__9707__auto___28034 = arguments.length;
  var i__9708__auto___28035 = 0;
  while (true) {
    if (i__9708__auto___28035 < len__9707__auto___28034) {
      args28031.push(arguments[i__9708__auto___28035]);
      var G__28036 = i__9708__auto___28035 + 1;
      i__9708__auto___28035 = G__28036;
      continue;
    } else {
    }
    break;
  }
  var G__28033 = args28031.length;
  switch(G__28033) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28031.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args28038 = [];
  var len__9707__auto___28041 = arguments.length;
  var i__9708__auto___28042 = 0;
  while (true) {
    if (i__9708__auto___28042 < len__9707__auto___28041) {
      args28038.push(arguments[i__9708__auto___28042]);
      var G__28043 = i__9708__auto___28042 + 1;
      i__9708__auto___28042 = G__28043;
      continue;
    } else {
    }
    break;
  }
  var G__28040 = args28038.length;
  switch(G__28040) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28038.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__28045 = null;
        var G__28045__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__28045__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__28045__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__28045 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__28045__0.call(this);
            case 1:
              return G__28045__1.call(this, result);
            case 2:
              return G__28045__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__28045.cljs$core$IFn$_invoke$arity$0 = G__28045__0;
        G__28045.cljs$core$IFn$_invoke$arity$1 = G__28045__1;
        G__28045.cljs$core$IFn$_invoke$arity$2 = G__28045__2;
        return G__28045;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args28047 = [];
  var len__9707__auto___28050 = arguments.length;
  var i__9708__auto___28051 = 0;
  while (true) {
    if (i__9708__auto___28051 < len__9707__auto___28050) {
      args28047.push(arguments[i__9708__auto___28051]);
      var G__28052 = i__9708__auto___28051 + 1;
      i__9708__auto___28051 = G__28052;
      continue;
    } else {
    }
    break;
  }
  var G__28049 = args28047.length;
  switch(G__28049) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28047.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__28054 = null;
        var G__28054__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__28054__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__28054__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__28054 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__28054__0.call(this);
            case 1:
              return G__28054__1.call(this, result);
            case 2:
              return G__28054__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__28054.cljs$core$IFn$_invoke$arity$0 = G__28054__0;
        G__28054.cljs$core$IFn$_invoke$arity$1 = G__28054__1;
        G__28054.cljs$core$IFn$_invoke$arity$2 = G__28054__2;
        return G__28054;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__28046_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__28046_SHARP_) : f.call(null, p1__28046_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args28055 = [];
  var len__9707__auto___28060 = arguments.length;
  var i__9708__auto___28061 = 0;
  while (true) {
    if (i__9708__auto___28061 < len__9707__auto___28060) {
      args28055.push(arguments[i__9708__auto___28061]);
      var G__28062 = i__9708__auto___28061 + 1;
      i__9708__auto___28061 = G__28062;
      continue;
    } else {
    }
    break;
  }
  var G__28057 = args28055.length;
  switch(G__28057) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28055.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      var x__9466__auto__ = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      return cljs.core._conj(cljs.core.List.EMPTY, x__9466__auto__);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    var x__9466__auto__ = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init) : cljs.core.deref.call(null, init);
    return cljs.core._conj(cljs.core.List.EMPTY, x__9466__auto__);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__28058 = init;
          var G__28059 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28058, G__28059) : f.call(null, G__28058, G__28059);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args28074 = [];
  var len__9707__auto___28081 = arguments.length;
  var i__9708__auto___28082 = 0;
  while (true) {
    if (i__9708__auto___28082 < len__9707__auto___28081) {
      args28074.push(arguments[i__9708__auto___28082]);
      var G__28083 = i__9708__auto___28082 + 1;
      i__9708__auto___28082 = G__28083;
      continue;
    } else {
    }
    break;
  }
  var G__28080 = args28074.length;
  switch(G__28080) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args28074.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__28085 = null;
    var G__28085__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__28085__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__28085__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__28085__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__28085__4 = function() {
      var G__28086__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__28086 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__28087__i = 0, G__28087__a = new Array(arguments.length - 3);
          while (G__28087__i < G__28087__a.length) {
            G__28087__a[G__28087__i] = arguments[G__28087__i + 3];
            ++G__28087__i;
          }
          args = new cljs.core.IndexedSeq(G__28087__a, 0);
        }
        return G__28086__delegate.call(this, x, y, z, args);
      };
      G__28086.cljs$lang$maxFixedArity = 3;
      G__28086.cljs$lang$applyTo = function(arglist__28088) {
        var x = cljs.core.first(arglist__28088);
        arglist__28088 = cljs.core.next(arglist__28088);
        var y = cljs.core.first(arglist__28088);
        arglist__28088 = cljs.core.next(arglist__28088);
        var z = cljs.core.first(arglist__28088);
        var args = cljs.core.rest(arglist__28088);
        return G__28086__delegate(x, y, z, args);
      };
      G__28086.cljs$core$IFn$_invoke$arity$variadic = G__28086__delegate;
      return G__28086;
    }();
    G__28085 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__28085__0.call(this);
        case 1:
          return G__28085__1.call(this, x);
        case 2:
          return G__28085__2.call(this, x, y);
        case 3:
          return G__28085__3.call(this, x, y, z);
        default:
          var G__28089 = null;
          if (arguments.length > 3) {
            var G__28090__i = 0, G__28090__a = new Array(arguments.length - 3);
            while (G__28090__i < G__28090__a.length) {
              G__28090__a[G__28090__i] = arguments[G__28090__i + 3];
              ++G__28090__i;
            }
            G__28089 = new cljs.core.IndexedSeq(G__28090__a, 0);
          }
          return G__28085__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__28089);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__28085.cljs$lang$maxFixedArity = 3;
    G__28085.cljs$lang$applyTo = G__28085__4.cljs$lang$applyTo;
    G__28085.cljs$core$IFn$_invoke$arity$0 = G__28085__0;
    G__28085.cljs$core$IFn$_invoke$arity$1 = G__28085__1;
    G__28085.cljs$core$IFn$_invoke$arity$2 = G__28085__2;
    G__28085.cljs$core$IFn$_invoke$arity$3 = G__28085__3;
    G__28085.cljs$core$IFn$_invoke$arity$variadic = G__28085__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__28085;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__28091 = null;
    var G__28091__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__28091__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__28091__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__28091__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__28091__4 = function() {
      var G__28092__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__28092 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__28093__i = 0, G__28093__a = new Array(arguments.length - 3);
          while (G__28093__i < G__28093__a.length) {
            G__28093__a[G__28093__i] = arguments[G__28093__i + 3];
            ++G__28093__i;
          }
          args = new cljs.core.IndexedSeq(G__28093__a, 0);
        }
        return G__28092__delegate.call(this, x, y, z, args);
      };
      G__28092.cljs$lang$maxFixedArity = 3;
      G__28092.cljs$lang$applyTo = function(arglist__28094) {
        var x = cljs.core.first(arglist__28094);
        arglist__28094 = cljs.core.next(arglist__28094);
        var y = cljs.core.first(arglist__28094);
        arglist__28094 = cljs.core.next(arglist__28094);
        var z = cljs.core.first(arglist__28094);
        var args = cljs.core.rest(arglist__28094);
        return G__28092__delegate(x, y, z, args);
      };
      G__28092.cljs$core$IFn$_invoke$arity$variadic = G__28092__delegate;
      return G__28092;
    }();
    G__28091 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__28091__0.call(this);
        case 1:
          return G__28091__1.call(this, x);
        case 2:
          return G__28091__2.call(this, x, y);
        case 3:
          return G__28091__3.call(this, x, y, z);
        default:
          var G__28095 = null;
          if (arguments.length > 3) {
            var G__28096__i = 0, G__28096__a = new Array(arguments.length - 3);
            while (G__28096__i < G__28096__a.length) {
              G__28096__a[G__28096__i] = arguments[G__28096__i + 3];
              ++G__28096__i;
            }
            G__28095 = new cljs.core.IndexedSeq(G__28096__a, 0);
          }
          return G__28091__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__28095);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__28091.cljs$lang$maxFixedArity = 3;
    G__28091.cljs$lang$applyTo = G__28091__4.cljs$lang$applyTo;
    G__28091.cljs$core$IFn$_invoke$arity$0 = G__28091__0;
    G__28091.cljs$core$IFn$_invoke$arity$1 = G__28091__1;
    G__28091.cljs$core$IFn$_invoke$arity$2 = G__28091__2;
    G__28091.cljs$core$IFn$_invoke$arity$3 = G__28091__3;
    G__28091.cljs$core$IFn$_invoke$arity$variadic = G__28091__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__28091;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__28097 = null;
    var G__28097__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__28097__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__28097__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__28097__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__28097__4 = function() {
      var G__28098__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__28098 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__28099__i = 0, G__28099__a = new Array(arguments.length - 3);
          while (G__28099__i < G__28099__a.length) {
            G__28099__a[G__28099__i] = arguments[G__28099__i + 3];
            ++G__28099__i;
          }
          args = new cljs.core.IndexedSeq(G__28099__a, 0);
        }
        return G__28098__delegate.call(this, x, y, z, args);
      };
      G__28098.cljs$lang$maxFixedArity = 3;
      G__28098.cljs$lang$applyTo = function(arglist__28100) {
        var x = cljs.core.first(arglist__28100);
        arglist__28100 = cljs.core.next(arglist__28100);
        var y = cljs.core.first(arglist__28100);
        arglist__28100 = cljs.core.next(arglist__28100);
        var z = cljs.core.first(arglist__28100);
        var args = cljs.core.rest(arglist__28100);
        return G__28098__delegate(x, y, z, args);
      };
      G__28098.cljs$core$IFn$_invoke$arity$variadic = G__28098__delegate;
      return G__28098;
    }();
    G__28097 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__28097__0.call(this);
        case 1:
          return G__28097__1.call(this, x);
        case 2:
          return G__28097__2.call(this, x, y);
        case 3:
          return G__28097__3.call(this, x, y, z);
        default:
          var G__28101 = null;
          if (arguments.length > 3) {
            var G__28102__i = 0, G__28102__a = new Array(arguments.length - 3);
            while (G__28102__i < G__28102__a.length) {
              G__28102__a[G__28102__i] = arguments[G__28102__i + 3];
              ++G__28102__i;
            }
            G__28101 = new cljs.core.IndexedSeq(G__28102__a, 0);
          }
          return G__28097__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__28101);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__28097.cljs$lang$maxFixedArity = 3;
    G__28097.cljs$lang$applyTo = G__28097__4.cljs$lang$applyTo;
    G__28097.cljs$core$IFn$_invoke$arity$0 = G__28097__0;
    G__28097.cljs$core$IFn$_invoke$arity$1 = G__28097__1;
    G__28097.cljs$core$IFn$_invoke$arity$2 = G__28097__2;
    G__28097.cljs$core$IFn$_invoke$arity$3 = G__28097__3;
    G__28097.cljs$core$IFn$_invoke$arity$variadic = G__28097__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__28097;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__28103 = null;
      var G__28103__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__28064_SHARP_, p2__28065_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28064_SHARP_, p2__28065_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__28065_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__28065_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__28103__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__28066_SHARP_, p2__28067_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28066_SHARP_, p2__28067_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__28067_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__28067_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__28103__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__28068_SHARP_, p2__28069_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28068_SHARP_, p2__28069_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__28069_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__28069_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__28103__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__28070_SHARP_, p2__28071_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28070_SHARP_, p2__28071_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__28071_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__28071_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__28103__4 = function() {
        var G__28104__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__28072_SHARP_, p2__28073_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28072_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__28073_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__28104 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__28105__i = 0, G__28105__a = new Array(arguments.length - 3);
            while (G__28105__i < G__28105__a.length) {
              G__28105__a[G__28105__i] = arguments[G__28105__i + 3];
              ++G__28105__i;
            }
            args = new cljs.core.IndexedSeq(G__28105__a, 0);
          }
          return G__28104__delegate.call(this, x, y, z, args);
        };
        G__28104.cljs$lang$maxFixedArity = 3;
        G__28104.cljs$lang$applyTo = function(arglist__28106) {
          var x = cljs.core.first(arglist__28106);
          arglist__28106 = cljs.core.next(arglist__28106);
          var y = cljs.core.first(arglist__28106);
          arglist__28106 = cljs.core.next(arglist__28106);
          var z = cljs.core.first(arglist__28106);
          var args = cljs.core.rest(arglist__28106);
          return G__28104__delegate(x, y, z, args);
        };
        G__28104.cljs$core$IFn$_invoke$arity$variadic = G__28104__delegate;
        return G__28104;
      }();
      G__28103 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__28103__0.call(this);
          case 1:
            return G__28103__1.call(this, x);
          case 2:
            return G__28103__2.call(this, x, y);
          case 3:
            return G__28103__3.call(this, x, y, z);
          default:
            var G__28107 = null;
            if (arguments.length > 3) {
              var G__28108__i = 0, G__28108__a = new Array(arguments.length - 3);
              while (G__28108__i < G__28108__a.length) {
                G__28108__a[G__28108__i] = arguments[G__28108__i + 3];
                ++G__28108__i;
              }
              G__28107 = new cljs.core.IndexedSeq(G__28108__a, 0);
            }
            return G__28103__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__28107);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__28103.cljs$lang$maxFixedArity = 3;
      G__28103.cljs$lang$applyTo = G__28103__4.cljs$lang$applyTo;
      G__28103.cljs$core$IFn$_invoke$arity$0 = G__28103__0;
      G__28103.cljs$core$IFn$_invoke$arity$1 = G__28103__1;
      G__28103.cljs$core$IFn$_invoke$arity$2 = G__28103__2;
      G__28103.cljs$core$IFn$_invoke$arity$3 = G__28103__3;
      G__28103.cljs$core$IFn$_invoke$arity$variadic = G__28103__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__28103;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq28075) {
  var G__28076 = cljs.core.first(seq28075);
  var seq28075__$1 = cljs.core.next(seq28075);
  var G__28077 = cljs.core.first(seq28075__$1);
  var seq28075__$2 = cljs.core.next(seq28075__$1);
  var G__28078 = cljs.core.first(seq28075__$2);
  var seq28075__$3 = cljs.core.next(seq28075__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__28076, G__28077, G__28078, seq28075__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args28109 = [];
  var len__9707__auto___28112 = arguments.length;
  var i__9708__auto___28113 = 0;
  while (true) {
    if (i__9708__auto___28113 < len__9707__auto___28112) {
      args28109.push(arguments[i__9708__auto___28113]);
      var G__28114 = i__9708__auto___28113 + 1;
      i__9708__auto___28113 = G__28114;
      continue;
    } else {
    }
    break;
  }
  var G__28111 = args28109.length;
  switch(G__28111) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28109.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__28116 = cljs.core.next(coll);
      coll = G__28116;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__28117 = n - 1;
      var G__28118 = cljs.core.next(coll);
      n = G__28117;
      coll = G__28118;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args28119 = [];
  var len__9707__auto___28122 = arguments.length;
  var i__9708__auto___28123 = 0;
  while (true) {
    if (i__9708__auto___28123 < len__9707__auto___28122) {
      args28119.push(arguments[i__9708__auto___28123]);
      var G__28124 = i__9708__auto___28123 + 1;
      i__9708__auto___28123 = G__28124;
      continue;
    } else {
    }
    break;
  }
  var G__28121 = args28119.length;
  switch(G__28121) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28119.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__28129 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28129, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28129, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__8632__auto__ = flags;
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_28139 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__8632__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__28140_28146 = cljs.core.first(coll);
          var G__28141_28147 = writer;
          var G__28142_28148 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28140_28146, G__28141_28147, G__28142_28148) : print_one.call(null, G__28140_28146, G__28141_28147, G__28142_28148);
        } else {
        }
        var coll_28149__$1 = cljs.core.next(coll);
        var n_28150 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_28149__$1 && (n_28150 == null || !(n_28150 === 0))) {
            cljs.core._write(writer, sep);
            var G__28143_28151 = cljs.core.first(coll_28149__$1);
            var G__28144_28152 = writer;
            var G__28145_28153 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28143_28151, G__28144_28152, G__28145_28153) : print_one.call(null, G__28143_28151, G__28144_28152, G__28145_28153);
            var G__28154 = cljs.core.next(coll_28149__$1);
            var G__28155 = n_28150 - 1;
            coll_28149__$1 = G__28154;
            n_28150 = G__28155;
            continue;
          } else {
            if (cljs.core.seq(coll_28149__$1) && n_28150 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__8632__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__8632__auto__)) {
                  return or__8632__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_28139;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28162 = arguments.length;
  var i__9708__auto___28163 = 0;
  while (true) {
    if (i__9708__auto___28163 < len__9707__auto___28162) {
      args__9714__auto__.push(arguments[i__9708__auto___28163]);
      var G__28164 = i__9708__auto___28163 + 1;
      i__9708__auto___28163 = G__28164;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__28158 = cljs.core.seq(ss);
  var chunk__28159 = null;
  var count__28160 = 0;
  var i__28161 = 0;
  while (true) {
    if (i__28161 < count__28160) {
      var s = chunk__28159.cljs$core$IIndexed$_nth$arity$2(null, i__28161);
      cljs.core._write(writer, s);
      var G__28165 = seq__28158;
      var G__28166 = chunk__28159;
      var G__28167 = count__28160;
      var G__28168 = i__28161 + 1;
      seq__28158 = G__28165;
      chunk__28159 = G__28166;
      count__28160 = G__28167;
      i__28161 = G__28168;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__28158);
      if (temp__4657__auto__) {
        var seq__28158__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__28158__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__28158__$1);
          var G__28169 = cljs.core.chunk_rest(seq__28158__$1);
          var G__28170 = c__9443__auto__;
          var G__28171 = cljs.core.count(c__9443__auto__);
          var G__28172 = 0;
          seq__28158 = G__28169;
          chunk__28159 = G__28170;
          count__28160 = G__28171;
          i__28161 = G__28172;
          continue;
        } else {
          var s = cljs.core.first(seq__28158__$1);
          cljs.core._write(writer, s);
          var G__28173 = cljs.core.next(seq__28158__$1);
          var G__28174 = null;
          var G__28175 = 0;
          var G__28176 = 0;
          seq__28158 = G__28173;
          chunk__28159 = G__28174;
          count__28160 = G__28175;
          i__28161 = G__28176;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq28156) {
  var G__28157 = cljs.core.first(seq28156);
  var seq28156__$1 = cljs.core.next(seq28156);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__28157, seq28156__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj28178 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj28178;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__8620__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__8620__auto__) {
    var and__8620__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__8620__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__28193_28201 = cljs.core.meta(obj);
      var G__28194_28202 = writer;
      var G__28195_28203 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__28193_28201, G__28194_28202, G__28195_28203) : cljs.core.pr_writer.call(null, G__28193_28201, G__28194_28202, G__28195_28203);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__28197 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__28198 = cljs.core.pr_writer;
            var G__28199 = writer;
            var G__28200 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__28197, G__28198, G__28199, G__28200) : cljs.core.print_map.call(null, G__28197, G__28198, G__28199, G__28200);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__8632__auto__ = name == null;
                    if (or__8632__auto__) {
                      return or__8632__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__28204 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__28204;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__8632__auto__ = name == null;
                          if (or__8632__auto__) {
                            return or__8632__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__28208 = obj;
    var G__28209 = writer;
    var G__28210 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__28208, G__28209, G__28210) : alt_impl.call(null, G__28208, G__28209, G__28210);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__28215 = cljs.core.seq(cljs.core.next(objs));
  var chunk__28216 = null;
  var count__28217 = 0;
  var i__28218 = 0;
  while (true) {
    if (i__28218 < count__28217) {
      var obj = chunk__28216.cljs$core$IIndexed$_nth$arity$2(null, i__28218);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__28219 = seq__28215;
      var G__28220 = chunk__28216;
      var G__28221 = count__28217;
      var G__28222 = i__28218 + 1;
      seq__28215 = G__28219;
      chunk__28216 = G__28220;
      count__28217 = G__28221;
      i__28218 = G__28222;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__28215);
      if (temp__4657__auto__) {
        var seq__28215__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__28215__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first(seq__28215__$1);
          var G__28223 = cljs.core.chunk_rest(seq__28215__$1);
          var G__28224 = c__9443__auto__;
          var G__28225 = cljs.core.count(c__9443__auto__);
          var G__28226 = 0;
          seq__28215 = G__28223;
          chunk__28216 = G__28224;
          count__28217 = G__28225;
          i__28218 = G__28226;
          continue;
        } else {
          var obj = cljs.core.first(seq__28215__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__28227 = cljs.core.next(seq__28215__$1);
          var G__28228 = null;
          var G__28229 = 0;
          var G__28230 = 0;
          seq__28215 = G__28227;
          chunk__28216 = G__28228;
          count__28217 = G__28229;
          i__28218 = G__28230;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args28231 = [];
  var len__9707__auto___28234 = arguments.length;
  var i__9708__auto___28235 = 0;
  while (true) {
    if (i__9708__auto___28235 < len__9707__auto___28234) {
      args28231.push(arguments[i__9708__auto___28235]);
      var G__28236 = i__9708__auto___28235 + 1;
      i__9708__auto___28235 = G__28236;
      continue;
    } else {
    }
    break;
  }
  var G__28233 = args28231.length;
  switch(G__28233) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28231.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28239 = arguments.length;
  var i__9708__auto___28240 = 0;
  while (true) {
    if (i__9708__auto___28240 < len__9707__auto___28239) {
      args__9714__auto__.push(arguments[i__9708__auto___28240]);
      var G__28241 = i__9708__auto___28240 + 1;
      i__9708__auto___28240 = G__28241;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq28238) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28238));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28243 = arguments.length;
  var i__9708__auto___28244 = 0;
  while (true) {
    if (i__9708__auto___28244 < len__9707__auto___28243) {
      args__9714__auto__.push(arguments[i__9708__auto___28244]);
      var G__28245 = i__9708__auto___28244 + 1;
      i__9708__auto___28244 = G__28245;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq28242) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28242));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28247 = arguments.length;
  var i__9708__auto___28248 = 0;
  while (true) {
    if (i__9708__auto___28248 < len__9707__auto___28247) {
      args__9714__auto__.push(arguments[i__9708__auto___28248]);
      var G__28249 = i__9708__auto___28248 + 1;
      i__9708__auto___28248 = G__28249;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq28246) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28246));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__28250__i = 0, G__28250__a = new Array(arguments.length - 0);
      while (G__28250__i < G__28250__a.length) {
        G__28250__a[G__28250__i] = arguments[G__28250__i + 0];
        ++G__28250__i;
      }
      objs = new cljs.core.IndexedSeq(G__28250__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__28251) {
    var objs = cljs.core.seq(arglist__28251);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28253 = arguments.length;
  var i__9708__auto___28254 = 0;
  while (true) {
    if (i__9708__auto___28254 < len__9707__auto___28253) {
      args__9714__auto__.push(arguments[i__9708__auto___28254]);
      var G__28255 = i__9708__auto___28254 + 1;
      i__9708__auto___28254 = G__28255;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq28252) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28252));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28257 = arguments.length;
  var i__9708__auto___28258 = 0;
  while (true) {
    if (i__9708__auto___28258 < len__9707__auto___28257) {
      args__9714__auto__.push(arguments[i__9708__auto___28258]);
      var G__28259 = i__9708__auto___28258 + 1;
      i__9708__auto___28258 = G__28259;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq28256) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28256));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28261 = arguments.length;
  var i__9708__auto___28262 = 0;
  while (true) {
    if (i__9708__auto___28262 < len__9707__auto___28261) {
      args__9714__auto__.push(arguments[i__9708__auto___28262]);
      var G__28263 = i__9708__auto___28262 + 1;
      i__9708__auto___28262 = G__28263;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq28260) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28260));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28265 = arguments.length;
  var i__9708__auto___28266 = 0;
  while (true) {
    if (i__9708__auto___28266 < len__9707__auto___28265) {
      args__9714__auto__.push(arguments[i__9708__auto___28266]);
      var G__28267 = i__9708__auto___28266 + 1;
      i__9708__auto___28266 = G__28267;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq28264) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28264));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__28274_28280 = cljs.core.key(e);
    var G__28275_28281 = w;
    var G__28276_28282 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28274_28280, G__28275_28281, G__28276_28282) : print_one.call(null, G__28274_28280, G__28275_28281, G__28276_28282);
    cljs.core._write(w, " ");
    var G__28277 = cljs.core.val(e);
    var G__28278 = w;
    var G__28279 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28277, G__28278, G__28279) : print_one.call(null, G__28277, G__28278, G__28279);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28286 = arguments.length;
  var i__9708__auto___28287 = 0;
  while (true) {
    if (i__9708__auto___28287 < len__9707__auto___28286) {
      args__9714__auto__.push(arguments[i__9708__auto___28287]);
      var G__28288 = i__9708__auto___28287 + 1;
      i__9708__auto___28287 = G__28288;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq28283) {
  var G__28284 = cljs.core.first(seq28283);
  var seq28283__$1 = cljs.core.next(seq28283);
  var G__28285 = cljs.core.first(seq28283__$1);
  var seq28283__$2 = cljs.core.next(seq28283__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__28284, G__28285, seq28283__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args28289 = [];
  var len__9707__auto___28292 = arguments.length;
  var i__9708__auto___28293 = 0;
  while (true) {
    if (i__9708__auto___28293 < len__9707__auto___28292) {
      args28289.push(arguments[i__9708__auto___28293]);
      var G__28294 = i__9708__auto___28293 + 1;
      i__9708__auto___28293 = G__28294;
      continue;
    } else {
    }
    break;
  }
  var G__28291 = args28289.length;
  switch(G__28291) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28289.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__28296_SHARP_, p2__28297_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__28296_SHARP_, p2__28297_SHARP_) : rf.call(null, p1__28296_SHARP_, p2__28297_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__28298 = null;
      var G__28298__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__28298__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__28298__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__28298 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__28298__0.call(this);
          case 1:
            return G__28298__1.call(this, result);
          case 2:
            return G__28298__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__28298.cljs$core$IFn$_invoke$arity$0 = G__28298__0;
      G__28298.cljs$core$IFn$_invoke$arity$1 = G__28298__1;
      G__28298.cljs$core$IFn$_invoke$arity$2 = G__28298__2;
      return G__28298;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args28299 = [];
  var len__9707__auto___28302 = arguments.length;
  var i__9708__auto___28303 = 0;
  while (true) {
    if (i__9708__auto___28303 < len__9707__auto___28302) {
      args28299.push(arguments[i__9708__auto___28303]);
      var G__28304 = i__9708__auto___28303 + 1;
      i__9708__auto___28303 = G__28304;
      continue;
    } else {
    }
    break;
  }
  var G__28301 = args28299.length;
  switch(G__28301) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28299.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__28306 = null;
        var G__28306__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__28306__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__28306__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__28306 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__28306__0.call(this);
            case 1:
              return G__28306__1.call(this, result);
            case 2:
              return G__28306__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__28306.cljs$core$IFn$_invoke$arity$0 = G__28306__0;
        G__28306.cljs$core$IFn$_invoke$arity$1 = G__28306__1;
        G__28306.cljs$core$IFn$_invoke$arity$2 = G__28306__2;
        return G__28306;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args28307 = [];
  var len__9707__auto___28310 = arguments.length;
  var i__9708__auto___28311 = 0;
  while (true) {
    if (i__9708__auto___28311 < len__9707__auto___28310) {
      args28307.push(arguments[i__9708__auto___28311]);
      var G__28312 = i__9708__auto___28311 + 1;
      i__9708__auto___28311 = G__28312;
      continue;
    } else {
    }
    break;
  }
  var G__28309 = args28307.length;
  switch(G__28309) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28307.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__28314 = null;
  var G__28314__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__28314__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__28314 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__28314__1.call(this, x);
      case 2:
        return G__28314__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28314.cljs$core$IFn$_invoke$arity$1 = G__28314__1;
  G__28314.cljs$core$IFn$_invoke$arity$2 = G__28314__2;
  return G__28314;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__28315 = null;
  var G__28315__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__28315__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__28315 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__28315__1.call(this, x);
      case 2:
        return G__28315__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28315.cljs$core$IFn$_invoke$arity$1 = G__28315__1;
  G__28315.cljs$core$IFn$_invoke$arity$2 = G__28315__2;
  return G__28315;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9638__auto__ = this;
  return cljs.core.es6_iterator(this__9638__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28317 = arguments.length;
  var i__9708__auto___28318 = 0;
  while (true) {
    if (i__9708__auto___28318 < len__9707__auto___28317) {
      args__9714__auto__.push(arguments[i__9708__auto___28318]);
      var G__28319 = i__9708__auto___28318 + 1;
      i__9708__auto___28318 = G__28319;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq28316) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28316));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__28321_SHARP_, p2__28320_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__28320_SHARP_) : proc.call(null, p2__28320_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__9295__auto__ = x == null ? null : x;
    var m__9296__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto__.call(null, x);
    } else {
      var m__9296__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__9295__auto__ = x == null ? null : x;
    var m__9296__auto__ = cljs.core._key__GT_js[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto__.call(null, x);
    } else {
      var m__9296__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__9296__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__28344_28358 = cljs.core.seq(x);
            var chunk__28345_28359 = null;
            var count__28346_28360 = 0;
            var i__28347_28361 = 0;
            while (true) {
              if (i__28347_28361 < count__28346_28360) {
                var vec__28348_28362 = chunk__28345_28359.cljs$core$IIndexed$_nth$arity$2(null, i__28347_28361);
                var k_28363 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28348_28362, 0, null);
                var v_28364 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28348_28362, 1, null);
                m[cljs.core.key__GT_js(k_28363)] = cljs$core$clj__GT_js(v_28364);
                var G__28365 = seq__28344_28358;
                var G__28366 = chunk__28345_28359;
                var G__28367 = count__28346_28360;
                var G__28368 = i__28347_28361 + 1;
                seq__28344_28358 = G__28365;
                chunk__28345_28359 = G__28366;
                count__28346_28360 = G__28367;
                i__28347_28361 = G__28368;
                continue;
              } else {
                var temp__4657__auto___28369 = cljs.core.seq(seq__28344_28358);
                if (temp__4657__auto___28369) {
                  var seq__28344_28370__$1 = temp__4657__auto___28369;
                  if (cljs.core.chunked_seq_QMARK_(seq__28344_28370__$1)) {
                    var c__9443__auto___28371 = cljs.core.chunk_first(seq__28344_28370__$1);
                    var G__28372 = cljs.core.chunk_rest(seq__28344_28370__$1);
                    var G__28373 = c__9443__auto___28371;
                    var G__28374 = cljs.core.count(c__9443__auto___28371);
                    var G__28375 = 0;
                    seq__28344_28358 = G__28372;
                    chunk__28345_28359 = G__28373;
                    count__28346_28360 = G__28374;
                    i__28347_28361 = G__28375;
                    continue;
                  } else {
                    var vec__28351_28376 = cljs.core.first(seq__28344_28370__$1);
                    var k_28377 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28351_28376, 0, null);
                    var v_28378 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28351_28376, 1, null);
                    m[cljs.core.key__GT_js(k_28377)] = cljs$core$clj__GT_js(v_28378);
                    var G__28379 = cljs.core.next(seq__28344_28370__$1);
                    var G__28380 = null;
                    var G__28381 = 0;
                    var G__28382 = 0;
                    seq__28344_28358 = G__28379;
                    chunk__28345_28359 = G__28380;
                    count__28346_28360 = G__28381;
                    i__28347_28361 = G__28382;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__28354_28383 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__28355_28384 = null;
              var count__28356_28385 = 0;
              var i__28357_28386 = 0;
              while (true) {
                if (i__28357_28386 < count__28356_28385) {
                  var x_28387__$1 = chunk__28355_28384.cljs$core$IIndexed$_nth$arity$2(null, i__28357_28386);
                  arr.push(x_28387__$1);
                  var G__28388 = seq__28354_28383;
                  var G__28389 = chunk__28355_28384;
                  var G__28390 = count__28356_28385;
                  var G__28391 = i__28357_28386 + 1;
                  seq__28354_28383 = G__28388;
                  chunk__28355_28384 = G__28389;
                  count__28356_28385 = G__28390;
                  i__28357_28386 = G__28391;
                  continue;
                } else {
                  var temp__4657__auto___28392 = cljs.core.seq(seq__28354_28383);
                  if (temp__4657__auto___28392) {
                    var seq__28354_28393__$1 = temp__4657__auto___28392;
                    if (cljs.core.chunked_seq_QMARK_(seq__28354_28393__$1)) {
                      var c__9443__auto___28394 = cljs.core.chunk_first(seq__28354_28393__$1);
                      var G__28395 = cljs.core.chunk_rest(seq__28354_28393__$1);
                      var G__28396 = c__9443__auto___28394;
                      var G__28397 = cljs.core.count(c__9443__auto___28394);
                      var G__28398 = 0;
                      seq__28354_28383 = G__28395;
                      chunk__28355_28384 = G__28396;
                      count__28356_28385 = G__28397;
                      i__28357_28386 = G__28398;
                      continue;
                    } else {
                      var x_28399__$1 = cljs.core.first(seq__28354_28393__$1);
                      arr.push(x_28399__$1);
                      var G__28400 = cljs.core.next(seq__28354_28393__$1);
                      var G__28401 = null;
                      var G__28402 = 0;
                      var G__28403 = 0;
                      seq__28354_28383 = G__28400;
                      chunk__28355_28384 = G__28401;
                      count__28356_28385 = G__28402;
                      i__28357_28386 = G__28403;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__9295__auto__ = x == null ? null : x;
    var m__9296__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__9296__auto__.call(null, x, options);
    } else {
      var m__9296__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__9296__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args28404 = [];
  var len__9707__auto___28429 = arguments.length;
  var i__9708__auto___28430 = 0;
  while (true) {
    if (i__9708__auto___28430 < len__9707__auto___28429) {
      args28404.push(arguments[i__9708__auto___28430]);
      var G__28431 = i__9708__auto___28430 + 1;
      i__9708__auto___28430 = G__28431;
      continue;
    } else {
    }
    break;
  }
  var G__28408 = args28404.length;
  switch(G__28408) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args28404.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9726__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__28409 = opts;
  var map__28409__$1 = (!(map__28409 == null) ? map__28409.cljs$lang$protocol_mask$partition0$ & 64 || map__28409.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__28409) : map__28409;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28409__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__28409, map__28409__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__9412__auto__ = function(map__28409, map__28409__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__28423(s__28424) {
                      return new cljs.core.LazySeq(null, function(map__28409, map__28409__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__28424__$1 = s__28424;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__28424__$1);
                            if (temp__4657__auto__) {
                              var s__28424__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__28424__$2)) {
                                var c__9410__auto__ = cljs.core.chunk_first(s__28424__$2);
                                var size__9411__auto__ = cljs.core.count(c__9410__auto__);
                                var b__28426 = cljs.core.chunk_buffer(size__9411__auto__);
                                if (function() {
                                  var i__28425 = 0;
                                  while (true) {
                                    if (i__28425 < size__9411__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__9410__auto__, i__28425);
                                      cljs.core.chunk_append(b__28426, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__28433 = i__28425 + 1;
                                      i__28425 = G__28433;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__28426), cljs$core$thisfn_$_iter__28423(cljs.core.chunk_rest(s__28424__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__28426), null);
                                }
                              } else {
                                var k = cljs.core.first(s__28424__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__28423(cljs.core.rest(s__28424__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__28409, map__28409__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__28409, map__28409__$1, keywordize_keys, keyfn);
                  return iter__9412__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__28409, map__28409__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq28405) {
  var G__28406 = cljs.core.first(seq28405);
  var seq28405__$1 = cljs.core.next(seq28405);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__28406, seq28405__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__28435 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28435) : cljs.core.atom.call(null, G__28435);
  }();
  return function(mem) {
    return function() {
      var G__28436__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__28436 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__28437__i = 0, G__28437__a = new Array(arguments.length - 0);
          while (G__28437__i < G__28437__a.length) {
            G__28437__a[G__28437__i] = arguments[G__28437__i + 0];
            ++G__28437__i;
          }
          args = new cljs.core.IndexedSeq(G__28437__a, 0);
        }
        return G__28436__delegate.call(this, args);
      };
      G__28436.cljs$lang$maxFixedArity = 0;
      G__28436.cljs$lang$applyTo = function(arglist__28438) {
        var args = cljs.core.seq(arglist__28438);
        return G__28436__delegate(args);
      };
      G__28436.cljs$core$IFn$_invoke$arity$variadic = G__28436__delegate;
      return G__28436;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args28439 = [];
  var len__9707__auto___28444 = arguments.length;
  var i__9708__auto___28445 = 0;
  while (true) {
    if (i__9708__auto___28445 < len__9707__auto___28444) {
      args28439.push(arguments[i__9708__auto___28445]);
      var G__28446 = i__9708__auto___28445 + 1;
      i__9708__auto___28445 = G__28446;
      continue;
    } else {
    }
    break;
  }
  var G__28443 = args28439.length;
  switch(G__28443) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args28439.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9726__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__28448 = ret;
      f = G__28448;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq28440) {
  var G__28441 = cljs.core.first(seq28440);
  var seq28440__$1 = cljs.core.next(seq28440);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__28441, seq28440__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args28449 = [];
  var len__9707__auto___28452 = arguments.length;
  var i__9708__auto___28453 = 0;
  while (true) {
    if (i__9708__auto___28453 < len__9707__auto___28452) {
      args28449.push(arguments[i__9708__auto___28453]);
      var G__28454 = i__9708__auto___28453 + 1;
      i__9708__auto___28453 = G__28454;
      continue;
    } else {
    }
    break;
  }
  var G__28451 = args28449.length;
  switch(G__28451) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28449.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__28457 = Math.random() * n;
  return Math.floor(G__28457);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__28459 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28459) : cljs.core.atom.call(null, G__28459);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28462 = arguments.length;
  var i__9708__auto___28463 = 0;
  while (true) {
    if (i__9708__auto___28463 < len__9707__auto___28462) {
      args__9714__auto__.push(arguments[i__9708__auto___28463]);
      var G__28464 = i__9708__auto___28463 + 1;
      i__9708__auto___28463 = G__28464;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq28460) {
  var G__28461 = cljs.core.first(seq28460);
  var seq28460__$1 = cljs.core.next(seq28460);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__28461, seq28460__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args28465 = [];
  var len__9707__auto___28469 = arguments.length;
  var i__9708__auto___28470 = 0;
  while (true) {
    if (i__9708__auto___28470 < len__9707__auto___28469) {
      args28465.push(arguments[i__9708__auto___28470]);
      var G__28471 = i__9708__auto___28470 + 1;
      i__9708__auto___28470 = G__28471;
      continue;
    } else {
    }
    break;
  }
  var G__28467 = args28465.length;
  switch(G__28467) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28465.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__28468 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28468) : cljs.core.deref.call(null, G__28468);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__8632__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__8632__auto__) {
    return or__8632__auto__;
  } else {
    var or__8632__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__8632__auto____$1) {
      return or__8632__auto____$1;
    } else {
      var and__8620__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__8620__auto__) {
        var and__8620__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__8620__auto____$1) {
          var and__8620__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__8620__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__28473 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__28474 = i + 1;
                ret = G__28473;
                i = G__28474;
                continue;
              }
              break;
            }
          } else {
            return and__8620__auto____$2;
          }
        } else {
          return and__8620__auto____$1;
        }
      } else {
        return and__8620__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args28475 = [];
  var len__9707__auto___28479 = arguments.length;
  var i__9708__auto___28480 = 0;
  while (true) {
    if (i__9708__auto___28480 < len__9707__auto___28479) {
      args28475.push(arguments[i__9708__auto___28480]);
      var G__28481 = i__9708__auto___28480 + 1;
      i__9708__auto___28480 = G__28481;
      continue;
    } else {
    }
    break;
  }
  var G__28477 = args28475.length;
  switch(G__28477) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28475.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__28478 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28478) : cljs.core.deref.call(null, G__28478);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args28483 = [];
  var len__9707__auto___28487 = arguments.length;
  var i__9708__auto___28488 = 0;
  while (true) {
    if (i__9708__auto___28488 < len__9707__auto___28487) {
      args28483.push(arguments[i__9708__auto___28488]);
      var G__28489 = i__9708__auto___28488 + 1;
      i__9708__auto___28488 = G__28489;
      continue;
    } else {
    }
    break;
  }
  var G__28485 = args28483.length;
  switch(G__28485) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28483.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__28486 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28486) : cljs.core.deref.call(null, G__28486);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args28491 = [];
  var len__9707__auto___28495 = arguments.length;
  var i__9708__auto___28496 = 0;
  while (true) {
    if (i__9708__auto___28496 < len__9707__auto___28495) {
      args28491.push(arguments[i__9708__auto___28496]);
      var G__28497 = i__9708__auto___28496 + 1;
      i__9708__auto___28496 = G__28497;
      continue;
    } else {
    }
    break;
  }
  var G__28493 = args28491.length;
  switch(G__28493) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28491.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__28494 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28494) : cljs.core.deref.call(null, G__28494);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args28499 = [];
  var len__9707__auto___28502 = arguments.length;
  var i__9708__auto___28503 = 0;
  while (true) {
    if (i__9708__auto___28503 < len__9707__auto___28502) {
      args28499.push(arguments[i__9708__auto___28503]);
      var G__28504 = i__9708__auto___28503 + 1;
      i__9708__auto___28503 = G__28504;
      continue;
    } else {
    }
    break;
  }
  var G__28501 = args28499.length;
  switch(G__28501) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28499.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__8632__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args28509 = [];
  var len__9707__auto___28512 = arguments.length;
  var i__9708__auto___28513 = 0;
  while (true) {
    if (i__9708__auto___28513 < len__9707__auto___28512) {
      args28509.push(arguments[i__9708__auto___28513]);
      var G__28514 = i__9708__auto___28513 + 1;
      i__9708__auto___28513 = G__28514;
      continue;
    } else {
    }
    break;
  }
  var G__28511 = args28509.length;
  switch(G__28511) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28509.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__28506_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__28506_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__28506_SHARP_), cljs.core.second(p1__28506_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__28507_SHARP_, p2__28508_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__28507_SHARP_, p2__28508_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__8632__auto__ = cljs.core.truth_(function() {
    var and__8620__auto__ = xprefs;
    if (cljs.core.truth_(and__8620__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__8620__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    var or__8632__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__28528 = cljs.core.rest(ps);
          ps = G__28528;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__8632__auto____$1)) {
      return or__8632__auto____$1;
    } else {
      var or__8632__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__28529 = cljs.core.rest(ps);
            ps = G__28529;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__8632__auto____$2)) {
        return or__8632__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__8632__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__28534) {
    var vec__28535 = p__28534;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28535, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28535, 1, null);
    var e = vec__28535;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__8632__auto__ = be == null;
        if (or__8632__auto__) {
          return or__8632__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._reset[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto__.call(null, mf);
    } else {
      var m__9296__auto____$1 = cljs.core._reset["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._add_method[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__9296__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__9296__auto____$1 = cljs.core._add_method["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__9296__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._remove_method[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__9296__auto__.call(null, mf, dispatch_val);
    } else {
      var m__9296__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__9296__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._prefer_method[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__9296__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__9296__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__9296__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._get_method[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__9296__auto__.call(null, mf, dispatch_val);
    } else {
      var m__9296__auto____$1 = cljs.core._get_method["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__9296__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._methods[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto__.call(null, mf);
    } else {
      var m__9296__auto____$1 = cljs.core._methods["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._prefers[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto__.call(null, mf);
    } else {
      var m__9296__auto____$1 = cljs.core._prefers["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto__.call(null, mf);
    } else {
      var m__9296__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__9295__auto__ = mf == null ? null : mf;
    var m__9296__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto__.call(null, mf);
    } else {
      var m__9296__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__9296__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__9296__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__28539 = null;
  var G__28539__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__28539__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__28539__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__28539__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__28539__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__28539__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__28539__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__28539__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__28539__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__28539__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__28539__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__28539__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__28539__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__28539__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__28539__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__28539__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__28539__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__28539__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__28539__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__28539__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__28539__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__28539__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__28539 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__28539__1.call(this, self__);
      case 2:
        return G__28539__2.call(this, self__, a);
      case 3:
        return G__28539__3.call(this, self__, a, b);
      case 4:
        return G__28539__4.call(this, self__, a, b, c);
      case 5:
        return G__28539__5.call(this, self__, a, b, c, d);
      case 6:
        return G__28539__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__28539__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__28539__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__28539__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__28539__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__28539__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__28539__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__28539__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__28539__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__28539__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__28539__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__28539__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__28539__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__28539__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__28539__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__28539__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__28539__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28539.cljs$core$IFn$_invoke$arity$1 = G__28539__1;
  G__28539.cljs$core$IFn$_invoke$arity$2 = G__28539__2;
  G__28539.cljs$core$IFn$_invoke$arity$3 = G__28539__3;
  G__28539.cljs$core$IFn$_invoke$arity$4 = G__28539__4;
  G__28539.cljs$core$IFn$_invoke$arity$5 = G__28539__5;
  G__28539.cljs$core$IFn$_invoke$arity$6 = G__28539__6;
  G__28539.cljs$core$IFn$_invoke$arity$7 = G__28539__7;
  G__28539.cljs$core$IFn$_invoke$arity$8 = G__28539__8;
  G__28539.cljs$core$IFn$_invoke$arity$9 = G__28539__9;
  G__28539.cljs$core$IFn$_invoke$arity$10 = G__28539__10;
  G__28539.cljs$core$IFn$_invoke$arity$11 = G__28539__11;
  G__28539.cljs$core$IFn$_invoke$arity$12 = G__28539__12;
  G__28539.cljs$core$IFn$_invoke$arity$13 = G__28539__13;
  G__28539.cljs$core$IFn$_invoke$arity$14 = G__28539__14;
  G__28539.cljs$core$IFn$_invoke$arity$15 = G__28539__15;
  G__28539.cljs$core$IFn$_invoke$arity$16 = G__28539__16;
  G__28539.cljs$core$IFn$_invoke$arity$17 = G__28539__17;
  G__28539.cljs$core$IFn$_invoke$arity$18 = G__28539__18;
  G__28539.cljs$core$IFn$_invoke$arity$19 = G__28539__19;
  G__28539.cljs$core$IFn$_invoke$arity$20 = G__28539__20;
  G__28539.cljs$core$IFn$_invoke$arity$21 = G__28539__21;
  G__28539.cljs$core$IFn$_invoke$arity$22 = G__28539__22;
  return G__28539;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args28538) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args28538)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = true;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__28540 = self__.uuid;
  var G__28541 = other.uuid;
  return goog.array.defaultCompare(G__28540, G__28541);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args28544 = [];
  var len__9707__auto___28547 = arguments.length;
  var i__9708__auto___28548 = 0;
  while (true) {
    if (i__9708__auto___28548 < len__9707__auto___28547) {
      args28544.push(arguments[i__9708__auto___28548]);
      var G__28549 = i__9708__auto___28548 + 1;
      i__9708__auto___28548 = G__28549;
      continue;
    } else {
    }
    break;
  }
  var G__28546 = args28544.length;
  switch(G__28546) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28544.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, 
  "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, 
  null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, 
  "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__28551 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__28551) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__28553_SHARP_, p2__28554_SHARP_) {
      goog.object.set(p1__28553_SHARP_, p2__28554_SHARP_, true);
      return p1__28553_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__28557 = cljs.core.next(ks__$1);
          var G__28558 = [cljs.core.str(function() {
            var G__28556 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__28556), cljs.core.str("|")].join("");
            } else {
              return G__28556;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__28557;
          ret = G__28558;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_28559 = 0;
  while (true) {
    if (i_28559 < name.length) {
      var c_28560 = name.charAt(i_28559);
      var sub_28561 = goog.object.get(cljs.core.CHAR_MAP, c_28560);
      if (!(sub_28561 == null)) {
        sb.append(sub_28561);
      } else {
        sb.append(c_28560);
      }
      var G__28562 = i_28559 + 1;
      i_28559 = G__28562;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__28566 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28566, 0, null);
      var G__28569 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__28570 = r.lastIndex;
      ret = G__28569;
      last_match_end = G__28570;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write(writer__9239__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__28575 = function() {
          var G__28573 = ctxt;
          var G__28574 = cljs.core.first(xs);
          return goog.object.get(G__28573, G__28574);
        }();
        var G__28576 = cljs.core.next(xs);
        ctxt = G__28575;
        xs = G__28576;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__28580 = cljs.core._STAR_target_STAR_;
  switch(G__28580) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__28582 = cljs.core.first(segs);
            return eval(G__28582);
          } catch (e28581) {
            if (e28581 instanceof ReferenceError) {
              var e = e28581;
              return null;
            } else {
              throw e28581;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args28584 = [];
  var len__9707__auto___28587 = arguments.length;
  var i__9708__auto___28588 = 0;
  while (true) {
    if (i__9708__auto___28588 < len__9707__auto___28587) {
      args28584.push(arguments[i__9708__auto___28588]);
      var G__28589 = i__9708__auto___28588 + 1;
      i__9708__auto___28588 = G__28589;
      continue;
    } else {
    }
    break;
  }
  var G__28586 = args28584.length;
  switch(G__28586) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28584.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__28592 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28592) : cljs.core.atom.call(null, G__28592);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__28594 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28594) : cljs.core.atom.call(null, G__28594);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__9295__auto__ = port == null ? null : port;
    var m__9296__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, port, fn1_handler);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__9295__auto__ = port == null ? null : port;
    var m__9296__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__9295__auto__ = chan == null ? null : chan;
    var m__9296__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, chan);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__9295__auto__ = chan == null ? null : chan;
    var m__9296__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, chan);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__9295__auto__ = h == null ? null : h;
    var m__9296__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, h);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function cljs$core$async$impl$protocols$blockable_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(h);
  } else {
    var x__9295__auto__ = h == null ? null : h;
    var m__9296__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, h);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.blockable_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.blockable?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__9295__auto__ = h == null ? null : h;
    var m__9296__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, h);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__9295__auto__ = b == null ? null : b;
    var m__9296__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, b);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__9295__auto__ = b == null ? null : b;
    var m__9296__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, b);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__9295__auto__ = b == null ? null : b;
    var m__9296__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, b, itm);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function cljs$core$async$impl$protocols$close_buf_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(b);
  } else {
    var x__9295__auto__ = b == null ? null : b;
    var m__9296__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, b);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.protocols.close_buf_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var args28730 = [];
  var len__9707__auto___28733 = arguments.length;
  var i__9708__auto___28734 = 0;
  while (true) {
    if (i__9708__auto___28734 < len__9707__auto___28733) {
      args28730.push(arguments[i__9708__auto___28734]);
      var G__28735 = i__9708__auto___28734 + 1;
      i__9708__auto___28734 = G__28735;
      continue;
    } else {
    }
    break;
  }
  var G__28732 = args28730.length;
  switch(G__28732) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28730.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__28739 = cnt + 1;
      cnt = G__28739;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__9547__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__9547__auto__) {
      var v_28740 = this$.pop();
      if (keep_QMARK_.call(null, v_28740)) {
        this$.unshift(v_28740);
      } else {
      }
      var G__28741 = x + 1;
      x = G__28741;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str("(\x3e n 0)")].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
if (typeof cljs.core.async.impl.buffers.NO_VAL !== "undefined") {
} else {
  cljs.core.async.impl.buffers.NO_VAL = new Object;
}
cljs.core.async.impl.buffers.undelivered_QMARK_ = function cljs$core$async$impl$buffers$undelivered_QMARK_(val) {
  return cljs.core.async.impl.buffers.NO_VAL === val;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    self__.val = itm;
  } else {
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return self__.val = null;
  } else {
    return null;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return 0;
  } else {
    return 1;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function cljs$core$async$impl$buffers$__GT_PromiseBuffer(val) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(val);
};
cljs.core.async.impl.buffers.promise_buffer = function cljs$core$async$impl$buffers$promise_buffer() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  return (function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(null, args);
    }, interval);
  });
};
goog.functions.throttle = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = null;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(null, args);
  };
  return (function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  });
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.useSetImmediate_ = function() {
  if (!goog.global.Window || !goog.global.Window.prototype) {
    return true;
  }
  if (goog.labs.userAgent.browser.isEdge() || goog.global.Window.prototype.setImmediate != goog.global.setImmediate) {
    return true;
  }
  return false;
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = (document.createElement(goog.dom.TagName.IFRAME));
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_28744 = 0;
  while (true) {
    var m_28745 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_28745 == null) {
    } else {
      m_28745.call(null);
      if (count_28744 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__28746 = count_28744 + 1;
        count_28744 = G__28746;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__8620__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__8620__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752 = function(box, val, meta28753) {
      this.box = box;
      this.val = val;
      this.meta28753 = meta28753;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28754, meta28753__$1) {
      var self__ = this;
      var _28754__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752(self__.box, self__.val, meta28753__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28754) {
      var self__ = this;
      var _28754__$1 = this;
      return self__.meta28753;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta28753", "meta28753", 389061009, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels28752";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels28752");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels28752 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels28752(box__$1, val__$1, meta28753) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752(box__$1, val__$1, meta28753);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels28752(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__9295__auto__ = this$ == null ? null : this$;
    var m__9296__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, this$);
    } else {
      var m__9296__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_28755 = self__.puts.pop();
    if (putter_28755 == null) {
    } else {
      var put_handler_28756 = putter_28755.handler;
      var val_28757 = putter_28755.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_28756)) {
        var put_cb_28758 = cljs.core.async.impl.protocols.commit.call(null, put_handler_28756);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_28758, put_handler_28756, val_28757, putter_28755, this$__$1) {
          return function() {
            return put_cb_28758.call(null, true);
          };
        }(put_cb_28758, put_handler_28756, val_28757, putter_28755, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str("(not (nil? val))")].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = self__.buf;
      if (cljs.core.truth_(and__8620__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__8620__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_28759 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_28759)) {
            var take_cb_28760 = cljs.core.async.impl.protocols.commit.call(null, taker_28759);
            var val_28761__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_28760, val_28761__$1, taker_28759, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_28760.call(null, val_28761__$1);
              };
            }(take_cb_28760, val_28761__$1, taker_28759, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)")].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        } else {
        }
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_28762 = self__.puts.pop();
          if (putter_28762 == null) {
          } else {
            var put_handler_28763 = putter_28762.handler;
            var val_28764 = putter_28762.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_28763)) {
              var put_cb_28765 = cljs.core.async.impl.protocols.commit.call(null, put_handler_28763);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_28765, put_handler_28763, val_28764, putter_28762, _, retval, this$__$1) {
                return function() {
                  return put_cb_28765.call(null, true);
                };
              }(put_cb_28765, put_handler_28763, val_28764, putter_28762, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_28764))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__8620__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__8620__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__8620__auto__;
            }
          }())) {
            var has_val = function() {
              var and__8620__auto__ = self__.buf;
              if (cljs.core.truth_(and__8620__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__8620__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)")].join(""));
            }
            self__.takes.unbounded_unshift(handler);
          } else {
          }
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = self__.buf;
      if (cljs.core.truth_(and__8620__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__8620__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_28766 = self__.takes.pop();
      if (taker_28766 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_28766)) {
          var take_cb_28767 = cljs.core.async.impl.protocols.commit.call(null, taker_28766);
          var val_28768 = cljs.core.truth_(function() {
            var and__8620__auto__ = self__.buf;
            if (cljs.core.truth_(and__8620__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__8620__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_28767, val_28768, taker_28766, this$__$1) {
            return function() {
              return take_cb_28767.call(null, val_28768);
            };
          }(take_cb_28767, val_28768, taker_28766, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    if (cljs.core.truth_(self__.buf)) {
      cljs.core.async.impl.protocols.close_buf_BANG_.call(null, self__.buf);
    } else {
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__8632__auto__ = exh;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var args28769 = [];
  var len__9707__auto___28774 = arguments.length;
  var i__9708__auto___28775 = 0;
  while (true) {
    if (i__9708__auto___28775 < len__9707__auto___28774) {
      args28769.push(arguments[i__9708__auto___28775]);
      var G__28776 = i__9708__auto___28775 + 1;
      i__9708__auto___28775 = G__28776;
      continue;
    } else {
    }
    break;
  }
  var G__28771 = args28769.length;
  switch(G__28771) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28769.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__28778 = null;
        var G__28778__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e28772) {
            var t = e28772;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__28778__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e28773) {
            var t = e28773;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__28778 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__28778__1.call(this, buf__$1);
            case 2:
              return G__28778__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__28778.cljs$core$IFn$_invoke$arity$1 = G__28778__1;
        G__28778.cljs$core$IFn$_invoke$arity$2 = G__28778__2;
        return G__28778;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253 = function(fn_handler, f, meta30254) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta30254 = meta30254;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_30255, meta30254__$1) {
      var self__ = this;
      var _30255__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253(self__.fn_handler, self__.f, meta30254__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.prototype.cljs$core$IMeta$_meta$arity$1 = function(_30255) {
      var self__ = this;
      var _30255__$1 = this;
      return self__.meta30254;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta30254", "meta30254", 881504943, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers30253";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers30253");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers30253 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers30253(fn_handler__$1, f__$1, meta30254) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253(fn_handler__$1, f__$1, meta30254);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers30253(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e30257) {
    if (e30257 instanceof Object) {
      var ex = e30257;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e30257;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_30260_30262 = state;
    statearr_30260_30262[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_30260_30262[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_30261_30263 = state;
    statearr_30261_30263[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_30261_30263[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_30266_30268 = state;
    statearr_30266_30268[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_30266_30268[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_30267_30269 = state;
    statearr_30267_30269[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_30267_30269[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k30271, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__30273 = k30271 instanceof cljs.core.Keyword ? k30271.fqn : null;
  switch(G__30273) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k30271, else__9257__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__30270) {
  var self__ = this;
  var G__30270__$1 = this;
  return new cljs.core.RecordIter(0, G__30270__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__30270) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__30274 = cljs.core.keyword_identical_QMARK_;
  var expr__30275 = k__9262__auto__;
  if (cljs.core.truth_(pred__30274.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__30275))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__30270, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__30274.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__30275))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__30270, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__30274.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__30275))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__30270, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__30274.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__30275))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__30270, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__30274.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__30275))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__30270, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__30270), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__30270) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__30270, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__30272) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__30272), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__30272), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__30272), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__30272), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__30272), null, cljs.core.dissoc.call(null, G__30272, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_30279 = state;
  statearr_30279[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_30279;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = exception;
      if (cljs.core.truth_(and__8620__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__8620__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__8620__auto__ = exception;
        if (cljs.core.truth_(and__8620__auto__)) {
          var and__8620__auto____$1 = catch_block;
          if (cljs.core.truth_(and__8620__auto____$1)) {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), catch_exception) || exception instanceof catch_exception;
          } else {
            return and__8620__auto____$1;
          }
        } else {
          return and__8620__auto__;
        }
      }())) {
        var statearr_30285 = state;
        statearr_30285[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_30285[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_30285[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_30285[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_30285;
      } else {
        if (cljs.core.truth_(function() {
          var and__8620__auto__ = exception;
          if (cljs.core.truth_(and__8620__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__8620__auto__;
          }
        }())) {
          var statearr_30286_30290 = state;
          statearr_30286_30290[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__30291 = state;
          state = G__30291;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__8620__auto__ = exception;
            if (cljs.core.truth_(and__8620__auto__)) {
              var and__8620__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__8620__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__8620__auto____$1;
              }
            } else {
              return and__8620__auto__;
            }
          }())) {
            var statearr_30287 = state;
            statearr_30287[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_30287[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_30287;
          } else {
            if (cljs.core.truth_(function() {
              var and__8620__auto__ = cljs.core.not.call(null, exception);
              if (and__8620__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__8620__auto__;
              }
            }())) {
              var statearr_30288 = state;
              statearr_30288[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_30288[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_30288;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_30289 = state;
                statearr_30289[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_30289[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_30289;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var args30294 = [];
  var len__9707__auto___30297 = arguments.length;
  var i__9708__auto___30298 = 0;
  while (true) {
    if (i__9708__auto___30298 < len__9707__auto___30297) {
      args30294.push(arguments[i__9708__auto___30298]);
      var G__30299 = i__9708__auto___30298 + 1;
      i__9708__auto___30298 = G__30299;
      continue;
    } else {
    }
    break;
  }
  var G__30296 = args30294.length;
  switch(G__30296) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30294.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__30301 = level + 1;
      level = G__30301;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var x__9466__auto__ = self__.key;
  return cljs.core._conj.call(null, function() {
    var x__9466__auto____$1 = self__.val;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto____$1);
  }(), x__9466__auto__);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var args30302 = [];
  var len__9707__auto___30305 = arguments.length;
  var i__9708__auto___30306 = 0;
  while (true) {
    if (i__9708__auto___30306 < len__9707__auto___30305) {
      args30302.push(arguments[i__9708__auto___30306]);
      var G__30307 = i__9708__auto___30306 + 1;
      i__9708__auto___30306 = G__30307;
      continue;
    } else {
    }
    break;
  }
  var G__30304 = args30302.length;
  switch(G__30304) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30302.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_30309 = 0;
  while (true) {
    if (i_30309 < arr.length) {
      arr[i_30309] = null;
      var G__30310 = i_30309 + 1;
      i_30309 = G__30310;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var args30311 = [];
  var len__9707__auto___30314 = arguments.length;
  var i__9708__auto___30315 = 0;
  while (true) {
    if (i__9708__auto___30315 < len__9707__auto___30314) {
      args30311.push(arguments[i__9708__auto___30315]);
      var G__30316 = i__9708__auto___30315 + 1;
      i__9708__auto___30315 = G__30316;
      continue;
    } else {
    }
    break;
  }
  var G__30313 = args30311.length;
  switch(G__30313) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30311.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4655__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var x_SINGLEQUOTE_ = temp__4655__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__30318 = x_SINGLEQUOTE_;
              x__$1 = G__30318;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__30319 = x__$1;
      var G__30320 = k;
      var G__30321 = level - 1;
      var G__30322 = update;
      x = G__30319;
      k = G__30320;
      level = G__30321;
      update = G__30322;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_30323 = self__.level + 1;
      while (true) {
        if (i_30323 <= new_level + 1) {
          update[i_30323] = self__.header;
          var G__30324 = i_30323 + 1;
          i_30323 = G__30324;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_30325 = 0;
    while (true) {
      if (i_30325 <= self__.level) {
        var links_30326 = update[i_30325].forward;
        if (links_30326[i_30325] === x__$1) {
          links_30326[i_30325] = x__$1.forward[i_30325];
          var G__30327 = i_30325 + 1;
          i_30325 = G__30327;
          continue;
        } else {
          var G__30328 = i_30325 + 1;
          i_30325 = G__30328;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__30329 = x_SINGLEQUOTE_;
              x__$1 = G__30329;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__30330 = nx;
        var G__30331 = level__$1 - 1;
        x = G__30330;
        level__$1 = G__30331;
        continue;
      } else {
        var G__30332 = x;
        var G__30333 = level__$1 - 1;
        x = G__30332;
        level__$1 = G__30333;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__30334 = x_SINGLEQUOTE_;
              x__$1 = G__30334;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__30335 = nx;
        var G__30336 = level__$1 - 1;
        x = G__30335;
        level__$1 = G__30336;
        continue;
      } else {
        var G__30337 = x;
        var G__30338 = level__$1 - 1;
        x = G__30337;
        level__$1 = G__30338;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__8632__auto__ = cljs.core.truth_(function() {
    var and__8620__auto__ = me;
    if (cljs.core.truth_(and__8620__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__8620__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__8632__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__8632__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(var_args) {
  var args30394 = [];
  var len__9707__auto___30400 = arguments.length;
  var i__9708__auto___30401 = 0;
  while (true) {
    if (i__9708__auto___30401 < len__9707__auto___30400) {
      args30394.push(arguments[i__9708__auto___30401]);
      var G__30402 = i__9708__auto___30401 + 1;
      i__9708__auto___30401 = G__30402;
      continue;
    } else {
    }
    break;
  }
  var G__30396 = args30394.length;
  switch(G__30396) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30394.length)].join(""));;
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.async.fn_handler.call(null, f, true);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(f, blockable) {
  if (typeof cljs.core.async.t_cljs$core$async30397 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async30397 = function(f, blockable, meta30398) {
      this.f = f;
      this.blockable = blockable;
      this.meta30398 = meta30398;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async30397.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_30399, meta30398__$1) {
      var self__ = this;
      var _30399__$1 = this;
      return new cljs.core.async.t_cljs$core$async30397(self__.f, self__.blockable, meta30398__$1);
    };
    cljs.core.async.t_cljs$core$async30397.prototype.cljs$core$IMeta$_meta$arity$1 = function(_30399) {
      var self__ = this;
      var _30399__$1 = this;
      return self__.meta30398;
    };
    cljs.core.async.t_cljs$core$async30397.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async30397.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async30397.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.blockable;
    };
    cljs.core.async.t_cljs$core$async30397.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async30397.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta30398", "meta30398", 964793919, null)], null);
    };
    cljs.core.async.t_cljs$core$async30397.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async30397.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async30397";
    cljs.core.async.t_cljs$core$async30397.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async30397");
    };
    cljs.core.async.__GT_t_cljs$core$async30397 = function cljs$core$async$__GT_t_cljs$core$async30397(f__$1, blockable__$1, meta30398) {
      return new cljs.core.async.t_cljs$core$async30397(f__$1, blockable__$1, meta30398);
    };
  }
  return new cljs.core.async.t_cljs$core$async30397(f, blockable, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var args30406 = [];
  var len__9707__auto___30409 = arguments.length;
  var i__9708__auto___30410 = 0;
  while (true) {
    if (i__9708__auto___30410 < len__9707__auto___30409) {
      args30406.push(arguments[i__9708__auto___30410]);
      var G__30411 = i__9708__auto___30410 + 1;
      i__9708__auto___30410 = G__30411;
      continue;
    } else {
    }
    break;
  }
  var G__30408 = args30406.length;
  switch(G__30408) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30406.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str("buf-or-n")].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function cljs$core$async$promise_chan(var_args) {
  var args30413 = [];
  var len__9707__auto___30416 = arguments.length;
  var i__9708__auto___30417 = 0;
  while (true) {
    if (i__9708__auto___30417 < len__9707__auto___30416) {
      args30413.push(arguments[i__9708__auto___30417]);
      var G__30418 = i__9708__auto___30417 + 1;
      i__9708__auto___30417 = G__30418;
      continue;
    } else {
    }
    break;
  }
  var G__30415 = args30413.length;
  switch(G__30415) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30413.length)].join(""));;
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(xform) {
  return cljs.core.async.promise_chan.call(null, xform, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(xform, ex_handler) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), xform, ex_handler);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var args30420 = [];
  var len__9707__auto___30423 = arguments.length;
  var i__9708__auto___30424 = 0;
  while (true) {
    if (i__9708__auto___30424 < len__9707__auto___30423) {
      args30420.push(arguments[i__9708__auto___30424]);
      var G__30425 = i__9708__auto___30424 + 1;
      i__9708__auto___30424 = G__30425;
      continue;
    } else {
    }
    break;
  }
  var G__30422 = args30420.length;
  switch(G__30422) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30420.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_30427 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_30427);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_30427, ret) {
        return function() {
          return fn1.call(null, val_30427);
        };
      }(val_30427, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var args30428 = [];
  var len__9707__auto___30431 = arguments.length;
  var i__9708__auto___30432 = 0;
  while (true) {
    if (i__9708__auto___30432 < len__9707__auto___30431) {
      args30428.push(arguments[i__9708__auto___30432]);
      var G__30433 = i__9708__auto___30432 + 1;
      i__9708__auto___30432 = G__30433;
      continue;
    } else {
    }
    break;
  }
  var G__30430 = args30428.length;
  switch(G__30430) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30428.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ret = temp__4655__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var retb = temp__4655__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4655__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4655__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__9547__auto___30435 = n;
  var x_30436 = 0;
  while (true) {
    if (x_30436 < n__9547__auto___30435) {
      a[x_30436] = 0;
      var G__30437 = x_30436 + 1;
      x_30436 = G__30437;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__30438 = i + 1;
      i = G__30438;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async30442 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async30442 = function(alt_flag, flag, meta30443) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta30443 = meta30443;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async30442.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_30444, meta30443__$1) {
        var self__ = this;
        var _30444__$1 = this;
        return new cljs.core.async.t_cljs$core$async30442(self__.alt_flag, self__.flag, meta30443__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async30442.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_30444) {
        var self__ = this;
        var _30444__$1 = this;
        return self__.meta30443;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async30442.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async30442.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async30442.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async30442.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async30442.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta30443", "meta30443", 1998246687, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async30442.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async30442.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async30442";
    cljs.core.async.t_cljs$core$async30442.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
        return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async30442");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async30442 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async30442(alt_flag__$1, flag__$1, meta30443) {
        return new cljs.core.async.t_cljs$core$async30442(alt_flag__$1, flag__$1, meta30443);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async30442(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async30448 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async30448 = function(alt_handler, flag, cb, meta30449) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta30449 = meta30449;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async30448.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_30450, meta30449__$1) {
      var self__ = this;
      var _30450__$1 = this;
      return new cljs.core.async.t_cljs$core$async30448(self__.alt_handler, self__.flag, self__.cb, meta30449__$1);
    };
    cljs.core.async.t_cljs$core$async30448.prototype.cljs$core$IMeta$_meta$arity$1 = function(_30450) {
      var self__ = this;
      var _30450__$1 = this;
      return self__.meta30449;
    };
    cljs.core.async.t_cljs$core$async30448.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async30448.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async30448.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async30448.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async30448.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta30449", "meta30449", -210560058, null)], null);
    };
    cljs.core.async.t_cljs$core$async30448.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async30448.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async30448";
    cljs.core.async.t_cljs$core$async30448.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async30448");
    };
    cljs.core.async.__GT_t_cljs$core$async30448 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async30448(alt_handler__$1, flag__$1, cb__$1, meta30449) {
      return new cljs.core.async.t_cljs$core$async30448(alt_handler__$1, flag__$1, cb__$1, meta30449);
    };
  }
  return new cljs.core.async.t_cljs$core$async30448(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__30451_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__30451_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__30452_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__30452_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__8632__auto__ = wport;
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__30453 = i + 1;
          i = G__30453;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__8632__auto__ = ret;
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4657__auto__ = function() {
        var and__8620__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__8620__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__8620__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4657__auto__)) {
        var got = temp__4657__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___30459 = arguments.length;
  var i__9708__auto___30460 = 0;
  while (true) {
    if (i__9708__auto___30460 < len__9707__auto___30459) {
      args__9714__auto__.push(arguments[i__9708__auto___30460]);
      var G__30461 = i__9708__auto___30460 + 1;
      i__9708__auto___30460 = G__30461;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__30456) {
  var map__30457 = p__30456;
  var map__30457__$1 = (!(map__30457 == null) ? map__30457.cljs$lang$protocol_mask$partition0$ & 64 || map__30457.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30457) : map__30457;
  var opts = map__30457__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq30454) {
  var G__30455 = cljs.core.first.call(null, seq30454);
  var seq30454__$1 = cljs.core.next.call(null, seq30454);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__30455, seq30454__$1);
};
cljs.core.async.offer_BANG_ = function cljs$core$async$offer_BANG_(port, val) {
  var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.poll_BANG_ = function cljs$core$async$poll_BANG_(port) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var args30462 = [];
  var len__9707__auto___30512 = arguments.length;
  var i__9708__auto___30513 = 0;
  while (true) {
    if (i__9708__auto___30513 < len__9707__auto___30512) {
      args30462.push(arguments[i__9708__auto___30513]);
      var G__30514 = i__9708__auto___30513 + 1;
      i__9708__auto___30513 = G__30514;
      continue;
    } else {
    }
    break;
  }
  var G__30464 = args30462.length;
  switch(G__30464) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30462.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__30349__auto___30516 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___30516) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___30516) {
          return function(state_30488) {
            var state_val_30489 = state_30488[1];
            if (state_val_30489 === 7) {
              var inst_30484 = state_30488[2];
              var state_30488__$1 = state_30488;
              var statearr_30490_30517 = state_30488__$1;
              statearr_30490_30517[2] = inst_30484;
              statearr_30490_30517[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_30489 === 1) {
                var state_30488__$1 = state_30488;
                var statearr_30491_30518 = state_30488__$1;
                statearr_30491_30518[2] = null;
                statearr_30491_30518[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_30489 === 4) {
                  var inst_30467 = state_30488[7];
                  var inst_30467__$1 = state_30488[2];
                  var inst_30468 = inst_30467__$1 == null;
                  var state_30488__$1 = function() {
                    var statearr_30492 = state_30488;
                    statearr_30492[7] = inst_30467__$1;
                    return statearr_30492;
                  }();
                  if (cljs.core.truth_(inst_30468)) {
                    var statearr_30493_30519 = state_30488__$1;
                    statearr_30493_30519[1] = 5;
                  } else {
                    var statearr_30494_30520 = state_30488__$1;
                    statearr_30494_30520[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_30489 === 13) {
                    var state_30488__$1 = state_30488;
                    var statearr_30495_30521 = state_30488__$1;
                    statearr_30495_30521[2] = null;
                    statearr_30495_30521[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_30489 === 6) {
                      var inst_30467 = state_30488[7];
                      var state_30488__$1 = state_30488;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30488__$1, 11, to, inst_30467);
                    } else {
                      if (state_val_30489 === 3) {
                        var inst_30486 = state_30488[2];
                        var state_30488__$1 = state_30488;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30488__$1, inst_30486);
                      } else {
                        if (state_val_30489 === 12) {
                          var state_30488__$1 = state_30488;
                          var statearr_30496_30522 = state_30488__$1;
                          statearr_30496_30522[2] = null;
                          statearr_30496_30522[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_30489 === 2) {
                            var state_30488__$1 = state_30488;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30488__$1, 4, from);
                          } else {
                            if (state_val_30489 === 11) {
                              var inst_30477 = state_30488[2];
                              var state_30488__$1 = state_30488;
                              if (cljs.core.truth_(inst_30477)) {
                                var statearr_30497_30523 = state_30488__$1;
                                statearr_30497_30523[1] = 12;
                              } else {
                                var statearr_30498_30524 = state_30488__$1;
                                statearr_30498_30524[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_30489 === 9) {
                                var state_30488__$1 = state_30488;
                                var statearr_30499_30525 = state_30488__$1;
                                statearr_30499_30525[2] = null;
                                statearr_30499_30525[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_30489 === 5) {
                                  var state_30488__$1 = state_30488;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_30500_30526 = state_30488__$1;
                                    statearr_30500_30526[1] = 8;
                                  } else {
                                    var statearr_30501_30527 = state_30488__$1;
                                    statearr_30501_30527[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_30489 === 14) {
                                    var inst_30482 = state_30488[2];
                                    var state_30488__$1 = state_30488;
                                    var statearr_30502_30528 = state_30488__$1;
                                    statearr_30502_30528[2] = inst_30482;
                                    statearr_30502_30528[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_30489 === 10) {
                                      var inst_30474 = state_30488[2];
                                      var state_30488__$1 = state_30488;
                                      var statearr_30503_30529 = state_30488__$1;
                                      statearr_30503_30529[2] = inst_30474;
                                      statearr_30503_30529[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_30489 === 8) {
                                        var inst_30471 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_30488__$1 = state_30488;
                                        var statearr_30504_30530 = state_30488__$1;
                                        statearr_30504_30530[2] = inst_30471;
                                        statearr_30504_30530[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___30516);
        return function(switch__30237__auto__, c__30349__auto___30516) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_30508 = [null, null, null, null, null, null, null, null];
              statearr_30508[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_30508[1] = 1;
              return statearr_30508;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_30488) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_30488);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e30509) {
                    if (e30509 instanceof Object) {
                      var ex__30241__auto__ = e30509;
                      var statearr_30510_30531 = state_30488;
                      statearr_30510_30531[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30488);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e30509;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__30532 = state_30488;
                  state_30488 = G__30532;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_30488) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_30488);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___30516);
      }();
      var state__30351__auto__ = function() {
        var statearr_30511 = f__30350__auto__.call(null);
        statearr_30511[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___30516;
        return statearr_30511;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___30516));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: (pos? n)");
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__30720) {
      var vec__30721 = p__30720;
      var v = cljs.core.nth.call(null, vec__30721, 0, null);
      var p = cljs.core.nth.call(null, vec__30721, 1, null);
      var job = vec__30721;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__30349__auto___30907 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___30907, res, vec__30721, v, p, job, jobs, results) {
          return function() {
            var f__30350__auto__ = function() {
              var switch__30237__auto__ = function(c__30349__auto___30907, res, vec__30721, v, p, job, jobs, results) {
                return function(state_30728) {
                  var state_val_30729 = state_30728[1];
                  if (state_val_30729 === 1) {
                    var state_30728__$1 = state_30728;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30728__$1, 2, res, v);
                  } else {
                    if (state_val_30729 === 2) {
                      var inst_30725 = state_30728[2];
                      var inst_30726 = cljs.core.async.close_BANG_.call(null, res);
                      var state_30728__$1 = function() {
                        var statearr_30730 = state_30728;
                        statearr_30730[7] = inst_30725;
                        return statearr_30730;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30728__$1, inst_30726);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__30349__auto___30907, res, vec__30721, v, p, job, jobs, results);
              return function(switch__30237__auto__, c__30349__auto___30907, res, vec__30721, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0 = function() {
                    var statearr_30734 = [null, null, null, null, null, null, null, null];
                    statearr_30734[0] = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
                    statearr_30734[1] = 1;
                    return statearr_30734;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1 = function(state_30728) {
                    while (true) {
                      var ret_value__30239__auto__ = function() {
                        try {
                          while (true) {
                            var result__30240__auto__ = switch__30237__auto__.call(null, state_30728);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__30240__auto__;
                            }
                            break;
                          }
                        } catch (e30735) {
                          if (e30735 instanceof Object) {
                            var ex__30241__auto__ = e30735;
                            var statearr_30736_30908 = state_30728;
                            statearr_30736_30908[5] = ex__30241__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30728);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e30735;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__30909 = state_30728;
                        state_30728 = G__30909;
                        continue;
                      } else {
                        return ret_value__30239__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = function(state_30728) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1.call(this, state_30728);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
                }();
              }(switch__30237__auto__, c__30349__auto___30907, res, vec__30721, v, p, job, jobs, results);
            }();
            var state__30351__auto__ = function() {
              var statearr_30737 = f__30350__auto__.call(null);
              statearr_30737[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___30907;
              return statearr_30737;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
          };
        }(c__30349__auto___30907, res, vec__30721, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__30738) {
      var vec__30739 = p__30738;
      var v = cljs.core.nth.call(null, vec__30739, 0, null);
      var p = cljs.core.nth.call(null, vec__30739, 1, null);
      var job = vec__30739;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__9547__auto___30910 = n;
  var __30911 = 0;
  while (true) {
    if (__30911 < n__9547__auto___30910) {
      var G__30742_30912 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__30742_30912) {
        case "compute":
          var c__30349__auto___30914 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__30911, c__30349__auto___30914, G__30742_30912, n__9547__auto___30910, jobs, results, process, async) {
            return function() {
              var f__30350__auto__ = function() {
                var switch__30237__auto__ = function(__30911, c__30349__auto___30914, G__30742_30912, n__9547__auto___30910, jobs, results, process, async) {
                  return function(state_30755) {
                    var state_val_30756 = state_30755[1];
                    if (state_val_30756 === 1) {
                      var state_30755__$1 = state_30755;
                      var statearr_30757_30915 = state_30755__$1;
                      statearr_30757_30915[2] = null;
                      statearr_30757_30915[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_30756 === 2) {
                        var state_30755__$1 = state_30755;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30755__$1, 4, jobs);
                      } else {
                        if (state_val_30756 === 3) {
                          var inst_30753 = state_30755[2];
                          var state_30755__$1 = state_30755;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30755__$1, inst_30753);
                        } else {
                          if (state_val_30756 === 4) {
                            var inst_30745 = state_30755[2];
                            var inst_30746 = process.call(null, inst_30745);
                            var state_30755__$1 = state_30755;
                            if (cljs.core.truth_(inst_30746)) {
                              var statearr_30758_30916 = state_30755__$1;
                              statearr_30758_30916[1] = 5;
                            } else {
                              var statearr_30759_30917 = state_30755__$1;
                              statearr_30759_30917[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_30756 === 5) {
                              var state_30755__$1 = state_30755;
                              var statearr_30760_30918 = state_30755__$1;
                              statearr_30760_30918[2] = null;
                              statearr_30760_30918[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_30756 === 6) {
                                var state_30755__$1 = state_30755;
                                var statearr_30761_30919 = state_30755__$1;
                                statearr_30761_30919[2] = null;
                                statearr_30761_30919[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_30756 === 7) {
                                  var inst_30751 = state_30755[2];
                                  var state_30755__$1 = state_30755;
                                  var statearr_30762_30920 = state_30755__$1;
                                  statearr_30762_30920[2] = inst_30751;
                                  statearr_30762_30920[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__30911, c__30349__auto___30914, G__30742_30912, n__9547__auto___30910, jobs, results, process, async);
                return function(__30911, switch__30237__auto__, c__30349__auto___30914, G__30742_30912, n__9547__auto___30910, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0 = function() {
                      var statearr_30766 = [null, null, null, null, null, null, null];
                      statearr_30766[0] = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
                      statearr_30766[1] = 1;
                      return statearr_30766;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1 = function(state_30755) {
                      while (true) {
                        var ret_value__30239__auto__ = function() {
                          try {
                            while (true) {
                              var result__30240__auto__ = switch__30237__auto__.call(null, state_30755);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__30240__auto__;
                              }
                              break;
                            }
                          } catch (e30767) {
                            if (e30767 instanceof Object) {
                              var ex__30241__auto__ = e30767;
                              var statearr_30768_30921 = state_30755;
                              statearr_30768_30921[5] = ex__30241__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30755);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e30767;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__30922 = state_30755;
                          state_30755 = G__30922;
                          continue;
                        } else {
                          return ret_value__30239__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = function(state_30755) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1.call(this, state_30755);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
                  }();
                }(__30911, switch__30237__auto__, c__30349__auto___30914, G__30742_30912, n__9547__auto___30910, jobs, results, process, async);
              }();
              var state__30351__auto__ = function() {
                var statearr_30769 = f__30350__auto__.call(null);
                statearr_30769[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___30914;
                return statearr_30769;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
            };
          }(__30911, c__30349__auto___30914, G__30742_30912, n__9547__auto___30910, jobs, results, process, async));
          break;
        case "async":
          var c__30349__auto___30923 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__30911, c__30349__auto___30923, G__30742_30912, n__9547__auto___30910, jobs, results, process, async) {
            return function() {
              var f__30350__auto__ = function() {
                var switch__30237__auto__ = function(__30911, c__30349__auto___30923, G__30742_30912, n__9547__auto___30910, jobs, results, process, async) {
                  return function(state_30782) {
                    var state_val_30783 = state_30782[1];
                    if (state_val_30783 === 1) {
                      var state_30782__$1 = state_30782;
                      var statearr_30784_30924 = state_30782__$1;
                      statearr_30784_30924[2] = null;
                      statearr_30784_30924[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_30783 === 2) {
                        var state_30782__$1 = state_30782;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30782__$1, 4, jobs);
                      } else {
                        if (state_val_30783 === 3) {
                          var inst_30780 = state_30782[2];
                          var state_30782__$1 = state_30782;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30782__$1, inst_30780);
                        } else {
                          if (state_val_30783 === 4) {
                            var inst_30772 = state_30782[2];
                            var inst_30773 = async.call(null, inst_30772);
                            var state_30782__$1 = state_30782;
                            if (cljs.core.truth_(inst_30773)) {
                              var statearr_30785_30925 = state_30782__$1;
                              statearr_30785_30925[1] = 5;
                            } else {
                              var statearr_30786_30926 = state_30782__$1;
                              statearr_30786_30926[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_30783 === 5) {
                              var state_30782__$1 = state_30782;
                              var statearr_30787_30927 = state_30782__$1;
                              statearr_30787_30927[2] = null;
                              statearr_30787_30927[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_30783 === 6) {
                                var state_30782__$1 = state_30782;
                                var statearr_30788_30928 = state_30782__$1;
                                statearr_30788_30928[2] = null;
                                statearr_30788_30928[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_30783 === 7) {
                                  var inst_30778 = state_30782[2];
                                  var state_30782__$1 = state_30782;
                                  var statearr_30789_30929 = state_30782__$1;
                                  statearr_30789_30929[2] = inst_30778;
                                  statearr_30789_30929[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__30911, c__30349__auto___30923, G__30742_30912, n__9547__auto___30910, jobs, results, process, async);
                return function(__30911, switch__30237__auto__, c__30349__auto___30923, G__30742_30912, n__9547__auto___30910, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0 = function() {
                      var statearr_30793 = [null, null, null, null, null, null, null];
                      statearr_30793[0] = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
                      statearr_30793[1] = 1;
                      return statearr_30793;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1 = function(state_30782) {
                      while (true) {
                        var ret_value__30239__auto__ = function() {
                          try {
                            while (true) {
                              var result__30240__auto__ = switch__30237__auto__.call(null, state_30782);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__30240__auto__;
                              }
                              break;
                            }
                          } catch (e30794) {
                            if (e30794 instanceof Object) {
                              var ex__30241__auto__ = e30794;
                              var statearr_30795_30930 = state_30782;
                              statearr_30795_30930[5] = ex__30241__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30782);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e30794;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__30931 = state_30782;
                          state_30782 = G__30931;
                          continue;
                        } else {
                          return ret_value__30239__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = function(state_30782) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1.call(this, state_30782);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
                  }();
                }(__30911, switch__30237__auto__, c__30349__auto___30923, G__30742_30912, n__9547__auto___30910, jobs, results, process, async);
              }();
              var state__30351__auto__ = function() {
                var statearr_30796 = f__30350__auto__.call(null);
                statearr_30796[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___30923;
                return statearr_30796;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
            };
          }(__30911, c__30349__auto___30923, G__30742_30912, n__9547__auto___30910, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__30932 = __30911 + 1;
      __30911 = G__30932;
      continue;
    } else {
    }
    break;
  }
  var c__30349__auto___30933 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___30933, jobs, results, process, async) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___30933, jobs, results, process, async) {
          return function(state_30818) {
            var state_val_30819 = state_30818[1];
            if (state_val_30819 === 1) {
              var state_30818__$1 = state_30818;
              var statearr_30820_30934 = state_30818__$1;
              statearr_30820_30934[2] = null;
              statearr_30820_30934[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_30819 === 2) {
                var state_30818__$1 = state_30818;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30818__$1, 4, from);
              } else {
                if (state_val_30819 === 3) {
                  var inst_30816 = state_30818[2];
                  var state_30818__$1 = state_30818;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30818__$1, inst_30816);
                } else {
                  if (state_val_30819 === 4) {
                    var inst_30799 = state_30818[7];
                    var inst_30799__$1 = state_30818[2];
                    var inst_30800 = inst_30799__$1 == null;
                    var state_30818__$1 = function() {
                      var statearr_30821 = state_30818;
                      statearr_30821[7] = inst_30799__$1;
                      return statearr_30821;
                    }();
                    if (cljs.core.truth_(inst_30800)) {
                      var statearr_30822_30935 = state_30818__$1;
                      statearr_30822_30935[1] = 5;
                    } else {
                      var statearr_30823_30936 = state_30818__$1;
                      statearr_30823_30936[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_30819 === 5) {
                      var inst_30802 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_30818__$1 = state_30818;
                      var statearr_30824_30937 = state_30818__$1;
                      statearr_30824_30937[2] = inst_30802;
                      statearr_30824_30937[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_30819 === 6) {
                        var inst_30799 = state_30818[7];
                        var inst_30804 = state_30818[8];
                        var inst_30804__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_30805 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_30806 = [inst_30799, inst_30804__$1];
                        var inst_30807 = new cljs.core.PersistentVector(null, 2, 5, inst_30805, inst_30806, null);
                        var state_30818__$1 = function() {
                          var statearr_30825 = state_30818;
                          statearr_30825[8] = inst_30804__$1;
                          return statearr_30825;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30818__$1, 8, jobs, inst_30807);
                      } else {
                        if (state_val_30819 === 7) {
                          var inst_30814 = state_30818[2];
                          var state_30818__$1 = state_30818;
                          var statearr_30826_30938 = state_30818__$1;
                          statearr_30826_30938[2] = inst_30814;
                          statearr_30826_30938[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_30819 === 8) {
                            var inst_30804 = state_30818[8];
                            var inst_30809 = state_30818[2];
                            var state_30818__$1 = function() {
                              var statearr_30827 = state_30818;
                              statearr_30827[9] = inst_30809;
                              return statearr_30827;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30818__$1, 9, results, inst_30804);
                          } else {
                            if (state_val_30819 === 9) {
                              var inst_30811 = state_30818[2];
                              var state_30818__$1 = function() {
                                var statearr_30828 = state_30818;
                                statearr_30828[10] = inst_30811;
                                return statearr_30828;
                              }();
                              var statearr_30829_30939 = state_30818__$1;
                              statearr_30829_30939[2] = null;
                              statearr_30829_30939[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___30933, jobs, results, process, async);
        return function(switch__30237__auto__, c__30349__auto___30933, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0 = function() {
              var statearr_30833 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_30833[0] = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
              statearr_30833[1] = 1;
              return statearr_30833;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1 = function(state_30818) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_30818);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e30834) {
                    if (e30834 instanceof Object) {
                      var ex__30241__auto__ = e30834;
                      var statearr_30835_30940 = state_30818;
                      statearr_30835_30940[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30818);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e30834;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__30941 = state_30818;
                  state_30818 = G__30941;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = function(state_30818) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1.call(this, state_30818);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___30933, jobs, results, process, async);
      }();
      var state__30351__auto__ = function() {
        var statearr_30836 = f__30350__auto__.call(null);
        statearr_30836[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___30933;
        return statearr_30836;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___30933, jobs, results, process, async));
  var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__, jobs, results, process, async) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto__, jobs, results, process, async) {
          return function(state_30874) {
            var state_val_30875 = state_30874[1];
            if (state_val_30875 === 7) {
              var inst_30870 = state_30874[2];
              var state_30874__$1 = state_30874;
              var statearr_30876_30942 = state_30874__$1;
              statearr_30876_30942[2] = inst_30870;
              statearr_30876_30942[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_30875 === 20) {
                var state_30874__$1 = state_30874;
                var statearr_30877_30943 = state_30874__$1;
                statearr_30877_30943[2] = null;
                statearr_30877_30943[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_30875 === 1) {
                  var state_30874__$1 = state_30874;
                  var statearr_30878_30944 = state_30874__$1;
                  statearr_30878_30944[2] = null;
                  statearr_30878_30944[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_30875 === 4) {
                    var inst_30839 = state_30874[7];
                    var inst_30839__$1 = state_30874[2];
                    var inst_30840 = inst_30839__$1 == null;
                    var state_30874__$1 = function() {
                      var statearr_30879 = state_30874;
                      statearr_30879[7] = inst_30839__$1;
                      return statearr_30879;
                    }();
                    if (cljs.core.truth_(inst_30840)) {
                      var statearr_30880_30945 = state_30874__$1;
                      statearr_30880_30945[1] = 5;
                    } else {
                      var statearr_30881_30946 = state_30874__$1;
                      statearr_30881_30946[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_30875 === 15) {
                      var inst_30852 = state_30874[8];
                      var state_30874__$1 = state_30874;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30874__$1, 18, to, inst_30852);
                    } else {
                      if (state_val_30875 === 21) {
                        var inst_30865 = state_30874[2];
                        var state_30874__$1 = state_30874;
                        var statearr_30882_30947 = state_30874__$1;
                        statearr_30882_30947[2] = inst_30865;
                        statearr_30882_30947[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_30875 === 13) {
                          var inst_30867 = state_30874[2];
                          var state_30874__$1 = function() {
                            var statearr_30883 = state_30874;
                            statearr_30883[9] = inst_30867;
                            return statearr_30883;
                          }();
                          var statearr_30884_30948 = state_30874__$1;
                          statearr_30884_30948[2] = null;
                          statearr_30884_30948[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_30875 === 6) {
                            var inst_30839 = state_30874[7];
                            var state_30874__$1 = state_30874;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30874__$1, 11, inst_30839);
                          } else {
                            if (state_val_30875 === 17) {
                              var inst_30860 = state_30874[2];
                              var state_30874__$1 = state_30874;
                              if (cljs.core.truth_(inst_30860)) {
                                var statearr_30885_30949 = state_30874__$1;
                                statearr_30885_30949[1] = 19;
                              } else {
                                var statearr_30886_30950 = state_30874__$1;
                                statearr_30886_30950[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_30875 === 3) {
                                var inst_30872 = state_30874[2];
                                var state_30874__$1 = state_30874;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30874__$1, inst_30872);
                              } else {
                                if (state_val_30875 === 12) {
                                  var inst_30849 = state_30874[10];
                                  var state_30874__$1 = state_30874;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30874__$1, 14, inst_30849);
                                } else {
                                  if (state_val_30875 === 2) {
                                    var state_30874__$1 = state_30874;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30874__$1, 4, results);
                                  } else {
                                    if (state_val_30875 === 19) {
                                      var state_30874__$1 = state_30874;
                                      var statearr_30887_30951 = state_30874__$1;
                                      statearr_30887_30951[2] = null;
                                      statearr_30887_30951[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_30875 === 11) {
                                        var inst_30849 = state_30874[2];
                                        var state_30874__$1 = function() {
                                          var statearr_30888 = state_30874;
                                          statearr_30888[10] = inst_30849;
                                          return statearr_30888;
                                        }();
                                        var statearr_30889_30952 = state_30874__$1;
                                        statearr_30889_30952[2] = null;
                                        statearr_30889_30952[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_30875 === 9) {
                                          var state_30874__$1 = state_30874;
                                          var statearr_30890_30953 = state_30874__$1;
                                          statearr_30890_30953[2] = null;
                                          statearr_30890_30953[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_30875 === 5) {
                                            var state_30874__$1 = state_30874;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_30891_30954 = state_30874__$1;
                                              statearr_30891_30954[1] = 8;
                                            } else {
                                              var statearr_30892_30955 = state_30874__$1;
                                              statearr_30892_30955[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_30875 === 14) {
                                              var inst_30852 = state_30874[8];
                                              var inst_30854 = state_30874[11];
                                              var inst_30852__$1 = state_30874[2];
                                              var inst_30853 = inst_30852__$1 == null;
                                              var inst_30854__$1 = cljs.core.not.call(null, inst_30853);
                                              var state_30874__$1 = function() {
                                                var statearr_30893 = state_30874;
                                                statearr_30893[8] = inst_30852__$1;
                                                statearr_30893[11] = inst_30854__$1;
                                                return statearr_30893;
                                              }();
                                              if (inst_30854__$1) {
                                                var statearr_30894_30956 = state_30874__$1;
                                                statearr_30894_30956[1] = 15;
                                              } else {
                                                var statearr_30895_30957 = state_30874__$1;
                                                statearr_30895_30957[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_30875 === 16) {
                                                var inst_30854 = state_30874[11];
                                                var state_30874__$1 = state_30874;
                                                var statearr_30896_30958 = state_30874__$1;
                                                statearr_30896_30958[2] = inst_30854;
                                                statearr_30896_30958[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_30875 === 10) {
                                                  var inst_30846 = state_30874[2];
                                                  var state_30874__$1 = state_30874;
                                                  var statearr_30897_30959 = state_30874__$1;
                                                  statearr_30897_30959[2] = inst_30846;
                                                  statearr_30897_30959[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_30875 === 18) {
                                                    var inst_30857 = state_30874[2];
                                                    var state_30874__$1 = state_30874;
                                                    var statearr_30898_30960 = state_30874__$1;
                                                    statearr_30898_30960[2] = inst_30857;
                                                    statearr_30898_30960[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_30875 === 8) {
                                                      var inst_30843 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_30874__$1 = state_30874;
                                                      var statearr_30899_30961 = state_30874__$1;
                                                      statearr_30899_30961[2] = inst_30843;
                                                      statearr_30899_30961[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto__, jobs, results, process, async);
        return function(switch__30237__auto__, c__30349__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0 = function() {
              var statearr_30903 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_30903[0] = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
              statearr_30903[1] = 1;
              return statearr_30903;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1 = function(state_30874) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_30874);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e30904) {
                    if (e30904 instanceof Object) {
                      var ex__30241__auto__ = e30904;
                      var statearr_30905_30962 = state_30874;
                      statearr_30905_30962[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30874);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e30904;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__30963 = state_30874;
                  state_30874 = G__30963;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__ = function(state_30874) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1.call(this, state_30874);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__30238__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto__, jobs, results, process, async);
      }();
      var state__30351__auto__ = function() {
        var statearr_30906 = f__30350__auto__.call(null);
        statearr_30906[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
        return statearr_30906;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto__, jobs, results, process, async));
  return c__30349__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var args30964 = [];
  var len__9707__auto___30967 = arguments.length;
  var i__9708__auto___30968 = 0;
  while (true) {
    if (i__9708__auto___30968 < len__9707__auto___30967) {
      args30964.push(arguments[i__9708__auto___30968]);
      var G__30969 = i__9708__auto___30968 + 1;
      i__9708__auto___30968 = G__30969;
      continue;
    } else {
    }
    break;
  }
  var G__30966 = args30964.length;
  switch(G__30966) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30964.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var args30971 = [];
  var len__9707__auto___30974 = arguments.length;
  var i__9708__auto___30975 = 0;
  while (true) {
    if (i__9708__auto___30975 < len__9707__auto___30974) {
      args30971.push(arguments[i__9708__auto___30975]);
      var G__30976 = i__9708__auto___30975 + 1;
      i__9708__auto___30975 = G__30976;
      continue;
    } else {
    }
    break;
  }
  var G__30973 = args30971.length;
  switch(G__30973) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30971.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var args30978 = [];
  var len__9707__auto___31031 = arguments.length;
  var i__9708__auto___31032 = 0;
  while (true) {
    if (i__9708__auto___31032 < len__9707__auto___31031) {
      args30978.push(arguments[i__9708__auto___31032]);
      var G__31033 = i__9708__auto___31032 + 1;
      i__9708__auto___31032 = G__31033;
      continue;
    } else {
    }
    break;
  }
  var G__30980 = args30978.length;
  switch(G__30980) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30978.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__30349__auto___31035 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___31035, tc, fc) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___31035, tc, fc) {
          return function(state_31006) {
            var state_val_31007 = state_31006[1];
            if (state_val_31007 === 7) {
              var inst_31002 = state_31006[2];
              var state_31006__$1 = state_31006;
              var statearr_31008_31036 = state_31006__$1;
              statearr_31008_31036[2] = inst_31002;
              statearr_31008_31036[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31007 === 1) {
                var state_31006__$1 = state_31006;
                var statearr_31009_31037 = state_31006__$1;
                statearr_31009_31037[2] = null;
                statearr_31009_31037[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31007 === 4) {
                  var inst_30983 = state_31006[7];
                  var inst_30983__$1 = state_31006[2];
                  var inst_30984 = inst_30983__$1 == null;
                  var state_31006__$1 = function() {
                    var statearr_31010 = state_31006;
                    statearr_31010[7] = inst_30983__$1;
                    return statearr_31010;
                  }();
                  if (cljs.core.truth_(inst_30984)) {
                    var statearr_31011_31038 = state_31006__$1;
                    statearr_31011_31038[1] = 5;
                  } else {
                    var statearr_31012_31039 = state_31006__$1;
                    statearr_31012_31039[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_31007 === 13) {
                    var state_31006__$1 = state_31006;
                    var statearr_31013_31040 = state_31006__$1;
                    statearr_31013_31040[2] = null;
                    statearr_31013_31040[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31007 === 6) {
                      var inst_30983 = state_31006[7];
                      var inst_30989 = p.call(null, inst_30983);
                      var state_31006__$1 = state_31006;
                      if (cljs.core.truth_(inst_30989)) {
                        var statearr_31014_31041 = state_31006__$1;
                        statearr_31014_31041[1] = 9;
                      } else {
                        var statearr_31015_31042 = state_31006__$1;
                        statearr_31015_31042[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31007 === 3) {
                        var inst_31004 = state_31006[2];
                        var state_31006__$1 = state_31006;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31006__$1, inst_31004);
                      } else {
                        if (state_val_31007 === 12) {
                          var state_31006__$1 = state_31006;
                          var statearr_31016_31043 = state_31006__$1;
                          statearr_31016_31043[2] = null;
                          statearr_31016_31043[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31007 === 2) {
                            var state_31006__$1 = state_31006;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31006__$1, 4, ch);
                          } else {
                            if (state_val_31007 === 11) {
                              var inst_30983 = state_31006[7];
                              var inst_30993 = state_31006[2];
                              var state_31006__$1 = state_31006;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31006__$1, 8, inst_30993, inst_30983);
                            } else {
                              if (state_val_31007 === 9) {
                                var state_31006__$1 = state_31006;
                                var statearr_31017_31044 = state_31006__$1;
                                statearr_31017_31044[2] = tc;
                                statearr_31017_31044[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31007 === 5) {
                                  var inst_30986 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_30987 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_31006__$1 = function() {
                                    var statearr_31018 = state_31006;
                                    statearr_31018[8] = inst_30986;
                                    return statearr_31018;
                                  }();
                                  var statearr_31019_31045 = state_31006__$1;
                                  statearr_31019_31045[2] = inst_30987;
                                  statearr_31019_31045[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_31007 === 14) {
                                    var inst_31000 = state_31006[2];
                                    var state_31006__$1 = state_31006;
                                    var statearr_31020_31046 = state_31006__$1;
                                    statearr_31020_31046[2] = inst_31000;
                                    statearr_31020_31046[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_31007 === 10) {
                                      var state_31006__$1 = state_31006;
                                      var statearr_31021_31047 = state_31006__$1;
                                      statearr_31021_31047[2] = fc;
                                      statearr_31021_31047[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_31007 === 8) {
                                        var inst_30995 = state_31006[2];
                                        var state_31006__$1 = state_31006;
                                        if (cljs.core.truth_(inst_30995)) {
                                          var statearr_31022_31048 = state_31006__$1;
                                          statearr_31022_31048[1] = 12;
                                        } else {
                                          var statearr_31023_31049 = state_31006__$1;
                                          statearr_31023_31049[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___31035, tc, fc);
        return function(switch__30237__auto__, c__30349__auto___31035, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_31027 = [null, null, null, null, null, null, null, null, null];
              statearr_31027[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_31027[1] = 1;
              return statearr_31027;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_31006) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_31006);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e31028) {
                    if (e31028 instanceof Object) {
                      var ex__30241__auto__ = e31028;
                      var statearr_31029_31050 = state_31006;
                      statearr_31029_31050[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31006);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31028;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31051 = state_31006;
                  state_31006 = G__31051;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_31006) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_31006);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___31035, tc, fc);
      }();
      var state__30351__auto__ = function() {
        var statearr_31030 = f__30350__auto__.call(null);
        statearr_31030[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___31035;
        return statearr_31030;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___31035, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto__) {
          return function(state_31115) {
            var state_val_31116 = state_31115[1];
            if (state_val_31116 === 7) {
              var inst_31111 = state_31115[2];
              var state_31115__$1 = state_31115;
              var statearr_31117_31138 = state_31115__$1;
              statearr_31117_31138[2] = inst_31111;
              statearr_31117_31138[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31116 === 1) {
                var inst_31095 = init;
                var state_31115__$1 = function() {
                  var statearr_31118 = state_31115;
                  statearr_31118[7] = inst_31095;
                  return statearr_31118;
                }();
                var statearr_31119_31139 = state_31115__$1;
                statearr_31119_31139[2] = null;
                statearr_31119_31139[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31116 === 4) {
                  var inst_31098 = state_31115[8];
                  var inst_31098__$1 = state_31115[2];
                  var inst_31099 = inst_31098__$1 == null;
                  var state_31115__$1 = function() {
                    var statearr_31120 = state_31115;
                    statearr_31120[8] = inst_31098__$1;
                    return statearr_31120;
                  }();
                  if (cljs.core.truth_(inst_31099)) {
                    var statearr_31121_31140 = state_31115__$1;
                    statearr_31121_31140[1] = 5;
                  } else {
                    var statearr_31122_31141 = state_31115__$1;
                    statearr_31122_31141[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_31116 === 6) {
                    var inst_31102 = state_31115[9];
                    var inst_31098 = state_31115[8];
                    var inst_31095 = state_31115[7];
                    var inst_31102__$1 = f.call(null, inst_31095, inst_31098);
                    var inst_31103 = cljs.core.reduced_QMARK_.call(null, inst_31102__$1);
                    var state_31115__$1 = function() {
                      var statearr_31123 = state_31115;
                      statearr_31123[9] = inst_31102__$1;
                      return statearr_31123;
                    }();
                    if (inst_31103) {
                      var statearr_31124_31142 = state_31115__$1;
                      statearr_31124_31142[1] = 8;
                    } else {
                      var statearr_31125_31143 = state_31115__$1;
                      statearr_31125_31143[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31116 === 3) {
                      var inst_31113 = state_31115[2];
                      var state_31115__$1 = state_31115;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31115__$1, inst_31113);
                    } else {
                      if (state_val_31116 === 2) {
                        var state_31115__$1 = state_31115;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31115__$1, 4, ch);
                      } else {
                        if (state_val_31116 === 9) {
                          var inst_31102 = state_31115[9];
                          var inst_31095 = inst_31102;
                          var state_31115__$1 = function() {
                            var statearr_31126 = state_31115;
                            statearr_31126[7] = inst_31095;
                            return statearr_31126;
                          }();
                          var statearr_31127_31144 = state_31115__$1;
                          statearr_31127_31144[2] = null;
                          statearr_31127_31144[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31116 === 5) {
                            var inst_31095 = state_31115[7];
                            var state_31115__$1 = state_31115;
                            var statearr_31128_31145 = state_31115__$1;
                            statearr_31128_31145[2] = inst_31095;
                            statearr_31128_31145[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_31116 === 10) {
                              var inst_31109 = state_31115[2];
                              var state_31115__$1 = state_31115;
                              var statearr_31129_31146 = state_31115__$1;
                              statearr_31129_31146[2] = inst_31109;
                              statearr_31129_31146[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31116 === 8) {
                                var inst_31102 = state_31115[9];
                                var inst_31105 = cljs.core.deref.call(null, inst_31102);
                                var state_31115__$1 = state_31115;
                                var statearr_31130_31147 = state_31115__$1;
                                statearr_31130_31147[2] = inst_31105;
                                statearr_31130_31147[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto__);
        return function(switch__30237__auto__, c__30349__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__30238__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__30238__auto____0 = function() {
              var statearr_31134 = [null, null, null, null, null, null, null, null, null, null];
              statearr_31134[0] = cljs$core$async$reduce_$_state_machine__30238__auto__;
              statearr_31134[1] = 1;
              return statearr_31134;
            };
            var cljs$core$async$reduce_$_state_machine__30238__auto____1 = function(state_31115) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_31115);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e31135) {
                    if (e31135 instanceof Object) {
                      var ex__30241__auto__ = e31135;
                      var statearr_31136_31148 = state_31115;
                      statearr_31136_31148[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31115);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31135;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31149 = state_31115;
                  state_31115 = G__31149;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__30238__auto__ = function(state_31115) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__30238__auto____1.call(this, state_31115);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__30238__auto____0;
            cljs$core$async$reduce_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__30238__auto____1;
            return cljs$core$async$reduce_$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto__);
      }();
      var state__30351__auto__ = function() {
        var statearr_31137 = f__30350__auto__.call(null);
        statearr_31137[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
        return statearr_31137;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto__));
  return c__30349__auto__;
};
cljs.core.async.transduce = function cljs$core$async$transduce(xform, f, init, ch) {
  var f__$1 = xform.call(null, f);
  var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__, f__$1) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto__, f__$1) {
          return function(state_31169) {
            var state_val_31170 = state_31169[1];
            if (state_val_31170 === 1) {
              var inst_31164 = cljs.core.async.reduce.call(null, f__$1, init, ch);
              var state_31169__$1 = state_31169;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31169__$1, 2, inst_31164);
            } else {
              if (state_val_31170 === 2) {
                var inst_31166 = state_31169[2];
                var inst_31167 = f__$1.call(null, inst_31166);
                var state_31169__$1 = state_31169;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31169__$1, inst_31167);
              } else {
                return null;
              }
            }
          };
        }(c__30349__auto__, f__$1);
        return function(switch__30237__auto__, c__30349__auto__, f__$1) {
          return function() {
            var cljs$core$async$transduce_$_state_machine__30238__auto__ = null;
            var cljs$core$async$transduce_$_state_machine__30238__auto____0 = function() {
              var statearr_31174 = [null, null, null, null, null, null, null];
              statearr_31174[0] = cljs$core$async$transduce_$_state_machine__30238__auto__;
              statearr_31174[1] = 1;
              return statearr_31174;
            };
            var cljs$core$async$transduce_$_state_machine__30238__auto____1 = function(state_31169) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_31169);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e31175) {
                    if (e31175 instanceof Object) {
                      var ex__30241__auto__ = e31175;
                      var statearr_31176_31178 = state_31169;
                      statearr_31176_31178[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31169);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31175;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31179 = state_31169;
                  state_31169 = G__31179;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$transduce_$_state_machine__30238__auto__ = function(state_31169) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$transduce_$_state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$transduce_$_state_machine__30238__auto____1.call(this, state_31169);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$transduce_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$transduce_$_state_machine__30238__auto____0;
            cljs$core$async$transduce_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$transduce_$_state_machine__30238__auto____1;
            return cljs$core$async$transduce_$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto__, f__$1);
      }();
      var state__30351__auto__ = function() {
        var statearr_31177 = f__30350__auto__.call(null);
        statearr_31177[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
        return statearr_31177;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto__, f__$1));
  return c__30349__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var args31180 = [];
  var len__9707__auto___31232 = arguments.length;
  var i__9708__auto___31233 = 0;
  while (true) {
    if (i__9708__auto___31233 < len__9707__auto___31232) {
      args31180.push(arguments[i__9708__auto___31233]);
      var G__31234 = i__9708__auto___31233 + 1;
      i__9708__auto___31233 = G__31234;
      continue;
    } else {
    }
    break;
  }
  var G__31182 = args31180.length;
  switch(G__31182) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31180.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto__) {
          return function(state_31207) {
            var state_val_31208 = state_31207[1];
            if (state_val_31208 === 7) {
              var inst_31189 = state_31207[2];
              var state_31207__$1 = state_31207;
              var statearr_31209_31236 = state_31207__$1;
              statearr_31209_31236[2] = inst_31189;
              statearr_31209_31236[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31208 === 1) {
                var inst_31183 = cljs.core.seq.call(null, coll);
                var inst_31184 = inst_31183;
                var state_31207__$1 = function() {
                  var statearr_31210 = state_31207;
                  statearr_31210[7] = inst_31184;
                  return statearr_31210;
                }();
                var statearr_31211_31237 = state_31207__$1;
                statearr_31211_31237[2] = null;
                statearr_31211_31237[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31208 === 4) {
                  var inst_31184 = state_31207[7];
                  var inst_31187 = cljs.core.first.call(null, inst_31184);
                  var state_31207__$1 = state_31207;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31207__$1, 7, ch, inst_31187);
                } else {
                  if (state_val_31208 === 13) {
                    var inst_31201 = state_31207[2];
                    var state_31207__$1 = state_31207;
                    var statearr_31212_31238 = state_31207__$1;
                    statearr_31212_31238[2] = inst_31201;
                    statearr_31212_31238[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31208 === 6) {
                      var inst_31192 = state_31207[2];
                      var state_31207__$1 = state_31207;
                      if (cljs.core.truth_(inst_31192)) {
                        var statearr_31213_31239 = state_31207__$1;
                        statearr_31213_31239[1] = 8;
                      } else {
                        var statearr_31214_31240 = state_31207__$1;
                        statearr_31214_31240[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31208 === 3) {
                        var inst_31205 = state_31207[2];
                        var state_31207__$1 = state_31207;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31207__$1, inst_31205);
                      } else {
                        if (state_val_31208 === 12) {
                          var state_31207__$1 = state_31207;
                          var statearr_31215_31241 = state_31207__$1;
                          statearr_31215_31241[2] = null;
                          statearr_31215_31241[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31208 === 2) {
                            var inst_31184 = state_31207[7];
                            var state_31207__$1 = state_31207;
                            if (cljs.core.truth_(inst_31184)) {
                              var statearr_31216_31242 = state_31207__$1;
                              statearr_31216_31242[1] = 4;
                            } else {
                              var statearr_31217_31243 = state_31207__$1;
                              statearr_31217_31243[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_31208 === 11) {
                              var inst_31198 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_31207__$1 = state_31207;
                              var statearr_31218_31244 = state_31207__$1;
                              statearr_31218_31244[2] = inst_31198;
                              statearr_31218_31244[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31208 === 9) {
                                var state_31207__$1 = state_31207;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_31219_31245 = state_31207__$1;
                                  statearr_31219_31245[1] = 11;
                                } else {
                                  var statearr_31220_31246 = state_31207__$1;
                                  statearr_31220_31246[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31208 === 5) {
                                  var inst_31184 = state_31207[7];
                                  var state_31207__$1 = state_31207;
                                  var statearr_31221_31247 = state_31207__$1;
                                  statearr_31221_31247[2] = inst_31184;
                                  statearr_31221_31247[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_31208 === 10) {
                                    var inst_31203 = state_31207[2];
                                    var state_31207__$1 = state_31207;
                                    var statearr_31222_31248 = state_31207__$1;
                                    statearr_31222_31248[2] = inst_31203;
                                    statearr_31222_31248[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_31208 === 8) {
                                      var inst_31184 = state_31207[7];
                                      var inst_31194 = cljs.core.next.call(null, inst_31184);
                                      var inst_31184__$1 = inst_31194;
                                      var state_31207__$1 = function() {
                                        var statearr_31223 = state_31207;
                                        statearr_31223[7] = inst_31184__$1;
                                        return statearr_31223;
                                      }();
                                      var statearr_31224_31249 = state_31207__$1;
                                      statearr_31224_31249[2] = null;
                                      statearr_31224_31249[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto__);
        return function(switch__30237__auto__, c__30349__auto__) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_31228 = [null, null, null, null, null, null, null, null];
              statearr_31228[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_31228[1] = 1;
              return statearr_31228;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_31207) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_31207);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e31229) {
                    if (e31229 instanceof Object) {
                      var ex__30241__auto__ = e31229;
                      var statearr_31230_31250 = state_31207;
                      statearr_31230_31250[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31207);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31229;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31251 = state_31207;
                  state_31207 = G__31251;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_31207) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_31207);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto__);
      }();
      var state__30351__auto__ = function() {
        var statearr_31231 = f__30350__auto__.call(null);
        statearr_31231[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
        return statearr_31231;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto__));
  return c__30349__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _);
    } else {
      var m__9296__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__9296__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m, ch);
    } else {
      var m__9296__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m);
    } else {
      var m__9296__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async31477 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async31477 = function(mult, ch, cs, meta31478) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta31478 = meta31478;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_31479, meta31478__$1) {
          var self__ = this;
          var _31479__$1 = this;
          return new cljs.core.async.t_cljs$core$async31477(self__.mult, self__.ch, self__.cs, meta31478__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_31479) {
          var self__ = this;
          var _31479__$1 = this;
          return self__.meta31478;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async31477.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async31477.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta31478", "meta31478", -783811586, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async31477.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async31477.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async31477";
      cljs.core.async.t_cljs$core$async31477.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
          return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async31477");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async31477 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async31477(mult__$1, ch__$1, cs__$1, meta31478) {
          return new cljs.core.async.t_cljs$core$async31477(mult__$1, ch__$1, cs__$1, meta31478);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async31477(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__30349__auto___31702 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___31702, cs, m, dchan, dctr, done) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___31702, cs, m, dchan, dctr, done) {
          return function(state_31614) {
            var state_val_31615 = state_31614[1];
            if (state_val_31615 === 7) {
              var inst_31610 = state_31614[2];
              var state_31614__$1 = state_31614;
              var statearr_31616_31703 = state_31614__$1;
              statearr_31616_31703[2] = inst_31610;
              statearr_31616_31703[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31615 === 20) {
                var inst_31513 = state_31614[7];
                var inst_31525 = cljs.core.first.call(null, inst_31513);
                var inst_31526 = cljs.core.nth.call(null, inst_31525, 0, null);
                var inst_31527 = cljs.core.nth.call(null, inst_31525, 1, null);
                var state_31614__$1 = function() {
                  var statearr_31617 = state_31614;
                  statearr_31617[8] = inst_31526;
                  return statearr_31617;
                }();
                if (cljs.core.truth_(inst_31527)) {
                  var statearr_31618_31704 = state_31614__$1;
                  statearr_31618_31704[1] = 22;
                } else {
                  var statearr_31619_31705 = state_31614__$1;
                  statearr_31619_31705[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31615 === 27) {
                  var inst_31557 = state_31614[9];
                  var inst_31555 = state_31614[10];
                  var inst_31562 = state_31614[11];
                  var inst_31482 = state_31614[12];
                  var inst_31562__$1 = cljs.core._nth.call(null, inst_31555, inst_31557);
                  var inst_31563 = cljs.core.async.put_BANG_.call(null, inst_31562__$1, inst_31482, done);
                  var state_31614__$1 = function() {
                    var statearr_31620 = state_31614;
                    statearr_31620[11] = inst_31562__$1;
                    return statearr_31620;
                  }();
                  if (cljs.core.truth_(inst_31563)) {
                    var statearr_31621_31706 = state_31614__$1;
                    statearr_31621_31706[1] = 30;
                  } else {
                    var statearr_31622_31707 = state_31614__$1;
                    statearr_31622_31707[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_31615 === 1) {
                    var state_31614__$1 = state_31614;
                    var statearr_31623_31708 = state_31614__$1;
                    statearr_31623_31708[2] = null;
                    statearr_31623_31708[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31615 === 24) {
                      var inst_31513 = state_31614[7];
                      var inst_31532 = state_31614[2];
                      var inst_31533 = cljs.core.next.call(null, inst_31513);
                      var inst_31491 = inst_31533;
                      var inst_31492 = null;
                      var inst_31493 = 0;
                      var inst_31494 = 0;
                      var state_31614__$1 = function() {
                        var statearr_31624 = state_31614;
                        statearr_31624[13] = inst_31491;
                        statearr_31624[14] = inst_31532;
                        statearr_31624[15] = inst_31492;
                        statearr_31624[16] = inst_31494;
                        statearr_31624[17] = inst_31493;
                        return statearr_31624;
                      }();
                      var statearr_31625_31709 = state_31614__$1;
                      statearr_31625_31709[2] = null;
                      statearr_31625_31709[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31615 === 39) {
                        var state_31614__$1 = state_31614;
                        var statearr_31629_31710 = state_31614__$1;
                        statearr_31629_31710[2] = null;
                        statearr_31629_31710[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_31615 === 4) {
                          var inst_31482 = state_31614[12];
                          var inst_31482__$1 = state_31614[2];
                          var inst_31483 = inst_31482__$1 == null;
                          var state_31614__$1 = function() {
                            var statearr_31630 = state_31614;
                            statearr_31630[12] = inst_31482__$1;
                            return statearr_31630;
                          }();
                          if (cljs.core.truth_(inst_31483)) {
                            var statearr_31631_31711 = state_31614__$1;
                            statearr_31631_31711[1] = 5;
                          } else {
                            var statearr_31632_31712 = state_31614__$1;
                            statearr_31632_31712[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31615 === 15) {
                            var inst_31491 = state_31614[13];
                            var inst_31492 = state_31614[15];
                            var inst_31494 = state_31614[16];
                            var inst_31493 = state_31614[17];
                            var inst_31509 = state_31614[2];
                            var inst_31510 = inst_31494 + 1;
                            var tmp31626 = inst_31491;
                            var tmp31627 = inst_31492;
                            var tmp31628 = inst_31493;
                            var inst_31491__$1 = tmp31626;
                            var inst_31492__$1 = tmp31627;
                            var inst_31493__$1 = tmp31628;
                            var inst_31494__$1 = inst_31510;
                            var state_31614__$1 = function() {
                              var statearr_31633 = state_31614;
                              statearr_31633[13] = inst_31491__$1;
                              statearr_31633[15] = inst_31492__$1;
                              statearr_31633[16] = inst_31494__$1;
                              statearr_31633[17] = inst_31493__$1;
                              statearr_31633[18] = inst_31509;
                              return statearr_31633;
                            }();
                            var statearr_31634_31713 = state_31614__$1;
                            statearr_31634_31713[2] = null;
                            statearr_31634_31713[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_31615 === 21) {
                              var inst_31536 = state_31614[2];
                              var state_31614__$1 = state_31614;
                              var statearr_31638_31714 = state_31614__$1;
                              statearr_31638_31714[2] = inst_31536;
                              statearr_31638_31714[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31615 === 31) {
                                var inst_31562 = state_31614[11];
                                var inst_31566 = done.call(null, null);
                                var inst_31567 = cljs.core.async.untap_STAR_.call(null, m, inst_31562);
                                var state_31614__$1 = function() {
                                  var statearr_31639 = state_31614;
                                  statearr_31639[19] = inst_31566;
                                  return statearr_31639;
                                }();
                                var statearr_31640_31715 = state_31614__$1;
                                statearr_31640_31715[2] = inst_31567;
                                statearr_31640_31715[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31615 === 32) {
                                  var inst_31557 = state_31614[9];
                                  var inst_31554 = state_31614[20];
                                  var inst_31555 = state_31614[10];
                                  var inst_31556 = state_31614[21];
                                  var inst_31569 = state_31614[2];
                                  var inst_31570 = inst_31557 + 1;
                                  var tmp31635 = inst_31554;
                                  var tmp31636 = inst_31555;
                                  var tmp31637 = inst_31556;
                                  var inst_31554__$1 = tmp31635;
                                  var inst_31555__$1 = tmp31636;
                                  var inst_31556__$1 = tmp31637;
                                  var inst_31557__$1 = inst_31570;
                                  var state_31614__$1 = function() {
                                    var statearr_31641 = state_31614;
                                    statearr_31641[9] = inst_31557__$1;
                                    statearr_31641[20] = inst_31554__$1;
                                    statearr_31641[10] = inst_31555__$1;
                                    statearr_31641[22] = inst_31569;
                                    statearr_31641[21] = inst_31556__$1;
                                    return statearr_31641;
                                  }();
                                  var statearr_31642_31716 = state_31614__$1;
                                  statearr_31642_31716[2] = null;
                                  statearr_31642_31716[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_31615 === 40) {
                                    var inst_31582 = state_31614[23];
                                    var inst_31586 = done.call(null, null);
                                    var inst_31587 = cljs.core.async.untap_STAR_.call(null, m, inst_31582);
                                    var state_31614__$1 = function() {
                                      var statearr_31643 = state_31614;
                                      statearr_31643[24] = inst_31586;
                                      return statearr_31643;
                                    }();
                                    var statearr_31644_31717 = state_31614__$1;
                                    statearr_31644_31717[2] = inst_31587;
                                    statearr_31644_31717[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_31615 === 33) {
                                      var inst_31573 = state_31614[25];
                                      var inst_31575 = cljs.core.chunked_seq_QMARK_.call(null, inst_31573);
                                      var state_31614__$1 = state_31614;
                                      if (inst_31575) {
                                        var statearr_31645_31718 = state_31614__$1;
                                        statearr_31645_31718[1] = 36;
                                      } else {
                                        var statearr_31646_31719 = state_31614__$1;
                                        statearr_31646_31719[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_31615 === 13) {
                                        var inst_31503 = state_31614[26];
                                        var inst_31506 = cljs.core.async.close_BANG_.call(null, inst_31503);
                                        var state_31614__$1 = state_31614;
                                        var statearr_31647_31720 = state_31614__$1;
                                        statearr_31647_31720[2] = inst_31506;
                                        statearr_31647_31720[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_31615 === 22) {
                                          var inst_31526 = state_31614[8];
                                          var inst_31529 = cljs.core.async.close_BANG_.call(null, inst_31526);
                                          var state_31614__$1 = state_31614;
                                          var statearr_31648_31721 = state_31614__$1;
                                          statearr_31648_31721[2] = inst_31529;
                                          statearr_31648_31721[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_31615 === 36) {
                                            var inst_31573 = state_31614[25];
                                            var inst_31577 = cljs.core.chunk_first.call(null, inst_31573);
                                            var inst_31578 = cljs.core.chunk_rest.call(null, inst_31573);
                                            var inst_31579 = cljs.core.count.call(null, inst_31577);
                                            var inst_31554 = inst_31578;
                                            var inst_31555 = inst_31577;
                                            var inst_31556 = inst_31579;
                                            var inst_31557 = 0;
                                            var state_31614__$1 = function() {
                                              var statearr_31649 = state_31614;
                                              statearr_31649[9] = inst_31557;
                                              statearr_31649[20] = inst_31554;
                                              statearr_31649[10] = inst_31555;
                                              statearr_31649[21] = inst_31556;
                                              return statearr_31649;
                                            }();
                                            var statearr_31650_31722 = state_31614__$1;
                                            statearr_31650_31722[2] = null;
                                            statearr_31650_31722[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_31615 === 41) {
                                              var inst_31573 = state_31614[25];
                                              var inst_31589 = state_31614[2];
                                              var inst_31590 = cljs.core.next.call(null, inst_31573);
                                              var inst_31554 = inst_31590;
                                              var inst_31555 = null;
                                              var inst_31556 = 0;
                                              var inst_31557 = 0;
                                              var state_31614__$1 = function() {
                                                var statearr_31651 = state_31614;
                                                statearr_31651[9] = inst_31557;
                                                statearr_31651[20] = inst_31554;
                                                statearr_31651[10] = inst_31555;
                                                statearr_31651[27] = inst_31589;
                                                statearr_31651[21] = inst_31556;
                                                return statearr_31651;
                                              }();
                                              var statearr_31652_31723 = state_31614__$1;
                                              statearr_31652_31723[2] = null;
                                              statearr_31652_31723[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_31615 === 43) {
                                                var state_31614__$1 = state_31614;
                                                var statearr_31653_31724 = state_31614__$1;
                                                statearr_31653_31724[2] = null;
                                                statearr_31653_31724[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_31615 === 29) {
                                                  var inst_31598 = state_31614[2];
                                                  var state_31614__$1 = state_31614;
                                                  var statearr_31654_31725 = state_31614__$1;
                                                  statearr_31654_31725[2] = inst_31598;
                                                  statearr_31654_31725[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_31615 === 44) {
                                                    var inst_31607 = state_31614[2];
                                                    var state_31614__$1 = function() {
                                                      var statearr_31655 = state_31614;
                                                      statearr_31655[28] = inst_31607;
                                                      return statearr_31655;
                                                    }();
                                                    var statearr_31656_31726 = state_31614__$1;
                                                    statearr_31656_31726[2] = null;
                                                    statearr_31656_31726[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_31615 === 6) {
                                                      var inst_31546 = state_31614[29];
                                                      var inst_31545 = cljs.core.deref.call(null, cs);
                                                      var inst_31546__$1 = cljs.core.keys.call(null, inst_31545);
                                                      var inst_31547 = cljs.core.count.call(null, inst_31546__$1);
                                                      var inst_31548 = cljs.core.reset_BANG_.call(null, dctr, inst_31547);
                                                      var inst_31553 = cljs.core.seq.call(null, inst_31546__$1);
                                                      var inst_31554 = inst_31553;
                                                      var inst_31555 = null;
                                                      var inst_31556 = 0;
                                                      var inst_31557 = 0;
                                                      var state_31614__$1 = function() {
                                                        var statearr_31657 = state_31614;
                                                        statearr_31657[9] = inst_31557;
                                                        statearr_31657[20] = inst_31554;
                                                        statearr_31657[10] = inst_31555;
                                                        statearr_31657[29] = inst_31546__$1;
                                                        statearr_31657[30] = inst_31548;
                                                        statearr_31657[21] = inst_31556;
                                                        return statearr_31657;
                                                      }();
                                                      var statearr_31658_31727 = state_31614__$1;
                                                      statearr_31658_31727[2] = null;
                                                      statearr_31658_31727[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_31615 === 28) {
                                                        var inst_31554 = state_31614[20];
                                                        var inst_31573 = state_31614[25];
                                                        var inst_31573__$1 = cljs.core.seq.call(null, inst_31554);
                                                        var state_31614__$1 = function() {
                                                          var statearr_31659 = state_31614;
                                                          statearr_31659[25] = inst_31573__$1;
                                                          return statearr_31659;
                                                        }();
                                                        if (inst_31573__$1) {
                                                          var statearr_31660_31728 = state_31614__$1;
                                                          statearr_31660_31728[1] = 33;
                                                        } else {
                                                          var statearr_31661_31729 = state_31614__$1;
                                                          statearr_31661_31729[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_31615 === 25) {
                                                          var inst_31557 = state_31614[9];
                                                          var inst_31556 = state_31614[21];
                                                          var inst_31559 = inst_31557 < inst_31556;
                                                          var inst_31560 = inst_31559;
                                                          var state_31614__$1 = state_31614;
                                                          if (cljs.core.truth_(inst_31560)) {
                                                            var statearr_31662_31730 = state_31614__$1;
                                                            statearr_31662_31730[1] = 27;
                                                          } else {
                                                            var statearr_31663_31731 = state_31614__$1;
                                                            statearr_31663_31731[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_31615 === 34) {
                                                            var state_31614__$1 = state_31614;
                                                            var statearr_31664_31732 = state_31614__$1;
                                                            statearr_31664_31732[2] = null;
                                                            statearr_31664_31732[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_31615 === 17) {
                                                              var state_31614__$1 = state_31614;
                                                              var statearr_31665_31733 = state_31614__$1;
                                                              statearr_31665_31733[2] = null;
                                                              statearr_31665_31733[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_31615 === 3) {
                                                                var inst_31612 = state_31614[2];
                                                                var state_31614__$1 = state_31614;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31614__$1, inst_31612);
                                                              } else {
                                                                if (state_val_31615 === 12) {
                                                                  var inst_31541 = state_31614[2];
                                                                  var state_31614__$1 = state_31614;
                                                                  var statearr_31666_31734 = state_31614__$1;
                                                                  statearr_31666_31734[2] = inst_31541;
                                                                  statearr_31666_31734[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_31615 === 2) {
                                                                    var state_31614__$1 = state_31614;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31614__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_31615 === 23) {
                                                                      var state_31614__$1 = state_31614;
                                                                      var statearr_31667_31735 = state_31614__$1;
                                                                      statearr_31667_31735[2] = null;
                                                                      statearr_31667_31735[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_31615 === 35) {
                                                                        var inst_31596 = state_31614[2];
                                                                        var state_31614__$1 = state_31614;
                                                                        var statearr_31668_31736 = state_31614__$1;
                                                                        statearr_31668_31736[2] = inst_31596;
                                                                        statearr_31668_31736[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_31615 === 19) {
                                                                          var inst_31513 = state_31614[7];
                                                                          var inst_31517 = cljs.core.chunk_first.call(null, inst_31513);
                                                                          var inst_31518 = cljs.core.chunk_rest.call(null, inst_31513);
                                                                          var inst_31519 = cljs.core.count.call(null, inst_31517);
                                                                          var inst_31491 = inst_31518;
                                                                          var inst_31492 = inst_31517;
                                                                          var inst_31493 = inst_31519;
                                                                          var inst_31494 = 0;
                                                                          var state_31614__$1 = function() {
                                                                            var statearr_31669 = state_31614;
                                                                            statearr_31669[13] = inst_31491;
                                                                            statearr_31669[15] = inst_31492;
                                                                            statearr_31669[16] = inst_31494;
                                                                            statearr_31669[17] = inst_31493;
                                                                            return statearr_31669;
                                                                          }();
                                                                          var statearr_31670_31737 = state_31614__$1;
                                                                          statearr_31670_31737[2] = null;
                                                                          statearr_31670_31737[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_31615 === 11) {
                                                                            var inst_31513 = state_31614[7];
                                                                            var inst_31491 = state_31614[13];
                                                                            var inst_31513__$1 = cljs.core.seq.call(null, inst_31491);
                                                                            var state_31614__$1 = function() {
                                                                              var statearr_31671 = state_31614;
                                                                              statearr_31671[7] = inst_31513__$1;
                                                                              return statearr_31671;
                                                                            }();
                                                                            if (inst_31513__$1) {
                                                                              var statearr_31672_31738 = state_31614__$1;
                                                                              statearr_31672_31738[1] = 16;
                                                                            } else {
                                                                              var statearr_31673_31739 = state_31614__$1;
                                                                              statearr_31673_31739[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_31615 === 9) {
                                                                              var inst_31543 = state_31614[2];
                                                                              var state_31614__$1 = state_31614;
                                                                              var statearr_31674_31740 = state_31614__$1;
                                                                              statearr_31674_31740[2] = inst_31543;
                                                                              statearr_31674_31740[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_31615 === 5) {
                                                                                var inst_31489 = cljs.core.deref.call(null, cs);
                                                                                var inst_31490 = cljs.core.seq.call(null, inst_31489);
                                                                                var inst_31491 = inst_31490;
                                                                                var inst_31492 = null;
                                                                                var inst_31493 = 0;
                                                                                var inst_31494 = 0;
                                                                                var state_31614__$1 = function() {
                                                                                  var statearr_31675 = state_31614;
                                                                                  statearr_31675[13] = inst_31491;
                                                                                  statearr_31675[15] = inst_31492;
                                                                                  statearr_31675[16] = inst_31494;
                                                                                  statearr_31675[17] = inst_31493;
                                                                                  return statearr_31675;
                                                                                }();
                                                                                var statearr_31676_31741 = state_31614__$1;
                                                                                statearr_31676_31741[2] = null;
                                                                                statearr_31676_31741[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_31615 === 14) {
                                                                                  var state_31614__$1 = state_31614;
                                                                                  var statearr_31677_31742 = state_31614__$1;
                                                                                  statearr_31677_31742[2] = null;
                                                                                  statearr_31677_31742[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_31615 === 45) {
                                                                                    var inst_31604 = state_31614[2];
                                                                                    var state_31614__$1 = state_31614;
                                                                                    var statearr_31678_31743 = state_31614__$1;
                                                                                    statearr_31678_31743[2] = inst_31604;
                                                                                    statearr_31678_31743[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_31615 === 26) {
                                                                                      var inst_31546 = state_31614[29];
                                                                                      var inst_31600 = state_31614[2];
                                                                                      var inst_31601 = cljs.core.seq.call(null, inst_31546);
                                                                                      var state_31614__$1 = function() {
                                                                                        var statearr_31679 = state_31614;
                                                                                        statearr_31679[31] = inst_31600;
                                                                                        return statearr_31679;
                                                                                      }();
                                                                                      if (inst_31601) {
                                                                                        var statearr_31680_31744 = state_31614__$1;
                                                                                        statearr_31680_31744[1] = 42;
                                                                                      } else {
                                                                                        var statearr_31681_31745 = state_31614__$1;
                                                                                        statearr_31681_31745[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_31615 === 16) {
                                                                                        var inst_31513 = state_31614[7];
                                                                                        var inst_31515 = cljs.core.chunked_seq_QMARK_.call(null, inst_31513);
                                                                                        var state_31614__$1 = state_31614;
                                                                                        if (inst_31515) {
                                                                                          var statearr_31682_31746 = state_31614__$1;
                                                                                          statearr_31682_31746[1] = 19;
                                                                                        } else {
                                                                                          var statearr_31683_31747 = state_31614__$1;
                                                                                          statearr_31683_31747[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_31615 === 38) {
                                                                                          var inst_31593 = state_31614[2];
                                                                                          var state_31614__$1 = state_31614;
                                                                                          var statearr_31684_31748 = state_31614__$1;
                                                                                          statearr_31684_31748[2] = inst_31593;
                                                                                          statearr_31684_31748[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_31615 === 30) {
                                                                                            var state_31614__$1 = state_31614;
                                                                                            var statearr_31685_31749 = state_31614__$1;
                                                                                            statearr_31685_31749[2] = null;
                                                                                            statearr_31685_31749[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_31615 === 10) {
                                                                                              var inst_31492 = state_31614[15];
                                                                                              var inst_31494 = state_31614[16];
                                                                                              var inst_31502 = cljs.core._nth.call(null, inst_31492, inst_31494);
                                                                                              var inst_31503 = cljs.core.nth.call(null, inst_31502, 0, null);
                                                                                              var inst_31504 = cljs.core.nth.call(null, inst_31502, 1, null);
                                                                                              var state_31614__$1 = function() {
                                                                                                var statearr_31686 = state_31614;
                                                                                                statearr_31686[26] = inst_31503;
                                                                                                return statearr_31686;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_31504)) {
                                                                                                var statearr_31687_31750 = state_31614__$1;
                                                                                                statearr_31687_31750[1] = 13;
                                                                                              } else {
                                                                                                var statearr_31688_31751 = state_31614__$1;
                                                                                                statearr_31688_31751[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_31615 === 18) {
                                                                                                var inst_31539 = state_31614[2];
                                                                                                var state_31614__$1 = state_31614;
                                                                                                var statearr_31689_31752 = state_31614__$1;
                                                                                                statearr_31689_31752[2] = inst_31539;
                                                                                                statearr_31689_31752[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_31615 === 42) {
                                                                                                  var state_31614__$1 = state_31614;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31614__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_31615 === 37) {
                                                                                                    var inst_31582 = state_31614[23];
                                                                                                    var inst_31573 = state_31614[25];
                                                                                                    var inst_31482 = state_31614[12];
                                                                                                    var inst_31582__$1 = cljs.core.first.call(null, inst_31573);
                                                                                                    var inst_31583 = cljs.core.async.put_BANG_.call(null, inst_31582__$1, inst_31482, done);
                                                                                                    var state_31614__$1 = function() {
                                                                                                      var statearr_31690 = state_31614;
                                                                                                      statearr_31690[23] = inst_31582__$1;
                                                                                                      return statearr_31690;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_31583)) {
                                                                                                      var statearr_31691_31753 = state_31614__$1;
                                                                                                      statearr_31691_31753[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_31692_31754 = state_31614__$1;
                                                                                                      statearr_31692_31754[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_31615 === 8) {
                                                                                                      var inst_31494 = state_31614[16];
                                                                                                      var inst_31493 = state_31614[17];
                                                                                                      var inst_31496 = inst_31494 < inst_31493;
                                                                                                      var inst_31497 = inst_31496;
                                                                                                      var state_31614__$1 = state_31614;
                                                                                                      if (cljs.core.truth_(inst_31497)) {
                                                                                                        var statearr_31693_31755 = state_31614__$1;
                                                                                                        statearr_31693_31755[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_31694_31756 = state_31614__$1;
                                                                                                        statearr_31694_31756[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___31702, cs, m, dchan, dctr, done);
        return function(switch__30237__auto__, c__30349__auto___31702, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__30238__auto__ = null;
            var cljs$core$async$mult_$_state_machine__30238__auto____0 = function() {
              var statearr_31698 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_31698[0] = cljs$core$async$mult_$_state_machine__30238__auto__;
              statearr_31698[1] = 1;
              return statearr_31698;
            };
            var cljs$core$async$mult_$_state_machine__30238__auto____1 = function(state_31614) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_31614);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e31699) {
                    if (e31699 instanceof Object) {
                      var ex__30241__auto__ = e31699;
                      var statearr_31700_31757 = state_31614;
                      statearr_31700_31757[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31614);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31699;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31758 = state_31614;
                  state_31614 = G__31758;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__30238__auto__ = function(state_31614) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__30238__auto____1.call(this, state_31614);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__30238__auto____0;
            cljs$core$async$mult_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__30238__auto____1;
            return cljs$core$async$mult_$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___31702, cs, m, dchan, dctr, done);
      }();
      var state__30351__auto__ = function() {
        var statearr_31701 = f__30350__auto__.call(null);
        statearr_31701[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___31702;
        return statearr_31701;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___31702, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var args31759 = [];
  var len__9707__auto___31762 = arguments.length;
  var i__9708__auto___31763 = 0;
  while (true) {
    if (i__9708__auto___31763 < len__9707__auto___31762) {
      args31759.push(arguments[i__9708__auto___31763]);
      var G__31764 = i__9708__auto___31763 + 1;
      i__9708__auto___31763 = G__31764;
      continue;
    } else {
    }
    break;
  }
  var G__31761 = args31759.length;
  switch(G__31761) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31759.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m, ch);
    } else {
      var m__9296__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m, ch);
    } else {
      var m__9296__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m);
    } else {
      var m__9296__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m, state_map);
    } else {
      var m__9296__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__9295__auto__ = m == null ? null : m;
    var m__9296__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, m, mode);
    } else {
      var m__9296__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___31776 = arguments.length;
  var i__9708__auto___31777 = 0;
  while (true) {
    if (i__9708__auto___31777 < len__9707__auto___31776) {
      args__9714__auto__.push(arguments[i__9708__auto___31777]);
      var G__31778 = i__9708__auto___31777 + 1;
      i__9708__auto___31777 = G__31778;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 3 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9715__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__31770) {
  var map__31771 = p__31770;
  var map__31771__$1 = (!(map__31771 == null) ? map__31771.cljs$lang$protocol_mask$partition0$ & 64 || map__31771.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__31771) : map__31771;
  var opts = map__31771__$1;
  var statearr_31773_31779 = state;
  statearr_31773_31779[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4657__auto__ = cljs.core.async.do_alts.call(null, function(map__31771, map__31771__$1, opts) {
    return function(val) {
      var statearr_31774_31780 = state;
      statearr_31774_31780[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__31771, map__31771__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb = temp__4657__auto__;
    var statearr_31775_31781 = state;
    statearr_31775_31781[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq31766) {
  var G__31767 = cljs.core.first.call(null, seq31766);
  var seq31766__$1 = cljs.core.next.call(null, seq31766);
  var G__31768 = cljs.core.first.call(null, seq31766__$1);
  var seq31766__$2 = cljs.core.next.call(null, seq31766__$1);
  var G__31769 = cljs.core.first.call(null, seq31766__$2);
  var seq31766__$3 = cljs.core.next.call(null, seq31766__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__31767, G__31768, G__31769, seq31766__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async31947 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async31947 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta31948) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta31948 = meta31948;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_31949, meta31948__$1) {
          var self__ = this;
          var _31949__$1 = this;
          return new cljs.core.async.t_cljs$core$async31947(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta31948__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_31949) {
          var self__ = this;
          var _31949__$1 = this;
          return self__.meta31948;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str("(solo-modes mode)")].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta31948", "meta31948", 1371061072, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async31947.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async31947.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async31947";
      cljs.core.async.t_cljs$core$async31947.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
          return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async31947");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async31947 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async31947(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta31948) {
          return new cljs.core.async.t_cljs$core$async31947(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta31948);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async31947(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__30349__auto___32112 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___32112, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___32112, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_32049) {
            var state_val_32050 = state_32049[1];
            if (state_val_32050 === 7) {
              var inst_31965 = state_32049[2];
              var state_32049__$1 = state_32049;
              var statearr_32051_32113 = state_32049__$1;
              statearr_32051_32113[2] = inst_31965;
              statearr_32051_32113[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32050 === 20) {
                var inst_31977 = state_32049[7];
                var state_32049__$1 = state_32049;
                var statearr_32052_32114 = state_32049__$1;
                statearr_32052_32114[2] = inst_31977;
                statearr_32052_32114[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32050 === 27) {
                  var state_32049__$1 = state_32049;
                  var statearr_32053_32115 = state_32049__$1;
                  statearr_32053_32115[2] = null;
                  statearr_32053_32115[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32050 === 1) {
                    var inst_31953 = state_32049[8];
                    var inst_31953__$1 = calc_state.call(null);
                    var inst_31955 = inst_31953__$1 == null;
                    var inst_31956 = cljs.core.not.call(null, inst_31955);
                    var state_32049__$1 = function() {
                      var statearr_32054 = state_32049;
                      statearr_32054[8] = inst_31953__$1;
                      return statearr_32054;
                    }();
                    if (inst_31956) {
                      var statearr_32055_32116 = state_32049__$1;
                      statearr_32055_32116[1] = 2;
                    } else {
                      var statearr_32056_32117 = state_32049__$1;
                      statearr_32056_32117[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32050 === 24) {
                      var inst_32000 = state_32049[9];
                      var inst_32009 = state_32049[10];
                      var inst_32023 = state_32049[11];
                      var inst_32023__$1 = inst_32000.call(null, inst_32009);
                      var state_32049__$1 = function() {
                        var statearr_32057 = state_32049;
                        statearr_32057[11] = inst_32023__$1;
                        return statearr_32057;
                      }();
                      if (cljs.core.truth_(inst_32023__$1)) {
                        var statearr_32058_32118 = state_32049__$1;
                        statearr_32058_32118[1] = 29;
                      } else {
                        var statearr_32059_32119 = state_32049__$1;
                        statearr_32059_32119[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_32050 === 4) {
                        var inst_31968 = state_32049[2];
                        var state_32049__$1 = state_32049;
                        if (cljs.core.truth_(inst_31968)) {
                          var statearr_32060_32120 = state_32049__$1;
                          statearr_32060_32120[1] = 8;
                        } else {
                          var statearr_32061_32121 = state_32049__$1;
                          statearr_32061_32121[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32050 === 15) {
                          var inst_31994 = state_32049[2];
                          var state_32049__$1 = state_32049;
                          if (cljs.core.truth_(inst_31994)) {
                            var statearr_32062_32122 = state_32049__$1;
                            statearr_32062_32122[1] = 19;
                          } else {
                            var statearr_32063_32123 = state_32049__$1;
                            statearr_32063_32123[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32050 === 21) {
                            var inst_31999 = state_32049[12];
                            var inst_31999__$1 = state_32049[2];
                            var inst_32000 = cljs.core.get.call(null, inst_31999__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_32001 = cljs.core.get.call(null, inst_31999__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_32002 = cljs.core.get.call(null, inst_31999__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_32049__$1 = function() {
                              var statearr_32064 = state_32049;
                              statearr_32064[9] = inst_32000;
                              statearr_32064[12] = inst_31999__$1;
                              statearr_32064[13] = inst_32001;
                              return statearr_32064;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_32049__$1, 22, inst_32002);
                          } else {
                            if (state_val_32050 === 31) {
                              var inst_32031 = state_32049[2];
                              var state_32049__$1 = state_32049;
                              if (cljs.core.truth_(inst_32031)) {
                                var statearr_32065_32124 = state_32049__$1;
                                statearr_32065_32124[1] = 32;
                              } else {
                                var statearr_32066_32125 = state_32049__$1;
                                statearr_32066_32125[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32050 === 32) {
                                var inst_32008 = state_32049[14];
                                var state_32049__$1 = state_32049;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32049__$1, 35, out, inst_32008);
                              } else {
                                if (state_val_32050 === 33) {
                                  var inst_31999 = state_32049[12];
                                  var inst_31977 = inst_31999;
                                  var state_32049__$1 = function() {
                                    var statearr_32067 = state_32049;
                                    statearr_32067[7] = inst_31977;
                                    return statearr_32067;
                                  }();
                                  var statearr_32068_32126 = state_32049__$1;
                                  statearr_32068_32126[2] = null;
                                  statearr_32068_32126[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_32050 === 13) {
                                    var inst_31977 = state_32049[7];
                                    var inst_31984 = inst_31977.cljs$lang$protocol_mask$partition0$;
                                    var inst_31985 = inst_31984 & 64;
                                    var inst_31986 = inst_31977.cljs$core$ISeq$;
                                    var inst_31987 = inst_31985 || inst_31986;
                                    var state_32049__$1 = state_32049;
                                    if (cljs.core.truth_(inst_31987)) {
                                      var statearr_32069_32127 = state_32049__$1;
                                      statearr_32069_32127[1] = 16;
                                    } else {
                                      var statearr_32070_32128 = state_32049__$1;
                                      statearr_32070_32128[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_32050 === 22) {
                                      var inst_32009 = state_32049[10];
                                      var inst_32008 = state_32049[14];
                                      var inst_32007 = state_32049[2];
                                      var inst_32008__$1 = cljs.core.nth.call(null, inst_32007, 0, null);
                                      var inst_32009__$1 = cljs.core.nth.call(null, inst_32007, 1, null);
                                      var inst_32010 = inst_32008__$1 == null;
                                      var inst_32011 = cljs.core._EQ_.call(null, inst_32009__$1, change);
                                      var inst_32012 = inst_32010 || inst_32011;
                                      var state_32049__$1 = function() {
                                        var statearr_32071 = state_32049;
                                        statearr_32071[10] = inst_32009__$1;
                                        statearr_32071[14] = inst_32008__$1;
                                        return statearr_32071;
                                      }();
                                      if (cljs.core.truth_(inst_32012)) {
                                        var statearr_32072_32129 = state_32049__$1;
                                        statearr_32072_32129[1] = 23;
                                      } else {
                                        var statearr_32073_32130 = state_32049__$1;
                                        statearr_32073_32130[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_32050 === 36) {
                                        var inst_31999 = state_32049[12];
                                        var inst_31977 = inst_31999;
                                        var state_32049__$1 = function() {
                                          var statearr_32074 = state_32049;
                                          statearr_32074[7] = inst_31977;
                                          return statearr_32074;
                                        }();
                                        var statearr_32075_32131 = state_32049__$1;
                                        statearr_32075_32131[2] = null;
                                        statearr_32075_32131[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_32050 === 29) {
                                          var inst_32023 = state_32049[11];
                                          var state_32049__$1 = state_32049;
                                          var statearr_32076_32132 = state_32049__$1;
                                          statearr_32076_32132[2] = inst_32023;
                                          statearr_32076_32132[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_32050 === 6) {
                                            var state_32049__$1 = state_32049;
                                            var statearr_32077_32133 = state_32049__$1;
                                            statearr_32077_32133[2] = false;
                                            statearr_32077_32133[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_32050 === 28) {
                                              var inst_32019 = state_32049[2];
                                              var inst_32020 = calc_state.call(null);
                                              var inst_31977 = inst_32020;
                                              var state_32049__$1 = function() {
                                                var statearr_32078 = state_32049;
                                                statearr_32078[7] = inst_31977;
                                                statearr_32078[15] = inst_32019;
                                                return statearr_32078;
                                              }();
                                              var statearr_32079_32134 = state_32049__$1;
                                              statearr_32079_32134[2] = null;
                                              statearr_32079_32134[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_32050 === 25) {
                                                var inst_32045 = state_32049[2];
                                                var state_32049__$1 = state_32049;
                                                var statearr_32080_32135 = state_32049__$1;
                                                statearr_32080_32135[2] = inst_32045;
                                                statearr_32080_32135[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_32050 === 34) {
                                                  var inst_32043 = state_32049[2];
                                                  var state_32049__$1 = state_32049;
                                                  var statearr_32081_32136 = state_32049__$1;
                                                  statearr_32081_32136[2] = inst_32043;
                                                  statearr_32081_32136[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_32050 === 17) {
                                                    var state_32049__$1 = state_32049;
                                                    var statearr_32082_32137 = state_32049__$1;
                                                    statearr_32082_32137[2] = false;
                                                    statearr_32082_32137[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_32050 === 3) {
                                                      var state_32049__$1 = state_32049;
                                                      var statearr_32083_32138 = state_32049__$1;
                                                      statearr_32083_32138[2] = false;
                                                      statearr_32083_32138[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_32050 === 12) {
                                                        var inst_32047 = state_32049[2];
                                                        var state_32049__$1 = state_32049;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32049__$1, inst_32047);
                                                      } else {
                                                        if (state_val_32050 === 2) {
                                                          var inst_31953 = state_32049[8];
                                                          var inst_31958 = inst_31953.cljs$lang$protocol_mask$partition0$;
                                                          var inst_31959 = inst_31958 & 64;
                                                          var inst_31960 = inst_31953.cljs$core$ISeq$;
                                                          var inst_31961 = inst_31959 || inst_31960;
                                                          var state_32049__$1 = state_32049;
                                                          if (cljs.core.truth_(inst_31961)) {
                                                            var statearr_32084_32139 = state_32049__$1;
                                                            statearr_32084_32139[1] = 5;
                                                          } else {
                                                            var statearr_32085_32140 = state_32049__$1;
                                                            statearr_32085_32140[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_32050 === 23) {
                                                            var inst_32008 = state_32049[14];
                                                            var inst_32014 = inst_32008 == null;
                                                            var state_32049__$1 = state_32049;
                                                            if (cljs.core.truth_(inst_32014)) {
                                                              var statearr_32086_32141 = state_32049__$1;
                                                              statearr_32086_32141[1] = 26;
                                                            } else {
                                                              var statearr_32087_32142 = state_32049__$1;
                                                              statearr_32087_32142[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_32050 === 35) {
                                                              var inst_32034 = state_32049[2];
                                                              var state_32049__$1 = state_32049;
                                                              if (cljs.core.truth_(inst_32034)) {
                                                                var statearr_32088_32143 = state_32049__$1;
                                                                statearr_32088_32143[1] = 36;
                                                              } else {
                                                                var statearr_32089_32144 = state_32049__$1;
                                                                statearr_32089_32144[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_32050 === 19) {
                                                                var inst_31977 = state_32049[7];
                                                                var inst_31996 = cljs.core.apply.call(null, cljs.core.hash_map, inst_31977);
                                                                var state_32049__$1 = state_32049;
                                                                var statearr_32090_32145 = state_32049__$1;
                                                                statearr_32090_32145[2] = inst_31996;
                                                                statearr_32090_32145[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_32050 === 11) {
                                                                  var inst_31977 = state_32049[7];
                                                                  var inst_31981 = inst_31977 == null;
                                                                  var inst_31982 = cljs.core.not.call(null, inst_31981);
                                                                  var state_32049__$1 = state_32049;
                                                                  if (inst_31982) {
                                                                    var statearr_32091_32146 = state_32049__$1;
                                                                    statearr_32091_32146[1] = 13;
                                                                  } else {
                                                                    var statearr_32092_32147 = state_32049__$1;
                                                                    statearr_32092_32147[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_32050 === 9) {
                                                                    var inst_31953 = state_32049[8];
                                                                    var state_32049__$1 = state_32049;
                                                                    var statearr_32093_32148 = state_32049__$1;
                                                                    statearr_32093_32148[2] = inst_31953;
                                                                    statearr_32093_32148[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_32050 === 5) {
                                                                      var state_32049__$1 = state_32049;
                                                                      var statearr_32094_32149 = state_32049__$1;
                                                                      statearr_32094_32149[2] = true;
                                                                      statearr_32094_32149[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_32050 === 14) {
                                                                        var state_32049__$1 = state_32049;
                                                                        var statearr_32095_32150 = state_32049__$1;
                                                                        statearr_32095_32150[2] = false;
                                                                        statearr_32095_32150[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_32050 === 26) {
                                                                          var inst_32009 = state_32049[10];
                                                                          var inst_32016 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_32009);
                                                                          var state_32049__$1 = state_32049;
                                                                          var statearr_32096_32151 = state_32049__$1;
                                                                          statearr_32096_32151[2] = inst_32016;
                                                                          statearr_32096_32151[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_32050 === 16) {
                                                                            var state_32049__$1 = state_32049;
                                                                            var statearr_32097_32152 = state_32049__$1;
                                                                            statearr_32097_32152[2] = true;
                                                                            statearr_32097_32152[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_32050 === 38) {
                                                                              var inst_32039 = state_32049[2];
                                                                              var state_32049__$1 = state_32049;
                                                                              var statearr_32098_32153 = state_32049__$1;
                                                                              statearr_32098_32153[2] = inst_32039;
                                                                              statearr_32098_32153[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_32050 === 30) {
                                                                                var inst_32000 = state_32049[9];
                                                                                var inst_32009 = state_32049[10];
                                                                                var inst_32001 = state_32049[13];
                                                                                var inst_32026 = cljs.core.empty_QMARK_.call(null, inst_32000);
                                                                                var inst_32027 = inst_32001.call(null, inst_32009);
                                                                                var inst_32028 = cljs.core.not.call(null, inst_32027);
                                                                                var inst_32029 = inst_32026 && inst_32028;
                                                                                var state_32049__$1 = state_32049;
                                                                                var statearr_32099_32154 = state_32049__$1;
                                                                                statearr_32099_32154[2] = inst_32029;
                                                                                statearr_32099_32154[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_32050 === 10) {
                                                                                  var inst_31953 = state_32049[8];
                                                                                  var inst_31973 = state_32049[2];
                                                                                  var inst_31974 = cljs.core.get.call(null, inst_31973, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_31975 = cljs.core.get.call(null, inst_31973, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_31976 = cljs.core.get.call(null, inst_31973, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_31977 = inst_31953;
                                                                                  var state_32049__$1 = function() {
                                                                                    var statearr_32100 = state_32049;
                                                                                    statearr_32100[16] = inst_31975;
                                                                                    statearr_32100[17] = inst_31976;
                                                                                    statearr_32100[7] = inst_31977;
                                                                                    statearr_32100[18] = inst_31974;
                                                                                    return statearr_32100;
                                                                                  }();
                                                                                  var statearr_32101_32155 = state_32049__$1;
                                                                                  statearr_32101_32155[2] = null;
                                                                                  statearr_32101_32155[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_32050 === 18) {
                                                                                    var inst_31991 = state_32049[2];
                                                                                    var state_32049__$1 = state_32049;
                                                                                    var statearr_32102_32156 = state_32049__$1;
                                                                                    statearr_32102_32156[2] = inst_31991;
                                                                                    statearr_32102_32156[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_32050 === 37) {
                                                                                      var state_32049__$1 = state_32049;
                                                                                      var statearr_32103_32157 = state_32049__$1;
                                                                                      statearr_32103_32157[2] = null;
                                                                                      statearr_32103_32157[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_32050 === 8) {
                                                                                        var inst_31953 = state_32049[8];
                                                                                        var inst_31970 = cljs.core.apply.call(null, cljs.core.hash_map, inst_31953);
                                                                                        var state_32049__$1 = state_32049;
                                                                                        var statearr_32104_32158 = state_32049__$1;
                                                                                        statearr_32104_32158[2] = inst_31970;
                                                                                        statearr_32104_32158[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___32112, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__30237__auto__, c__30349__auto___32112, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__30238__auto__ = null;
            var cljs$core$async$mix_$_state_machine__30238__auto____0 = function() {
              var statearr_32108 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32108[0] = cljs$core$async$mix_$_state_machine__30238__auto__;
              statearr_32108[1] = 1;
              return statearr_32108;
            };
            var cljs$core$async$mix_$_state_machine__30238__auto____1 = function(state_32049) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32049);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32109) {
                    if (e32109 instanceof Object) {
                      var ex__30241__auto__ = e32109;
                      var statearr_32110_32159 = state_32049;
                      statearr_32110_32159[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32049);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32109;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32160 = state_32049;
                  state_32049 = G__32160;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__30238__auto__ = function(state_32049) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__30238__auto____1.call(this, state_32049);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__30238__auto____0;
            cljs$core$async$mix_$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__30238__auto____1;
            return cljs$core$async$mix_$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___32112, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__30351__auto__ = function() {
        var statearr_32111 = f__30350__auto__.call(null);
        statearr_32111[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___32112;
        return statearr_32111;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___32112, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__9295__auto__ = p == null ? null : p;
    var m__9296__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__9296__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__9295__auto__ = p == null ? null : p;
    var m__9296__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, p, v, ch);
    } else {
      var m__9296__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var args32161 = [];
  var len__9707__auto___32164 = arguments.length;
  var i__9708__auto___32165 = 0;
  while (true) {
    if (i__9708__auto___32165 < len__9707__auto___32164) {
      args32161.push(arguments[i__9708__auto___32165]);
      var G__32166 = i__9708__auto___32165 + 1;
      i__9708__auto___32165 = G__32166;
      continue;
    } else {
    }
    break;
  }
  var G__32163 = args32161.length;
  switch(G__32163) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32161.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__9295__auto__ = p == null ? null : p;
    var m__9296__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, p);
    } else {
      var m__9296__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__9295__auto__ = p == null ? null : p;
    var m__9296__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, p, v);
    } else {
      var m__9296__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var args32169 = [];
  var len__9707__auto___32294 = arguments.length;
  var i__9708__auto___32295 = 0;
  while (true) {
    if (i__9708__auto___32295 < len__9707__auto___32294) {
      args32169.push(arguments[i__9708__auto___32295]);
      var G__32296 = i__9708__auto___32295 + 1;
      i__9708__auto___32295 = G__32296;
      continue;
    } else {
    }
    break;
  }
  var G__32171 = args32169.length;
  switch(G__32171) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32169.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__8632__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__8632__auto__, mults) {
          return function(p1__32168_SHARP_) {
            if (cljs.core.truth_(p1__32168_SHARP_.call(null, topic))) {
              return p1__32168_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__32168_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__8632__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async32172 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async32172 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta32173) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta32173 = meta32173;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_32174, meta32173__$1) {
          var self__ = this;
          var _32174__$1 = this;
          return new cljs.core.async.t_cljs$core$async32172(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta32173__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_32174) {
          var self__ = this;
          var _32174__$1 = this;
          return self__.meta32173;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4657__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var m = temp__4657__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta32173", "meta32173", 1798997596, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32172.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async32172.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32172";
      cljs.core.async.t_cljs$core$async32172.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
          return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async32172");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async32172 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async32172(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta32173) {
          return new cljs.core.async.t_cljs$core$async32172(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta32173);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async32172(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__30349__auto___32298 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___32298, mults, ensure_mult, p) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___32298, mults, ensure_mult, p) {
          return function(state_32246) {
            var state_val_32247 = state_32246[1];
            if (state_val_32247 === 7) {
              var inst_32242 = state_32246[2];
              var state_32246__$1 = state_32246;
              var statearr_32248_32299 = state_32246__$1;
              statearr_32248_32299[2] = inst_32242;
              statearr_32248_32299[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32247 === 20) {
                var state_32246__$1 = state_32246;
                var statearr_32249_32300 = state_32246__$1;
                statearr_32249_32300[2] = null;
                statearr_32249_32300[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32247 === 1) {
                  var state_32246__$1 = state_32246;
                  var statearr_32250_32301 = state_32246__$1;
                  statearr_32250_32301[2] = null;
                  statearr_32250_32301[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32247 === 24) {
                    var inst_32225 = state_32246[7];
                    var inst_32234 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_32225);
                    var state_32246__$1 = state_32246;
                    var statearr_32251_32302 = state_32246__$1;
                    statearr_32251_32302[2] = inst_32234;
                    statearr_32251_32302[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32247 === 4) {
                      var inst_32177 = state_32246[8];
                      var inst_32177__$1 = state_32246[2];
                      var inst_32178 = inst_32177__$1 == null;
                      var state_32246__$1 = function() {
                        var statearr_32252 = state_32246;
                        statearr_32252[8] = inst_32177__$1;
                        return statearr_32252;
                      }();
                      if (cljs.core.truth_(inst_32178)) {
                        var statearr_32253_32303 = state_32246__$1;
                        statearr_32253_32303[1] = 5;
                      } else {
                        var statearr_32254_32304 = state_32246__$1;
                        statearr_32254_32304[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_32247 === 15) {
                        var inst_32219 = state_32246[2];
                        var state_32246__$1 = state_32246;
                        var statearr_32255_32305 = state_32246__$1;
                        statearr_32255_32305[2] = inst_32219;
                        statearr_32255_32305[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32247 === 21) {
                          var inst_32239 = state_32246[2];
                          var state_32246__$1 = function() {
                            var statearr_32256 = state_32246;
                            statearr_32256[9] = inst_32239;
                            return statearr_32256;
                          }();
                          var statearr_32257_32306 = state_32246__$1;
                          statearr_32257_32306[2] = null;
                          statearr_32257_32306[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32247 === 13) {
                            var inst_32201 = state_32246[10];
                            var inst_32203 = cljs.core.chunked_seq_QMARK_.call(null, inst_32201);
                            var state_32246__$1 = state_32246;
                            if (inst_32203) {
                              var statearr_32258_32307 = state_32246__$1;
                              statearr_32258_32307[1] = 16;
                            } else {
                              var statearr_32259_32308 = state_32246__$1;
                              statearr_32259_32308[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_32247 === 22) {
                              var inst_32231 = state_32246[2];
                              var state_32246__$1 = state_32246;
                              if (cljs.core.truth_(inst_32231)) {
                                var statearr_32260_32309 = state_32246__$1;
                                statearr_32260_32309[1] = 23;
                              } else {
                                var statearr_32261_32310 = state_32246__$1;
                                statearr_32261_32310[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32247 === 6) {
                                var inst_32177 = state_32246[8];
                                var inst_32227 = state_32246[11];
                                var inst_32225 = state_32246[7];
                                var inst_32225__$1 = topic_fn.call(null, inst_32177);
                                var inst_32226 = cljs.core.deref.call(null, mults);
                                var inst_32227__$1 = cljs.core.get.call(null, inst_32226, inst_32225__$1);
                                var state_32246__$1 = function() {
                                  var statearr_32262 = state_32246;
                                  statearr_32262[11] = inst_32227__$1;
                                  statearr_32262[7] = inst_32225__$1;
                                  return statearr_32262;
                                }();
                                if (cljs.core.truth_(inst_32227__$1)) {
                                  var statearr_32263_32311 = state_32246__$1;
                                  statearr_32263_32311[1] = 19;
                                } else {
                                  var statearr_32264_32312 = state_32246__$1;
                                  statearr_32264_32312[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32247 === 25) {
                                  var inst_32236 = state_32246[2];
                                  var state_32246__$1 = state_32246;
                                  var statearr_32265_32313 = state_32246__$1;
                                  statearr_32265_32313[2] = inst_32236;
                                  statearr_32265_32313[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_32247 === 17) {
                                    var inst_32201 = state_32246[10];
                                    var inst_32210 = cljs.core.first.call(null, inst_32201);
                                    var inst_32211 = cljs.core.async.muxch_STAR_.call(null, inst_32210);
                                    var inst_32212 = cljs.core.async.close_BANG_.call(null, inst_32211);
                                    var inst_32213 = cljs.core.next.call(null, inst_32201);
                                    var inst_32187 = inst_32213;
                                    var inst_32188 = null;
                                    var inst_32189 = 0;
                                    var inst_32190 = 0;
                                    var state_32246__$1 = function() {
                                      var statearr_32266 = state_32246;
                                      statearr_32266[12] = inst_32212;
                                      statearr_32266[13] = inst_32188;
                                      statearr_32266[14] = inst_32187;
                                      statearr_32266[15] = inst_32189;
                                      statearr_32266[16] = inst_32190;
                                      return statearr_32266;
                                    }();
                                    var statearr_32267_32314 = state_32246__$1;
                                    statearr_32267_32314[2] = null;
                                    statearr_32267_32314[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_32247 === 3) {
                                      var inst_32244 = state_32246[2];
                                      var state_32246__$1 = state_32246;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32246__$1, inst_32244);
                                    } else {
                                      if (state_val_32247 === 12) {
                                        var inst_32221 = state_32246[2];
                                        var state_32246__$1 = state_32246;
                                        var statearr_32268_32315 = state_32246__$1;
                                        statearr_32268_32315[2] = inst_32221;
                                        statearr_32268_32315[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_32247 === 2) {
                                          var state_32246__$1 = state_32246;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32246__$1, 4, ch);
                                        } else {
                                          if (state_val_32247 === 23) {
                                            var state_32246__$1 = state_32246;
                                            var statearr_32269_32316 = state_32246__$1;
                                            statearr_32269_32316[2] = null;
                                            statearr_32269_32316[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_32247 === 19) {
                                              var inst_32177 = state_32246[8];
                                              var inst_32227 = state_32246[11];
                                              var inst_32229 = cljs.core.async.muxch_STAR_.call(null, inst_32227);
                                              var state_32246__$1 = state_32246;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32246__$1, 22, inst_32229, inst_32177);
                                            } else {
                                              if (state_val_32247 === 11) {
                                                var inst_32201 = state_32246[10];
                                                var inst_32187 = state_32246[14];
                                                var inst_32201__$1 = cljs.core.seq.call(null, inst_32187);
                                                var state_32246__$1 = function() {
                                                  var statearr_32270 = state_32246;
                                                  statearr_32270[10] = inst_32201__$1;
                                                  return statearr_32270;
                                                }();
                                                if (inst_32201__$1) {
                                                  var statearr_32271_32317 = state_32246__$1;
                                                  statearr_32271_32317[1] = 13;
                                                } else {
                                                  var statearr_32272_32318 = state_32246__$1;
                                                  statearr_32272_32318[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_32247 === 9) {
                                                  var inst_32223 = state_32246[2];
                                                  var state_32246__$1 = state_32246;
                                                  var statearr_32273_32319 = state_32246__$1;
                                                  statearr_32273_32319[2] = inst_32223;
                                                  statearr_32273_32319[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_32247 === 5) {
                                                    var inst_32184 = cljs.core.deref.call(null, mults);
                                                    var inst_32185 = cljs.core.vals.call(null, inst_32184);
                                                    var inst_32186 = cljs.core.seq.call(null, inst_32185);
                                                    var inst_32187 = inst_32186;
                                                    var inst_32188 = null;
                                                    var inst_32189 = 0;
                                                    var inst_32190 = 0;
                                                    var state_32246__$1 = function() {
                                                      var statearr_32274 = state_32246;
                                                      statearr_32274[13] = inst_32188;
                                                      statearr_32274[14] = inst_32187;
                                                      statearr_32274[15] = inst_32189;
                                                      statearr_32274[16] = inst_32190;
                                                      return statearr_32274;
                                                    }();
                                                    var statearr_32275_32320 = state_32246__$1;
                                                    statearr_32275_32320[2] = null;
                                                    statearr_32275_32320[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_32247 === 14) {
                                                      var state_32246__$1 = state_32246;
                                                      var statearr_32279_32321 = state_32246__$1;
                                                      statearr_32279_32321[2] = null;
                                                      statearr_32279_32321[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_32247 === 16) {
                                                        var inst_32201 = state_32246[10];
                                                        var inst_32205 = cljs.core.chunk_first.call(null, inst_32201);
                                                        var inst_32206 = cljs.core.chunk_rest.call(null, inst_32201);
                                                        var inst_32207 = cljs.core.count.call(null, inst_32205);
                                                        var inst_32187 = inst_32206;
                                                        var inst_32188 = inst_32205;
                                                        var inst_32189 = inst_32207;
                                                        var inst_32190 = 0;
                                                        var state_32246__$1 = function() {
                                                          var statearr_32280 = state_32246;
                                                          statearr_32280[13] = inst_32188;
                                                          statearr_32280[14] = inst_32187;
                                                          statearr_32280[15] = inst_32189;
                                                          statearr_32280[16] = inst_32190;
                                                          return statearr_32280;
                                                        }();
                                                        var statearr_32281_32322 = state_32246__$1;
                                                        statearr_32281_32322[2] = null;
                                                        statearr_32281_32322[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_32247 === 10) {
                                                          var inst_32188 = state_32246[13];
                                                          var inst_32187 = state_32246[14];
                                                          var inst_32189 = state_32246[15];
                                                          var inst_32190 = state_32246[16];
                                                          var inst_32195 = cljs.core._nth.call(null, inst_32188, inst_32190);
                                                          var inst_32196 = cljs.core.async.muxch_STAR_.call(null, inst_32195);
                                                          var inst_32197 = cljs.core.async.close_BANG_.call(null, inst_32196);
                                                          var inst_32198 = inst_32190 + 1;
                                                          var tmp32276 = inst_32188;
                                                          var tmp32277 = inst_32187;
                                                          var tmp32278 = inst_32189;
                                                          var inst_32187__$1 = tmp32277;
                                                          var inst_32188__$1 = tmp32276;
                                                          var inst_32189__$1 = tmp32278;
                                                          var inst_32190__$1 = inst_32198;
                                                          var state_32246__$1 = function() {
                                                            var statearr_32282 = state_32246;
                                                            statearr_32282[13] = inst_32188__$1;
                                                            statearr_32282[17] = inst_32197;
                                                            statearr_32282[14] = inst_32187__$1;
                                                            statearr_32282[15] = inst_32189__$1;
                                                            statearr_32282[16] = inst_32190__$1;
                                                            return statearr_32282;
                                                          }();
                                                          var statearr_32283_32323 = state_32246__$1;
                                                          statearr_32283_32323[2] = null;
                                                          statearr_32283_32323[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_32247 === 18) {
                                                            var inst_32216 = state_32246[2];
                                                            var state_32246__$1 = state_32246;
                                                            var statearr_32284_32324 = state_32246__$1;
                                                            statearr_32284_32324[2] = inst_32216;
                                                            statearr_32284_32324[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_32247 === 8) {
                                                              var inst_32189 = state_32246[15];
                                                              var inst_32190 = state_32246[16];
                                                              var inst_32192 = inst_32190 < inst_32189;
                                                              var inst_32193 = inst_32192;
                                                              var state_32246__$1 = state_32246;
                                                              if (cljs.core.truth_(inst_32193)) {
                                                                var statearr_32285_32325 = state_32246__$1;
                                                                statearr_32285_32325[1] = 10;
                                                              } else {
                                                                var statearr_32286_32326 = state_32246__$1;
                                                                statearr_32286_32326[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___32298, mults, ensure_mult, p);
        return function(switch__30237__auto__, c__30349__auto___32298, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_32290 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32290[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_32290[1] = 1;
              return statearr_32290;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_32246) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32246);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32291) {
                    if (e32291 instanceof Object) {
                      var ex__30241__auto__ = e32291;
                      var statearr_32292_32327 = state_32246;
                      statearr_32292_32327[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32246);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32291;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32328 = state_32246;
                  state_32246 = G__32328;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_32246) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_32246);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___32298, mults, ensure_mult, p);
      }();
      var state__30351__auto__ = function() {
        var statearr_32293 = f__30350__auto__.call(null);
        statearr_32293[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___32298;
        return statearr_32293;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___32298, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var args32329 = [];
  var len__9707__auto___32332 = arguments.length;
  var i__9708__auto___32333 = 0;
  while (true) {
    if (i__9708__auto___32333 < len__9707__auto___32332) {
      args32329.push(arguments[i__9708__auto___32333]);
      var G__32334 = i__9708__auto___32333 + 1;
      i__9708__auto___32333 = G__32334;
      continue;
    } else {
    }
    break;
  }
  var G__32331 = args32329.length;
  switch(G__32331) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32329.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var args32336 = [];
  var len__9707__auto___32339 = arguments.length;
  var i__9708__auto___32340 = 0;
  while (true) {
    if (i__9708__auto___32340 < len__9707__auto___32339) {
      args32336.push(arguments[i__9708__auto___32340]);
      var G__32341 = i__9708__auto___32340 + 1;
      i__9708__auto___32340 = G__32341;
      continue;
    } else {
    }
    break;
  }
  var G__32338 = args32336.length;
  switch(G__32338) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32336.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var args32343 = [];
  var len__9707__auto___32414 = arguments.length;
  var i__9708__auto___32415 = 0;
  while (true) {
    if (i__9708__auto___32415 < len__9707__auto___32414) {
      args32343.push(arguments[i__9708__auto___32415]);
      var G__32416 = i__9708__auto___32415 + 1;
      i__9708__auto___32415 = G__32416;
      continue;
    } else {
    }
    break;
  }
  var G__32345 = args32343.length;
  switch(G__32345) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32343.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__30349__auto___32418 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___32418, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___32418, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_32384) {
            var state_val_32385 = state_32384[1];
            if (state_val_32385 === 7) {
              var state_32384__$1 = state_32384;
              var statearr_32386_32419 = state_32384__$1;
              statearr_32386_32419[2] = null;
              statearr_32386_32419[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32385 === 1) {
                var state_32384__$1 = state_32384;
                var statearr_32387_32420 = state_32384__$1;
                statearr_32387_32420[2] = null;
                statearr_32387_32420[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32385 === 4) {
                  var inst_32348 = state_32384[7];
                  var inst_32350 = inst_32348 < cnt;
                  var state_32384__$1 = state_32384;
                  if (cljs.core.truth_(inst_32350)) {
                    var statearr_32388_32421 = state_32384__$1;
                    statearr_32388_32421[1] = 6;
                  } else {
                    var statearr_32389_32422 = state_32384__$1;
                    statearr_32389_32422[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32385 === 15) {
                    var inst_32380 = state_32384[2];
                    var state_32384__$1 = state_32384;
                    var statearr_32390_32423 = state_32384__$1;
                    statearr_32390_32423[2] = inst_32380;
                    statearr_32390_32423[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32385 === 13) {
                      var inst_32373 = cljs.core.async.close_BANG_.call(null, out);
                      var state_32384__$1 = state_32384;
                      var statearr_32391_32424 = state_32384__$1;
                      statearr_32391_32424[2] = inst_32373;
                      statearr_32391_32424[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_32385 === 6) {
                        var state_32384__$1 = state_32384;
                        var statearr_32392_32425 = state_32384__$1;
                        statearr_32392_32425[2] = null;
                        statearr_32392_32425[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32385 === 3) {
                          var inst_32382 = state_32384[2];
                          var state_32384__$1 = state_32384;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32384__$1, inst_32382);
                        } else {
                          if (state_val_32385 === 12) {
                            var inst_32370 = state_32384[8];
                            var inst_32370__$1 = state_32384[2];
                            var inst_32371 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_32370__$1);
                            var state_32384__$1 = function() {
                              var statearr_32393 = state_32384;
                              statearr_32393[8] = inst_32370__$1;
                              return statearr_32393;
                            }();
                            if (cljs.core.truth_(inst_32371)) {
                              var statearr_32394_32426 = state_32384__$1;
                              statearr_32394_32426[1] = 13;
                            } else {
                              var statearr_32395_32427 = state_32384__$1;
                              statearr_32395_32427[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_32385 === 2) {
                              var inst_32347 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_32348 = 0;
                              var state_32384__$1 = function() {
                                var statearr_32396 = state_32384;
                                statearr_32396[9] = inst_32347;
                                statearr_32396[7] = inst_32348;
                                return statearr_32396;
                              }();
                              var statearr_32397_32428 = state_32384__$1;
                              statearr_32397_32428[2] = null;
                              statearr_32397_32428[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32385 === 11) {
                                var inst_32348 = state_32384[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_32384, 10, Object, null, 9);
                                var inst_32357 = chs__$1.call(null, inst_32348);
                                var inst_32358 = done.call(null, inst_32348);
                                var inst_32359 = cljs.core.async.take_BANG_.call(null, inst_32357, inst_32358);
                                var state_32384__$1 = state_32384;
                                var statearr_32398_32429 = state_32384__$1;
                                statearr_32398_32429[2] = inst_32359;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32384__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32385 === 9) {
                                  var inst_32348 = state_32384[7];
                                  var inst_32361 = state_32384[2];
                                  var inst_32362 = inst_32348 + 1;
                                  var inst_32348__$1 = inst_32362;
                                  var state_32384__$1 = function() {
                                    var statearr_32399 = state_32384;
                                    statearr_32399[10] = inst_32361;
                                    statearr_32399[7] = inst_32348__$1;
                                    return statearr_32399;
                                  }();
                                  var statearr_32400_32430 = state_32384__$1;
                                  statearr_32400_32430[2] = null;
                                  statearr_32400_32430[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_32385 === 5) {
                                    var inst_32368 = state_32384[2];
                                    var state_32384__$1 = function() {
                                      var statearr_32401 = state_32384;
                                      statearr_32401[11] = inst_32368;
                                      return statearr_32401;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32384__$1, 12, dchan);
                                  } else {
                                    if (state_val_32385 === 14) {
                                      var inst_32370 = state_32384[8];
                                      var inst_32375 = cljs.core.apply.call(null, f, inst_32370);
                                      var state_32384__$1 = state_32384;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32384__$1, 16, out, inst_32375);
                                    } else {
                                      if (state_val_32385 === 16) {
                                        var inst_32377 = state_32384[2];
                                        var state_32384__$1 = function() {
                                          var statearr_32402 = state_32384;
                                          statearr_32402[12] = inst_32377;
                                          return statearr_32402;
                                        }();
                                        var statearr_32403_32431 = state_32384__$1;
                                        statearr_32403_32431[2] = null;
                                        statearr_32403_32431[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_32385 === 10) {
                                          var inst_32352 = state_32384[2];
                                          var inst_32353 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_32384__$1 = function() {
                                            var statearr_32404 = state_32384;
                                            statearr_32404[13] = inst_32352;
                                            return statearr_32404;
                                          }();
                                          var statearr_32405_32432 = state_32384__$1;
                                          statearr_32405_32432[2] = inst_32353;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32384__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_32385 === 8) {
                                            var inst_32366 = state_32384[2];
                                            var state_32384__$1 = state_32384;
                                            var statearr_32406_32433 = state_32384__$1;
                                            statearr_32406_32433[2] = inst_32366;
                                            statearr_32406_32433[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___32418, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__30237__auto__, c__30349__auto___32418, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_32410 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32410[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_32410[1] = 1;
              return statearr_32410;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_32384) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32384);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32411) {
                    if (e32411 instanceof Object) {
                      var ex__30241__auto__ = e32411;
                      var statearr_32412_32434 = state_32384;
                      statearr_32412_32434[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32384);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32411;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32435 = state_32384;
                  state_32384 = G__32435;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_32384) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_32384);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___32418, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__30351__auto__ = function() {
        var statearr_32413 = f__30350__auto__.call(null);
        statearr_32413[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___32418;
        return statearr_32413;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___32418, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var args32437 = [];
  var len__9707__auto___32495 = arguments.length;
  var i__9708__auto___32496 = 0;
  while (true) {
    if (i__9708__auto___32496 < len__9707__auto___32495) {
      args32437.push(arguments[i__9708__auto___32496]);
      var G__32497 = i__9708__auto___32496 + 1;
      i__9708__auto___32496 = G__32497;
      continue;
    } else {
    }
    break;
  }
  var G__32439 = args32437.length;
  switch(G__32439) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32437.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__30349__auto___32499 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___32499, out) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___32499, out) {
          return function(state_32471) {
            var state_val_32472 = state_32471[1];
            if (state_val_32472 === 7) {
              var inst_32451 = state_32471[7];
              var inst_32450 = state_32471[8];
              var inst_32450__$1 = state_32471[2];
              var inst_32451__$1 = cljs.core.nth.call(null, inst_32450__$1, 0, null);
              var inst_32452 = cljs.core.nth.call(null, inst_32450__$1, 1, null);
              var inst_32453 = inst_32451__$1 == null;
              var state_32471__$1 = function() {
                var statearr_32473 = state_32471;
                statearr_32473[7] = inst_32451__$1;
                statearr_32473[9] = inst_32452;
                statearr_32473[8] = inst_32450__$1;
                return statearr_32473;
              }();
              if (cljs.core.truth_(inst_32453)) {
                var statearr_32474_32500 = state_32471__$1;
                statearr_32474_32500[1] = 8;
              } else {
                var statearr_32475_32501 = state_32471__$1;
                statearr_32475_32501[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32472 === 1) {
                var inst_32440 = cljs.core.vec.call(null, chs);
                var inst_32441 = inst_32440;
                var state_32471__$1 = function() {
                  var statearr_32476 = state_32471;
                  statearr_32476[10] = inst_32441;
                  return statearr_32476;
                }();
                var statearr_32477_32502 = state_32471__$1;
                statearr_32477_32502[2] = null;
                statearr_32477_32502[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32472 === 4) {
                  var inst_32441 = state_32471[10];
                  var state_32471__$1 = state_32471;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_32471__$1, 7, inst_32441);
                } else {
                  if (state_val_32472 === 6) {
                    var inst_32467 = state_32471[2];
                    var state_32471__$1 = state_32471;
                    var statearr_32478_32503 = state_32471__$1;
                    statearr_32478_32503[2] = inst_32467;
                    statearr_32478_32503[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32472 === 3) {
                      var inst_32469 = state_32471[2];
                      var state_32471__$1 = state_32471;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32471__$1, inst_32469);
                    } else {
                      if (state_val_32472 === 2) {
                        var inst_32441 = state_32471[10];
                        var inst_32443 = cljs.core.count.call(null, inst_32441);
                        var inst_32444 = inst_32443 > 0;
                        var state_32471__$1 = state_32471;
                        if (cljs.core.truth_(inst_32444)) {
                          var statearr_32480_32504 = state_32471__$1;
                          statearr_32480_32504[1] = 4;
                        } else {
                          var statearr_32481_32505 = state_32471__$1;
                          statearr_32481_32505[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32472 === 11) {
                          var inst_32441 = state_32471[10];
                          var inst_32460 = state_32471[2];
                          var tmp32479 = inst_32441;
                          var inst_32441__$1 = tmp32479;
                          var state_32471__$1 = function() {
                            var statearr_32482 = state_32471;
                            statearr_32482[11] = inst_32460;
                            statearr_32482[10] = inst_32441__$1;
                            return statearr_32482;
                          }();
                          var statearr_32483_32506 = state_32471__$1;
                          statearr_32483_32506[2] = null;
                          statearr_32483_32506[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32472 === 9) {
                            var inst_32451 = state_32471[7];
                            var state_32471__$1 = state_32471;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32471__$1, 11, out, inst_32451);
                          } else {
                            if (state_val_32472 === 5) {
                              var inst_32465 = cljs.core.async.close_BANG_.call(null, out);
                              var state_32471__$1 = state_32471;
                              var statearr_32484_32507 = state_32471__$1;
                              statearr_32484_32507[2] = inst_32465;
                              statearr_32484_32507[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32472 === 10) {
                                var inst_32463 = state_32471[2];
                                var state_32471__$1 = state_32471;
                                var statearr_32485_32508 = state_32471__$1;
                                statearr_32485_32508[2] = inst_32463;
                                statearr_32485_32508[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32472 === 8) {
                                  var inst_32441 = state_32471[10];
                                  var inst_32451 = state_32471[7];
                                  var inst_32452 = state_32471[9];
                                  var inst_32450 = state_32471[8];
                                  var inst_32455 = function() {
                                    var cs = inst_32441;
                                    var vec__32446 = inst_32450;
                                    var v = inst_32451;
                                    var c = inst_32452;
                                    return function(cs, vec__32446, v, c, inst_32441, inst_32451, inst_32452, inst_32450, state_val_32472, c__30349__auto___32499, out) {
                                      return function(p1__32436_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__32436_SHARP_);
                                      };
                                    }(cs, vec__32446, v, c, inst_32441, inst_32451, inst_32452, inst_32450, state_val_32472, c__30349__auto___32499, out);
                                  }();
                                  var inst_32456 = cljs.core.filterv.call(null, inst_32455, inst_32441);
                                  var inst_32441__$1 = inst_32456;
                                  var state_32471__$1 = function() {
                                    var statearr_32486 = state_32471;
                                    statearr_32486[10] = inst_32441__$1;
                                    return statearr_32486;
                                  }();
                                  var statearr_32487_32509 = state_32471__$1;
                                  statearr_32487_32509[2] = null;
                                  statearr_32487_32509[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___32499, out);
        return function(switch__30237__auto__, c__30349__auto___32499, out) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_32491 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32491[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_32491[1] = 1;
              return statearr_32491;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_32471) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32471);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32492) {
                    if (e32492 instanceof Object) {
                      var ex__30241__auto__ = e32492;
                      var statearr_32493_32510 = state_32471;
                      statearr_32493_32510[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32471);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32492;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32511 = state_32471;
                  state_32471 = G__32511;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_32471) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_32471);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___32499, out);
      }();
      var state__30351__auto__ = function() {
        var statearr_32494 = f__30350__auto__.call(null);
        statearr_32494[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___32499;
        return statearr_32494;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___32499, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var args32512 = [];
  var len__9707__auto___32561 = arguments.length;
  var i__9708__auto___32562 = 0;
  while (true) {
    if (i__9708__auto___32562 < len__9707__auto___32561) {
      args32512.push(arguments[i__9708__auto___32562]);
      var G__32563 = i__9708__auto___32562 + 1;
      i__9708__auto___32562 = G__32563;
      continue;
    } else {
    }
    break;
  }
  var G__32514 = args32512.length;
  switch(G__32514) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32512.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__30349__auto___32565 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___32565, out) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___32565, out) {
          return function(state_32538) {
            var state_val_32539 = state_32538[1];
            if (state_val_32539 === 7) {
              var inst_32520 = state_32538[7];
              var inst_32520__$1 = state_32538[2];
              var inst_32521 = inst_32520__$1 == null;
              var inst_32522 = cljs.core.not.call(null, inst_32521);
              var state_32538__$1 = function() {
                var statearr_32540 = state_32538;
                statearr_32540[7] = inst_32520__$1;
                return statearr_32540;
              }();
              if (inst_32522) {
                var statearr_32541_32566 = state_32538__$1;
                statearr_32541_32566[1] = 8;
              } else {
                var statearr_32542_32567 = state_32538__$1;
                statearr_32542_32567[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32539 === 1) {
                var inst_32515 = 0;
                var state_32538__$1 = function() {
                  var statearr_32543 = state_32538;
                  statearr_32543[8] = inst_32515;
                  return statearr_32543;
                }();
                var statearr_32544_32568 = state_32538__$1;
                statearr_32544_32568[2] = null;
                statearr_32544_32568[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32539 === 4) {
                  var state_32538__$1 = state_32538;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32538__$1, 7, ch);
                } else {
                  if (state_val_32539 === 6) {
                    var inst_32533 = state_32538[2];
                    var state_32538__$1 = state_32538;
                    var statearr_32545_32569 = state_32538__$1;
                    statearr_32545_32569[2] = inst_32533;
                    statearr_32545_32569[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32539 === 3) {
                      var inst_32535 = state_32538[2];
                      var inst_32536 = cljs.core.async.close_BANG_.call(null, out);
                      var state_32538__$1 = function() {
                        var statearr_32546 = state_32538;
                        statearr_32546[9] = inst_32535;
                        return statearr_32546;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32538__$1, inst_32536);
                    } else {
                      if (state_val_32539 === 2) {
                        var inst_32515 = state_32538[8];
                        var inst_32517 = inst_32515 < n;
                        var state_32538__$1 = state_32538;
                        if (cljs.core.truth_(inst_32517)) {
                          var statearr_32547_32570 = state_32538__$1;
                          statearr_32547_32570[1] = 4;
                        } else {
                          var statearr_32548_32571 = state_32538__$1;
                          statearr_32548_32571[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32539 === 11) {
                          var inst_32515 = state_32538[8];
                          var inst_32525 = state_32538[2];
                          var inst_32526 = inst_32515 + 1;
                          var inst_32515__$1 = inst_32526;
                          var state_32538__$1 = function() {
                            var statearr_32549 = state_32538;
                            statearr_32549[8] = inst_32515__$1;
                            statearr_32549[10] = inst_32525;
                            return statearr_32549;
                          }();
                          var statearr_32550_32572 = state_32538__$1;
                          statearr_32550_32572[2] = null;
                          statearr_32550_32572[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32539 === 9) {
                            var state_32538__$1 = state_32538;
                            var statearr_32551_32573 = state_32538__$1;
                            statearr_32551_32573[2] = null;
                            statearr_32551_32573[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_32539 === 5) {
                              var state_32538__$1 = state_32538;
                              var statearr_32552_32574 = state_32538__$1;
                              statearr_32552_32574[2] = null;
                              statearr_32552_32574[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32539 === 10) {
                                var inst_32530 = state_32538[2];
                                var state_32538__$1 = state_32538;
                                var statearr_32553_32575 = state_32538__$1;
                                statearr_32553_32575[2] = inst_32530;
                                statearr_32553_32575[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32539 === 8) {
                                  var inst_32520 = state_32538[7];
                                  var state_32538__$1 = state_32538;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32538__$1, 11, out, inst_32520);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___32565, out);
        return function(switch__30237__auto__, c__30349__auto___32565, out) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_32557 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_32557[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_32557[1] = 1;
              return statearr_32557;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_32538) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32538);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32558) {
                    if (e32558 instanceof Object) {
                      var ex__30241__auto__ = e32558;
                      var statearr_32559_32576 = state_32538;
                      statearr_32559_32576[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32538);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32558;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32577 = state_32538;
                  state_32538 = G__32577;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_32538) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_32538);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___32565, out);
      }();
      var state__30351__auto__ = function() {
        var statearr_32560 = f__30350__auto__.call(null);
        statearr_32560[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___32565;
        return statearr_32560;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___32565, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async32585 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async32585 = function(map_LT_, f, ch, meta32586) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta32586 = meta32586;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_32587, meta32586__$1) {
      var self__ = this;
      var _32587__$1 = this;
      return new cljs.core.async.t_cljs$core$async32585(self__.map_LT_, self__.f, self__.ch, meta32586__$1);
    };
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$IMeta$_meta$arity$1 = function(_32587) {
      var self__ = this;
      var _32587__$1 = this;
      return self__.meta32586;
    };
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async32588 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async32588 = function(map_LT_, f, ch, meta32586, _, fn1, meta32589) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta32586 = meta32586;
            this._ = _;
            this.fn1 = fn1;
            this.meta32589 = meta32589;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async32588.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_32590, meta32589__$1) {
              var self__ = this;
              var _32590__$1 = this;
              return new cljs.core.async.t_cljs$core$async32588(self__.map_LT_, self__.f, self__.ch, self__.meta32586, self__._, self__.fn1, meta32589__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async32588.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_32590) {
              var self__ = this;
              var _32590__$1 = this;
              return self__.meta32589;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async32588.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t_cljs$core$async32588.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async32588.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return true;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async32588.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__32578_SHARP_) {
                  return f1.call(null, p1__32578_SHARP_ == null ? null : self__.f.call(null, p1__32578_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async32588.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta32586", "meta32586", 908713215, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async32585", "cljs.core.async/t_cljs$core$async32585", -1126143511, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta32589", "meta32589", 1370297227, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async32588.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async32588.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32588";
          cljs.core.async.t_cljs$core$async32588.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
              return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async32588");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async32588 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async32588(map_LT___$1, f__$1, ch__$1, meta32586__$1, ___$2, fn1__$1, meta32589) {
              return new cljs.core.async.t_cljs$core$async32588(map_LT___$1, f__$1, ch__$1, meta32586__$1, ___$2, fn1__$1, meta32589);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async32588(self__.map_LT_, self__.f, self__.ch, self__.meta32586, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__8620__auto__ = ret;
        if (cljs.core.truth_(and__8620__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__8620__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async32585.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async32585.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta32586", "meta32586", 908713215, null)], null);
    };
    cljs.core.async.t_cljs$core$async32585.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async32585.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32585";
    cljs.core.async.t_cljs$core$async32585.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async32585");
    };
    cljs.core.async.__GT_t_cljs$core$async32585 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async32585(map_LT___$1, f__$1, ch__$1, meta32586) {
      return new cljs.core.async.t_cljs$core$async32585(map_LT___$1, f__$1, ch__$1, meta32586);
    };
  }
  return new cljs.core.async.t_cljs$core$async32585(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async32594 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async32594 = function(map_GT_, f, ch, meta32595) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta32595 = meta32595;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_32596, meta32595__$1) {
      var self__ = this;
      var _32596__$1 = this;
      return new cljs.core.async.t_cljs$core$async32594(self__.map_GT_, self__.f, self__.ch, meta32595__$1);
    };
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$IMeta$_meta$arity$1 = function(_32596) {
      var self__ = this;
      var _32596__$1 = this;
      return self__.meta32595;
    };
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async32594.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async32594.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta32595", "meta32595", 2034889944, null)], null);
    };
    cljs.core.async.t_cljs$core$async32594.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async32594.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32594";
    cljs.core.async.t_cljs$core$async32594.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async32594");
    };
    cljs.core.async.__GT_t_cljs$core$async32594 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async32594(map_GT___$1, f__$1, ch__$1, meta32595) {
      return new cljs.core.async.t_cljs$core$async32594(map_GT___$1, f__$1, ch__$1, meta32595);
    };
  }
  return new cljs.core.async.t_cljs$core$async32594(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async32600 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async32600 = function(filter_GT_, p, ch, meta32601) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta32601 = meta32601;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_32602, meta32601__$1) {
      var self__ = this;
      var _32602__$1 = this;
      return new cljs.core.async.t_cljs$core$async32600(self__.filter_GT_, self__.p, self__.ch, meta32601__$1);
    };
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$IMeta$_meta$arity$1 = function(_32602) {
      var self__ = this;
      var _32602__$1 = this;
      return self__.meta32601;
    };
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async32600.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async32600.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta32601", "meta32601", 499192017, null)], null);
    };
    cljs.core.async.t_cljs$core$async32600.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async32600.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32600";
    cljs.core.async.t_cljs$core$async32600.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.core.async/t_cljs$core$async32600");
    };
    cljs.core.async.__GT_t_cljs$core$async32600 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async32600(filter_GT___$1, p__$1, ch__$1, meta32601) {
      return new cljs.core.async.t_cljs$core$async32600(filter_GT___$1, p__$1, ch__$1, meta32601);
    };
  }
  return new cljs.core.async.t_cljs$core$async32600(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var args32603 = [];
  var len__9707__auto___32647 = arguments.length;
  var i__9708__auto___32648 = 0;
  while (true) {
    if (i__9708__auto___32648 < len__9707__auto___32647) {
      args32603.push(arguments[i__9708__auto___32648]);
      var G__32649 = i__9708__auto___32648 + 1;
      i__9708__auto___32648 = G__32649;
      continue;
    } else {
    }
    break;
  }
  var G__32605 = args32603.length;
  switch(G__32605) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32603.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__30349__auto___32651 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___32651, out) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___32651, out) {
          return function(state_32626) {
            var state_val_32627 = state_32626[1];
            if (state_val_32627 === 7) {
              var inst_32622 = state_32626[2];
              var state_32626__$1 = state_32626;
              var statearr_32628_32652 = state_32626__$1;
              statearr_32628_32652[2] = inst_32622;
              statearr_32628_32652[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32627 === 1) {
                var state_32626__$1 = state_32626;
                var statearr_32629_32653 = state_32626__$1;
                statearr_32629_32653[2] = null;
                statearr_32629_32653[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32627 === 4) {
                  var inst_32608 = state_32626[7];
                  var inst_32608__$1 = state_32626[2];
                  var inst_32609 = inst_32608__$1 == null;
                  var state_32626__$1 = function() {
                    var statearr_32630 = state_32626;
                    statearr_32630[7] = inst_32608__$1;
                    return statearr_32630;
                  }();
                  if (cljs.core.truth_(inst_32609)) {
                    var statearr_32631_32654 = state_32626__$1;
                    statearr_32631_32654[1] = 5;
                  } else {
                    var statearr_32632_32655 = state_32626__$1;
                    statearr_32632_32655[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32627 === 6) {
                    var inst_32608 = state_32626[7];
                    var inst_32613 = p.call(null, inst_32608);
                    var state_32626__$1 = state_32626;
                    if (cljs.core.truth_(inst_32613)) {
                      var statearr_32633_32656 = state_32626__$1;
                      statearr_32633_32656[1] = 8;
                    } else {
                      var statearr_32634_32657 = state_32626__$1;
                      statearr_32634_32657[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32627 === 3) {
                      var inst_32624 = state_32626[2];
                      var state_32626__$1 = state_32626;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32626__$1, inst_32624);
                    } else {
                      if (state_val_32627 === 2) {
                        var state_32626__$1 = state_32626;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32626__$1, 4, ch);
                      } else {
                        if (state_val_32627 === 11) {
                          var inst_32616 = state_32626[2];
                          var state_32626__$1 = state_32626;
                          var statearr_32635_32658 = state_32626__$1;
                          statearr_32635_32658[2] = inst_32616;
                          statearr_32635_32658[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32627 === 9) {
                            var state_32626__$1 = state_32626;
                            var statearr_32636_32659 = state_32626__$1;
                            statearr_32636_32659[2] = null;
                            statearr_32636_32659[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_32627 === 5) {
                              var inst_32611 = cljs.core.async.close_BANG_.call(null, out);
                              var state_32626__$1 = state_32626;
                              var statearr_32637_32660 = state_32626__$1;
                              statearr_32637_32660[2] = inst_32611;
                              statearr_32637_32660[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32627 === 10) {
                                var inst_32619 = state_32626[2];
                                var state_32626__$1 = function() {
                                  var statearr_32638 = state_32626;
                                  statearr_32638[8] = inst_32619;
                                  return statearr_32638;
                                }();
                                var statearr_32639_32661 = state_32626__$1;
                                statearr_32639_32661[2] = null;
                                statearr_32639_32661[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32627 === 8) {
                                  var inst_32608 = state_32626[7];
                                  var state_32626__$1 = state_32626;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32626__$1, 11, out, inst_32608);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___32651, out);
        return function(switch__30237__auto__, c__30349__auto___32651, out) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_32643 = [null, null, null, null, null, null, null, null, null];
              statearr_32643[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_32643[1] = 1;
              return statearr_32643;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_32626) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32626);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32644) {
                    if (e32644 instanceof Object) {
                      var ex__30241__auto__ = e32644;
                      var statearr_32645_32662 = state_32626;
                      statearr_32645_32662[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32626);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32644;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32663 = state_32626;
                  state_32626 = G__32663;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_32626) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_32626);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___32651, out);
      }();
      var state__30351__auto__ = function() {
        var statearr_32646 = f__30350__auto__.call(null);
        statearr_32646[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___32651;
        return statearr_32646;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___32651, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var args32664 = [];
  var len__9707__auto___32667 = arguments.length;
  var i__9708__auto___32668 = 0;
  while (true) {
    if (i__9708__auto___32668 < len__9707__auto___32667) {
      args32664.push(arguments[i__9708__auto___32668]);
      var G__32669 = i__9708__auto___32668 + 1;
      i__9708__auto___32668 = G__32669;
      continue;
    } else {
    }
    break;
  }
  var G__32666 = args32664.length;
  switch(G__32666) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32664.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto__) {
          return function(state_32836) {
            var state_val_32837 = state_32836[1];
            if (state_val_32837 === 7) {
              var inst_32832 = state_32836[2];
              var state_32836__$1 = state_32836;
              var statearr_32838_32879 = state_32836__$1;
              statearr_32838_32879[2] = inst_32832;
              statearr_32838_32879[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32837 === 20) {
                var inst_32802 = state_32836[7];
                var inst_32813 = state_32836[2];
                var inst_32814 = cljs.core.next.call(null, inst_32802);
                var inst_32788 = inst_32814;
                var inst_32789 = null;
                var inst_32790 = 0;
                var inst_32791 = 0;
                var state_32836__$1 = function() {
                  var statearr_32839 = state_32836;
                  statearr_32839[8] = inst_32790;
                  statearr_32839[9] = inst_32791;
                  statearr_32839[10] = inst_32788;
                  statearr_32839[11] = inst_32813;
                  statearr_32839[12] = inst_32789;
                  return statearr_32839;
                }();
                var statearr_32840_32880 = state_32836__$1;
                statearr_32840_32880[2] = null;
                statearr_32840_32880[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32837 === 1) {
                  var state_32836__$1 = state_32836;
                  var statearr_32841_32881 = state_32836__$1;
                  statearr_32841_32881[2] = null;
                  statearr_32841_32881[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32837 === 4) {
                    var inst_32777 = state_32836[13];
                    var inst_32777__$1 = state_32836[2];
                    var inst_32778 = inst_32777__$1 == null;
                    var state_32836__$1 = function() {
                      var statearr_32842 = state_32836;
                      statearr_32842[13] = inst_32777__$1;
                      return statearr_32842;
                    }();
                    if (cljs.core.truth_(inst_32778)) {
                      var statearr_32843_32882 = state_32836__$1;
                      statearr_32843_32882[1] = 5;
                    } else {
                      var statearr_32844_32883 = state_32836__$1;
                      statearr_32844_32883[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32837 === 15) {
                      var state_32836__$1 = state_32836;
                      var statearr_32848_32884 = state_32836__$1;
                      statearr_32848_32884[2] = null;
                      statearr_32848_32884[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_32837 === 21) {
                        var state_32836__$1 = state_32836;
                        var statearr_32849_32885 = state_32836__$1;
                        statearr_32849_32885[2] = null;
                        statearr_32849_32885[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32837 === 13) {
                          var inst_32790 = state_32836[8];
                          var inst_32791 = state_32836[9];
                          var inst_32788 = state_32836[10];
                          var inst_32789 = state_32836[12];
                          var inst_32798 = state_32836[2];
                          var inst_32799 = inst_32791 + 1;
                          var tmp32845 = inst_32790;
                          var tmp32846 = inst_32788;
                          var tmp32847 = inst_32789;
                          var inst_32788__$1 = tmp32846;
                          var inst_32789__$1 = tmp32847;
                          var inst_32790__$1 = tmp32845;
                          var inst_32791__$1 = inst_32799;
                          var state_32836__$1 = function() {
                            var statearr_32850 = state_32836;
                            statearr_32850[8] = inst_32790__$1;
                            statearr_32850[14] = inst_32798;
                            statearr_32850[9] = inst_32791__$1;
                            statearr_32850[10] = inst_32788__$1;
                            statearr_32850[12] = inst_32789__$1;
                            return statearr_32850;
                          }();
                          var statearr_32851_32886 = state_32836__$1;
                          statearr_32851_32886[2] = null;
                          statearr_32851_32886[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32837 === 22) {
                            var state_32836__$1 = state_32836;
                            var statearr_32852_32887 = state_32836__$1;
                            statearr_32852_32887[2] = null;
                            statearr_32852_32887[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_32837 === 6) {
                              var inst_32777 = state_32836[13];
                              var inst_32786 = f.call(null, inst_32777);
                              var inst_32787 = cljs.core.seq.call(null, inst_32786);
                              var inst_32788 = inst_32787;
                              var inst_32789 = null;
                              var inst_32790 = 0;
                              var inst_32791 = 0;
                              var state_32836__$1 = function() {
                                var statearr_32853 = state_32836;
                                statearr_32853[8] = inst_32790;
                                statearr_32853[9] = inst_32791;
                                statearr_32853[10] = inst_32788;
                                statearr_32853[12] = inst_32789;
                                return statearr_32853;
                              }();
                              var statearr_32854_32888 = state_32836__$1;
                              statearr_32854_32888[2] = null;
                              statearr_32854_32888[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32837 === 17) {
                                var inst_32802 = state_32836[7];
                                var inst_32806 = cljs.core.chunk_first.call(null, inst_32802);
                                var inst_32807 = cljs.core.chunk_rest.call(null, inst_32802);
                                var inst_32808 = cljs.core.count.call(null, inst_32806);
                                var inst_32788 = inst_32807;
                                var inst_32789 = inst_32806;
                                var inst_32790 = inst_32808;
                                var inst_32791 = 0;
                                var state_32836__$1 = function() {
                                  var statearr_32855 = state_32836;
                                  statearr_32855[8] = inst_32790;
                                  statearr_32855[9] = inst_32791;
                                  statearr_32855[10] = inst_32788;
                                  statearr_32855[12] = inst_32789;
                                  return statearr_32855;
                                }();
                                var statearr_32856_32889 = state_32836__$1;
                                statearr_32856_32889[2] = null;
                                statearr_32856_32889[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32837 === 3) {
                                  var inst_32834 = state_32836[2];
                                  var state_32836__$1 = state_32836;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32836__$1, inst_32834);
                                } else {
                                  if (state_val_32837 === 12) {
                                    var inst_32822 = state_32836[2];
                                    var state_32836__$1 = state_32836;
                                    var statearr_32857_32890 = state_32836__$1;
                                    statearr_32857_32890[2] = inst_32822;
                                    statearr_32857_32890[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_32837 === 2) {
                                      var state_32836__$1 = state_32836;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32836__$1, 4, in$);
                                    } else {
                                      if (state_val_32837 === 23) {
                                        var inst_32830 = state_32836[2];
                                        var state_32836__$1 = state_32836;
                                        var statearr_32858_32891 = state_32836__$1;
                                        statearr_32858_32891[2] = inst_32830;
                                        statearr_32858_32891[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_32837 === 19) {
                                          var inst_32817 = state_32836[2];
                                          var state_32836__$1 = state_32836;
                                          var statearr_32859_32892 = state_32836__$1;
                                          statearr_32859_32892[2] = inst_32817;
                                          statearr_32859_32892[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_32837 === 11) {
                                            var inst_32802 = state_32836[7];
                                            var inst_32788 = state_32836[10];
                                            var inst_32802__$1 = cljs.core.seq.call(null, inst_32788);
                                            var state_32836__$1 = function() {
                                              var statearr_32860 = state_32836;
                                              statearr_32860[7] = inst_32802__$1;
                                              return statearr_32860;
                                            }();
                                            if (inst_32802__$1) {
                                              var statearr_32861_32893 = state_32836__$1;
                                              statearr_32861_32893[1] = 14;
                                            } else {
                                              var statearr_32862_32894 = state_32836__$1;
                                              statearr_32862_32894[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_32837 === 9) {
                                              var inst_32824 = state_32836[2];
                                              var inst_32825 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_32836__$1 = function() {
                                                var statearr_32863 = state_32836;
                                                statearr_32863[15] = inst_32824;
                                                return statearr_32863;
                                              }();
                                              if (cljs.core.truth_(inst_32825)) {
                                                var statearr_32864_32895 = state_32836__$1;
                                                statearr_32864_32895[1] = 21;
                                              } else {
                                                var statearr_32865_32896 = state_32836__$1;
                                                statearr_32865_32896[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_32837 === 5) {
                                                var inst_32780 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_32836__$1 = state_32836;
                                                var statearr_32866_32897 = state_32836__$1;
                                                statearr_32866_32897[2] = inst_32780;
                                                statearr_32866_32897[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_32837 === 14) {
                                                  var inst_32802 = state_32836[7];
                                                  var inst_32804 = cljs.core.chunked_seq_QMARK_.call(null, inst_32802);
                                                  var state_32836__$1 = state_32836;
                                                  if (inst_32804) {
                                                    var statearr_32867_32898 = state_32836__$1;
                                                    statearr_32867_32898[1] = 17;
                                                  } else {
                                                    var statearr_32868_32899 = state_32836__$1;
                                                    statearr_32868_32899[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_32837 === 16) {
                                                    var inst_32820 = state_32836[2];
                                                    var state_32836__$1 = state_32836;
                                                    var statearr_32869_32900 = state_32836__$1;
                                                    statearr_32869_32900[2] = inst_32820;
                                                    statearr_32869_32900[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_32837 === 10) {
                                                      var inst_32791 = state_32836[9];
                                                      var inst_32789 = state_32836[12];
                                                      var inst_32796 = cljs.core._nth.call(null, inst_32789, inst_32791);
                                                      var state_32836__$1 = state_32836;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32836__$1, 13, out, inst_32796);
                                                    } else {
                                                      if (state_val_32837 === 18) {
                                                        var inst_32802 = state_32836[7];
                                                        var inst_32811 = cljs.core.first.call(null, inst_32802);
                                                        var state_32836__$1 = state_32836;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32836__$1, 20, out, inst_32811);
                                                      } else {
                                                        if (state_val_32837 === 8) {
                                                          var inst_32790 = state_32836[8];
                                                          var inst_32791 = state_32836[9];
                                                          var inst_32793 = inst_32791 < inst_32790;
                                                          var inst_32794 = inst_32793;
                                                          var state_32836__$1 = state_32836;
                                                          if (cljs.core.truth_(inst_32794)) {
                                                            var statearr_32870_32901 = state_32836__$1;
                                                            statearr_32870_32901[1] = 10;
                                                          } else {
                                                            var statearr_32871_32902 = state_32836__$1;
                                                            statearr_32871_32902[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto__);
        return function(switch__30237__auto__, c__30349__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__30238__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__30238__auto____0 = function() {
              var statearr_32875 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32875[0] = cljs$core$async$mapcat_STAR__$_state_machine__30238__auto__;
              statearr_32875[1] = 1;
              return statearr_32875;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__30238__auto____1 = function(state_32836) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32836);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32876) {
                    if (e32876 instanceof Object) {
                      var ex__30241__auto__ = e32876;
                      var statearr_32877_32903 = state_32836;
                      statearr_32877_32903[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32836);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32876;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32904 = state_32836;
                  state_32836 = G__32904;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__30238__auto__ = function(state_32836) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__30238__auto____1.call(this, state_32836);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__30238__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__30238__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto__);
      }();
      var state__30351__auto__ = function() {
        var statearr_32878 = f__30350__auto__.call(null);
        statearr_32878[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
        return statearr_32878;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto__));
  return c__30349__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var args32905 = [];
  var len__9707__auto___32908 = arguments.length;
  var i__9708__auto___32909 = 0;
  while (true) {
    if (i__9708__auto___32909 < len__9707__auto___32908) {
      args32905.push(arguments[i__9708__auto___32909]);
      var G__32910 = i__9708__auto___32909 + 1;
      i__9708__auto___32909 = G__32910;
      continue;
    } else {
    }
    break;
  }
  var G__32907 = args32905.length;
  switch(G__32907) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32905.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var args32912 = [];
  var len__9707__auto___32915 = arguments.length;
  var i__9708__auto___32916 = 0;
  while (true) {
    if (i__9708__auto___32916 < len__9707__auto___32915) {
      args32912.push(arguments[i__9708__auto___32916]);
      var G__32917 = i__9708__auto___32916 + 1;
      i__9708__auto___32916 = G__32917;
      continue;
    } else {
    }
    break;
  }
  var G__32914 = args32912.length;
  switch(G__32914) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32912.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var args32919 = [];
  var len__9707__auto___32970 = arguments.length;
  var i__9708__auto___32971 = 0;
  while (true) {
    if (i__9708__auto___32971 < len__9707__auto___32970) {
      args32919.push(arguments[i__9708__auto___32971]);
      var G__32972 = i__9708__auto___32971 + 1;
      i__9708__auto___32971 = G__32972;
      continue;
    } else {
    }
    break;
  }
  var G__32921 = args32919.length;
  switch(G__32921) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32919.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__30349__auto___32974 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___32974, out) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___32974, out) {
          return function(state_32945) {
            var state_val_32946 = state_32945[1];
            if (state_val_32946 === 7) {
              var inst_32940 = state_32945[2];
              var state_32945__$1 = state_32945;
              var statearr_32947_32975 = state_32945__$1;
              statearr_32947_32975[2] = inst_32940;
              statearr_32947_32975[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32946 === 1) {
                var inst_32922 = null;
                var state_32945__$1 = function() {
                  var statearr_32948 = state_32945;
                  statearr_32948[7] = inst_32922;
                  return statearr_32948;
                }();
                var statearr_32949_32976 = state_32945__$1;
                statearr_32949_32976[2] = null;
                statearr_32949_32976[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32946 === 4) {
                  var inst_32925 = state_32945[8];
                  var inst_32925__$1 = state_32945[2];
                  var inst_32926 = inst_32925__$1 == null;
                  var inst_32927 = cljs.core.not.call(null, inst_32926);
                  var state_32945__$1 = function() {
                    var statearr_32950 = state_32945;
                    statearr_32950[8] = inst_32925__$1;
                    return statearr_32950;
                  }();
                  if (inst_32927) {
                    var statearr_32951_32977 = state_32945__$1;
                    statearr_32951_32977[1] = 5;
                  } else {
                    var statearr_32952_32978 = state_32945__$1;
                    statearr_32952_32978[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32946 === 6) {
                    var state_32945__$1 = state_32945;
                    var statearr_32953_32979 = state_32945__$1;
                    statearr_32953_32979[2] = null;
                    statearr_32953_32979[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32946 === 3) {
                      var inst_32942 = state_32945[2];
                      var inst_32943 = cljs.core.async.close_BANG_.call(null, out);
                      var state_32945__$1 = function() {
                        var statearr_32954 = state_32945;
                        statearr_32954[9] = inst_32942;
                        return statearr_32954;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32945__$1, inst_32943);
                    } else {
                      if (state_val_32946 === 2) {
                        var state_32945__$1 = state_32945;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32945__$1, 4, ch);
                      } else {
                        if (state_val_32946 === 11) {
                          var inst_32925 = state_32945[8];
                          var inst_32934 = state_32945[2];
                          var inst_32922 = inst_32925;
                          var state_32945__$1 = function() {
                            var statearr_32955 = state_32945;
                            statearr_32955[7] = inst_32922;
                            statearr_32955[10] = inst_32934;
                            return statearr_32955;
                          }();
                          var statearr_32956_32980 = state_32945__$1;
                          statearr_32956_32980[2] = null;
                          statearr_32956_32980[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32946 === 9) {
                            var inst_32925 = state_32945[8];
                            var state_32945__$1 = state_32945;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32945__$1, 11, out, inst_32925);
                          } else {
                            if (state_val_32946 === 5) {
                              var inst_32922 = state_32945[7];
                              var inst_32925 = state_32945[8];
                              var inst_32929 = cljs.core._EQ_.call(null, inst_32925, inst_32922);
                              var state_32945__$1 = state_32945;
                              if (inst_32929) {
                                var statearr_32958_32981 = state_32945__$1;
                                statearr_32958_32981[1] = 8;
                              } else {
                                var statearr_32959_32982 = state_32945__$1;
                                statearr_32959_32982[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32946 === 10) {
                                var inst_32937 = state_32945[2];
                                var state_32945__$1 = state_32945;
                                var statearr_32960_32983 = state_32945__$1;
                                statearr_32960_32983[2] = inst_32937;
                                statearr_32960_32983[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32946 === 8) {
                                  var inst_32922 = state_32945[7];
                                  var tmp32957 = inst_32922;
                                  var inst_32922__$1 = tmp32957;
                                  var state_32945__$1 = function() {
                                    var statearr_32961 = state_32945;
                                    statearr_32961[7] = inst_32922__$1;
                                    return statearr_32961;
                                  }();
                                  var statearr_32962_32984 = state_32945__$1;
                                  statearr_32962_32984[2] = null;
                                  statearr_32962_32984[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___32974, out);
        return function(switch__30237__auto__, c__30349__auto___32974, out) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_32966 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_32966[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_32966[1] = 1;
              return statearr_32966;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_32945) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_32945);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e32967) {
                    if (e32967 instanceof Object) {
                      var ex__30241__auto__ = e32967;
                      var statearr_32968_32985 = state_32945;
                      statearr_32968_32985[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32945);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32967;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32986 = state_32945;
                  state_32945 = G__32986;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_32945) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_32945);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___32974, out);
      }();
      var state__30351__auto__ = function() {
        var statearr_32969 = f__30350__auto__.call(null);
        statearr_32969[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___32974;
        return statearr_32969;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___32974, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var args32987 = [];
  var len__9707__auto___33057 = arguments.length;
  var i__9708__auto___33058 = 0;
  while (true) {
    if (i__9708__auto___33058 < len__9707__auto___33057) {
      args32987.push(arguments[i__9708__auto___33058]);
      var G__33059 = i__9708__auto___33058 + 1;
      i__9708__auto___33058 = G__33059;
      continue;
    } else {
    }
    break;
  }
  var G__32989 = args32987.length;
  switch(G__32989) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32987.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__30349__auto___33061 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___33061, out) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___33061, out) {
          return function(state_33027) {
            var state_val_33028 = state_33027[1];
            if (state_val_33028 === 7) {
              var inst_33023 = state_33027[2];
              var state_33027__$1 = state_33027;
              var statearr_33029_33062 = state_33027__$1;
              statearr_33029_33062[2] = inst_33023;
              statearr_33029_33062[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33028 === 1) {
                var inst_32990 = new Array(n);
                var inst_32991 = inst_32990;
                var inst_32992 = 0;
                var state_33027__$1 = function() {
                  var statearr_33030 = state_33027;
                  statearr_33030[7] = inst_32991;
                  statearr_33030[8] = inst_32992;
                  return statearr_33030;
                }();
                var statearr_33031_33063 = state_33027__$1;
                statearr_33031_33063[2] = null;
                statearr_33031_33063[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33028 === 4) {
                  var inst_32995 = state_33027[9];
                  var inst_32995__$1 = state_33027[2];
                  var inst_32996 = inst_32995__$1 == null;
                  var inst_32997 = cljs.core.not.call(null, inst_32996);
                  var state_33027__$1 = function() {
                    var statearr_33032 = state_33027;
                    statearr_33032[9] = inst_32995__$1;
                    return statearr_33032;
                  }();
                  if (inst_32997) {
                    var statearr_33033_33064 = state_33027__$1;
                    statearr_33033_33064[1] = 5;
                  } else {
                    var statearr_33034_33065 = state_33027__$1;
                    statearr_33034_33065[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33028 === 15) {
                    var inst_33017 = state_33027[2];
                    var state_33027__$1 = state_33027;
                    var statearr_33035_33066 = state_33027__$1;
                    statearr_33035_33066[2] = inst_33017;
                    statearr_33035_33066[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33028 === 13) {
                      var state_33027__$1 = state_33027;
                      var statearr_33036_33067 = state_33027__$1;
                      statearr_33036_33067[2] = null;
                      statearr_33036_33067[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_33028 === 6) {
                        var inst_32992 = state_33027[8];
                        var inst_33013 = inst_32992 > 0;
                        var state_33027__$1 = state_33027;
                        if (cljs.core.truth_(inst_33013)) {
                          var statearr_33037_33068 = state_33027__$1;
                          statearr_33037_33068[1] = 12;
                        } else {
                          var statearr_33038_33069 = state_33027__$1;
                          statearr_33038_33069[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33028 === 3) {
                          var inst_33025 = state_33027[2];
                          var state_33027__$1 = state_33027;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33027__$1, inst_33025);
                        } else {
                          if (state_val_33028 === 12) {
                            var inst_32991 = state_33027[7];
                            var inst_33015 = cljs.core.vec.call(null, inst_32991);
                            var state_33027__$1 = state_33027;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33027__$1, 15, out, inst_33015);
                          } else {
                            if (state_val_33028 === 2) {
                              var state_33027__$1 = state_33027;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33027__$1, 4, ch);
                            } else {
                              if (state_val_33028 === 11) {
                                var inst_33007 = state_33027[2];
                                var inst_33008 = new Array(n);
                                var inst_32991 = inst_33008;
                                var inst_32992 = 0;
                                var state_33027__$1 = function() {
                                  var statearr_33039 = state_33027;
                                  statearr_33039[7] = inst_32991;
                                  statearr_33039[8] = inst_32992;
                                  statearr_33039[10] = inst_33007;
                                  return statearr_33039;
                                }();
                                var statearr_33040_33070 = state_33027__$1;
                                statearr_33040_33070[2] = null;
                                statearr_33040_33070[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33028 === 9) {
                                  var inst_32991 = state_33027[7];
                                  var inst_33005 = cljs.core.vec.call(null, inst_32991);
                                  var state_33027__$1 = state_33027;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33027__$1, 11, out, inst_33005);
                                } else {
                                  if (state_val_33028 === 5) {
                                    var inst_32995 = state_33027[9];
                                    var inst_32991 = state_33027[7];
                                    var inst_32992 = state_33027[8];
                                    var inst_33000 = state_33027[11];
                                    var inst_32999 = inst_32991[inst_32992] = inst_32995;
                                    var inst_33000__$1 = inst_32992 + 1;
                                    var inst_33001 = inst_33000__$1 < n;
                                    var state_33027__$1 = function() {
                                      var statearr_33041 = state_33027;
                                      statearr_33041[12] = inst_32999;
                                      statearr_33041[11] = inst_33000__$1;
                                      return statearr_33041;
                                    }();
                                    if (cljs.core.truth_(inst_33001)) {
                                      var statearr_33042_33071 = state_33027__$1;
                                      statearr_33042_33071[1] = 8;
                                    } else {
                                      var statearr_33043_33072 = state_33027__$1;
                                      statearr_33043_33072[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_33028 === 14) {
                                      var inst_33020 = state_33027[2];
                                      var inst_33021 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_33027__$1 = function() {
                                        var statearr_33045 = state_33027;
                                        statearr_33045[13] = inst_33020;
                                        return statearr_33045;
                                      }();
                                      var statearr_33046_33073 = state_33027__$1;
                                      statearr_33046_33073[2] = inst_33021;
                                      statearr_33046_33073[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_33028 === 10) {
                                        var inst_33011 = state_33027[2];
                                        var state_33027__$1 = state_33027;
                                        var statearr_33047_33074 = state_33027__$1;
                                        statearr_33047_33074[2] = inst_33011;
                                        statearr_33047_33074[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_33028 === 8) {
                                          var inst_32991 = state_33027[7];
                                          var inst_33000 = state_33027[11];
                                          var tmp33044 = inst_32991;
                                          var inst_32991__$1 = tmp33044;
                                          var inst_32992 = inst_33000;
                                          var state_33027__$1 = function() {
                                            var statearr_33048 = state_33027;
                                            statearr_33048[7] = inst_32991__$1;
                                            statearr_33048[8] = inst_32992;
                                            return statearr_33048;
                                          }();
                                          var statearr_33049_33075 = state_33027__$1;
                                          statearr_33049_33075[2] = null;
                                          statearr_33049_33075[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___33061, out);
        return function(switch__30237__auto__, c__30349__auto___33061, out) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_33053 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_33053[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_33053[1] = 1;
              return statearr_33053;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_33027) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_33027);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e33054) {
                    if (e33054 instanceof Object) {
                      var ex__30241__auto__ = e33054;
                      var statearr_33055_33076 = state_33027;
                      statearr_33055_33076[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33027);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33054;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33077 = state_33027;
                  state_33027 = G__33077;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_33027) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_33027);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___33061, out);
      }();
      var state__30351__auto__ = function() {
        var statearr_33056 = f__30350__auto__.call(null);
        statearr_33056[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___33061;
        return statearr_33056;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___33061, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var args33078 = [];
  var len__9707__auto___33152 = arguments.length;
  var i__9708__auto___33153 = 0;
  while (true) {
    if (i__9708__auto___33153 < len__9707__auto___33152) {
      args33078.push(arguments[i__9708__auto___33153]);
      var G__33154 = i__9708__auto___33153 + 1;
      i__9708__auto___33153 = G__33154;
      continue;
    } else {
    }
    break;
  }
  var G__33080 = args33078.length;
  switch(G__33080) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33078.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__30349__auto___33156 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___33156, out) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___33156, out) {
          return function(state_33122) {
            var state_val_33123 = state_33122[1];
            if (state_val_33123 === 7) {
              var inst_33118 = state_33122[2];
              var state_33122__$1 = state_33122;
              var statearr_33124_33157 = state_33122__$1;
              statearr_33124_33157[2] = inst_33118;
              statearr_33124_33157[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33123 === 1) {
                var inst_33081 = [];
                var inst_33082 = inst_33081;
                var inst_33083 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_33122__$1 = function() {
                  var statearr_33125 = state_33122;
                  statearr_33125[7] = inst_33083;
                  statearr_33125[8] = inst_33082;
                  return statearr_33125;
                }();
                var statearr_33126_33158 = state_33122__$1;
                statearr_33126_33158[2] = null;
                statearr_33126_33158[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33123 === 4) {
                  var inst_33086 = state_33122[9];
                  var inst_33086__$1 = state_33122[2];
                  var inst_33087 = inst_33086__$1 == null;
                  var inst_33088 = cljs.core.not.call(null, inst_33087);
                  var state_33122__$1 = function() {
                    var statearr_33127 = state_33122;
                    statearr_33127[9] = inst_33086__$1;
                    return statearr_33127;
                  }();
                  if (inst_33088) {
                    var statearr_33128_33159 = state_33122__$1;
                    statearr_33128_33159[1] = 5;
                  } else {
                    var statearr_33129_33160 = state_33122__$1;
                    statearr_33129_33160[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33123 === 15) {
                    var inst_33112 = state_33122[2];
                    var state_33122__$1 = state_33122;
                    var statearr_33130_33161 = state_33122__$1;
                    statearr_33130_33161[2] = inst_33112;
                    statearr_33130_33161[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33123 === 13) {
                      var state_33122__$1 = state_33122;
                      var statearr_33131_33162 = state_33122__$1;
                      statearr_33131_33162[2] = null;
                      statearr_33131_33162[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_33123 === 6) {
                        var inst_33082 = state_33122[8];
                        var inst_33107 = inst_33082.length;
                        var inst_33108 = inst_33107 > 0;
                        var state_33122__$1 = state_33122;
                        if (cljs.core.truth_(inst_33108)) {
                          var statearr_33132_33163 = state_33122__$1;
                          statearr_33132_33163[1] = 12;
                        } else {
                          var statearr_33133_33164 = state_33122__$1;
                          statearr_33133_33164[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33123 === 3) {
                          var inst_33120 = state_33122[2];
                          var state_33122__$1 = state_33122;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33122__$1, inst_33120);
                        } else {
                          if (state_val_33123 === 12) {
                            var inst_33082 = state_33122[8];
                            var inst_33110 = cljs.core.vec.call(null, inst_33082);
                            var state_33122__$1 = state_33122;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33122__$1, 15, out, inst_33110);
                          } else {
                            if (state_val_33123 === 2) {
                              var state_33122__$1 = state_33122;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33122__$1, 4, ch);
                            } else {
                              if (state_val_33123 === 11) {
                                var inst_33090 = state_33122[10];
                                var inst_33086 = state_33122[9];
                                var inst_33100 = state_33122[2];
                                var inst_33101 = [];
                                var inst_33102 = inst_33101.push(inst_33086);
                                var inst_33082 = inst_33101;
                                var inst_33083 = inst_33090;
                                var state_33122__$1 = function() {
                                  var statearr_33134 = state_33122;
                                  statearr_33134[7] = inst_33083;
                                  statearr_33134[8] = inst_33082;
                                  statearr_33134[11] = inst_33100;
                                  statearr_33134[12] = inst_33102;
                                  return statearr_33134;
                                }();
                                var statearr_33135_33165 = state_33122__$1;
                                statearr_33135_33165[2] = null;
                                statearr_33135_33165[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33123 === 9) {
                                  var inst_33082 = state_33122[8];
                                  var inst_33098 = cljs.core.vec.call(null, inst_33082);
                                  var state_33122__$1 = state_33122;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33122__$1, 11, out, inst_33098);
                                } else {
                                  if (state_val_33123 === 5) {
                                    var inst_33090 = state_33122[10];
                                    var inst_33086 = state_33122[9];
                                    var inst_33083 = state_33122[7];
                                    var inst_33090__$1 = f.call(null, inst_33086);
                                    var inst_33091 = cljs.core._EQ_.call(null, inst_33090__$1, inst_33083);
                                    var inst_33092 = cljs.core.keyword_identical_QMARK_.call(null, inst_33083, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_33093 = inst_33091 || inst_33092;
                                    var state_33122__$1 = function() {
                                      var statearr_33136 = state_33122;
                                      statearr_33136[10] = inst_33090__$1;
                                      return statearr_33136;
                                    }();
                                    if (cljs.core.truth_(inst_33093)) {
                                      var statearr_33137_33166 = state_33122__$1;
                                      statearr_33137_33166[1] = 8;
                                    } else {
                                      var statearr_33138_33167 = state_33122__$1;
                                      statearr_33138_33167[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_33123 === 14) {
                                      var inst_33115 = state_33122[2];
                                      var inst_33116 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_33122__$1 = function() {
                                        var statearr_33140 = state_33122;
                                        statearr_33140[13] = inst_33115;
                                        return statearr_33140;
                                      }();
                                      var statearr_33141_33168 = state_33122__$1;
                                      statearr_33141_33168[2] = inst_33116;
                                      statearr_33141_33168[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_33123 === 10) {
                                        var inst_33105 = state_33122[2];
                                        var state_33122__$1 = state_33122;
                                        var statearr_33142_33169 = state_33122__$1;
                                        statearr_33142_33169[2] = inst_33105;
                                        statearr_33142_33169[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_33123 === 8) {
                                          var inst_33090 = state_33122[10];
                                          var inst_33086 = state_33122[9];
                                          var inst_33082 = state_33122[8];
                                          var inst_33095 = inst_33082.push(inst_33086);
                                          var tmp33139 = inst_33082;
                                          var inst_33082__$1 = tmp33139;
                                          var inst_33083 = inst_33090;
                                          var state_33122__$1 = function() {
                                            var statearr_33143 = state_33122;
                                            statearr_33143[14] = inst_33095;
                                            statearr_33143[7] = inst_33083;
                                            statearr_33143[8] = inst_33082__$1;
                                            return statearr_33143;
                                          }();
                                          var statearr_33144_33170 = state_33122__$1;
                                          statearr_33144_33170[2] = null;
                                          statearr_33144_33170[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___33156, out);
        return function(switch__30237__auto__, c__30349__auto___33156, out) {
          return function() {
            var cljs$core$async$state_machine__30238__auto__ = null;
            var cljs$core$async$state_machine__30238__auto____0 = function() {
              var statearr_33148 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_33148[0] = cljs$core$async$state_machine__30238__auto__;
              statearr_33148[1] = 1;
              return statearr_33148;
            };
            var cljs$core$async$state_machine__30238__auto____1 = function(state_33122) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_33122);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e33149) {
                    if (e33149 instanceof Object) {
                      var ex__30241__auto__ = e33149;
                      var statearr_33150_33171 = state_33122;
                      statearr_33150_33171[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33122);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33149;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33172 = state_33122;
                  state_33122 = G__33172;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__30238__auto__ = function(state_33122) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__30238__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__30238__auto____1.call(this, state_33122);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__30238__auto____0;
            cljs$core$async$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__30238__auto____1;
            return cljs$core$async$state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___33156, out);
      }();
      var state__30351__auto__ = function() {
        var statearr_33151 = f__30350__auto__.call(null);
        statearr_33151[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___33156;
        return statearr_33151;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___33156, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return !!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.FreeList");
goog.async.FreeList = goog.defineClass(null, {constructor:function(create, reset, limit) {
  this.limit_ = limit;
  this.create_ = create;
  this.reset_ = reset;
  this.occupants_ = 0;
  this.head_ = null;
}, get:function() {
  var item;
  if (this.occupants_ > 0) {
    this.occupants_--;
    item = this.head_;
    this.head_ = item.next;
    item.next = null;
  } else {
    item = this.create_();
  }
  return item;
}, put:function(item) {
  this.reset_(item);
  if (this.occupants_ < this.limit_) {
    this.occupants_++;
    item.next = this.head_;
    this.head_ = item;
  }
}, occupants:function() {
  return this.occupants_;
}});
goog.provide("goog.async.WorkItem");
goog.provide("goog.async.WorkQueue");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED", 100);
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  if (this.workTail_) {
    this.workTail_.next = item;
    this.workTail_ = item;
  } else {
    goog.asserts.assert(!this.workHead_);
    this.workHead_ = item;
    this.workTail_ = item;
  }
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  if (this.workHead_) {
    item = this.workHead_;
    this.workHead_ = this.workHead_.next;
    if (!this.workHead_) {
      this.workTail_ = null;
    }
    item.next = null;
  }
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.provide("goog.async.run");
goog.require("goog.async.WorkQueue");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve(undefined);
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(opt_realSetTimeout) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    if (opt_realSetTimeout) {
      opt_realSetTimeout(goog.async.run.processWorkQueue);
    }
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
if (goog.DEBUG) {
  goog.async.run.resetQueue = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = new goog.async.WorkQueue;
  };
}
goog.async.run.processWorkQueue = function() {
  var item = null;
  while (item = goog.async.run.workQueue_.remove()) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  if (resolver != goog.nullFunction) {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            } else {
              throw new Error("Promise rejected.");
            }
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = false;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = false;
};
goog.define("goog.Promise.DEFAULT_MAX_UNUSED", 100);
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.resolve = function(opt_value) {
  if (opt_value instanceof goog.Promise) {
    return opt_value;
  }
  var promise = new goog.Promise(goog.nullFunction);
  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);
  return promise;
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {
  var isThenable = goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);
  if (!isThenable) {
    goog.async.run(goog.partial(onFulfilled, value));
  }
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toSettle = promises.length;
    var results = [];
    if (!toSettle) {
      resolve(results);
      return;
    }
    var onSettled = function(index, fulfilled, result) {
      toSettle--;
      results[index] = fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};
      if (toSettle == 0) {
        resolve(results);
      }
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.prototype.thenAlways = function(onSettled, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);
  entry.always = true;
  this.addCallbackEntry_(entry);
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
      this.parent_ = null;
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childEntry = null;
  var beforeChildEntry = null;
  for (var entry = this.callbackEntries_;entry;entry = entry.next) {
    if (!entry.always) {
      childCount++;
      if (entry.child == childPromise) {
        childEntry = entry;
      }
      if (childEntry && childCount > 1) {
        break;
      }
    }
    if (!childEntry) {
      beforeChildEntry = entry;
    }
  }
  if (childEntry) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      if (beforeChildEntry) {
        this.removeEntryAfter_(beforeChildEntry);
      } else {
        this.popEntry_();
      }
      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this === x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  }
  this.state_ = goog.Promise.State_.BLOCKED;
  var isThenable = goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
  if (isThenable) {
    return;
  }
  this.result_ = x;
  this.state_ = state;
  this.parent_ = null;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {
  if (value instanceof goog.Promise) {
    value.thenVoid(onFulfilled, onRejected, context);
    return true;
  } else {
    if (goog.Thenable.isImplementedBy(value)) {
      value = (value);
      value.then(onFulfilled, onRejected, context);
      return true;
    } else {
      if (goog.isObject(value)) {
        try {
          var then = value["then"];
          if (goog.isFunction(then)) {
            goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);
            return true;
          }
        } catch (e) {
          onRejected.call(context, e);
          return true;
        }
      }
    }
  }
  return false;
};
goog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      onFulfilled.call(context, value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      onRejected.call(context, reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(entry.onFulfilled != null);
  if (this.callbackEntriesTail_) {
    this.callbackEntriesTail_.next = entry;
    this.callbackEntriesTail_ = entry;
  } else {
    this.callbackEntries_ = entry;
    this.callbackEntriesTail_ = entry;
  }
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  if (this.callbackEntries_) {
    entry = this.callbackEntries_;
    this.callbackEntries_ = entry.next;
    entry.next = null;
  }
  if (!this.callbackEntries_) {
    this.callbackEntriesTail_ = null;
  }
  if (entry != null) {
    goog.asserts.assert(entry.onFulfilled != null);
  }
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(previous != null);
  if (previous.next == this.callbackEntriesTail_) {
    this.callbackEntriesTail_ = previous;
  }
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  var entry = null;
  while (entry = this.popEntry_()) {
    if (goog.Promise.LONG_STACK_TRACES) {
      this.currentStep_++;
    }
    this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always) {
    this.removeUnhandledRejection_();
  }
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null;
    goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled.call(callbackEntry.context, result);
  } else {
    if (callbackEntry.onRejected) {
      callbackEntry.onRejected.call(callbackEntry.context, result);
    }
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    callback.call(opt_scope);
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.define("goog.userAgent.ASSUME_IPOD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.determineVersion_ = function() {
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode != null && docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(userAgent);
  }
  return undefined;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", 
LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", TIMEUPDATE:"timeupdate", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), 
ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", 
MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", 
MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", TEXTINPUT:"textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", 
DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (!goog.isNull(relevantTouch)) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
    this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.forwardDeclare("goog.events.EventLike");
goog.forwardDeclare("goog.events.EventTarget");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return (src).unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return (obj).removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return (obj).getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return (obj).fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return (listener).handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = (e.currentTarget = target);
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.Promise");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = (opt_timerObject || goog.Timer.defaultTimerObject);
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {
    return goog.Timer.INVALID_TIMEOUT_ID_;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {
      reject(new Error("Failed to schedule timer."));
    }
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return (eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return (eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return (new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  if (object == null) {
    sb.push("null");
    return;
  }
  if (typeof object == "object") {
    if (goog.isArray(object)) {
      this.serializeArray(object, sb);
      return;
    } else {
      if (object instanceof String || object instanceof Number || object instanceof Boolean) {
        object = object.valueOf();
      } else {
        this.serializeObject_((object), sb);
        return;
      }
    }
  }
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(String(object));
      break;
    case "function":
      sb.push("null");
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("￿") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    var rv = goog.json.Serializer.charToJsonCharCache_[c];
    if (!rv) {
      rv = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1);
      goog.json.Serializer.charToJsonCharCache_[c] = rv;
    }
    return rv;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? String(n) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], rgb() and " + "rgba(), got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
          goog.asserts.fail("String value requires balanced quotes, got: " + value);
          value = goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0;i < value.length;i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_RE_ = /^([-,."'%_!# a-zA-Z0-9]+|(?:rgb|hsl)a?\([0-9.%, ]+\))$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return (goog.global.URL);
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return (goog.global.webkitURL);
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return (goog.global);
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿" + "‎Ⰰ-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-߿‏יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  if (!goog.string.caseInsensitiveStartsWith(telUrl, "tel:")) {
    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0;i < parts.length;i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(tagName);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (opt_src) {
    goog.html.TrustedResourceUrl.unwrap(opt_src);
  }
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw new Error("The browser does not support sandboxed iframes.");
  }
  var fixedAttributes = {};
  if (opt_src) {
    fixedAttributes["src"] = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));
  } else {
    fixedAttributes["src"] = null;
  }
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  fixedAttributes["sandbox"] = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global["HTMLIFrameElement"] && "sandbox" in goog.global["HTMLIFrameElement"].prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {"src":src};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0;i < styleSheet.length;i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  if (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) {
    if (goog.string.contains(unwrappedUrl, ";")) {
      unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'";
    }
  }
  var attributes = {"http-equiv":"refresh", "content":(opt_secs || 0) + "; url\x3d" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.html.SafeScript");
goog.require("goog.asserts");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  if (scriptString.length === 0) {
    return goog.html.SafeScript.EMPTY;
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  };
}
goog.html.SafeScript.unwrap = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
    return "type_error:SafeScript";
  }
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmpty(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call((opt_obj), values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call((opt_obj), values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call((opt_obj), values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call((opt_obj), values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call((opt_obj), values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call((opt_obj), values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = Math.sign || function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return (goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return (this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push((key));
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.define("goog.debug.FORCE_SLOPPY_STACKS", false);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  var html = goog.debug.exposeExceptionAsHtml(err, opt_fn);
  return goog.html.SafeHtml.unwrap(html);
};
goog.debug.exposeExceptionAsHtml = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var viewSourceUrl = goog.debug.createViewSourceUrl_(e.fileName);
    var error = goog.html.SafeHtml.concat(goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("Message: " + e.message + "\nUrl: "), goog.html.SafeHtml.create("a", {href:viewSourceUrl, target:"_new"}, e.fileName), goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + e.stack + "-\x3e " + "[end]\n\nJS stack traversal:\n" + goog.debug.getStacktrace(opt_fn) + "-\x3e "));
    return error;
  } catch (e2) {
    return goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("Exception trying to expose exception! You win, we lose. " + e2);
  }
};
goog.debug.createViewSourceUrl_ = function(opt_fileName) {
  if (!goog.isDefAndNotNull(opt_fileName)) {
    opt_fileName = "";
  }
  if (!/^https?:\/\//i.test(opt_fileName)) {
    return goog.html.SafeUrl.fromConstant(goog.string.Const.from("sanitizedviewsrc"));
  }
  var sanitizedFileName = goog.html.SafeUrl.sanitize(opt_fileName);
  return goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("view-source scheme plus HTTP/HTTPS URL"), "view-source:" + goog.html.SafeUrl.unwrap(sanitizedFileName));
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return {"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return {"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return (err);
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.runtimeType = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in (goog.debug.Logger.Level.predefinedLevelsCache_)) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return !!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return (goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress", DOWNLOAD_PROGRESS:"downloadprogress", UPLOAD_PROGRESS:"uploadprogress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return (this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return (uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0;i < pairs.length;i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.progressEventsEnabled_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {
  this.progressEventsEnabled_ = enabled;
};
goog.net.XhrIo.prototype.getProgressEventsEnabled = function() {
  return this.progressEventsEnabled_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  if (this.getProgressEventsEnabled() && "onprogress" in this.xhr_) {
    this.xhr_.onprogress = goog.bind(function(e) {
      this.onProgressHandler_(e, true);
    }, this);
    if (this.xhr_.upload) {
      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);
    }
  }
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if ("withCredentials" in this.xhr_ && this.xhr_.withCredentials !== this.withCredentials_) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {
  goog.asserts.assert(e.type === goog.net.EventType.PROGRESS, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));
};
goog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {
  return ({type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total});
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return !!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return -1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.maybeFlip_ = function() {
  if (goog.array.isEmpty(this.front_)) {
    this.front_ = this.back_;
    this.front_.reverse();
    this.back_ = [];
  }
};
goog.structs.Queue.prototype.enqueue = function(element) {
  this.back_.push(element);
};
goog.structs.Queue.prototype.dequeue = function() {
  this.maybeFlip_();
  return this.front_.pop();
};
goog.structs.Queue.prototype.peek = function() {
  this.maybeFlip_();
  return goog.array.peek(this.front_);
};
goog.structs.Queue.prototype.getCount = function() {
  return this.front_.length + this.back_.length;
};
goog.structs.Queue.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.front_) && goog.array.isEmpty(this.back_);
};
goog.structs.Queue.prototype.clear = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.front_, obj) || goog.array.contains(this.back_, obj);
};
goog.structs.Queue.prototype.remove = function(obj) {
  return goog.array.removeLast(this.front_, obj) || goog.array.remove(this.back_, obj);
};
goog.structs.Queue.prototype.getValues = function() {
  var res = [];
  for (var i = this.front_.length - 1;i >= 0;--i) {
    res.push(this.front_[i]);
  }
  var len = this.back_.length;
  for (var i = 0;i < len;++i) {
    res.push(this.back_[i]);
  }
  return res;
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if (this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.delay = 0;
  this.lastAccess = null;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0};
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if (min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if (max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setDelay = function(delay) {
  this.delay = delay;
};
goog.structs.Pool.prototype.getObject = function() {
  var time = goog.now();
  if (goog.isDefAndNotNull(this.lastAccess) && time - this.lastAccess < this.delay) {
    return undefined;
  }
  var obj = this.removeFreeObject_();
  if (obj) {
    this.lastAccess = time;
    this.inUseSet_.add(obj);
  }
  return obj;
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if (this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true;
  }
  return false;
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while (this.getFreeCount() > 0) {
    obj = this.freeQueue_.dequeue();
    if (!this.objectCanBeReused(obj)) {
      this.adjustForMinMax();
    } else {
      break;
    }
  }
  if (!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject();
  }
  return obj;
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if (this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj);
  } else {
    this.disposeObject(obj);
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while (this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject());
  }
  while (this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject(freeQueue.dequeue());
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return {};
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if (typeof obj.dispose == "function") {
    obj.dispose();
  } else {
    for (var i in obj) {
      obj[i] = null;
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if (typeof obj.canBeReused == "function") {
    return obj.canBeReused();
  }
  return true;
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount();
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if (this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while (!freeQueue.isEmpty()) {
    this.disposeObject(freeQueue.dequeue());
  }
  delete this.freeQueue_;
};
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value;
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_;
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_;
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_);
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if (opt_heap) {
    this.insertAll(opt_heap);
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1);
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if (heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if (this.getCount() <= 0) {
      var nodes = this.nodes_;
      for (var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]));
      }
      return;
    }
  } else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap);
  }
  for (var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i]);
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if (count <= 0) {
    return undefined;
  } else {
    if (count == 1) {
      goog.array.clear(nodes);
    } else {
      nodes[0] = nodes.pop();
      this.moveDown_(0);
    }
  }
  return rootNode.getValue();
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if (nodes.length == 0) {
    return undefined;
  }
  return nodes[0].getValue();
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey();
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while (index < count >> 1) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if (nodes[smallerChildIndex].getKey() > node.getKey()) {
      break;
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex;
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while (index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if (nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex;
    } else {
      break;
    }
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1;
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2;
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return index - 1 >> 1;
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue());
  }
  return rv;
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey());
  }
  return rv;
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val;
  });
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key;
  });
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this);
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length;
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_);
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_);
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this);
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value);
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove();
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.delayTimeout_ = undefined;
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.setDelay = function(delay) {
  goog.structs.PriorityPool.base(this, "setDelay", delay);
  if (!goog.isDefAndNotNull(this.lastAccess)) {
    return;
  }
  goog.global.clearTimeout(this.delayTimeout_);
  this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - goog.now());
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if (!opt_callback) {
    var result = goog.structs.PriorityPool.base(this, "getObject");
    if (result && this.delay) {
      this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay);
    }
    return result;
  }
  var priority = goog.isDef(opt_priority) ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined;
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while (requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if (!obj) {
      return;
    } else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj]);
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  goog.global.clearTimeout(this.delayTimeout_);
  this.requestQueue_.clear();
  this.requestQueue_ = null;
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount, opt_withCredentials) {
  this.headers_ = opt_headers;
  this.withCredentials_ = !!opt_withCredentials;
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if (headers) {
    headers.forEach(function(value, key) {
      xhrIo.headers.set(key, value);
    });
  }
  if (this.withCredentials_) {
    xhrIo.setWithCredentials(true);
  }
  return xhrIo;
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  var xhr = (obj);
  return !xhr.isDisposed() && !xhr.isActive();
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__28597__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__28597 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__28598__i = 0, G__28598__a = new Array(arguments.length - 0);
        while (G__28598__i < G__28598__a.length) {
          G__28598__a[G__28598__i] = arguments[G__28598__i + 0];
          ++G__28598__i;
        }
        args = new cljs.core.IndexedSeq(G__28598__a, 0);
      }
      return G__28597__delegate.call(this, args);
    };
    G__28597.cljs$lang$maxFixedArity = 0;
    G__28597.cljs$lang$applyTo = function(arglist__28599) {
      var args = cljs.core.seq(arglist__28599);
      return G__28597__delegate(args);
    };
    G__28597.cljs$core$IFn$_invoke$arity$variadic = G__28597__delegate;
    return G__28597;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args28600 = [];
  var len__9707__auto___28603 = arguments.length;
  var i__9708__auto___28604 = 0;
  while (true) {
    if (i__9708__auto___28604 < len__9707__auto___28603) {
      args28600.push(arguments[i__9708__auto___28604]);
      var G__28605 = i__9708__auto___28604 + 1;
      i__9708__auto___28604 = G__28605;
      continue;
    } else {
    }
    break;
  }
  var G__28602 = args28600.length;
  switch(G__28602) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28600.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__28607 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__28608 = cljs.core.next.call(null, coll__$1);
      sb = G__28607;
      coll__$1 = G__28608;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__28609 = sb;
      var G__28610 = coll__$2;
      sb = G__28609;
      coll__$1 = G__28610;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__28611 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__28611;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__28615 = cljs.core._EQ__EQ_;
    var expr__28616 = limit;
    if (cljs.core.truth_(pred__28615.call(null, 1, expr__28616))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__28615.call(null, 2, expr__28616))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args28618 = [];
  var len__9707__auto___28621 = arguments.length;
  var i__9708__auto___28622 = 0;
  while (true) {
    if (i__9708__auto___28622 < len__9707__auto___28621) {
      args28618.push(arguments[i__9708__auto___28622]);
      var G__28623 = i__9708__auto___28622 + 1;
      i__9708__auto___28622 = G__28623;
      continue;
    } else {
    }
    break;
  }
  var G__28620 = args28618.length;
  switch(G__28620) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28618.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__28625 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__28626 = limit__$1 - 1;
          var G__28627 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__28625;
          limit__$1 = G__28626;
          parts = G__28627;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__28628 = index - 1;
        index = G__28628;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__28629 = index + 1;
      index = G__28629;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args28630 = [];
  var len__9707__auto___28633 = arguments.length;
  var i__9708__auto___28634 = 0;
  while (true) {
    if (i__9708__auto___28634 < len__9707__auto___28633) {
      args28630.push(arguments[i__9708__auto___28634]);
      var G__28635 = i__9708__auto___28634 + 1;
      i__9708__auto___28634 = G__28635;
      continue;
    } else {
    }
    break;
  }
  var G__28632 = args28630.length;
  switch(G__28632) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28630.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args28637 = [];
  var len__9707__auto___28640 = arguments.length;
  var i__9708__auto___28641 = 0;
  while (true) {
    if (i__9708__auto___28641 < len__9707__auto___28640) {
      args28637.push(arguments[i__9708__auto___28641]);
      var G__28642 = i__9708__auto___28641 + 1;
      i__9708__auto___28641 = G__28642;
      continue;
    } else {
    }
    break;
  }
  var G__28639 = args28637.length;
  switch(G__28639) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28637.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.tools.reader.impl.utils");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
cljs.tools.reader.impl.utils.char$ = function cljs$tools$reader$impl$utils$char(x) {
  if (x == null) {
    return null;
  } else {
    return cljs.core.char$.call(null, x);
  }
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex) {
  return ex instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(splicing_QMARK_, form, __meta, __extmap, __hash) {
  this.splicing_QMARK_ = splicing_QMARK_;
  this.form = form;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k28647, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__28649 = k28647 instanceof cljs.core.Keyword ? k28647.fqn : null;
  switch(G__28649) {
    case "splicing?":
      return self__.splicing_QMARK_;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k28647, else__9257__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__28646) {
  var self__ = this;
  var G__28646__$1 = this;
  return new cljs.core.RecordIter(0, G__28646__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), null, new cljs.core.Keyword(null, "form", "form", -1624062471), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__28646) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__28650 = cljs.core.keyword_identical_QMARK_;
  var expr__28651 = k__9262__auto__;
  if (cljs.core.truth_(pred__28650.call(null, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), expr__28651))) {
    return new cljs.tools.reader.impl.utils.ReaderConditional(G__28646, self__.form, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__28650.call(null, new cljs.core.Keyword(null, "form", "form", -1624062471), expr__28651))) {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, G__28646, self__.__meta, self__.__extmap, null);
    } else {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__28646), null);
    }
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__28646) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, G__28646, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = true;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_, form) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__28648) {
  return new cljs.tools.reader.impl.utils.ReaderConditional((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(G__28648), (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(G__28648), null, cljs.core.dissoc.call(null, G__28648, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value) {
  return value instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function cljs$tools$reader$impl$utils$reader_conditional(form, splicing_QMARK_) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#?"), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(coll__$1)) ? "@" : null)].join(""));
  return cljs.core.pr_writer.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(coll__$1), writer, opts);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    if (ch === ",") {
      return true;
    } else {
      return cljs.tools.reader.impl.utils.ws_rx.test(ch);
    }
  }
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function cljs$tools$reader$impl$utils$numeric_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    return goog.string.isNumeric(ch);
  }
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function cljs$tools$reader$impl$utils$newline_QMARK_(c) {
  return "\n" === c || "\n" === c || c == null;
};
cljs.tools.reader.impl.utils.desugar_meta = function cljs$tools$reader$impl$utils$desugar_meta(f) {
  if (f instanceof cljs.core.Keyword) {
    return cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
  } else {
    if (f instanceof cljs.core.Symbol) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (typeof f === "string") {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
      } else {
        return f;
      }
    }
  }
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function cljs$tools$reader$impl$utils$next_id() {
  return cljs.core.swap_BANG_.call(null, cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
cljs.tools.reader.impl.utils.namespace_keys = function cljs$tools$reader$impl$utils$namespace_keys(ns, keys) {
  var iter__9412__auto__ = function cljs$tools$reader$impl$utils$namespace_keys_$_iter__28670(s__28671) {
    return new cljs.core.LazySeq(null, function() {
      var s__28671__$1 = s__28671;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__28671__$1);
        if (temp__4657__auto__) {
          var s__28671__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__28671__$2)) {
            var c__9410__auto__ = cljs.core.chunk_first.call(null, s__28671__$2);
            var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
            var b__28673 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
            if (function() {
              var i__28672 = 0;
              while (true) {
                if (i__28672 < size__9411__auto__) {
                  var key = cljs.core._nth.call(null, c__9410__auto__, i__28672);
                  cljs.core.chunk_append.call(null, b__28673, key instanceof cljs.core.Symbol || key instanceof cljs.core.Keyword ? function() {
                    var vec__28680 = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, key);
                    var key_ns = cljs.core.nth.call(null, vec__28680, 0, null);
                    var key_name = cljs.core.nth.call(null, vec__28680, 1, null);
                    var __GT_key = key instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
                    if (key_ns == null) {
                      return __GT_key.call(null, ns, key_name);
                    } else {
                      if (cljs.core._EQ_.call(null, "_", key_ns)) {
                        return __GT_key.call(null, key_name);
                      } else {
                        return key;
                      }
                    }
                  }() : key);
                  var G__28686 = i__28672 + 1;
                  i__28672 = G__28686;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28673), cljs$tools$reader$impl$utils$namespace_keys_$_iter__28670.call(null, cljs.core.chunk_rest.call(null, s__28671__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28673), null);
            }
          } else {
            var key = cljs.core.first.call(null, s__28671__$2);
            return cljs.core.cons.call(null, key instanceof cljs.core.Symbol || key instanceof cljs.core.Keyword ? function() {
              var vec__28683 = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, key);
              var key_ns = cljs.core.nth.call(null, vec__28683, 0, null);
              var key_name = cljs.core.nth.call(null, vec__28683, 1, null);
              var __GT_key = key instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
              if (key_ns == null) {
                return __GT_key.call(null, ns, key_name);
              } else {
                if (cljs.core._EQ_.call(null, "_", key_ns)) {
                  return __GT_key.call(null, key_name);
                } else {
                  return key;
                }
              }
            }() : key, cljs$tools$reader$impl$utils$namespace_keys_$_iter__28670.call(null, cljs.core.rest.call(null, s__28671__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__9412__auto__.call(null, keys);
};
cljs.tools.reader.impl.utils.second_SINGLEQUOTE_ = function cljs$tools$reader$impl$utils$second_SINGLEQUOTE_(p__28687) {
  var vec__28691 = p__28687;
  var a = cljs.core.nth.call(null, vec__28691, 0, null);
  var b = cljs.core.nth.call(null, vec__28691, 1, null);
  if (cljs.core.truth_(a)) {
    return null;
  } else {
    return b;
  }
};
goog.provide("cljs.tools.reader.reader_types");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.utils");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.reader_types.Reader = function() {
};
cljs.tools.reader.reader_types.read_char = function cljs$tools$reader$reader_types$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.tools.reader.reader_types.read_char[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader);
    } else {
      var m__9296__auto____$1 = cljs.tools.reader.reader_types.read_char["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.read-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.peek_char = function cljs$tools$reader$reader_types$peek_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader);
    } else {
      var m__9296__auto____$1 = cljs.tools.reader.reader_types.peek_char["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.peek-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IPushbackReader = function() {
};
cljs.tools.reader.reader_types.unread = function cljs$tools$reader$reader_types$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 == null)) {
    return reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.tools.reader.reader_types.unread[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader, ch);
    } else {
      var m__9296__auto____$1 = cljs.tools.reader.reader_types.unread["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPushbackReader.unread", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IndexingReader = function() {
};
cljs.tools.reader.reader_types.get_line_number = function cljs$tools$reader$reader_types$get_line_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader);
    } else {
      var m__9296__auto____$1 = cljs.tools.reader.reader_types.get_line_number["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-line-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_column_number = function cljs$tools$reader$reader_types$get_column_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader);
    } else {
      var m__9296__auto____$1 = cljs.tools.reader.reader_types.get_column_number["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-column-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_file_name = function cljs$tools$reader$reader_types$get_file_name(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader);
    } else {
      var m__9296__auto____$1 = cljs.tools.reader.reader_types.get_file_name["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-file-name", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.StringReader = function(s, s_len, s_pos) {
  this.s = s;
  this.s_len = s_len;
  this.s_pos = s_pos;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    var r = self__.s.charAt(self__.s_pos);
    self__.s_pos = self__.s_pos + 1;
    return r;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    return self__.s.charAt(self__.s_pos);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null), cljs.core.with_meta(new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function cljs$tools$reader$reader_types$__GT_StringReader(s, s_len, s_pos) {
  return new cljs.tools.reader.reader_types.StringReader(s, s_len, s_pos);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(readable, buf) {
  this.readable = readable;
  this.buf = buf;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
    var c = self__.buf[0];
    self__.buf = null;
    return cljs.tools.reader.impl.utils.char$.call(null, c);
  } else {
    var c = [cljs.core.str(self__.readable.read(1))].join("");
    if (cljs.core.truth_(c)) {
      return cljs.tools.reader.impl.utils.char$.call(null, c);
    } else {
      return null;
    }
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
  } else {
    self__.buf = [cljs.core.str(self__.readable.read(1))].join("");
  }
  if (cljs.core.truth_(self__.buf)) {
    return cljs.tools.reader.impl.utils.char$.call(null, self__.buf[0]);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "readable", "readable", 2113054478, null), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable, buf) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(readable, buf);
};
cljs.tools.reader.reader_types.PushbackReader = function(rdr, buf, buf_len, buf_pos) {
  this.rdr = rdr;
  this.buf = buf;
  this.buf_len = buf_len;
  this.buf_pos = buf_pos;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (self__.buf_pos < self__.buf_len) {
    self__.buf_pos = self__.buf_pos + 1;
  } else {
  }
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(ch)) {
    if (self__.buf_pos === 0) {
      throw new Error("Pushback buffer is full");
    } else {
    }
    self__.buf_pos = self__.buf_pos - 1;
    return self__.buf[self__.buf_pos] = ch;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "buf-pos", "buf-pos", -807229033, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr, buf, buf_len, buf_pos) {
  return new cljs.tools.reader.reader_types.PushbackReader(rdr, buf, buf_len, buf_pos);
};
cljs.tools.reader.reader_types.normalize_newline = function cljs$tools$reader$reader_types$normalize_newline(rdr, ch) {
  if ("\r" === ch) {
    var c = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if ("\f" === c || "\n" === c) {
      cljs.tools.reader.reader_types.read_char.call(null, rdr);
    } else {
    }
    return "\n";
  } else {
    return ch;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4657__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var ch = temp__4657__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null)], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name);
};
cljs.tools.reader.reader_types.merge_meta = function cljs$tools$reader$reader_types$merge_meta(obj, m) {
  var orig_meta = cljs.core.meta.call(null, obj);
  return cljs.core.with_meta.call(null, obj, cljs.core.merge.call(null, m, cljs.core.dissoc.call(null, orig_meta, new cljs.core.Keyword(null, "source", "source", -433931539))));
};
cljs.tools.reader.reader_types.peek_source_log = function cljs$tools$reader$reader_types$peek_source_log(frames) {
  return cljs.core.subs.call(null, [cljs.core.str((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames))].join(""), cljs.core.first.call(null, (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(frames)));
};
cljs.tools.reader.reader_types.log_source_char = function cljs$tools$reader$reader_types$log_source_char(frames, char$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var buffer = temp__4657__auto__;
    return buffer.append(char$);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.drop_last_logged_char = function cljs$tools$reader$reader_types$drop_last_logged_char(frames) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var buffer = temp__4657__auto__;
    return buffer.set(cljs.core.subs.call(null, [cljs.core.str(buffer)].join(""), 0, buffer.getLength() - 1));
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
  this.frames = frames;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4657__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var ch = temp__4657__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    cljs.tools.reader.reader_types.log_source_char.call(null, cljs.core.deref.call(null, self__.frames), ch__$1);
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  if (cljs.core.truth_(ch)) {
    cljs.tools.reader.reader_types.drop_last_logged_char.call(null, cljs.core.deref.call(null, self__.frames));
  } else {
  }
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null), new cljs.core.Symbol(null, "frames", "frames", -888748272, null)], 
  null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr) {
  if (!(rdr == null)) {
    if (false || rdr.cljs$tools$reader$reader_types$IndexingReader$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.tools.reader.reader_types.string_reader = function cljs$tools$reader$reader_types$string_reader(s) {
  return new cljs.tools.reader.reader_types.StringReader(s, cljs.core.count.call(null, s), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function cljs$tools$reader$reader_types$string_push_back_reader(var_args) {
  var args28698 = [];
  var len__9707__auto___28701 = arguments.length;
  var i__9708__auto___28702 = 0;
  while (true) {
    if (i__9708__auto___28702 < len__9707__auto___28701) {
      args28698.push(arguments[i__9708__auto___28702]);
      var G__28703 = i__9708__auto___28702 + 1;
      i__9708__auto___28702 = G__28703;
      continue;
    } else {
    }
    break;
  }
  var G__28700 = args28698.length;
  switch(G__28700) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28698.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.reader_types.string_push_back_reader.call(null, s, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s, buf_len) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader.call(null, s), cljs.core.object_array.call(null, buf_len), buf_len, buf_len);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(readable, null), cljs.core.object_array.call(null, 1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function cljs$tools$reader$reader_types$indexing_push_back_reader(var_args) {
  var args28705 = [];
  var len__9707__auto___28708 = arguments.length;
  var i__9708__auto___28709 = 0;
  while (true) {
    if (i__9708__auto___28709 < len__9707__auto___28708) {
      args28705.push(arguments[i__9708__auto___28709]);
      var G__28710 = i__9708__auto___28709 + 1;
      i__9708__auto___28709 = G__28710;
      continue;
    } else {
    }
    break;
  }
  var G__28707 = args28705.length;
  switch(G__28707) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28705.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function cljs$tools$reader$reader_types$source_logging_push_back_reader(var_args) {
  var args28712 = [];
  var len__9707__auto___28715 = arguments.length;
  var i__9708__auto___28716 = 0;
  while (true) {
    if (i__9708__auto___28716 < len__9707__auto___28715) {
      args28712.push(arguments[i__9708__auto___28716]);
      var G__28717 = i__9708__auto___28716 + 1;
      i__9708__auto___28716 = G__28717;
      continue;
    } else {
    }
    break;
  }
  var G__28714 = args28712.length;
  switch(G__28714) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28712.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "buffer", "buffer", 617295198), new goog.string.StringBuffer, new cljs.core.Keyword(null, "offset", "offset", 296498311), cljs.core.list(0)], null)));
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function cljs$tools$reader$reader_types$read_line(rdr) {
  var c = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var s = new goog.string.StringBuffer;
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, c)) {
      return [cljs.core.str(s)].join("");
    } else {
      var G__28719 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      var G__28720 = s.append(c);
      c = G__28719;
      s = G__28720;
      continue;
    }
    break;
  }
};
cljs.tools.reader.reader_types.reader_error = function cljs$tools$reader$reader_types$reader_error(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28723 = arguments.length;
  var i__9708__auto___28724 = 0;
  while (true) {
    if (i__9708__auto___28724 < len__9707__auto___28723) {
      args__9714__auto__.push(arguments[i__9708__auto___28724]);
      var G__28725 = i__9708__auto___28724 + 1;
      i__9708__auto___28724 = G__28725;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw cljs.core.ex_info.call(null, cljs.core.apply.call(null, cljs.core.str, msg), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) ? cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "line", "line", 
  212345235), cljs.tools.reader.reader_types.get_line_number.call(null, rdr), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, rdr)], null), function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file_name = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file_name], null);
    } else {
      return null;
    }
  }()) : null));
};
cljs.tools.reader.reader_types.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.reader_types.reader_error.cljs$lang$applyTo = function(seq28721) {
  var G__28722 = cljs.core.first.call(null, seq28721);
  var seq28721__$1 = cljs.core.next.call(null, seq28721);
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__28722, seq28721__$1);
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr) {
  return rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function cljs$tools$reader$reader_types$line_start_QMARK_(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return 1 === cljs.tools.reader.reader_types.get_column_number.call(null, rdr);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.log_source_STAR_ = function cljs$tools$reader$reader_types$log_source_STAR_(reader, f) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, reader.frames));
  try {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.conj, buffer.getLength());
    var ret = f.call(null);
    if (!(ret == null) ? ret.cljs$lang$protocol_mask$partition0$ & 131072 || ret.cljs$core$IMeta$ ? true : false : false) {
      return cljs.tools.reader.reader_types.merge_meta.call(null, ret, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "source", "source", -433931539), cljs.tools.reader.reader_types.peek_source_log.call(null, cljs.core.deref.call(null, reader.frames))], null));
    } else {
      return ret;
    }
  } finally {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.rest);
  }
};
goog.provide("cljs.tools.reader.impl.commons");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader, initch) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader));
};
cljs.tools.reader.impl.commons.read_past = function cljs$tools$reader$impl$commons$read_past(pred, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (pred.call(null, ch)) {
      var G__28781 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      ch = G__28781;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.tools.reader.impl.commons.skip_line = function cljs$tools$reader$impl$commons$skip_line(reader) {
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, cljs.tools.reader.reader_types.read_char.call(null, reader))) {
    } else {
      continue;
    }
    break;
  }
  return reader;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function cljs$tools$reader$impl$commons$match_int(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.int_pattern, s));
  if (!(m.call(null, 2) == null)) {
    return 0;
  } else {
    var negate_QMARK_ = "-" === m.call(null, 1);
    var a = !(m.call(null, 3) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 3), 10], null) : !(m.call(null, 4) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 4), 16], null) : !(m.call(null, 5) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 5), 8], null) : !(m.call(null, 7) == null) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 7), parseInt(m.call(null, 6))], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    var n = a.call(null, 0);
    if (n == null) {
      return null;
    } else {
      var bn = parseInt(n, a.call(null, 1));
      var bn__$1 = negate_QMARK_ ? -1 * bn : bn;
      if (cljs.core.truth_(isNaN(bn__$1))) {
        return null;
      } else {
        return bn__$1;
      }
    }
  }
};
cljs.tools.reader.impl.commons.match_ratio = function cljs$tools$reader$impl$commons$match_ratio(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s));
  var numerator = m.call(null, 1);
  var denominator = m.call(null, 2);
  var numerator__$1 = cljs.core.truth_(cljs.core.re_find.call(null, /^\+/, numerator)) ? cljs.core.subs.call(null, numerator, 1) : numerator;
  return parseInt(numerator__$1) / parseInt(denominator);
};
cljs.tools.reader.impl.commons.match_float = function cljs$tools$reader$impl$commons$match_float(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.float_pattern, s));
  if (!(m.call(null, 4) == null)) {
    return parseFloat(m.call(null, 1));
  } else {
    return parseFloat(s);
  }
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function cljs$tools$reader$impl$commons$matches_QMARK_(pattern, s) {
  var vec__28785 = cljs.core.re_find.call(null, pattern, s);
  var match = cljs.core.nth.call(null, vec__28785, 0, null);
  return match === s;
};
cljs.tools.reader.impl.commons.match_number = function cljs$tools$reader$impl$commons$match_number(s) {
  if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.int_pattern, s)) {
    return cljs.tools.reader.impl.commons.match_int.call(null, s);
  } else {
    if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.float_pattern, s)) {
      return cljs.tools.reader.impl.commons.match_float.call(null, s);
    } else {
      if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s)) {
        return cljs.tools.reader.impl.commons.match_ratio.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.parse_symbol = function cljs$tools$reader$impl$commons$parse_symbol(token) {
  if ("" === token || /:$/.test(token) === true || /^::/.test(token) === true) {
    return null;
  } else {
    var ns_idx = token.indexOf("/");
    var ns = ns_idx > 0 ? cljs.core.subs.call(null, token, 0, ns_idx) : null;
    if (!(ns == null)) {
      var ns_idx__$1 = ns_idx + 1;
      if (ns_idx__$1 === cljs.core.count.call(null, token)) {
        return null;
      } else {
        var sym = cljs.core.subs.call(null, token, ns_idx__$1);
        if (!cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.core.nth.call(null, sym, 0)) && !("" === sym) && /:$/.test(ns) === false && (sym === "/" || -1 === sym.indexOf("/"))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, sym], null);
        } else {
          return null;
        }
      }
    } else {
      if (token === "/" || -1 === token.indexOf("/")) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, token], null);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.read_comment = function cljs$tools$reader$impl$commons$read_comment(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___28790 = arguments.length;
  var i__9708__auto___28791 = 0;
  while (true) {
    if (i__9708__auto___28791 < len__9707__auto___28790) {
      args__9714__auto__.push(arguments[i__9708__auto___28791]);
      var G__28792 = i__9708__auto___28791 + 1;
      i__9708__auto___28791 = G__28792;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(rdr, _) {
  return cljs.tools.reader.impl.commons.skip_line.call(null, rdr);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(seq28788) {
  var G__28789 = cljs.core.first.call(null, seq28788);
  var seq28788__$1 = cljs.core.next.call(null, seq28788);
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(G__28789, seq28788__$1);
};
cljs.tools.reader.impl.commons.throwing_reader = function cljs$tools$reader$impl$commons$throwing_reader(msg) {
  return function() {
    var G__28793__delegate = function(rdr, _) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, msg);
    };
    var G__28793 = function(rdr, var_args) {
      var _ = null;
      if (arguments.length > 1) {
        var G__28794__i = 0, G__28794__a = new Array(arguments.length - 1);
        while (G__28794__i < G__28794__a.length) {
          G__28794__a[G__28794__i] = arguments[G__28794__i + 1];
          ++G__28794__i;
        }
        _ = new cljs.core.IndexedSeq(G__28794__a, 0);
      }
      return G__28793__delegate.call(this, rdr, _);
    };
    G__28793.cljs$lang$maxFixedArity = 1;
    G__28793.cljs$lang$applyTo = function(arglist__28795) {
      var rdr = cljs.core.first(arglist__28795);
      var _ = cljs.core.rest(arglist__28795);
      return G__28793__delegate(rdr, _);
    };
    G__28793.cljs$core$IFn$_invoke$arity$variadic = G__28793__delegate;
    return G__28793;
  }();
};
goog.provide("cljs.tools.reader");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.commons");
goog.require("goog.string");
goog.require("goog.array");
goog.require("cljs.tools.reader.reader_types");
goog.require("goog.string.StringBuffer");
goog.require("cljs.tools.reader.impl.utils");
goog.require("clojure.string");
cljs.tools.reader.macro_terminating_QMARK_ = function cljs$tools$reader$macro_terminating_QMARK_(ch) {
  var G__28814 = ch;
  switch(G__28814) {
    case '"':
    ;
    case ";":
    ;
    case "@":
    ;
    case "^":
    ;
    case "`":
    ;
    case "~":
    ;
    case "(":
    ;
    case ")":
    ;
    case "[":
    ;
    case "]":
    ;
    case "{":
    ;
    case "}":
    ;
    case "\\":
      return true;
      break;
    default:
      return false;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function cljs$tools$reader$read_token(rdr, initch) {
  if (initch == null) {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading");
  } else {
    cljs.tools.reader.sb.clear();
    var ch = initch;
    while (true) {
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
        if (ch == null) {
        } else {
          cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
        }
        return cljs.tools.reader.sb.toString();
      } else {
        cljs.tools.reader.sb.append(ch);
        var G__28816 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch = G__28816;
        continue;
      }
      break;
    }
  }
};
cljs.tools.reader.read_dispatch = function cljs$tools$reader$read_dispatch(rdr, _, opts, pending_forms) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.tools.reader.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var dm = temp__4655__auto____$1;
      return dm.call(null, rdr, ch, opts, pending_forms);
    } else {
      return cljs.tools.reader.read_tagged.call(null, function() {
        var G__28818 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__28818, ch);
        return G__28818;
      }(), ch, opts, pending_forms);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.read_unmatched_delimiter = function cljs$tools$reader$read_unmatched_delimiter(rdr, ch, opts, pending_forms) {
  return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.tools.reader.read_regex = function cljs$tools$reader$read_regex(rdr, ch, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if ('"' === ch__$1) {
      return cljs.core.re_pattern.call(null, [cljs.core.str(sb)].join(""));
    } else {
      if (ch__$1 == null) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading regex");
      } else {
        sb.append(ch__$1);
        if ("\\" === ch__$1) {
          var ch_28819__$2 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (ch_28819__$2 == null) {
            cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading regex");
          } else {
          }
          sb.append(ch_28819__$2);
        } else {
        }
        var G__28820 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch__$1 = G__28820;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.char_code = function cljs$tools$reader$char_code(ch, base) {
  var code = parseInt(ch, base);
  if (cljs.core.truth_(isNaN(code))) {
    return -1;
  } else {
    return code;
  }
};
cljs.tools.reader.read_unicode_char = function cljs$tools$reader$read_unicode_char(var_args) {
  var args28821 = [];
  var len__9707__auto___28824 = arguments.length;
  var i__9708__auto___28825 = 0;
  while (true) {
    if (i__9708__auto___28825 < len__9707__auto___28824) {
      args28821.push(arguments[i__9708__auto___28825]);
      var G__28826 = i__9708__auto___28825 + 1;
      i__9708__auto___28825 = G__28826;
      continue;
    } else {
    }
    break;
  }
  var G__28823 = args28821.length;
  switch(G__28823) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28821.length)].join(""));;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid unicode character: \\"), cljs.core.str(token)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.call(null, token, i))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
      } else {
        var G__28828 = i + 1;
        var G__28829 = d + uc * base;
        i = G__28828;
        uc = G__28829;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(initch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__8632__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__8632__auto__) {
            return or__8632__auto__;
          } else {
            var or__8632__auto____$1 = cljs.tools.reader.macros.call(null, ch);
            if (cljs.core.truth_(or__8632__auto____$1)) {
              return or__8632__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid character length: "), cljs.core.str(i), cljs.core.str(", should be: "), cljs.core.str(length)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(ch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            var G__28830 = i + 1;
            var G__28831 = d + uc * base;
            i = G__28830;
            uc = G__28831;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = "퟿".charCodeAt(0);
cljs.tools.reader.lower_limit = "".charCodeAt(0);
cljs.tools.reader.valid_octal_QMARK_ = function cljs$tools$reader$valid_octal_QMARK_(token, base) {
  return parseInt(token, base) <= 255;
};
cljs.tools.reader.read_char_STAR_ = function cljs$tools$reader$read_char_STAR_(rdr, backslash, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? [cljs.core.str(ch)].join("") : cljs.tools.reader.read_token.call(null, rdr, ch);
    var token_len = token.length;
    if (1 === token_len) {
      return token.charAt(0);
    } else {
      if (cljs.core._EQ_.call(null, token, "newline")) {
        return "\n";
      } else {
        if (cljs.core._EQ_.call(null, token, "space")) {
          return " ";
        } else {
          if (cljs.core._EQ_.call(null, token, "tab")) {
            return "\t";
          } else {
            if (cljs.core._EQ_.call(null, token, "backspace")) {
              return "\b";
            } else {
              if (cljs.core._EQ_.call(null, token, "formfeed")) {
                return "\f";
              } else {
                if (cljs.core._EQ_.call(null, token, "return")) {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt(0);
                    if (ic > cljs.tools.reader.upper_limit && ic < cljs.tools.reader.lower_limit) {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid character constant: \\u", c);
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid octal escape sequence length: ", len);
                      } else {
                        var offset = 1;
                        var base = 8;
                        var uc = cljs.tools.reader.read_unicode_char.call(null, token, offset, len, base);
                        if (cljs.core.not.call(null, cljs.tools.reader.valid_octal_QMARK_.call(null, cljs.core.subs.call(null, token, offset), base))) {
                          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported character: \\", token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.starting_line_col_info = function cljs$tools$reader$starting_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.ending_line_col_info = function cljs$tools$reader$ending_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr)], null);
  } else {
    return null;
  }
};
if (typeof cljs.tools.reader.READ_EOF !== "undefined") {
} else {
  cljs.tools.reader.READ_EOF = new Object;
}
if (typeof cljs.tools.reader.READ_FINISHED !== "undefined") {
} else {
  cljs.tools.reader.READ_FINISHED = new Object;
}
cljs.tools.reader._STAR_read_delim_STAR_ = false;
cljs.tools.reader.read_delimited_internal = function cljs$tools$reader$read_delimited_internal(delim, rdr, opts, pending_forms) {
  var vec__28835 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__28835, 0, null);
  var start_column = cljs.core.nth.call(null, vec__28835, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      if (form === cljs.tools.reader.READ_EOF) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading", cljs.core.truth_(start_line) ? [cljs.core.str(", starting at line "), cljs.core.str(start_line), cljs.core.str(" and column "), cljs.core.str(start_column)].join("") : null);
      } else {
        var G__28838 = cljs.core.conj_BANG_.call(null, a, form);
        a = G__28838;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_delimited = function cljs$tools$reader$read_delimited(delim, rdr, opts, pending_forms) {
  var _STAR_read_delim_STAR_28840 = cljs.tools.reader._STAR_read_delim_STAR_;
  cljs.tools.reader._STAR_read_delim_STAR_ = true;
  try {
    return cljs.tools.reader.read_delimited_internal.call(null, delim, rdr, opts, pending_forms);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = _STAR_read_delim_STAR_28840;
  }
};
cljs.tools.reader.read_list = function cljs$tools$reader$read_list(rdr, _, opts, pending_forms) {
  var vec__28847 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__28847, 0, null);
  var start_column = cljs.core.nth.call(null, vec__28847, 1, null);
  var the_list = cljs.tools.reader.read_delimited.call(null, ")", rdr, opts, pending_forms);
  var vec__28850 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__28850, 0, null);
  var end_column = cljs.core.nth.call(null, vec__28850, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.empty_QMARK_.call(null, the_list) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, the_list), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_vector = function cljs$tools$reader$read_vector(rdr, _, opts, pending_forms) {
  var vec__28859 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__28859, 0, null);
  var start_column = cljs.core.nth.call(null, vec__28859, 1, null);
  var the_vector = cljs.tools.reader.read_delimited.call(null, "]", rdr, opts, pending_forms);
  var vec__28862 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__28862, 0, null);
  var end_column = cljs.core.nth.call(null, vec__28862, 1, null);
  return cljs.core.with_meta.call(null, the_vector, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.duplicate_keys_error = function cljs$tools$reader$duplicate_keys_error(msg, coll) {
  var duplicates = function cljs$tools$reader$duplicate_keys_error_$_duplicates(seq) {
    var iter__9412__auto__ = function cljs$tools$reader$duplicate_keys_error_$_duplicates_$_iter__28977(s__28978) {
      return new cljs.core.LazySeq(null, function() {
        var s__28978__$1 = s__28978;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__28978__$1);
          if (temp__4657__auto__) {
            var s__28978__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28978__$2)) {
              var c__9410__auto__ = cljs.core.chunk_first.call(null, s__28978__$2);
              var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
              var b__28980 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
              if (function() {
                var i__28979 = 0;
                while (true) {
                  if (i__28979 < size__9411__auto__) {
                    var vec__28987 = cljs.core._nth.call(null, c__9410__auto__, i__28979);
                    var id = cljs.core.nth.call(null, vec__28987, 0, null);
                    var freq = cljs.core.nth.call(null, vec__28987, 1, null);
                    if (freq > 1) {
                      cljs.core.chunk_append.call(null, b__28980, id);
                      var G__28993 = i__28979 + 1;
                      i__28979 = G__28993;
                      continue;
                    } else {
                      var G__28994 = i__28979 + 1;
                      i__28979 = G__28994;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28980), cljs$tools$reader$duplicate_keys_error_$_duplicates_$_iter__28977.call(null, cljs.core.chunk_rest.call(null, s__28978__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28980), null);
              }
            } else {
              var vec__28990 = cljs.core.first.call(null, s__28978__$2);
              var id = cljs.core.nth.call(null, vec__28990, 0, null);
              var freq = cljs.core.nth.call(null, vec__28990, 1, null);
              if (freq > 1) {
                return cljs.core.cons.call(null, id, cljs$tools$reader$duplicate_keys_error_$_duplicates_$_iter__28977.call(null, cljs.core.rest.call(null, s__28978__$2)));
              } else {
                var G__28995 = cljs.core.rest.call(null, s__28978__$2);
                s__28978__$1 = G__28995;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__9412__auto__.call(null, cljs.core.frequencies.call(null, seq));
  };
  var dups = duplicates.call(null, coll);
  return cljs.core.apply.call(null, cljs.core.str, msg, cljs.core.count.call(null, dups) > 1 ? "s" : null, ": ", cljs.core.interpose.call(null, ", ", dups));
};
cljs.tools.reader.read_map = function cljs$tools$reader$read_map(rdr, _, opts, pending_forms) {
  var vec__29002 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__29002, 0, null);
  var start_column = cljs.core.nth.call(null, vec__29002, 1, null);
  var the_map = cljs.tools.reader.read_delimited.call(null, "}", rdr, opts, pending_forms);
  var map_count = cljs.core.count.call(null, the_map);
  var ks = cljs.core.take_nth.call(null, 2, the_map);
  var key_set = cljs.core.set.call(null, ks);
  var vec__29005 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__29005, 0, null);
  var end_column = cljs.core.nth.call(null, vec__29005, 1, null);
  if (cljs.core.odd_QMARK_.call(null, map_count)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, key_set), cljs.core.count.call(null, ks))) {
  } else {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, cljs.tools.reader.duplicate_keys_error.call(null, "Map literal contains duplicate key", ks));
  }
  return cljs.core.with_meta.call(null, map_count === 0 ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.to_array.call(null, the_map)), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_number = function cljs$tools$reader$read_number(rdr, initch) {
  var sb = function() {
    var G__29010 = new goog.string.StringBuffer;
    G__29010.append(initch);
    return G__29010;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__8632__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = cljs.tools.reader.macros.call(null, ch);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str(sb)].join("");
      cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
      var or__8632__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid number format [", s, "]");
      }
    } else {
      var G__29012 = function() {
        var G__29011 = sb;
        G__29011.append(ch);
        return G__29011;
      }();
      var G__29013 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      sb = G__29012;
      ch = G__29013;
      continue;
    }
    break;
  }
};
cljs.tools.reader.escape_char = function cljs$tools$reader$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__29015 = ch;
  switch(G__29015) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid unicode escape: \\u", ch__$1);
      } else {
        return cljs.tools.reader.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 223) {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported escape character: \\", ch);
      }
    ;
  }
};
cljs.tools.reader.read_string_STAR_ = function cljs$tools$reader$read_string_STAR_(reader, _, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF while reading string");
    } else {
      var G__29020 = ch;
      switch(G__29020) {
        case "\\":
          var G__29024 = function() {
            var G__29021 = sb;
            G__29021.append(cljs.tools.reader.escape_char.call(null, sb, reader));
            return G__29021;
          }();
          var G__29025 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__29024;
          ch = G__29025;
          continue;
          break;
        case '"':
          return [cljs.core.str(sb)].join("");
          break;
        default:
          var G__29026 = function() {
            var G__29022 = sb;
            G__29022.append(ch);
            return G__29022;
          }();
          var G__29027 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__29026;
          ch = G__29027;
          continue;
      }
    }
    break;
  }
};
cljs.tools.reader.loc_info = function cljs$tools$reader$loc_info(rdr, line, column) {
  if (line == null) {
    return null;
  } else {
    var file = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    var filem = file == null ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    var vec__29031 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
    var end_line = cljs.core.nth.call(null, vec__29031, 0, null);
    var end_column = cljs.core.nth.call(null, vec__29031, 1, null);
    var lcm = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null);
    return cljs.core.merge.call(null, filem, lcm);
  }
};
cljs.tools.reader.read_symbol = function cljs$tools$reader$read_symbol(rdr, initch) {
  var vec__29038 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var line = cljs.core.nth.call(null, vec__29038, 0, null);
  var column = cljs.core.nth.call(null, vec__29038, 1, null);
  var token = cljs.tools.reader.read_token.call(null, rdr, initch);
  if (token == null) {
    return null;
  } else {
    var G__29041 = token;
    switch(G__29041) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      case "NaN":
        return Number.NaN;
        break;
      case "-Infinity":
        return Number.NEGATIVE_INFINITY;
        break;
      case "Infinity":
      ;
      case "+Infinity":
        return Number.POSITIVE_INFINITY;
        break;
      default:
        var p = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
        if (!(p == null)) {
          var sym = cljs.core.symbol.call(null, cljs.core._nth.call(null, p, 0), cljs.core._nth.call(null, p, 1));
          return cljs.core._with_meta.call(null, sym, cljs.tools.reader.loc_info.call(null, rdr, line, column));
        } else {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid token: ", token);
        }
      ;
    }
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_ns = function cljs$tools$reader$resolve_ns(sym) {
  var or__8632__auto__ = cljs.core.get.call(null, cljs.tools.reader._STAR_alias_map_STAR_, sym);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    var temp__4657__auto__ = cljs.core.find_ns.call(null, sym);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var ns = temp__4657__auto__;
      return cljs.core.symbol.call(null, cljs.core.ns_name.call(null, ns));
    } else {
      return null;
    }
  }
};
cljs.tools.reader.read_keyword = function cljs$tools$reader$read_keyword(reader, initch, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.read_token.call(null, reader, ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (!(s == null)) {
      var ns = cljs.core._nth.call(null, s, 0);
      var name = cljs.core._nth.call(null, s, 1);
      if (":" === token.charAt(0)) {
        if (!(ns == null)) {
          var ns__$1 = cljs.tools.reader.resolve_ns.call(null, cljs.core.symbol.call(null, cljs.core.subs.call(null, ns, 1)));
          if (!(ns__$1 == null)) {
            return cljs.core.keyword.call(null, [cljs.core.str(ns__$1)].join(""), name);
          } else {
            return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
          }
        } else {
          return cljs.core.keyword.call(null, [cljs.core.str(cljs.core._STAR_ns_STAR_)].join(""), cljs.core.subs.call(null, name, 1));
        }
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :");
  }
};
cljs.tools.reader.wrapping_reader = function cljs$tools$reader$wrapping_reader(sym) {
  return function(rdr, _, opts, pending_forms) {
    var x__9466__auto__ = sym;
    return cljs.core._conj.call(null, function() {
      var x__9466__auto____$1 = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto____$1);
    }(), x__9466__auto__);
  };
};
cljs.tools.reader.read_meta = function cljs$tools$reader$read_meta(rdr, _, opts, pending_forms) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, rdr) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, rdr))) {
    return cljs.tools.reader.reader_types.log_source_STAR_.call(null, rdr, function() {
      var vec__29053 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
      var line = cljs.core.nth.call(null, vec__29053, 0, null);
      var column = cljs.core.nth.call(null, vec__29053, 1, null);
      var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      if (cljs.core.map_QMARK_.call(null, m)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata must be Symbol, Keyword, String or Map");
      }
      var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
        var m__$1 = cljs.core.truth_(function() {
          var and__8620__auto__ = line;
          if (cljs.core.truth_(and__8620__auto__)) {
            return cljs.core.seq_QMARK_.call(null, o);
          } else {
            return and__8620__auto__;
          }
        }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
        if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
          return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
        } else {
          return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata can only be applied to IMetas");
      }
    });
  } else {
    var vec__29058 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
    var line = cljs.core.nth.call(null, vec__29058, 0, null);
    var column = cljs.core.nth.call(null, vec__29058, 1, null);
    var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    if (cljs.core.map_QMARK_.call(null, m)) {
    } else {
      cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata must be Symbol, Keyword, String or Map");
    }
    var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
      var m__$1 = cljs.core.truth_(function() {
        var and__8620__auto__ = line;
        if (cljs.core.truth_(and__8620__auto__)) {
          return cljs.core.seq_QMARK_.call(null, o);
        } else {
          return and__8620__auto__;
        }
      }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
        return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
      } else {
        return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata can only be applied to IMetas");
    }
  }
};
cljs.tools.reader.read_set = function cljs$tools$reader$read_set(rdr, _, opts, pending_forms) {
  var vec__29069 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__29069, 0, null);
  var start_column = cljs.core.nth.call(null, vec__29069, 1, null);
  var start_column__$1 = cljs.core.truth_(start_column) ? start_column - 1 | 0 : null;
  var coll = cljs.tools.reader.read_delimited.call(null, "}", rdr, opts, pending_forms);
  var the_set = cljs.core.set.call(null, coll);
  var vec__29072 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__29072, 0, null);
  var end_column = cljs.core.nth.call(null, vec__29072, 1, null);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), cljs.core.count.call(null, the_set))) {
  } else {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, cljs.tools.reader.duplicate_keys_error.call(null, "Set literal contains duplicate key", coll));
  }
  return cljs.core.with_meta.call(null, the_set, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column__$1, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_discard = function cljs$tools$reader$read_discard(rdr, _, opts, pending_forms) {
  var G__29076 = rdr;
  cljs.tools.reader.read_STAR_.call(null, G__29076, true, null, opts, pending_forms);
  return G__29076;
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function cljs$tools$reader$has_feature_QMARK_(rdr, feature, opts) {
  if (feature instanceof cljs.core.Keyword) {
    return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), feature) || cljs.core.contains_QMARK_.call(null, cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "features", "features", -1146962336)), feature);
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, [cljs.core.str("Feature should be a keyword: "), cljs.core.str(feature)].join(""));
  }
};
cljs.tools.reader.check_eof_error = function cljs$tools$reader$check_eof_error(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_EOF) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading");
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading, starting at line ", first_line);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.check_reserved_features = function cljs$tools$reader$check_reserved_features(rdr, form) {
  if (cljs.core.truth_(cljs.core.get.call(null, cljs.tools.reader.RESERVED_FEATURES, form))) {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, [cljs.core.str("Feature name "), cljs.core.str(form), cljs.core.str(" is reserved")].join(""));
  } else {
    return null;
  }
};
cljs.tools.reader.check_invalid_read_cond = function cljs$tools$reader$check_invalid_read_cond(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_FINISHED) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "read-cond requires an even number of forms");
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, [cljs.core.str("read-cond starting on line "), cljs.core.str(first_line), cljs.core.str(" requires an even number of forms")].join(""));
    }
  } else {
    return null;
  }
};
cljs.tools.reader.read_suppress = function cljs$tools$reader$read_suppress(first_line, rdr, opts, pending_forms) {
  var _STAR_suppress_read_STAR_29078 = cljs.tools.reader._STAR_suppress_read_STAR_;
  cljs.tools.reader._STAR_suppress_read_STAR_ = true;
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
    cljs.tools.reader.check_eof_error.call(null, form, rdr, first_line);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.tools.reader.READ_FINISHED;
    } else {
      return null;
    }
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_29078;
  }
};
if (typeof cljs.tools.reader.NO_MATCH !== "undefined") {
} else {
  cljs.tools.reader.NO_MATCH = new Object;
}
cljs.tools.reader.match_feature = function cljs$tools$reader$match_feature(first_line, rdr, opts, pending_forms) {
  var feature = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
  cljs.tools.reader.check_eof_error.call(null, feature, rdr, first_line);
  if (cljs.core._EQ_.call(null, feature, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  } else {
    cljs.tools.reader.check_reserved_features.call(null, rdr, feature);
    if (cljs.core.truth_(cljs.tools.reader.has_feature_QMARK_.call(null, rdr, feature, opts))) {
      var G__29080 = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
      cljs.tools.reader.check_eof_error.call(null, G__29080, rdr, first_line);
      cljs.tools.reader.check_invalid_read_cond.call(null, G__29080, rdr, first_line);
      return G__29080;
    } else {
      var or__8632__auto__ = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return cljs.tools.reader.NO_MATCH;
      }
    }
  }
};
cljs.tools.reader.read_cond_delimited = function cljs$tools$reader$read_cond_delimited(rdr, splicing, opts, pending_forms) {
  var first_line = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) ? cljs.tools.reader.reader_types.get_line_number.call(null, rdr) : -1;
  var result = function() {
    var matched = cljs.tools.reader.NO_MATCH;
    var finished = null;
    while (true) {
      if (matched === cljs.tools.reader.NO_MATCH) {
        var match = cljs.tools.reader.match_feature.call(null, first_line, rdr, opts, pending_forms);
        if (match === cljs.tools.reader.READ_FINISHED) {
          return cljs.tools.reader.READ_FINISHED;
        } else {
          var G__29083 = match;
          var G__29084 = null;
          matched = G__29083;
          finished = G__29084;
          continue;
        }
      } else {
        if (!(finished === cljs.tools.reader.READ_FINISHED)) {
          var G__29085 = matched;
          var G__29086 = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
          matched = G__29085;
          finished = G__29086;
          continue;
        } else {
          return matched;
        }
      }
      break;
    }
  }();
  if (result === cljs.tools.reader.READ_FINISHED) {
    return rdr;
  } else {
    if (cljs.core.truth_(splicing)) {
      if (!(result == null) ? result.cljs$lang$protocol_mask$partition0$ & 16777216 || result.cljs$core$ISequential$ ? true : false : false) {
        goog.array.insertArrayAt(pending_forms, cljs.core.to_array.call(null, result), 0);
        return rdr;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Spliced form list in read-cond-splicing must implement java.util.List.");
      }
    } else {
      return result;
    }
  }
};
cljs.tools.reader.read_cond = function cljs$tools$reader$read_cond(rdr, _, opts, pending_forms) {
  if (cljs.core.not.call(null, function() {
    var and__8620__auto__ = opts;
    if (cljs.core.truth_(and__8620__auto__)) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), null, new cljs.core.Keyword(null, "allow", "allow", -1857325745), null], null), null)).call(null, (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
    } else {
      return and__8620__auto__;
    }
  }())) {
    throw cljs.core.ex_info.call(null, "Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
  } else {
  }
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var splicing = cljs.core._EQ_.call(null, ch, "@");
    var ch__$1 = splicing ? cljs.tools.reader.reader_types.read_char.call(null, rdr) : ch;
    if (splicing) {
      if (cljs.core.truth_(cljs.tools.reader._STAR_read_delim_STAR_)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.call(null, rdr, "cond-splice not in list");
      }
    } else {
    }
    var temp__4655__auto____$1 = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch__$1) ? cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr) : ch__$1;
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var ch__$2 = temp__4655__auto____$1;
      if (cljs.core.not_EQ_.call(null, ch__$2, "(")) {
        throw cljs.core.ex_info.call(null, "read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
      } else {
        var _STAR_suppress_read_STAR_29088 = cljs.tools.reader._STAR_suppress_read_STAR_;
        cljs.tools.reader._STAR_suppress_read_STAR_ = function() {
          var or__8632__auto__ = cljs.tools.reader._STAR_suppress_read_STAR_;
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
          }
        }();
        try {
          if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
            return cljs.tools.reader.impl.utils.reader_conditional.call(null, cljs.tools.reader.read_list.call(null, rdr, ch__$2, opts, pending_forms), splicing);
          } else {
            return cljs.tools.reader.read_cond_delimited.call(null, rdr, splicing, opts, pending_forms);
          }
        } finally {
          cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_29088;
        }
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function cljs$tools$reader$garg(n) {
  return cljs.core.symbol.call(null, [cljs.core.str(-1 === n ? "rest" : [cljs.core.str("p"), cljs.core.str(n)].join("")), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id.call(null)), cljs.core.str("#")].join(""));
};
cljs.tools.reader.read_fn = function cljs$tools$reader$read_fn(rdr, _, opts, pending_forms) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.call(null, "Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var arg_env29091 = cljs.tools.reader.arg_env;
  cljs.tools.reader.arg_env = cljs.core.sorted_map.call(null);
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, function() {
      var G__29092 = rdr;
      cljs.tools.reader.reader_types.unread.call(null, G__29092, "(");
      return G__29092;
    }(), true, null, opts, pending_forms);
    var rargs = cljs.core.rseq.call(null, cljs.tools.reader.arg_env);
    var args = rargs ? function() {
      var higharg = cljs.core.key.call(null, cljs.core.first.call(null, rargs));
      var args = function() {
        var i = 1;
        var args = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
        while (true) {
          if (i > higharg) {
            return cljs.core.persistent_BANG_.call(null, args);
          } else {
            var G__29093 = i + 1;
            var G__29094 = cljs.core.conj_BANG_.call(null, args, function() {
              var or__8632__auto__ = cljs.core.get.call(null, cljs.tools.reader.arg_env, i);
              if (cljs.core.truth_(or__8632__auto__)) {
                return or__8632__auto__;
              } else {
                return cljs.tools.reader.garg.call(null, i);
              }
            }());
            i = G__29093;
            args = G__29094;
            continue;
          }
          break;
        }
      }();
      var args__$1 = cljs.core.truth_(cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.call(null, args, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.tools.reader.arg_env.call(null, -1)) : args;
      return args__$1;
    }() : cljs.core.PersistentVector.EMPTY;
    return cljs.core._conj.call(null, function() {
      var x__9466__auto__ = args;
      return cljs.core._conj.call(null, function() {
        var x__9466__auto____$1 = form;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto____$1);
      }(), x__9466__auto__);
    }(), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null));
  } finally {
    cljs.tools.reader.arg_env = arg_env29091;
  }
};
cljs.tools.reader.register_arg = function cljs$tools$reader$register_arg(n) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var temp__4655__auto__ = cljs.tools.reader.arg_env.call(null, n);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var ret = temp__4655__auto__;
      return ret;
    } else {
      var g = cljs.tools.reader.garg.call(null, n);
      cljs.tools.reader.arg_env = cljs.core.assoc.call(null, cljs.tools.reader.arg_env, n, g);
      return g;
    }
  } else {
    throw cljs.core.ex_info.call(null, "Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
};
cljs.tools.reader.read_arg = function cljs$tools$reader$read_arg(rdr, pct, opts, pending_forms) {
  if (cljs.tools.reader.arg_env == null) {
    return cljs.tools.reader.read_symbol.call(null, rdr, pct);
  } else {
    var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
      return cljs.tools.reader.register_arg.call(null, 1);
    } else {
      if (cljs.core._EQ_.call(null, ch, "\x26")) {
        cljs.tools.reader.reader_types.read_char.call(null, rdr);
        return cljs.tools.reader.register_arg.call(null, -1);
      } else {
        var n = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
        if (!cljs.core.integer_QMARK_.call(null, n)) {
          throw cljs.core.ex_info.call(null, "Arg literal must be %, %\x26 or %integer", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
        } else {
          return cljs.tools.reader.register_arg.call(null, n);
        }
      }
    }
  }
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function cljs$tools$reader$read_unquote(rdr, comma, opts, pending_forms) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    if (cljs.core._EQ_.call(null, "@", ch)) {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null)).call(null, function() {
        var G__29096 = rdr;
        cljs.tools.reader.reader_types.read_char.call(null, G__29096);
        return G__29096;
      }(), "@", opts, pending_forms);
    } else {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null)).call(null, rdr, "~", opts, pending_forms);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.unquote_splicing_QMARK_ = function cljs$tools$reader$unquote_splicing_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null));
};
cljs.tools.reader.unquote_QMARK_ = function cljs$tools$reader$unquote_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null));
};
cljs.tools.reader.expand_list = function cljs$tools$reader$expand_list(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  var r = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s__$1) {
      var item = cljs.core.first.call(null, s__$1);
      var ret = cljs.core.conj_BANG_.call(null, r, cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, item)) ? cljs.core._conj.call(null, function() {
        var x__9466__auto__ = cljs.core.second.call(null, item);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
      }(), new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null)) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, item)) ? cljs.core.second.call(null, item) : cljs.core._conj.call(null, function() {
        var x__9466__auto__ = cljs.tools.reader.syntax_quote_STAR_.call(null, item);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
      }(), new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null)));
      var G__29097 = cljs.core.next.call(null, s__$1);
      var G__29098 = ret;
      s__$1 = G__29097;
      r = G__29098;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, r));
    }
    break;
  }
};
cljs.tools.reader.flatten_map = function cljs$tools$reader$flatten_map(form) {
  var s = cljs.core.seq.call(null, form);
  var key_vals = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__29099 = cljs.core.next.call(null, s);
      var G__29100 = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, key_vals, cljs.core.key.call(null, e)), cljs.core.val.call(null, e));
      s = G__29099;
      key_vals = G__29100;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, key_vals));
    }
    break;
  }
};
cljs.tools.reader.register_gensym = function cljs$tools$reader$register_gensym(sym) {
  if (cljs.core.not.call(null, cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.call(null, "Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var or__8632__auto__ = cljs.core.get.call(null, cljs.tools.reader.gensym_env, sym);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    var gs = cljs.core.symbol.call(null, [cljs.core.str(cljs.core.subs.call(null, cljs.core.name.call(null, sym), 0, cljs.core.count.call(null, cljs.core.name.call(null, sym)) - 1)), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id.call(null)), cljs.core.str("__auto__")].join(""));
    cljs.tools.reader.gensym_env = cljs.core.assoc.call(null, cljs.tools.reader.gensym_env, sym, gs);
    return gs;
  }
};
cljs.tools.reader.add_meta = function cljs$tools$reader$add_meta(form, ret) {
  if (function() {
    var and__8620__auto__ = !(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 262144 || form.cljs$core$IWithMeta$ ? true : false : false;
    if (and__8620__auto__) {
      return cljs.core.seq.call(null, cljs.core.dissoc.call(null, cljs.core.meta.call(null, form), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "source", "source", -433931539)));
    } else {
      return and__8620__auto__;
    }
  }()) {
    return cljs.core._conj.call(null, function() {
      var x__9466__auto__ = ret;
      return cljs.core._conj.call(null, function() {
        var x__9466__auto____$1 = cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.core.meta.call(null, form));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto____$1);
      }(), x__9466__auto__);
    }(), new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null));
  } else {
    return ret;
  }
};
cljs.tools.reader.syntax_quote_coll = function cljs$tools$reader$syntax_quote_coll(type, coll) {
  var res = cljs.core._conj.call(null, function() {
    var x__9466__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null), cljs.tools.reader.expand_list.call(null, coll));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null));
  if (cljs.core.truth_(type)) {
    return cljs.core._conj.call(null, function() {
      var x__9466__auto__ = type;
      return cljs.core._conj.call(null, function() {
        var x__9466__auto____$1 = res;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto____$1);
      }(), x__9466__auto__);
    }(), new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null));
  } else {
    return res;
  }
};
cljs.tools.reader.map_func = function cljs$tools$reader$map_func(coll) {
  if (cljs.core.count.call(null, coll) >= 16) {
    return new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null);
  } else {
    return new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
  }
};
cljs.tools.reader.bool_QMARK_ = function cljs$tools$reader$bool_QMARK_(x) {
  return x instanceof Boolean || x === true || x === false;
};
cljs.tools.reader.resolve_symbol = function cljs$tools$reader$resolve_symbol(s) {
  throw cljs.core.ex_info.call(null, "resolve-symbol is not implemented", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), s], null));
};
cljs.tools.reader.syntax_quote_STAR_ = function cljs$tools$reader$syntax_quote_STAR_(form) {
  return cljs.tools.reader.add_meta.call(null, form, cljs.core.special_symbol_QMARK_.call(null, form) ? cljs.core._conj.call(null, function() {
    var x__9466__auto__ = form;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)) : form instanceof cljs.core.Symbol ? cljs.core._conj.call(null, function() {
    var x__9466__auto__ = cljs.core.truth_(function() {
      var and__8620__auto__ = cljs.core.not.call(null, cljs.core.namespace.call(null, form));
      if (and__8620__auto__) {
        return goog.string.endsWith(cljs.core.name.call(null, form), "#");
      } else {
        return and__8620__auto__;
      }
    }()) ? cljs.tools.reader.register_gensym.call(null, form) : cljs.tools.reader.resolve_symbol.call(null, form);
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)) : cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, form)) ? cljs.core.second.call(null, form) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, form)) ? function() {
    throw cljs.core.ex_info.call(null, "unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }() : cljs.core.coll_QMARK_.call(null, form) ? (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 67108864 || form.cljs$core$IRecord$ ? true : false : false) ? form : cljs.core.map_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, cljs.tools.reader.map_func.call(null, form), cljs.tools.reader.flatten_map.call(null, form)) : cljs.core.vector_QMARK_.call(null, form) ? cljs.core._conj.call(null, function() {
    var x__9466__auto__ = cljs.tools.reader.syntax_quote_coll.call(null, null, form);
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), new cljs.core.Symbol("cljs.core", "vec", "cljs.core/vec", 307622519, null)) : cljs.core.set_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null), form) : cljs.core.seq_QMARK_.call(null, form) || cljs.core.list_QMARK_.call(null, form) ? function() {
    var seq = cljs.core.seq.call(null, form);
    if (seq) {
      return cljs.tools.reader.syntax_quote_coll.call(null, null, seq);
    } else {
      return cljs.core.list(new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null));
    }
  }() : function() {
    throw cljs.core.ex_info.call(null, "Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953)], null));
  }() : cljs.core.truth_(function() {
    var or__8632__auto__ = form instanceof cljs.core.Keyword;
    if (or__8632__auto__) {
      return or__8632__auto__;
    } else {
      var or__8632__auto____$1 = typeof form === "number";
      if (or__8632__auto____$1) {
        return or__8632__auto____$1;
      } else {
        var or__8632__auto____$2 = typeof form === "string";
        if (or__8632__auto____$2) {
          return or__8632__auto____$2;
        } else {
          var or__8632__auto____$3 = form == null;
          if (or__8632__auto____$3) {
            return or__8632__auto____$3;
          } else {
            var or__8632__auto____$4 = cljs.tools.reader.bool_QMARK_.call(null, form);
            if (cljs.core.truth_(or__8632__auto____$4)) {
              return or__8632__auto____$4;
            } else {
              return form instanceof RegExp;
            }
          }
        }
      }
    }
  }()) ? form : cljs.core._conj.call(null, function() {
    var x__9466__auto__ = form;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)));
};
cljs.tools.reader.read_syntax_quote = function cljs$tools$reader$read_syntax_quote(rdr, backquote, opts, pending_forms) {
  var gensym_env29108 = cljs.tools.reader.gensym_env;
  cljs.tools.reader.gensym_env = cljs.core.PersistentArrayMap.EMPTY;
  try {
    return cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } finally {
    cljs.tools.reader.gensym_env = gensym_env29108;
  }
};
cljs.tools.reader.read_namespaced_map = function cljs$tools$reader$read_namespaced_map(rdr, _, opts, pending_forms) {
  var token = cljs.tools.reader.read_token.call(null, rdr, cljs.tools.reader.reader_types.read_char.call(null, rdr));
  var temp__4655__auto__ = cljs.core._EQ_.call(null, token, ":") ? cljs.core.ns_name.call(null, cljs.core._STAR_ns_STAR_) : cljs.core._EQ_.call(null, ":", cljs.core.first.call(null, token)) ? function() {
    var G__29111 = token;
    var G__29111__$1 = G__29111 == null ? null : cljs.core.subs.call(null, G__29111, 1);
    var G__29111__$2 = G__29111__$1 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__29111__$1);
    var G__29111__$3 = G__29111__$2 == null ? null : cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__29111__$2);
    var G__29111__$4 = G__29111__$3 == null ? null : cljs.core.symbol.call(null, G__29111__$3);
    if (G__29111__$4 == null) {
      return null;
    } else {
      return cljs.tools.reader.resolve_ns.call(null, G__29111__$4);
    }
  }() : function() {
    var G__29112 = token;
    var G__29112__$1 = G__29112 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__29112);
    if (G__29112__$1 == null) {
      return null;
    } else {
      return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__29112__$1);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ns = temp__4655__auto__;
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (ch === "{") {
      var items = cljs.tools.reader.read_delimited.call(null, "}", rdr, opts, pending_forms);
      if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, items))) {
        cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
      } else {
      }
      var keys = cljs.core.take_nth.call(null, 2, items);
      var vals = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, items));
      return cljs.core.zipmap.call(null, cljs.tools.reader.impl.utils.namespace_keys.call(null, [cljs.core.str(ns)].join(""), keys), vals);
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Namespaced map must specify a map");
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid token used as namespace in namespaced map: ", token);
  }
};
cljs.tools.reader.macros = function cljs$tools$reader$macros(ch) {
  var G__29114 = ch;
  switch(G__29114) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
      break;
    case "@":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null));
      break;
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
      break;
    case "~":
      return cljs.tools.reader.read_unquote;
      break;
    case "(":
      return cljs.tools.reader.read_list;
      break;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.read_vector;
      break;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.read_map;
      break;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
      break;
    case "%":
      return cljs.tools.reader.read_arg;
      break;
    case "#":
      return cljs.tools.reader.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function cljs$tools$reader$dispatch_macros(ch) {
  var G__29117 = ch;
  switch(G__29117) {
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "var", "var", 870848730, null));
      break;
    case "(":
      return cljs.tools.reader.read_fn;
      break;
    case "{":
      return cljs.tools.reader.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "\x3d":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "read-eval not supported");
      break;
    case '"':
      return cljs.tools.reader.read_regex;
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.read_discard;
      break;
    case "?":
      return cljs.tools.reader.read_cond;
      break;
    case ":":
      return cljs.tools.reader.read_namespaced_map;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.read_tagged = function cljs$tools$reader$read_tagged(rdr, initch, opts, pending_forms) {
  var tag = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Reader tag must be a symbol");
  } else {
  }
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } else {
    var temp__4655__auto__ = function() {
      var or__8632__auto__ = cljs.tools.reader._STAR_data_readers_STAR_.call(null, tag);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return cljs.tools.reader.default_data_readers.call(null, tag);
      }
    }();
    if (cljs.core.truth_(temp__4655__auto__)) {
      var f = temp__4655__auto__;
      return f.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    } else {
      var temp__4655__auto____$1 = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
      if (cljs.core.truth_(temp__4655__auto____$1)) {
        var f = temp__4655__auto____$1;
        return f.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "No reader function for tag ", cljs.core.name.call(null, tag));
      }
    }
  }
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = false;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function cljs$tools$reader$read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  while (true) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader))) {
      return cljs.tools.reader.reader_types.log_source_STAR_.call(null, reader, function() {
        while (true) {
          if (!goog.array.isEmpty(pending_forms)) {
            var form = pending_forms[0];
            goog.array.removeAt(pending_forms, 0);
            return form;
          } else {
            var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
            if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
              continue;
            } else {
              if (ch == null) {
                if (eof_error_QMARK_) {
                  return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF");
                } else {
                  return sentinel;
                }
              } else {
                if (ch === return_on) {
                  return cljs.tools.reader.READ_FINISHED;
                } else {
                  if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                    return cljs.tools.reader.read_number.call(null, reader, ch);
                  } else {
                    var f = cljs.tools.reader.macros.call(null, ch);
                    if (!(f == null)) {
                      var res = f.call(null, reader, ch, opts, pending_forms);
                      if (res === reader) {
                        continue;
                      } else {
                        return res;
                      }
                    } else {
                      return cljs.tools.reader.read_symbol.call(null, reader, ch);
                    }
                  }
                }
              }
            }
          }
          break;
        }
      });
    } else {
      if (!goog.array.isEmpty(pending_forms)) {
        var form = pending_forms[0];
        goog.array.removeAt(pending_forms, 0);
        return form;
      } else {
        var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
          continue;
        } else {
          if (ch == null) {
            if (eof_error_QMARK_) {
              return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF");
            } else {
              return sentinel;
            }
          } else {
            if (ch === return_on) {
              return cljs.tools.reader.READ_FINISHED;
            } else {
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                return cljs.tools.reader.read_number.call(null, reader, ch);
              } else {
                var f = cljs.tools.reader.macros.call(null, ch);
                if (!(f == null)) {
                  var res = f.call(null, reader, ch, opts, pending_forms);
                  if (res === reader) {
                    continue;
                  } else {
                    return res;
                  }
                } else {
                  return cljs.tools.reader.read_symbol.call(null, reader, ch);
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.tools.reader.read_STAR_ = function cljs$tools$reader$read_STAR_(var_args) {
  var args29119 = [];
  var len__9707__auto___29123 = arguments.length;
  var i__9708__auto___29124 = 0;
  while (true) {
    if (i__9708__auto___29124 < len__9707__auto___29123) {
      args29119.push(arguments[i__9708__auto___29124]);
      var G__29125 = i__9708__auto___29124 + 1;
      i__9708__auto___29124 = G__29125;
      continue;
    } else {
    }
    break;
  }
  var G__29121 = args29119.length;
  switch(G__29121) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29119.length)].join(""));;
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(reader, eof_error_QMARK_, sentinel, opts, pending_forms) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, opts, pending_forms);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  try {
    return cljs.tools.reader.read_STAR__internal.call(null, reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms);
  } catch (e29122) {
    if (e29122 instanceof Error) {
      var e = e29122;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e29122;
    }
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function cljs$tools$reader$read(var_args) {
  var args29127 = [];
  var len__9707__auto___29133 = arguments.length;
  var i__9708__auto___29134 = 0;
  while (true) {
    if (i__9708__auto___29134 < len__9707__auto___29133) {
      args29127.push(arguments[i__9708__auto___29134]);
      var G__29135 = i__9708__auto___29134 + 1;
      i__9708__auto___29134 = G__29135;
      continue;
    } else {
    }
    break;
  }
  var G__29129 = args29127.length;
  switch(G__29129) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29127.length)].join(""));;
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.read.call(null, reader, true, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__29130, reader) {
  var map__29131 = p__29130;
  var map__29131__$1 = (!(map__29131 == null) ? map__29131.cljs$lang$protocol_mask$partition0$ & 64 || map__29131.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29131) : map__29131;
  var opts = map__29131__$1;
  var eof = cljs.core.get.call(null, map__29131__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237), new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531));
  return cljs.tools.reader.read_STAR_.call(null, reader, cljs.core._EQ_.call(null, eof, new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531)), eof, null, opts, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(reader, eof_error_QMARK_, sentinel) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function cljs$tools$reader$read_string(var_args) {
  var args29137 = [];
  var len__9707__auto___29140 = arguments.length;
  var i__9708__auto___29141 = 0;
  while (true) {
    if (i__9708__auto___29141 < len__9707__auto___29140) {
      args29137.push(arguments[i__9708__auto___29141]);
      var G__29142 = i__9708__auto___29141 + 1;
      i__9708__auto___29141 = G__29142;
      continue;
    } else {
    }
    break;
  }
  var G__29139 = args29137.length;
  switch(G__29139) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29137.length)].join(""));;
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.read_string.call(null, cljs.core.PersistentArrayMap.EMPTY, s);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = s;
    if (cljs.core.truth_(and__8620__auto__)) {
      return !(s === "");
    } else {
      return and__8620__auto__;
    }
  }())) {
    return cljs.tools.reader.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.tools.reader.edn");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
goog.require("cljs.tools.reader.impl.commons");
goog.require("cljs.tools.reader");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.edn.macro_terminating_QMARK_ = function cljs$tools$reader$edn$macro_terminating_QMARK_(ch) {
  var and__8620__auto__ = !("#" === ch);
  if (and__8620__auto__) {
    var and__8620__auto____$1 = !("'" === ch);
    if (and__8620__auto____$1) {
      var and__8620__auto____$2 = !(":" === ch);
      if (and__8620__auto____$2) {
        return cljs.tools.reader.edn.macros.call(null, ch);
      } else {
        return and__8620__auto____$2;
      }
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
cljs.tools.reader.edn.not_constituent_QMARK_ = function cljs$tools$reader$edn$not_constituent_QMARK_(ch) {
  return "@" === ch || "`" === ch || "~" === ch;
};
cljs.tools.reader.edn.read_token = function cljs$tools$reader$edn$read_token(var_args) {
  var args29146 = [];
  var len__9707__auto___29150 = arguments.length;
  var i__9708__auto___29151 = 0;
  while (true) {
    if (i__9708__auto___29151 < len__9707__auto___29150) {
      args29146.push(arguments[i__9708__auto___29151]);
      var G__29152 = i__9708__auto___29151 + 1;
      i__9708__auto___29151 = G__29152;
      continue;
    } else {
    }
    break;
  }
  var G__29148 = args29146.length;
  switch(G__29148) {
    case 2:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29146.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$2 = function(rdr, initch) {
  return cljs.tools.reader.edn.read_token.call(null, rdr, initch, true);
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3 = function(rdr, initch, validate_leading_QMARK_) {
  if (cljs.core.not.call(null, initch)) {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading");
  } else {
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = validate_leading_QMARK_;
      if (cljs.core.truth_(and__8620__auto__)) {
        return cljs.tools.reader.edn.not_constituent_QMARK_.call(null, initch);
      } else {
        return and__8620__auto__;
      }
    }())) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid leading character: ", initch);
    } else {
      var sb = new goog.string.StringBuffer;
      var ch = function() {
        cljs.tools.reader.reader_types.unread.call(null, rdr, initch);
        return initch;
      }();
      while (true) {
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || ch == null) {
          return [cljs.core.str(sb)].join("");
        } else {
          if (cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch)) {
            return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid constituent character: ", ch);
          } else {
            var G__29154 = function() {
              var G__29149 = sb;
              G__29149.append(cljs.tools.reader.reader_types.read_char.call(null, rdr));
              return G__29149;
            }();
            var G__29155 = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
            sb = G__29154;
            ch = G__29155;
            continue;
          }
        }
        break;
      }
    }
  }
};
cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.edn.read_dispatch = function cljs$tools$reader$edn$read_dispatch(rdr, _, opts) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.tools.reader.edn.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var dm = temp__4655__auto____$1;
      return dm.call(null, rdr, ch, opts);
    } else {
      var temp__4655__auto____$2 = cljs.tools.reader.edn.read_tagged.call(null, function() {
        var G__29157 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__29157, ch);
        return G__29157;
      }(), ch, opts);
      if (cljs.core.truth_(temp__4655__auto____$2)) {
        var obj = temp__4655__auto____$2;
        return obj;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "No dispatch macro for ", ch);
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.edn.read_unmatched_delimiter = function cljs$tools$reader$edn$read_unmatched_delimiter(rdr, ch, opts) {
  return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.tools.reader.edn.read_unicode_char = function cljs$tools$reader$edn$read_unicode_char(var_args) {
  var args29158 = [];
  var len__9707__auto___29161 = arguments.length;
  var i__9708__auto___29162 = 0;
  while (true) {
    if (i__9708__auto___29162 < len__9707__auto___29161) {
      args29158.push(arguments[i__9708__auto___29162]);
      var G__29163 = i__9708__auto___29162 + 1;
      i__9708__auto___29162 = G__29163;
      continue;
    } else {
    }
    break;
  }
  var G__29160 = args29158.length;
  switch(G__29160) {
    case 4:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29158.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid unicode character: \\"), cljs.core.str(token)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.call(null, token, i))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
      } else {
        var G__29165 = i + 1;
        var G__29166 = d + uc * base;
        i = G__29165;
        uc = G__29166;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(initch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__8632__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__8632__auto__) {
            return or__8632__auto__;
          } else {
            var or__8632__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(or__8632__auto____$1)) {
              return or__8632__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid character length: "), cljs.core.str(i), cljs.core.str(", should be: "), cljs.core.str(length)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(ch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            var G__29167 = i + 1;
            var G__29168 = d + uc * base;
            i = G__29167;
            uc = G__29168;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.edn.upper_limit = "퟿" | 0;
cljs.tools.reader.edn.lower_limit = "" | 0;
cljs.tools.reader.edn.read_char_STAR_ = function cljs$tools$reader$edn$read_char_STAR_(rdr, backslash, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? [cljs.core.str(ch)].join("") : cljs.tools.reader.edn.read_token.call(null, rdr, ch, false);
    var token_len = cljs.core.count.call(null, token);
    if (1 === token_len) {
      return cljs.core.nth.call(null, token, 0);
    } else {
      if (token === "newline") {
        return "\n";
      } else {
        if (token === "space") {
          return " ";
        } else {
          if (token === "tab") {
            return "\t";
          } else {
            if (token === "backspace") {
              return "\b";
            } else {
              if (token === "formfeed") {
                return "\f";
              } else {
                if (token === "return") {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt();
                    if (ic > cljs.tools.reader.edn.upper_limit && ic < cljs.tools.reader.edn.lower_limit) {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid character constant: \\u", c);
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid octal escape sequence length: ", len);
                      } else {
                        var uc = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, len, 8);
                        if ((uc | 0) > 255) {
                          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported character: \\", token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.edn.read_delimited = function cljs$tools$reader$edn$read_delimited(delim, rdr, opts) {
  var first_line = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) ? cljs.tools.reader.reader_types.get_line_number.call(null, rdr) : null;
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading", cljs.core.truth_(first_line) ? [cljs.core.str(", starting at line"), cljs.core.str(first_line)].join("") : null);
    }
    if (cljs.core._EQ_.call(null, delim__$1, cljs.tools.reader.impl.utils.char$.call(null, ch))) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4655__auto__ = cljs.tools.reader.edn.macros.call(null, ch);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var macrofn = temp__4655__auto__;
        var mret = macrofn.call(null, rdr, ch, opts);
        var G__29171 = !(mret === rdr) ? cljs.core.conj_BANG_.call(null, a, mret) : a;
        a = G__29171;
        continue;
      } else {
        var o = cljs.tools.reader.edn.read.call(null, function() {
          var G__29170 = rdr;
          cljs.tools.reader.reader_types.unread.call(null, G__29170, ch);
          return G__29170;
        }(), true, null, opts);
        var G__29172 = !(o === rdr) ? cljs.core.conj_BANG_.call(null, a, o) : a;
        a = G__29172;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_list = function cljs$tools$reader$edn$read_list(rdr, _, opts) {
  var the_list = cljs.tools.reader.edn.read_delimited.call(null, ")", rdr, opts);
  if (cljs.core.empty_QMARK_.call(null, the_list)) {
    return cljs.core.List.EMPTY;
  } else {
    return cljs.core.apply.call(null, cljs.core.list, the_list);
  }
};
cljs.tools.reader.edn.read_vector = function cljs$tools$reader$edn$read_vector(rdr, _, opts) {
  return cljs.tools.reader.edn.read_delimited.call(null, "]", rdr, opts);
};
cljs.tools.reader.edn.read_map = function cljs$tools$reader$edn$read_map(rdr, _, opts) {
  var l = cljs.core.to_array.call(null, cljs.tools.reader.edn.read_delimited.call(null, "}", rdr, opts));
  if (1 === (l.length & 1)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.tools.reader.edn.read_number = function cljs$tools$reader$edn$read_number(reader, initch, opts) {
  var sb = function() {
    var G__29175 = new goog.string.StringBuffer;
    G__29175.append(initch);
    return G__29175;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__8632__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str(sb)].join("");
      cljs.tools.reader.reader_types.unread.call(null, reader, ch);
      var or__8632__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__29177 = function() {
        var G__29176 = sb;
        G__29176.append(ch);
        return G__29176;
      }();
      var G__29178 = cljs.tools.reader.reader_types.read_char.call(null, reader);
      sb = G__29177;
      ch = G__29178;
      continue;
    }
    break;
  }
};
cljs.tools.reader.edn.escape_char = function cljs$tools$reader$edn$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__29180 = ch;
  switch(G__29180) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid unicode escape: \\u", ch__$1);
      } else {
        return cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 223) {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported escape character: \\", ch);
      }
    ;
  }
};
cljs.tools.reader.edn.read_string_STAR_ = function cljs$tools$reader$edn$read_string_STAR_(reader, _, opts) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    var G__29185 = ch;
    if (cljs.core._EQ_.call(null, null, G__29185)) {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF while reading string");
    } else {
      if (cljs.core._EQ_.call(null, "\\", G__29185)) {
        var G__29188 = function() {
          var G__29186 = sb;
          G__29186.append(cljs.tools.reader.edn.escape_char.call(null, sb, reader));
          return G__29186;
        }();
        var G__29189 = cljs.tools.reader.reader_types.read_char.call(null, reader);
        sb = G__29188;
        ch = G__29189;
        continue;
      } else {
        if (cljs.core._EQ_.call(null, '"', G__29185)) {
          return [cljs.core.str(sb)].join("");
        } else {
          var G__29190 = function() {
            var G__29187 = sb;
            G__29187.append(ch);
            return G__29187;
          }();
          var G__29191 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__29190;
          ch = G__29191;
          continue;
        }
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_symbol = function cljs$tools$reader$edn$read_symbol(rdr, initch) {
  var temp__4657__auto__ = cljs.tools.reader.edn.read_token.call(null, rdr, initch);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var token = temp__4657__auto__;
    var G__29193 = token;
    switch(G__29193) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      case "NaN":
        return Number.NaN;
        break;
      case "-Infinity":
        return Number.NEGATIVE_INFINITY;
        break;
      case "Infinity":
      ;
      case "+Infinity":
        return Number.POSITIVE_INFINITY;
        break;
      default:
        var or__8632__auto__ = function() {
          var temp__4657__auto____$1 = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
          if (cljs.core.truth_(temp__4657__auto____$1)) {
            var p = temp__4657__auto____$1;
            return cljs.core.symbol.call(null, p.call(null, 0), p.call(null, 1));
          } else {
            return null;
          }
        }();
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid token: ", token);
        }
      ;
    }
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_keyword = function cljs$tools$reader$edn$read_keyword(reader, initch, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.edn.read_token.call(null, reader, ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = s;
      if (cljs.core.truth_(and__8620__auto__)) {
        return -1 === token.indexOf("::");
      } else {
        return and__8620__auto__;
      }
    }())) {
      var ns = s.call(null, 0);
      var name = s.call(null, 1);
      if (":" === cljs.core.nth.call(null, token, 0)) {
        return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :");
  }
};
cljs.tools.reader.edn.wrapping_reader = function cljs$tools$reader$edn$wrapping_reader(sym) {
  return function(rdr, _, opts) {
    var x__9466__auto__ = sym;
    return cljs.core._conj.call(null, function() {
      var x__9466__auto____$1 = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto____$1);
    }(), x__9466__auto__);
  };
};
cljs.tools.reader.edn.read_meta = function cljs$tools$reader$edn$read_meta(rdr, _, opts) {
  var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.edn.read.call(null, rdr, true, null, opts));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata must be Symbol, Keyword, String or Map");
  }
  var o = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata can only be applied to IMetas");
  }
};
cljs.tools.reader.edn.read_set = function cljs$tools$reader$edn$read_set(rdr, _, opts) {
  return cljs.core.set.call(null, cljs.tools.reader.edn.read_delimited.call(null, "}", rdr, opts));
};
cljs.tools.reader.edn.read_discard = function cljs$tools$reader$edn$read_discard(rdr, _, opts) {
  var G__29198 = rdr;
  cljs.tools.reader.edn.read.call(null, G__29198, true, null, true);
  return G__29198;
};
cljs.tools.reader.edn.read_namespaced_map = function cljs$tools$reader$edn$read_namespaced_map(rdr, _, opts) {
  var token = cljs.tools.reader.edn.read_token.call(null, rdr, cljs.tools.reader.reader_types.read_char.call(null, rdr));
  var temp__4655__auto__ = function() {
    var G__29200 = token;
    var G__29200__$1 = G__29200 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__29200);
    if (G__29200__$1 == null) {
      return null;
    } else {
      return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__29200__$1);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ns = temp__4655__auto__;
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (ch === "{") {
      var items = cljs.tools.reader.edn.read_delimited.call(null, "}", rdr, opts);
      if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, items))) {
        cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
      } else {
      }
      var keys = cljs.core.take_nth.call(null, 2, items);
      var vals = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, items));
      return cljs.core.zipmap.call(null, cljs.tools.reader.impl.utils.namespace_keys.call(null, [cljs.core.str(ns)].join(""), keys), vals);
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Namespaced map must specify a map");
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid token used as namespace in namespaced map: ", token);
  }
};
cljs.tools.reader.edn.macros = function cljs$tools$reader$edn$macros(ch) {
  var G__29202 = ch;
  switch(G__29202) {
    case '"':
      return cljs.tools.reader.edn.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.edn.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "(":
      return cljs.tools.reader.edn.read_list;
      break;
    case ")":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.edn.read_vector;
      break;
    case "]":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.edn.read_map;
      break;
    case "}":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.edn.read_char_STAR_;
      break;
    case "#":
      return cljs.tools.reader.edn.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.dispatch_macros = function cljs$tools$reader$edn$dispatch_macros(ch) {
  var G__29205 = ch;
  switch(G__29205) {
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "{":
      return cljs.tools.reader.edn.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.edn.read_discard;
      break;
    case ":":
      return cljs.tools.reader.edn.read_namespaced_map;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.read_tagged = function cljs$tools$reader$edn$read_tagged(rdr, initch, opts) {
  var tag = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  var object = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Reader tag must be a symbol");
  } else {
  }
  var temp__4655__auto__ = function() {
    var or__8632__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "readers", "readers", -2118263030)).cljs$core$IFn$_invoke$arity$1(opts), tag);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return cljs.tools.reader.default_data_readers.call(null, tag);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var f = temp__4655__auto__;
    return f.call(null, object);
  } else {
    var temp__4655__auto____$1 = (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var d = temp__4655__auto____$1;
      return d.call(null, tag, object);
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "No reader function for tag ", cljs.core.name.call(null, tag));
    }
  }
};
cljs.tools.reader.edn.read = function cljs$tools$reader$edn$read(var_args) {
  var args29207 = [];
  var len__9707__auto___29214 = arguments.length;
  var i__9708__auto___29215 = 0;
  while (true) {
    if (i__9708__auto___29215 < len__9707__auto___29214) {
      args29207.push(arguments[i__9708__auto___29215]);
      var G__29216 = i__9708__auto___29215 + 1;
      i__9708__auto___29215 = G__29216;
      continue;
    } else {
    }
    break;
  }
  var G__29209 = args29207.length;
  switch(G__29209) {
    case 1:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29207.length)].join(""));;
  }
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.edn.read.call(null, cljs.core.PersistentArrayMap.EMPTY, reader);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2 = function(p__29210, reader) {
  var map__29211 = p__29210;
  var map__29211__$1 = (!(map__29211 == null) ? map__29211.cljs$lang$protocol_mask$partition0$ & 64 || map__29211.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29211) : map__29211;
  var opts = map__29211__$1;
  var eof = cljs.core.get.call(null, map__29211__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  var eof_error_QMARK_ = !cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, reader, eof_error_QMARK_, eof, opts);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 = function(reader, eof_error_QMARK_, eof, opts) {
  try {
    while (true) {
      var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
        continue;
      } else {
        if (ch == null) {
          if (cljs.core.truth_(eof_error_QMARK_)) {
            return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF");
          } else {
            return eof;
          }
        } else {
          if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
            return cljs.tools.reader.edn.read_number.call(null, reader, ch, opts);
          } else {
            var f = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(f)) {
              var res = f.call(null, reader, ch, opts);
              if (res === reader) {
                continue;
              } else {
                return res;
              }
            } else {
              return cljs.tools.reader.edn.read_symbol.call(null, reader, ch);
            }
          }
        }
      }
      break;
    }
  } catch (e29213) {
    if (e29213 instanceof Error) {
      var e = e29213;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e29213;
    }
  }
};
cljs.tools.reader.edn.read.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_string = function cljs$tools$reader$edn$read_string(var_args) {
  var args29218 = [];
  var len__9707__auto___29221 = arguments.length;
  var i__9708__auto___29222 = 0;
  while (true) {
    if (i__9708__auto___29222 < len__9707__auto___29221) {
      args29218.push(arguments[i__9708__auto___29222]);
      var G__29223 = i__9708__auto___29222 + 1;
      i__9708__auto___29222 = G__29223;
      continue;
    } else {
    }
    break;
  }
  var G__29220 = args29218.length;
  switch(G__29220) {
    case 1:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29218.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), s);
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = s;
    if (cljs.core.truth_(and__8620__auto__)) {
      return cljs.core.not_EQ_.call(null, s, "");
    } else {
      return and__8620__auto__;
    }
  }())) {
    return cljs.tools.reader.edn.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__29227_SHARP_) {
      return max === p1__29227_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union(var_args) {
  var args29228 = [];
  var len__9707__auto___29234 = arguments.length;
  var i__9708__auto___29235 = 0;
  while (true) {
    if (i__9708__auto___29235 < len__9707__auto___29234) {
      args29228.push(arguments[i__9708__auto___29235]);
      var G__29236 = i__9708__auto___29235 + 1;
      i__9708__auto___29235 = G__29236;
      continue;
    } else {
    }
    break;
  }
  var G__29233 = args29228.length;
  switch(G__29233) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args29228.slice(2), 0, null);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq29229) {
  var G__29230 = cljs.core.first.call(null, seq29229);
  var seq29229__$1 = cljs.core.next.call(null, seq29229);
  var G__29231 = cljs.core.first.call(null, seq29229__$1);
  var seq29229__$2 = cljs.core.next.call(null, seq29229__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__29230, G__29231, seq29229__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection(var_args) {
  var args29239 = [];
  var len__9707__auto___29245 = arguments.length;
  var i__9708__auto___29246 = 0;
  while (true) {
    if (i__9708__auto___29246 < len__9707__auto___29245) {
      args29239.push(arguments[i__9708__auto___29246]);
      var G__29247 = i__9708__auto___29246 + 1;
      i__9708__auto___29246 = G__29247;
      continue;
    } else {
    }
    break;
  }
  var G__29244 = args29239.length;
  switch(G__29244) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args29239.slice(2), 0, null);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__29249 = s2;
      var G__29250 = s1;
      s1 = G__29249;
      s2 = G__29250;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__29238_SHARP_) {
    return -cljs.core.count.call(null, p1__29238_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq29240) {
  var G__29241 = cljs.core.first.call(null, seq29240);
  var seq29240__$1 = cljs.core.next.call(null, seq29240);
  var G__29242 = cljs.core.first.call(null, seq29240__$1);
  var seq29240__$2 = cljs.core.next.call(null, seq29240__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__29241, G__29242, seq29240__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference(var_args) {
  var args29251 = [];
  var len__9707__auto___29257 = arguments.length;
  var i__9708__auto___29258 = 0;
  while (true) {
    if (i__9708__auto___29258 < len__9707__auto___29257) {
      args29251.push(arguments[i__9708__auto___29258]);
      var G__29259 = i__9708__auto___29258 + 1;
      i__9708__auto___29258 = G__29259;
      continue;
    } else {
    }
    break;
  }
  var G__29256 = args29251.length;
  switch(G__29256) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args29251.slice(2), 0, null);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq29252) {
  var G__29253 = cljs.core.first.call(null, seq29252);
  var seq29252__$1 = cljs.core.next.call(null, seq29252);
  var G__29254 = cljs.core.first.call(null, seq29252__$1);
  var seq29252__$2 = cljs.core.next.call(null, seq29252__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__29253, G__29254, seq29252__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__29261_SHARP_) {
    return cljs.core.select_keys.call(null, p1__29261_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__29266) {
    var vec__29267 = p__29266;
    var old = cljs.core.nth.call(null, vec__29267, 0, null);
    var new$ = cljs.core.nth.call(null, vec__29267, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__29270_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__29270_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__29275) {
    var vec__29276 = p__29275;
    var k = cljs.core.nth.call(null, vec__29276, 0, null);
    var v = cljs.core.nth.call(null, vec__29276, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join(var_args) {
  var args29283 = [];
  var len__9707__auto___29292 = arguments.length;
  var i__9708__auto___29293 = 0;
  while (true) {
    if (i__9708__auto___29293 < len__9707__auto___29292) {
      args29283.push(arguments[i__9708__auto___29293]);
      var G__29294 = i__9708__auto___29293 + 1;
      i__9708__auto___29293 = G__29294;
      continue;
    } else {
    }
    break;
  }
  var G__29285 = args29283.length;
  switch(G__29285) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29283.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__29286 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__29286, 0, null);
    var s = cljs.core.nth.call(null, vec__29286, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__29286, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__29286, r, s, idx) {
            return function(p1__29279_SHARP_, p2__29280_SHARP_) {
              return cljs.core.conj.call(null, p1__29279_SHARP_, cljs.core.merge.call(null, p2__29280_SHARP_, x));
            };
          }(found, ks, vec__29286, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__29286, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__29289 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__29289, 0, null);
  var s = cljs.core.nth.call(null, vec__29289, 1, null);
  var k = cljs.core.nth.call(null, vec__29289, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__29289, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__29289, r, s, k, idx) {
          return function(p1__29281_SHARP_, p2__29282_SHARP_) {
            return cljs.core.conj.call(null, p1__29281_SHARP_, cljs.core.merge.call(null, p2__29282_SHARP_, x));
          };
        }(found, vec__29289, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__29289, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__29296_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__29296_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__29297_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__29297_SHARP_);
  }, set2);
};
goog.provide("taoensso.truss.impl");
goog.require("cljs.core");
goog.require("clojure.set");
taoensso.truss.impl.rsome = function taoensso$truss$impl$rsome(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    var temp__4657__auto__ = pred.call(null, in$);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.core.reduced.call(null, p);
    } else {
      return null;
    }
  }, null, coll);
};
taoensso.truss.impl.revery_QMARK_ = function taoensso$truss$impl$revery_QMARK_(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    if (cljs.core.truth_(pred.call(null, in$))) {
      return true;
    } else {
      return cljs.core.reduced.call(null, null);
    }
  }, true, coll);
};
taoensso.truss.impl.some_QMARK_ = function taoensso$truss$impl$some_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    return true;
  }
};
taoensso.truss.impl.set_STAR_ = cljs.core.set;
taoensso.truss.impl.ks_EQ_ = function taoensso$truss$impl$ks_EQ_(ks, m) {
  return cljs.core._EQ_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.truss.impl.set_STAR_.call(null, ks));
};
taoensso.truss.impl.ks_LT__EQ_ = function taoensso$truss$impl$ks_LT__EQ_(ks, m) {
  return clojure.set.subset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.truss.impl.set_STAR_.call(null, ks));
};
taoensso.truss.impl.ks_GT__EQ_ = function taoensso$truss$impl$ks_GT__EQ_(ks, m) {
  return clojure.set.superset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.truss.impl.set_STAR_.call(null, ks));
};
taoensso.truss.impl.ks_nnil_QMARK_ = function taoensso$truss$impl$ks_nnil_QMARK_(ks, m) {
  return taoensso.truss.impl.revery_QMARK_.call(null, function(p1__29304_SHARP_) {
    return taoensso.truss.impl.some_QMARK_.call(null, cljs.core.get.call(null, m, p1__29304_SHARP_));
  }, ks);
};
taoensso.truss.impl.default_error_fn = function taoensso$truss$impl$default_error_fn(data_) {
  var data = cljs.core.deref.call(null, data_);
  throw cljs.core.ex_info.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3)).cljs$core$IFn$_invoke$arity$1(data)), cljs.core.dissoc.call(null, data, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3)));
};
taoensso.truss.impl._STAR__QMARK_data_STAR_ = null;
taoensso.truss.impl._STAR_error_fn_STAR_ = taoensso.truss.impl.default_error_fn;
taoensso.truss.impl.non_throwing = function taoensso$truss$impl$non_throwing(pred) {
  return function(x) {
    try {
      return pred.call(null, x);
    } catch (e29306) {
      if (e29306 instanceof Error) {
        var _ = e29306;
        return null;
      } else {
        throw e29306;
      }
    }
  };
};
taoensso.truss.impl.non_throwing_QMARK_ = function taoensso$truss$impl$non_throwing_QMARK_(p) {
  return false;
};
taoensso.truss.impl._xpred = function taoensso$truss$impl$_xpred(pred) {
  if (!cljs.core.vector_QMARK_.call(null, pred)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, taoensso.truss.impl.non_throwing_QMARK_.call(null, pred)], null);
  } else {
    var vec__29324 = pred;
    var type = cljs.core.nth.call(null, vec__29324, 0, null);
    var a1 = cljs.core.nth.call(null, vec__29324, 1, null);
    var a2 = cljs.core.nth.call(null, vec__29324, 2, null);
    var a3 = cljs.core.nth.call(null, vec__29324, 3, null);
    if (cljs.core.truth_(a1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Special predicate [\x3cspecial-type\x3e \x3carg\x3e] form w/o \x3carg\x3e"), cljs.core.str("\n"), cljs.core.str("a1")].join(""));
    }
    var G__29327 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__29327) {
      case "el":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), function() {
              var x__9466__auto__ = a1;
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
            }())));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "ks-nnil?":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks-nnil?", "taoensso.truss.impl/ks-nnil?", 1913972845, null)), function() {
            var x__9466__auto__ = a1;
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "ks\x3c\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks\x3c\x3d", "taoensso.truss.impl/ks\x3c\x3d", 1973794033, null)), function() {
            var x__9466__auto__ = a1;
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "ks\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks\x3d", "taoensso.truss.impl/ks\x3d", 1308270826, null)), function() {
            var x__9466__auto__ = a1;
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "ks\x3e\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks\x3e\x3d", "taoensso.truss.impl/ks\x3e\x3d", -14177732, null)), function() {
            var x__9466__auto__ = a1;
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "not-in":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), function() {
              var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), function() {
                var x__9466__auto__ = a1;
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }())));
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
            }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }())));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "not-el":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), function() {
              var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), function() {
                var x__9466__auto__ = a1;
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }())));
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
            }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }())));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "set\x3c\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("clojure.set", "subset?", "clojure.set/subset?", 909155479, null)), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), function() {
              var x__9466__auto__ = a1;
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
            }())));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }())));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "set\x3e\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("clojure.set", "superset?", "clojure.set/superset?", 22098740, null)), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), function() {
              var x__9466__auto__ = a1;
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
            }())));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }())));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "set\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null)), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), function() {
              var x__9466__auto__ = a1;
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
            }())));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }())));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      case "in":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }(), function() {
          var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), function() {
            var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), function() {
              var x__9466__auto__ = a1;
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
            }())));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
          }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))), false], null);
        break;
      default:
        var self = function(G__29327, vec__29324, type, a1, a2, a3) {
          return function(_QMARK_pred) {
            if (cljs.core.truth_(_QMARK_pred)) {
              return taoensso$truss$impl$_xpred.call(null, _QMARK_pred);
            } else {
              return null;
            }
          };
        }(G__29327, vec__29324, type, a1, a2, a3);
        var vec__29328 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self.call(null, a1), self.call(null, a2), self.call(null, a3)], null);
        var vec__29331 = cljs.core.nth.call(null, vec__29328, 0, null);
        var a1__$1 = cljs.core.nth.call(null, vec__29331, 0, null);
        var nt_a1_QMARK_ = cljs.core.nth.call(null, vec__29331, 1, null);
        var vec__29334 = cljs.core.nth.call(null, vec__29328, 1, null);
        var a2__$1 = cljs.core.nth.call(null, vec__29334, 0, null);
        var nt_a2_QMARK_ = cljs.core.nth.call(null, vec__29334, 1, null);
        var vec__29337 = cljs.core.nth.call(null, vec__29328, 2, null);
        var a3__$1 = cljs.core.nth.call(null, vec__29337, 0, null);
        var nt_a3_QMARK_ = cljs.core.nth.call(null, vec__29337, 1, null);
        var nt_a1 = cljs.core.truth_(a1__$1) ? cljs.core.truth_(nt_a1_QMARK_) ? a1__$1 : cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "non-throwing", "taoensso.truss.impl/non-throwing", -1408931246, null)), function() {
          var x__9466__auto__ = a1__$1;
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))) : null;
        var nt_a2 = cljs.core.truth_(a2__$1) ? cljs.core.truth_(nt_a2_QMARK_) ? a2__$1 : cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "non-throwing", "taoensso.truss.impl/non-throwing", -1408931246, null)), function() {
          var x__9466__auto__ = a2__$1;
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))) : null;
        var nt_a3 = cljs.core.truth_(a3__$1) ? cljs.core.truth_(nt_a3_QMARK_) ? a3__$1 : cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "non-throwing", "taoensso.truss.impl/non-throwing", -1408931246, null)), function() {
          var x__9466__auto__ = a3__$1;
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
        }()))) : null;
        var nt_comp_QMARK_ = cljs.core.truth_(a3__$1) ? function() {
          var and__8620__auto__ = nt_a1_QMARK_;
          if (cljs.core.truth_(and__8620__auto__)) {
            var and__8620__auto____$1 = nt_a2_QMARK_;
            if (cljs.core.truth_(and__8620__auto____$1)) {
              return nt_a3_QMARK_;
            } else {
              return and__8620__auto____$1;
            }
          } else {
            return and__8620__auto__;
          }
        }() : cljs.core.truth_(a2__$1) ? function() {
          var and__8620__auto__ = nt_a1_QMARK_;
          if (cljs.core.truth_(and__8620__auto__)) {
            return nt_a2_QMARK_;
          } else {
            return and__8620__auto__;
          }
        }() : cljs.core.truth_(a1__$1) ? nt_a1_QMARK_ : null;
        var G__29340 = type instanceof cljs.core.Keyword ? type.fqn : null;
        switch(G__29340) {
          case "and":
            if (cljs.core.truth_(a3__$1)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
                var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }(), function() {
                var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "and", "cljs.core/and", -6692549, null)), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                    var x__9466__auto__ = a1__$1;
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }(), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                    var x__9466__auto__ = a2__$1;
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }(), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                    var x__9466__auto__ = a3__$1;
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }())));
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }()))), nt_comp_QMARK_], null);
            } else {
              if (cljs.core.truth_(a2__$1)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
                  var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }(), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "and", "cljs.core/and", -6692549, null)), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                      var x__9466__auto__ = a1__$1;
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                      var x__9466__auto__ = a2__$1;
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }())));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }()))), nt_comp_QMARK_], null);
              } else {
                if (cljs.core.truth_(a1__$1)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1__$1, nt_a1_QMARK_], null);
                } else {
                  return null;
                }
              }
            }
            break;
          case "or":
            if (cljs.core.truth_(a3__$1)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
                var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }(), function() {
                var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                    var x__9466__auto__ = nt_a1;
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }(), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                    var x__9466__auto__ = nt_a2;
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }(), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                    var x__9466__auto__ = nt_a3;
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }())));
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }()))), true], null);
            } else {
              if (cljs.core.truth_(a2__$1)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
                  var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }(), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                      var x__9466__auto__ = nt_a1;
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                      var x__9466__auto__ = nt_a2;
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }())));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }()))), true], null);
              } else {
                if (cljs.core.truth_(a1__$1)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1__$1, nt_a1_QMARK_], null);
                } else {
                  return null;
                }
              }
            }
            break;
          case "not":
            if (cljs.core.truth_(a3__$1)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
                var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }(), function() {
                var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                      var x__9466__auto__ = a1__$1;
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                      var x__9466__auto__ = a2__$1;
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                      var x__9466__auto__ = a3__$1;
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }())));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }())));
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
              }()))), nt_comp_QMARK_], null);
            } else {
              if (cljs.core.truth_(a2__$1)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
                  var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }(), function() {
                  var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), function() {
                      var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                        var x__9466__auto__ = a1__$1;
                        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                      }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }(), function() {
                      var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                        var x__9466__auto__ = a2__$1;
                        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                      }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }())));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }())));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                }()))), nt_comp_QMARK_], null);
              } else {
                if (cljs.core.truth_(a1__$1)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
                    var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }(), function() {
                    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), function() {
                      var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
                        var x__9466__auto__ = a1__$1;
                        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                      }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "x", "x", -555367584, null)))));
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                    }())));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
                  }()))), nt_a1_QMARK_], null);
                } else {
                  return null;
                }
              }
            }
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
        }
      ;
    }
  }
};
taoensso.truss.impl.fmt_err_msg = function taoensso$truss$impl$fmt_err_msg(x1, x2, x3, x4) {
  return [cljs.core.str("Invariant violation in `"), cljs.core.str(x1), cljs.core.str(":"), cljs.core.str(x2), cljs.core.str("`. Test form: `"), cljs.core.str(x3), cljs.core.str("` with failing input: `"), cljs.core.str(x4), cljs.core.str("`")].join("");
};
taoensso.truss.impl.WrappedError = function(val) {
  this.val = val;
};
taoensso.truss.impl.WrappedError.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
taoensso.truss.impl.WrappedError.cljs$lang$type = true;
taoensso.truss.impl.WrappedError.cljs$lang$ctorStr = "taoensso.truss.impl/WrappedError";
taoensso.truss.impl.WrappedError.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.truss.impl/WrappedError");
};
taoensso.truss.impl.__GT_WrappedError = function taoensso$truss$impl$__GT_WrappedError(val) {
  return new taoensso.truss.impl.WrappedError(val);
};
taoensso.truss.impl._assertion_error = function taoensso$truss$impl$_assertion_error(msg) {
  return new Error(msg);
};
taoensso.truss.impl._dummy_val = {};
taoensso.truss.impl._dummy_error = {};
taoensso.truss.impl._invar_violation_BANG_ = function taoensso$truss$impl$_invar_violation_BANG_(elidable_QMARK_, ns_str, _QMARK_line, form, val, _QMARK_err, _QMARK_data_fn) {
  var temp__4657__auto__ = taoensso.truss.impl._STAR_error_fn_STAR_;
  if (cljs.core.truth_(temp__4657__auto__)) {
    var error_fn = temp__4657__auto__;
    return error_fn.call(null, new cljs.core.Delay(function(error_fn, temp__4657__auto__) {
      return function() {
        var instant = new Date;
        var line_str = function() {
          var or__8632__auto__ = _QMARK_line;
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            return "?";
          }
        }();
        var form_str = [cljs.core.str(form)].join("");
        var undefn_val_QMARK_ = val === taoensso.truss.impl._dummy_val;
        var val_str = undefn_val_QMARK_ ? "\x3cundefined\x3e" : val == null ? "\x3cnil\x3e" : [cljs.core.str(val)].join("");
        var _QMARK_err__$1 = taoensso.truss.impl._dummy_error === _QMARK_err ? null : _QMARK_err instanceof taoensso.truss.impl.WrappedError ? _QMARK_err.val : _QMARK_err;
        var msg_ = new cljs.core.Delay(function(instant, line_str, form_str, undefn_val_QMARK_, val_str, _QMARK_err__$1, error_fn, temp__4657__auto__) {
          return function() {
            var _QMARK_err_str = function() {
              var temp__4657__auto____$1 = _QMARK_err__$1;
              if (cljs.core.truth_(temp__4657__auto____$1)) {
                var e = temp__4657__auto____$1;
                return [cljs.core.str(_QMARK_err__$1)].join("");
              } else {
                return null;
              }
            }();
            var msg = taoensso.truss.impl.fmt_err_msg.call(null, ns_str, line_str, form_str, val_str);
            if (cljs.core.not.call(null, _QMARK_err__$1)) {
              return msg;
            } else {
              if (undefn_val_QMARK_) {
                return [cljs.core.str(msg), cljs.core.str("\n`val` error: "), cljs.core.str(_QMARK_err_str)].join("");
              } else {
                return [cljs.core.str(msg), cljs.core.str("\n`pred-form` error: "), cljs.core.str(_QMARK_err_str)].join("");
              }
            }
          };
        }(instant, line_str, form_str, undefn_val_QMARK_, val_str, _QMARK_err__$1, error_fn, temp__4657__auto__), null);
        var _QMARK_data = function() {
          var temp__4657__auto____$1 = _QMARK_data_fn;
          if (cljs.core.truth_(temp__4657__auto____$1)) {
            var data_fn = temp__4657__auto____$1;
            try {
              return data_fn.call(null);
            } catch (e29348) {
              if (e29348 instanceof Error) {
                var e = e29348;
                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data-error", "data-error", -1058016301), e], null);
              } else {
                throw e29348;
              }
            }
          } else {
            return null;
          }
        }();
        return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "*?data*", "*?data*", 1047537922), new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3), new cljs.core.Keyword(null, "elidable?", "elidable?", 248362249), new cljs.core.Keyword(null, "dt", "dt", -368444759), new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "ns-str", "ns-str", -2062616499), new cljs.core.Keyword(null, "val-type", "val-type", -279850094), new cljs.core.Keyword(null, 
        "?err", "?err", 549653299), new cljs.core.Keyword(null, "*assert*", "*assert*", -160895053), new cljs.core.Keyword(null, "?data", "?data", -9471433), new cljs.core.Keyword(null, "?line", "?line", -631853385), new cljs.core.Keyword(null, "form-str", "form-str", 871608859)], [taoensso.truss.impl._STAR__QMARK_data_STAR_, msg_, elidable_QMARK_, instant, undefn_val_QMARK_ ? new cljs.core.Symbol("undefined", "threw-error", "undefined/threw-error", -2085122794, null) : val, ns_str, undefn_val_QMARK_ ? 
        new cljs.core.Symbol("undefined", "threw-error", "undefined/threw-error", -2085122794, null) : cljs.core.type.call(null, val), _QMARK_err__$1, cljs.core._STAR_assert_STAR_, _QMARK_data, _QMARK_line, form_str]);
      };
    }(error_fn, temp__4657__auto__), null));
  } else {
    return null;
  }
};
goog.provide("taoensso.truss");
goog.require("cljs.core");
goog.require("taoensso.truss.impl");
taoensso.truss.get_dynamic_assertion_data = function taoensso$truss$get_dynamic_assertion_data() {
  return taoensso.truss.impl._STAR__QMARK_data_STAR_;
};
taoensso.truss._error_fn = function taoensso$truss$_error_fn(f) {
  if (cljs.core._EQ_.call(null, f, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
    return taoensso.truss.impl.default_error_fn;
  } else {
    return f;
  }
};
taoensso.truss.set_error_fn_BANG_ = function taoensso$truss$set_error_fn_BANG_(f) {
  return taoensso.truss.impl._STAR_error_fn_STAR_ = taoensso.truss._error_fn.call(null, f);
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return (this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___33266 = arguments.length;
  var i__9708__auto___33267 = 0;
  while (true) {
    if (i__9708__auto___33267 < len__9707__auto___33266) {
      args__9714__auto__.push(arguments[i__9708__auto___33267]);
      var G__33268 = i__9708__auto___33267 + 1;
      i__9708__auto___33267 = G__33268;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq33265) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq33265));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___33270 = arguments.length;
  var i__9708__auto___33271 = 0;
  while (true) {
    if (i__9708__auto___33271 < len__9707__auto___33270) {
      args__9714__auto__.push(arguments[i__9708__auto___33271]);
      var G__33272 = i__9708__auto___33271 + 1;
      i__9708__auto___33271 = G__33272;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq33269) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq33269));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__33276 = cljs.core._EQ_;
    var expr__33277 = c;
    if (cljs.core.truth_(pred__33276.call(null, "\b", expr__33277))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__33276.call(null, "\t", expr__33277))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__33276.call(null, "\n", expr__33277))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__33276.call(null, "\f", expr__33277))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__33276.call(null, "\r", expr__33277))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__33276.call(null, '"', expr__33277))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__33276.call(null, "\\", expr__33277))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___33280 = arguments.length;
  var i__9708__auto___33281 = 0;
  while (true) {
    if (i__9708__auto___33281 < len__9707__auto___33280) {
      args__9714__auto__.push(arguments[i__9708__auto___33281]);
      var G__33282 = i__9708__auto___33281 + 1;
      i__9708__auto___33281 = G__33282;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq33279) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq33279));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___33284 = arguments.length;
  var i__9708__auto___33285 = 0;
  while (true) {
    if (i__9708__auto___33285 < len__9707__auto___33284) {
      args__9714__auto__.push(arguments[i__9708__auto___33285]);
      var G__33286 = i__9708__auto___33285 + 1;
      i__9708__auto___33285 = G__33286;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq33283) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq33283));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__33290 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__33290, 0, null);
      var new_context = cljs.core.nth.call(null, vec__33290, 1, null);
      var G__33293 = new_context;
      var G__33294 = remainder;
      var G__33295 = cljs.core.conj.call(null, acc, result);
      context = G__33293;
      lis__$1 = G__33294;
      acc = G__33295;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__33299 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__33299, 0, null);
    var new_context = cljs.core.nth.call(null, vec__33299, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__33302 = new_context;
      var G__33303 = cljs.core.conj.call(null, acc, result);
      context = G__33302;
      acc = G__33303;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__33307 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__33307, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__33307, 1, null);
    var new_context = cljs.core.nth.call(null, vec__33307, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__33310 = new_context;
      var G__33311 = cljs.core.conj.call(null, acc, result);
      context = G__33310;
      acc = G__33311;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__9412__auto__ = function cljs$pprint$unzip_map_$_iter__33368(s__33369) {
      return new cljs.core.LazySeq(null, function() {
        var s__33369__$1 = s__33369;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__33369__$1);
          if (temp__4657__auto__) {
            var s__33369__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__33369__$2)) {
              var c__9410__auto__ = cljs.core.chunk_first.call(null, s__33369__$2);
              var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
              var b__33371 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
              if (function() {
                var i__33370 = 0;
                while (true) {
                  if (i__33370 < size__9411__auto__) {
                    var vec__33384 = cljs.core._nth.call(null, c__9410__auto__, i__33370);
                    var k = cljs.core.nth.call(null, vec__33384, 0, null);
                    var vec__33387 = cljs.core.nth.call(null, vec__33384, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__33387, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__33387, 1, null);
                    cljs.core.chunk_append.call(null, b__33371, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__33424 = i__33370 + 1;
                    i__33370 = G__33424;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33371), cljs$pprint$unzip_map_$_iter__33368.call(null, cljs.core.chunk_rest.call(null, s__33369__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33371), null);
              }
            } else {
              var vec__33390 = cljs.core.first.call(null, s__33369__$2);
              var k = cljs.core.nth.call(null, vec__33390, 0, null);
              var vec__33393 = cljs.core.nth.call(null, vec__33390, 1, null);
              var v1 = cljs.core.nth.call(null, vec__33393, 0, null);
              var v2 = cljs.core.nth.call(null, vec__33393, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__33368.call(null, cljs.core.rest.call(null, s__33369__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__9412__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__9412__auto__ = function cljs$pprint$unzip_map_$_iter__33396(s__33397) {
      return new cljs.core.LazySeq(null, function() {
        var s__33397__$1 = s__33397;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__33397__$1);
          if (temp__4657__auto__) {
            var s__33397__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__33397__$2)) {
              var c__9410__auto__ = cljs.core.chunk_first.call(null, s__33397__$2);
              var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
              var b__33399 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
              if (function() {
                var i__33398 = 0;
                while (true) {
                  if (i__33398 < size__9411__auto__) {
                    var vec__33412 = cljs.core._nth.call(null, c__9410__auto__, i__33398);
                    var k = cljs.core.nth.call(null, vec__33412, 0, null);
                    var vec__33415 = cljs.core.nth.call(null, vec__33412, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__33415, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__33415, 1, null);
                    cljs.core.chunk_append.call(null, b__33399, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__33425 = i__33398 + 1;
                    i__33398 = G__33425;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33399), cljs$pprint$unzip_map_$_iter__33396.call(null, cljs.core.chunk_rest.call(null, s__33397__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33399), null);
              }
            } else {
              var vec__33418 = cljs.core.first.call(null, s__33397__$2);
              var k = cljs.core.nth.call(null, vec__33418, 0, null);
              var vec__33421 = cljs.core.nth.call(null, vec__33418, 1, null);
              var v1 = cljs.core.nth.call(null, vec__33421, 0, null);
              var v2 = cljs.core.nth.call(null, vec__33421, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__33396.call(null, cljs.core.rest.call(null, s__33397__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__9412__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__9412__auto__ = function cljs$pprint$tuple_map_$_iter__33442(s__33443) {
      return new cljs.core.LazySeq(null, function() {
        var s__33443__$1 = s__33443;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__33443__$1);
          if (temp__4657__auto__) {
            var s__33443__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__33443__$2)) {
              var c__9410__auto__ = cljs.core.chunk_first.call(null, s__33443__$2);
              var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
              var b__33445 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
              if (function() {
                var i__33444 = 0;
                while (true) {
                  if (i__33444 < size__9411__auto__) {
                    var vec__33452 = cljs.core._nth.call(null, c__9410__auto__, i__33444);
                    var k = cljs.core.nth.call(null, vec__33452, 0, null);
                    var v = cljs.core.nth.call(null, vec__33452, 1, null);
                    cljs.core.chunk_append.call(null, b__33445, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__33458 = i__33444 + 1;
                    i__33444 = G__33458;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33445), cljs$pprint$tuple_map_$_iter__33442.call(null, cljs.core.chunk_rest.call(null, s__33443__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33445), null);
              }
            } else {
              var vec__33455 = cljs.core.first.call(null, s__33443__$2);
              var k = cljs.core.nth.call(null, vec__33455, 0, null);
              var v = cljs.core.nth.call(null, vec__33455, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__33442.call(null, cljs.core.rest.call(null, s__33443__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__9412__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__33459 = n - 1;
          n = G__33459;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__33460 = n + 1;
        n = G__33460;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__33461 = pos + 1;
      pos = G__33461;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__9295__auto__ = pp == null ? null : pp;
    var m__9296__auto__ = cljs.pprint._ppflush[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, pp);
    } else {
      var m__9296__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var args33463 = [];
  var len__9707__auto___33472 = arguments.length;
  var i__9708__auto___33473 = 0;
  while (true) {
    if (i__9708__auto___33473 < len__9707__auto___33472) {
      args33463.push(arguments[i__9708__auto___33473]);
      var G__33474 = i__9708__auto___33473 + 1;
      i__9708__auto___33473 = G__33474;
      continue;
    } else {
    }
    break;
  }
  var G__33465 = args33463.length;
  switch(G__33465) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33463.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t_cljs$pprint33466 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint33466 = function(writer, max_columns, fields, meta33467) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta33467 = meta33467;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint33466.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_33468, meta33467__$1) {
        var self__ = this;
        var _33468__$1 = this;
        return new cljs.pprint.t_cljs$pprint33466(self__.writer, self__.max_columns, self__.fields, meta33467__$1);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint33466.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_33468) {
        var self__ = this;
        var _33468__$1 = this;
        return self__.meta33467;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint33466.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint33466.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint33466.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__33469 = cljs.core._EQ_;
        var expr__33470 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__33469.call(null, String, expr__33470))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__33469, expr__33470, this$__$1, fields) {
              return function(p1__33462_SHARP_) {
                return cljs.core._EQ_.call(null, p1__33462_SHARP_, "\n");
              };
            }(s, nl, pred__33469, expr__33470, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__33469.call(null, Number, expr__33470))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__33470)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t_cljs$pprint33466.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta33467", "meta33467", 2139457490, null)], null);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint33466.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint33466.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint33466";
    cljs.pprint.t_cljs$pprint33466.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
        return cljs.core._write.call(null, writer__9239__auto__, "cljs.pprint/t_cljs$pprint33466");
      };
    }(fields);
    cljs.pprint.__GT_t_cljs$pprint33466 = function(fields) {
      return function cljs$pprint$__GT_t_cljs$pprint33466(writer__$1, max_columns__$1, fields__$1, meta33467) {
        return new cljs.pprint.t_cljs$pprint33466(writer__$1, max_columns__$1, fields__$1, meta33467);
      };
    }(fields);
  }
  return new cljs.pprint.t_cljs$pprint33466(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33477, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33479 = k33477 instanceof cljs.core.Keyword ? k33477.fqn : null;
  switch(G__33479) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33477, else__9257__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33476) {
  var self__ = this;
  var G__33476__$1 = this;
  return new cljs.core.RecordIter(0, G__33476__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33476) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33480 = cljs.core.keyword_identical_QMARK_;
  var expr__33481 = k__9262__auto__;
  if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__33481))) {
    return new cljs.pprint.logical_block(G__33476, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__33481))) {
      return new cljs.pprint.logical_block(self__.parent, G__33476, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__33481))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__33476, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__33481))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__33476, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__33481))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__33476, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__33481))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__33476, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__33481))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__33476, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__33481))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__33476, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__33481))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__33476, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__33480.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__33481))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__33476, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33476), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33476) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__33476, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__33478) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__33478), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__33478), null, cljs.core.dissoc.call(null, G__33478, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__33484 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__33484;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33486, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33488 = k33486 instanceof cljs.core.Keyword ? k33486.fqn : null;
  switch(G__33488) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33486, else__9257__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33485) {
  var self__ = this;
  var G__33485__$1 = this;
  return new cljs.core.RecordIter(0, G__33485__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33485) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33489 = cljs.core.keyword_identical_QMARK_;
  var expr__33490 = k__9262__auto__;
  if (cljs.core.truth_(pred__33489.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__33490))) {
    return new cljs.pprint.buffer_blob(G__33485, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33489.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__33490))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__33485, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33489.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__33490))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__33485, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__33489.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__33490))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__33485, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__33489.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__33490))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__33485, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33485), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33485) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__33485, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__33487) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__33487), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__33487), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__33487), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__33487), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__33487), null, cljs.core.dissoc.call(null, G__33487, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__33200__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__33200__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33494, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33496 = k33494 instanceof cljs.core.Keyword ? k33494.fqn : null;
  switch(G__33496) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33494, else__9257__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33493) {
  var self__ = this;
  var G__33493__$1 = this;
  return new cljs.core.RecordIter(0, G__33493__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33493) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33497 = cljs.core.keyword_identical_QMARK_;
  var expr__33498 = k__9262__auto__;
  if (cljs.core.truth_(pred__33497.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__33498))) {
    return new cljs.pprint.nl_t(G__33493, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33497.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__33498))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__33493, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33497.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__33498))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__33493, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__33497.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__33498))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__33493, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__33497.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__33498))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__33493, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33493), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33493) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__33493, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__33495) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__33495), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__33495), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__33495), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__33495), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__33495), null, cljs.core.dissoc.call(null, G__33495, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__33200__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__33200__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33502, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33504 = k33502 instanceof cljs.core.Keyword ? k33502.fqn : null;
  switch(G__33504) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33502, else__9257__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33501) {
  var self__ = this;
  var G__33501__$1 = this;
  return new cljs.core.RecordIter(0, G__33501__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33501) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33505 = cljs.core.keyword_identical_QMARK_;
  var expr__33506 = k__9262__auto__;
  if (cljs.core.truth_(pred__33505.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__33506))) {
    return new cljs.pprint.start_block_t(G__33501, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33505.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__33506))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__33501, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33505.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__33506))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__33501, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__33505.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__33506))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__33501, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33501), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33501) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__33501, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__33503) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__33503), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__33503), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__33503), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__33503), null, cljs.core.dissoc.call(null, 
  G__33503, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__33200__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__33200__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33510, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33512 = k33510 instanceof cljs.core.Keyword ? k33510.fqn : null;
  switch(G__33512) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33510, else__9257__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33509) {
  var self__ = this;
  var G__33509__$1 = this;
  return new cljs.core.RecordIter(0, G__33509__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33509) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33513 = cljs.core.keyword_identical_QMARK_;
  var expr__33514 = k__9262__auto__;
  if (cljs.core.truth_(pred__33513.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__33514))) {
    return new cljs.pprint.end_block_t(G__33509, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33513.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__33514))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__33509, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33513.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__33514))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__33509, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__33513.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__33514))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__33509, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33509), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33509) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__33509, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__33511) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__33511), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__33511), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__33511), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__33511), null, cljs.core.dissoc.call(null, 
  G__33511, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__33200__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__33200__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33518, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33520 = k33518 instanceof cljs.core.Keyword ? k33518.fqn : null;
  switch(G__33520) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33518, else__9257__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33517) {
  var self__ = this;
  var G__33517__$1 = this;
  return new cljs.core.RecordIter(0, G__33517__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33517) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33521 = cljs.core.keyword_identical_QMARK_;
  var expr__33522 = k__9262__auto__;
  if (cljs.core.truth_(pred__33521.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__33522))) {
    return new cljs.pprint.indent_t(G__33517, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33521.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__33522))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__33517, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33521.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__33522))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__33517, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__33521.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__33522))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__33517, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__33521.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__33522))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__33517, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__33521.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__33522))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__33517, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33517), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33517) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__33517, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__33519) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__33519), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__33519), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__33519), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__33519), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__33519), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__33519), null, cljs.core.dissoc.call(null, G__33519, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__33200__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__33200__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__9557__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__9558__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__9559__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__9560__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__9561__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__, hierarchy__9561__auto__) {
      return function(p1__33526_SHARP_, p2__33525_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__33525_SHARP_);
      };
    }(method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__, hierarchy__9561__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__9561__auto__, method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4657__auto___33527 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___33527)) {
    var cb_33528 = temp__4657__auto___33527;
    cb_33528.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4657__auto___33529 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4657__auto___33529)) {
    var prefix_33530 = temp__4657__auto___33529;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_33530);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4657__auto___33531 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___33531)) {
    var cb_33532 = temp__4657__auto___33531;
    cb_33532.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var suffix = temp__4657__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__33533 = cljs.core._EQ_;
    var expr__33534 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__33533.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__33534))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__33533.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__33534))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__33534)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__8632__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__8632__auto__) {
      return or__8632__auto__;
    } else {
      var and__8620__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__8620__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__8620__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4655__auto___33536 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4655__auto___33536)) {
      var tws_33537 = temp__4655__auto___33536;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_33537);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__33542 = cljs.core.seq.call(null, tokens);
  var chunk__33543 = null;
  var count__33544 = 0;
  var i__33545 = 0;
  while (true) {
    if (i__33545 < count__33544) {
      var token = cljs.core._nth.call(null, chunk__33543, i__33545);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4655__auto___33546 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4655__auto___33546)) {
          var tws_33547 = temp__4655__auto___33546;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_33547);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_33548 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__8620__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__8620__auto__)) {
          return tws_33548;
        } else {
          return and__8620__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_33548);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__33549 = seq__33542;
      var G__33550 = chunk__33543;
      var G__33551 = count__33544;
      var G__33552 = i__33545 + 1;
      seq__33542 = G__33549;
      chunk__33543 = G__33550;
      count__33544 = G__33551;
      i__33545 = G__33552;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__33542);
      if (temp__4657__auto__) {
        var seq__33542__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__33542__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first.call(null, seq__33542__$1);
          var G__33553 = cljs.core.chunk_rest.call(null, seq__33542__$1);
          var G__33554 = c__9443__auto__;
          var G__33555 = cljs.core.count.call(null, c__9443__auto__);
          var G__33556 = 0;
          seq__33542 = G__33553;
          chunk__33543 = G__33554;
          count__33544 = G__33555;
          i__33545 = G__33556;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__33542__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4655__auto___33557 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4655__auto___33557)) {
              var tws_33558 = temp__4655__auto___33557;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_33558);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_33559 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__8620__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__8620__auto__)) {
              return tws_33559;
            } else {
              return and__8620__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_33559);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__33560 = cljs.core.next.call(null, seq__33542__$1);
          var G__33561 = null;
          var G__33562 = 0;
          var G__33563 = 0;
          seq__33542 = G__33560;
          chunk__33543 = G__33561;
          count__33544 = G__33562;
          i__33545 = G__33563;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__8632__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__8620__auto__ = miser_width;
  if (cljs.core.truth_(and__8620__auto__)) {
    var and__8620__auto____$1 = maxcol;
    if (cljs.core.truth_(and__8620__auto____$1)) {
      var and__8620__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__8620__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__8620__auto____$2;
      }
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__9557__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__9558__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__9559__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__9560__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__9561__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__, hierarchy__9561__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__, hierarchy__9561__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__9561__auto__, method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__8632__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    var or__8632__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__8632__auto____$1) {
      return or__8632__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__33564_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__8620__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__33564_SHARP_);
        if (cljs.core.truth_(and__8620__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__33564_SHARP_), lb);
        } else {
          return and__8620__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__33565_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__33565_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__8620__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__33565_SHARP_);
        if (cljs.core.truth_(and__8620__auto__)) {
          var or__8632__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__8632__auto__) {
            return or__8632__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__8620__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__33566 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__33566;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_33567 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_33567);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__33568_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__33568_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__33575 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__33575, 0, null);
  var b = cljs.core.nth.call(null, vec__33575, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__33578 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__33578, 0, null);
    var remainder = cljs.core.nth.call(null, vec__33578, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__33581 = new_buffer;
        buffer = G__33581;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var buf = temp__4655__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var tws = temp__4657__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_33590 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_33591 = oldpos_33590 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_33591);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_33590, newpos_33591));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__33586_33592 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__33587_33593 = null;
    var count__33588_33594 = 0;
    var i__33589_33595 = 0;
    while (true) {
      if (i__33589_33595 < count__33588_33594) {
        var l_33596__$1 = cljs.core._nth.call(null, chunk__33587_33593, i__33589_33595);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_33596__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__33597 = seq__33586_33592;
        var G__33598 = chunk__33587_33593;
        var G__33599 = count__33588_33594;
        var G__33600 = i__33589_33595 + 1;
        seq__33586_33592 = G__33597;
        chunk__33587_33593 = G__33598;
        count__33588_33594 = G__33599;
        i__33589_33595 = G__33600;
        continue;
      } else {
        var temp__4657__auto___33601 = cljs.core.seq.call(null, seq__33586_33592);
        if (temp__4657__auto___33601) {
          var seq__33586_33602__$1 = temp__4657__auto___33601;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__33586_33602__$1)) {
            var c__9443__auto___33603 = cljs.core.chunk_first.call(null, seq__33586_33602__$1);
            var G__33604 = cljs.core.chunk_rest.call(null, seq__33586_33602__$1);
            var G__33605 = c__9443__auto___33603;
            var G__33606 = cljs.core.count.call(null, c__9443__auto___33603);
            var G__33607 = 0;
            seq__33586_33592 = G__33604;
            chunk__33587_33593 = G__33605;
            count__33588_33594 = G__33606;
            i__33589_33595 = G__33607;
            continue;
          } else {
            var l_33608__$1 = cljs.core.first.call(null, seq__33586_33602__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_33608__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__33609 = cljs.core.next.call(null, seq__33586_33602__$1);
            var G__33610 = null;
            var G__33611 = 0;
            var G__33612 = 0;
            seq__33586_33592 = G__33609;
            chunk__33587_33593 = G__33610;
            count__33588_33594 = G__33611;
            i__33589_33595 = G__33612;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t_cljs$pprint33619 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint33619 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta33620) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta33620 = meta33620;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint33619.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_33621, meta33620__$1) {
        var self__ = this;
        var _33621__$1 = this;
        return new cljs.pprint.t_cljs$pprint33619(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta33620__$1);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint33619.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_33621) {
        var self__ = this;
        var _33621__$1 = this;
        return self__.meta33620;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint33619.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint33619.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__33622 = cljs.core._EQ_;
        var expr__33623 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__33622.call(null, String, expr__33623))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__33622.call(null, Number, expr__33623))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__33623)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint33619.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint33619.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t_cljs$pprint33619.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint33619.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta33620", "meta33620", 914670115, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint33619.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint33619.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint33619";
    cljs.pprint.t_cljs$pprint33619.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
        return cljs.core._write.call(null, writer__9239__auto__, "cljs.pprint/t_cljs$pprint33619");
      };
    }(lb, fields);
    cljs.pprint.__GT_t_cljs$pprint33619 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint33619(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta33620) {
        return new cljs.pprint.t_cljs$pprint33619(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta33620);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t_cljs$pprint33619(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4657__auto___33625 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___33625)) {
      var cb_33626 = temp__4657__auto___33625;
      cb_33626.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4657__auto___33627 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___33627)) {
      var cb_33628 = temp__4657__auto___33627;
      cb_33628.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_33629 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_33630 = oldpos_33629 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_33630);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_33629, newpos_33630));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__33634 = cljs.core._EQ_;
      var expr__33635 = relative_to;
      if (cljs.core.truth_(pred__33634.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__33635))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__33634.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__33635))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__33635)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 
1, true, 119, 130, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 83, 89, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 
17, 1, true, 107, 117, cljs.core.List.EMPTY, "*print-length* controls how many items of each collection the\n  printer will print. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  number of items of each collection to print. If a collection contains\n  more items, the printer will print items up to the limit followed by\n  '...' to represent the remaining items. The root binding is nil\n  indicating no limit.", new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "C:\\Users\\Bill\\Documents\\GitHub\\sente\\example-project\\target\\cljsbuild-compiler-0\\cljs\\pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__33637_SHARP_) {
    var temp__4657__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__33637_SHARP_));
    if (cljs.core.truth_(temp__4657__auto__)) {
      var v = temp__4657__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__33637_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__8620__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__8620__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__8620__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__8620__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__8620__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___33658 = arguments.length;
  var i__9708__auto___33659 = 0;
  while (true) {
    if (i__9708__auto___33659 < len__9707__auto___33658) {
      args__9714__auto__.push(arguments[i__9708__auto___33659]);
      var G__33660 = i__9708__auto___33659 + 1;
      i__9708__auto___33659 = G__33660;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_33644 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_33645 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_33646 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_33647 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_33648 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_33649 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_33650 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_33651 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_33652 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_33653 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_33654 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_33655 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__33183__auto___33661 = base_writer;
        var new_writer__33184__auto___33662 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__33183__auto___33661));
        var _STAR_out_STAR_33656_33663 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__33184__auto___33662 ? cljs.pprint.make_pretty_writer.call(null, base_writer__33183__auto___33661, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__33183__auto___33661;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_33656_33663;
        }
      } else {
        var _STAR_out_STAR_33657_33664 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_33657_33664;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_33655;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_33654;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_33653;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_33652;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_33651;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_33650;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_33649;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_33648;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_33647;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_33646;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_33645;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_33644;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq33642) {
  var G__33643 = cljs.core.first.call(null, seq33642);
  var seq33642__$1 = cljs.core.next.call(null, seq33642);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__33643, seq33642__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var args33665 = [];
  var len__9707__auto___33671 = arguments.length;
  var i__9708__auto___33672 = 0;
  while (true) {
    if (i__9708__auto___33672 < len__9707__auto___33671) {
      args33665.push(arguments[i__9708__auto___33672]);
      var G__33673 = i__9708__auto___33672 + 1;
      i__9708__auto___33672 = G__33673;
      continue;
    } else {
    }
    break;
  }
  var G__33667 = args33665.length;
  switch(G__33667) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33665.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_33668 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_33668;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__33183__auto__ = writer;
  var new_writer__33184__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__33183__auto__));
  var _STAR_out_STAR_33669 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__33184__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__33183__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__33183__auto__;
  try {
    var _STAR_print_pretty_STAR_33670_33675 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_33670_33675;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_33669;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__8620__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__8620__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__8620__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___33679 = arguments.length;
  var i__9708__auto___33680 = 0;
  while (true) {
    if (i__9708__auto___33680 < len__9707__auto___33679) {
      args__9714__auto__.push(arguments[i__9708__auto___33680]);
      var G__33681 = i__9708__auto___33680 + 1;
      i__9708__auto___33680 = G__33681;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq33676) {
  var G__33677 = cljs.core.first.call(null, seq33676);
  var seq33676__$1 = cljs.core.next.call(null, seq33676);
  var G__33678 = cljs.core.first.call(null, seq33676__$1);
  var seq33676__$2 = cljs.core.next.call(null, seq33676__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__33677, G__33678, seq33676__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33683, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33685 = k33683 instanceof cljs.core.Keyword ? k33683.fqn : null;
  switch(G__33685) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33683, else__9257__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33682) {
  var self__ = this;
  var G__33682__$1 = this;
  return new cljs.core.RecordIter(0, G__33682__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33682) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33686 = cljs.core.keyword_identical_QMARK_;
  var expr__33687 = k__9262__auto__;
  if (cljs.core.truth_(pred__33686.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__33687))) {
    return new cljs.pprint.arg_navigator(G__33682, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33686.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__33687))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__33682, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33686.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__33687))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__33682, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33682), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33682) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__33682, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__33684) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__33684), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__33684), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__33684), null, cljs.core.dissoc.call(null, G__33684, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__33693 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__33693, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33693, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k33697, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__33699 = k33697 instanceof cljs.core.Keyword ? k33697.fqn : null;
  switch(G__33699) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k33697, else__9257__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__33696) {
  var self__ = this;
  var G__33696__$1 = this;
  return new cljs.core.RecordIter(0, G__33696__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__33696) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__33700 = cljs.core.keyword_identical_QMARK_;
  var expr__33701 = k__9262__auto__;
  if (cljs.core.truth_(pred__33700.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__33701))) {
    return new cljs.pprint.compiled_directive(G__33696, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__33700.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__33701))) {
      return new cljs.pprint.compiled_directive(self__.func, G__33696, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__33700.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__33701))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__33696, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__33700.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__33701))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__33696, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__33696), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__33696) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__33696, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__33698) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__33698), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__33698), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__33698), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__33698), null, cljs.core.dissoc.call(null, G__33698, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__33704, navigator) {
  var vec__33714 = p__33704;
  var param = cljs.core.nth.call(null, vec__33714, 0, null);
  var vec__33717 = cljs.core.nth.call(null, vec__33714, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__33717, 0, null);
  var offset = cljs.core.nth.call(null, vec__33717, 1, null);
  var vec__33720 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__33720, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__33720, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__33726 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__33726, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__33726, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__8632__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__33732 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__33732, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__33732, 1, null);
  var base_output = function() {
    var or__8632__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__33735_SHARP_) {
    if (p1__33735_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__33735_SHARP_, base), cljs.core.quot.call(null, p1__33735_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__33736_SHARP_) {
        if (p1__33736_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__33736_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__33736_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__33741 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__33741, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__33741, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_33744 = arg < 0;
    var pos_arg_33745 = neg_33744 ? -arg : arg;
    var raw_str_33746 = cljs.pprint.opt_base_str.call(null, base, pos_arg_33745);
    var group_str_33747 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_33744, pos_arg_33745, raw_str_33746, vec__33741, arg, arg_navigator__$1) {
        return function(p1__33737_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__33737_SHARP_);
        };
      }(neg_33744, pos_arg_33745, raw_str_33746, vec__33741, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_33746));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_33746;
    var signed_str_33748 = neg_33744 ? [cljs.core.str("-"), cljs.core.str(group_str_33747)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_33747)].join("") : group_str_33747;
    var padded_str_33749 = signed_str_33748.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_33748.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_33748)].join("") : 
    signed_str_33748;
    cljs.pprint.print.call(null, padded_str_33749);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__33750 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__33751 = pos - 1;
      var G__33752 = cljs.core.first.call(null, remainder);
      var G__33753 = cljs.core.next.call(null, remainder);
      acc = G__33750;
      pos = G__33751;
      this$ = G__33752;
      remainder = G__33753;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__33757 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__33757, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33757, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_33760 = arg < 0 ? -arg : arg;
    var parts_33761 = cljs.pprint.remainders.call(null, 1E3, abs_arg_33760);
    if (cljs.core.count.call(null, parts_33761) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_33762 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_33761);
      var full_str_33763 = cljs.pprint.add_english_scales.call(null, parts_strs_33762, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_33763)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__33767 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__33767, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33767, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_33770 = arg < 0 ? -arg : arg;
    var parts_33771 = cljs.pprint.remainders.call(null, 1E3, abs_arg_33770);
    if (cljs.core.count.call(null, parts_33771) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_33772 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_33771));
      var head_str_33773 = cljs.pprint.add_english_scales.call(null, parts_strs_33772, 1);
      var tail_str_33774 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_33771));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_33773) && !cljs.core.empty_QMARK_.call(null, tail_str_33774) ? [cljs.core.str(head_str_33773), cljs.core.str(", "), cljs.core.str(tail_str_33774)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_33773) ? [cljs.core.str(head_str_33773), cljs.core.str("th")].join("") : tail_str_33774)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_33775 = cljs.core.rem.call(null, arg, 100);
      var not_teens_33776 = 11 < low_two_digits_33775 || 19 > low_two_digits_33775;
      var low_digit_33777 = cljs.core.rem.call(null, low_two_digits_33775, 10);
      cljs.pprint.print.call(null, low_digit_33777 === 1 && not_teens_33776 ? "st" : low_digit_33777 === 2 && not_teens_33776 ? "nd" : low_digit_33777 === 3 && not_teens_33776 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__33781 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__33781, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33781, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_33784 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_33785 = cljs.core.PersistentVector.EMPTY;
    var pos_33786 = cljs.core.count.call(null, digits_33784) - 1;
    var digits_33787__$1 = digits_33784;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_33787__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_33785));
      } else {
        var digit_33788 = cljs.core.first.call(null, digits_33787__$1);
        var G__33789 = cljs.core._EQ_.call(null, 0, digit_33788) ? acc_33785 : cljs.core.conj.call(null, acc_33785, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_33786), digit_33788 - 1));
        var G__33790 = pos_33786 - 1;
        var G__33791 = cljs.core.next.call(null, digits_33787__$1);
        acc_33785 = G__33789;
        pos_33786 = G__33790;
        digits_33787__$1 = G__33791;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__33795 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__33795, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33795, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__33804 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__33804, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33804, 1, null);
  var pred__33807_33810 = cljs.core._EQ_;
  var expr__33808_33811 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__33807_33810.call(null, "o", expr__33808_33811))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__33807_33810.call(null, "u", expr__33808_33811))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__33807_33810.call(null, null, expr__33808_33811))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__33808_33811)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__33815 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__33815, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33815, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__33824 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__33824, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__33824, 1, null);
      var vec__33827 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__33827, 0, null);
      var offsets = cljs.core.nth.call(null, vec__33827, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__33833 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__33833, 0, null);
  var e = cljs.core.nth.call(null, vec__33833, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__33836 = i - 1;
        i = G__33836;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__8632__auto__ = d;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__8963__auto__ = 2;
      var y__8964__auto__ = w;
      return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__8963__auto__ = e + 1;
      var y__8964__auto__ = w__$1 - 1;
      return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
    }() : w__$1 + e;
    var vec__33840 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__33840, 0, null);
    var e1 = cljs.core.nth.call(null, vec__33840, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__33840, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__33840, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__33846 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__33846, 0, null);
  var e1 = cljs.core.nth.call(null, vec__33846, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__33861 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__33861, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33861, 1, null);
  var vec__33864 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__33864, 0, null);
  var abs = cljs.core.nth.call(null, vec__33864, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__33867 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__33867, 0, null);
  var exp = cljs.core.nth.call(null, vec__33867, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__8632__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__33870 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__33870, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__33870, 1, null);
  var expanded = cljs.core.nth.call(null, vec__33870, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__8620__auto__ = w;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = d;
      if (cljs.core.truth_(and__8620__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_33873 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_33874 = cljs.core.truth_(add_sign) ? len_33873 + 1 : len_33873;
    var prepend_zero_33875__$1 = prepend_zero && !(signed_len_33874 >= w);
    var append_zero_33876__$1 = append_zero && !(signed_len_33874 >= w);
    var full_len_33877 = prepend_zero_33875__$1 || append_zero_33876__$1 ? signed_len_33874 + 1 : signed_len_33874;
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = full_len_33877 > w;
      if (and__8620__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__8620__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_33877, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_33875__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_33876__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__33894 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__33894, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33894, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__33900_33910 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__33901_33911 = G__33900_33910;
  var mantissa_33912 = cljs.core.nth.call(null, vec__33901_33911, 0, null);
  var exp_33913 = cljs.core.nth.call(null, vec__33901_33911, 1, null);
  var G__33900_33914__$1 = G__33900_33910;
  while (true) {
    var vec__33904_33915 = G__33900_33914__$1;
    var mantissa_33916__$1 = cljs.core.nth.call(null, vec__33904_33915, 0, null);
    var exp_33917__$1 = cljs.core.nth.call(null, vec__33904_33915, 1, null);
    var w_33918 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_33919 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_33920 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_33921 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_33922 = function() {
      var or__8632__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_33923 = function() {
      var or__8632__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_33924 = k_33921 <= 0;
    var scaled_exp_33925 = exp_33917__$1 - (k_33921 - 1);
    var scaled_exp_str_33926 = [cljs.core.str(Math.abs(scaled_exp_33925))].join("");
    var scaled_exp_str_33927__$1 = [cljs.core.str(expchar_33922), cljs.core.str(scaled_exp_33925 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_33920) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_33920 - cljs.core.count.call(null, scaled_exp_str_33926), "0")) : null), cljs.core.str(scaled_exp_str_33926)].join("");
    var exp_width_33928 = cljs.core.count.call(null, scaled_exp_str_33927__$1);
    var base_mantissa_width_33929 = cljs.core.count.call(null, mantissa_33916__$1);
    var scaled_mantissa_33930 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_33921, "0"))), cljs.core.str(mantissa_33916__$1), cljs.core.str(cljs.core.truth_(d_33919) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_33919 - (base_mantissa_width_33929 - 1) - (k_33921 < 0 ? -k_33921 : 0), "0")) : null)].join("");
    var w_mantissa_33931 = cljs.core.truth_(w_33918) ? w_33918 - exp_width_33928 : null;
    var vec__33907_33932 = cljs.pprint.round_str.call(null, scaled_mantissa_33930, 0, cljs.core._EQ_.call(null, k_33921, 0) ? d_33919 - 1 : k_33921 > 0 ? d_33919 : k_33921 < 0 ? d_33919 - 1 : null, cljs.core.truth_(w_mantissa_33931) ? w_mantissa_33931 - (cljs.core.truth_(add_sign_33923) ? 1 : 0) : null);
    var rounded_mantissa_33933 = cljs.core.nth.call(null, vec__33907_33932, 0, null);
    var __33934 = cljs.core.nth.call(null, vec__33907_33932, 1, null);
    var incr_exp_33935 = cljs.core.nth.call(null, vec__33907_33932, 2, null);
    var full_mantissa_33936 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_33933, k_33921);
    var append_zero_33937 = cljs.core._EQ_.call(null, k_33921, cljs.core.count.call(null, rounded_mantissa_33933)) && d_33919 == null;
    if (cljs.core.not.call(null, incr_exp_33935)) {
      if (cljs.core.truth_(w_33918)) {
        var len_33938 = cljs.core.count.call(null, full_mantissa_33936) + exp_width_33928;
        var signed_len_33939 = cljs.core.truth_(add_sign_33923) ? len_33938 + 1 : len_33938;
        var prepend_zero_33940__$1 = prepend_zero_33924 && !cljs.core._EQ_.call(null, signed_len_33939, w_33918);
        var full_len_33941 = prepend_zero_33940__$1 ? signed_len_33939 + 1 : signed_len_33939;
        var append_zero_33942__$1 = append_zero_33937 && full_len_33941 < w_33918;
        if (cljs.core.truth_(function() {
          var and__8620__auto__ = function() {
            var or__8632__auto__ = full_len_33941 > w_33918;
            if (or__8632__auto__) {
              return or__8632__auto__;
            } else {
              var and__8620__auto__ = e_33920;
              if (cljs.core.truth_(and__8620__auto__)) {
                return exp_width_33928 - 2 > e_33920;
              } else {
                return and__8620__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__8620__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__8620__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_33918, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_33918 - full_len_33941 - (append_zero_33942__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_33923) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_33940__$1 ? "0" : null), cljs.core.str(full_mantissa_33936), cljs.core.str(append_zero_33942__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_33927__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_33923) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_33924 ? "0" : null), cljs.core.str(full_mantissa_33936), cljs.core.str(append_zero_33937 ? "0" : null), cljs.core.str(scaled_exp_str_33927__$1)].join(""));
      }
    } else {
      var G__33943 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_33933, exp_33917__$1 + 1], null);
      G__33900_33914__$1 = G__33943;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__33950 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__33950, 0, null);
  var _ = cljs.core.nth.call(null, vec__33950, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__33953 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__33953, 0, null);
  var exp = cljs.core.nth.call(null, vec__33953, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__8963__auto__ = cljs.core.count.call(null, mantissa);
    var y__8964__auto__ = function() {
      var x__8970__auto__ = n;
      var y__8971__auto__ = 7;
      return x__8970__auto__ < y__8971__auto__ ? x__8970__auto__ : y__8971__auto__;
    }();
    return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__33965 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__33965, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33965, 1, null);
  var vec__33968 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__33968, 0, null);
  var exp = cljs.core.nth.call(null, vec__33968, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__8632__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__33971 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__33971, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__33971, 1, null);
  var expanded = cljs.core.nth.call(null, vec__33971, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__8620__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__8620__auto__)) {
      return add_sign;
    } else {
      return and__8620__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__8620__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__8620__auto__) {
      return add_sign;
    } else {
      return and__8620__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__33977 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__33977, 0, null);
  var navigator = cljs.core.nth.call(null, vec__33977, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__33983 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__33983, 0, null);
  var navigator = cljs.core.nth.call(null, vec__33983, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__33989 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__33989, 0, null);
  var navigator = cljs.core.nth.call(null, vec__33989, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__33998 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__33998, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__33998, 1, null);
  var vec__34001 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__34001, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__34001, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__8632__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        var and__8620__auto__ = max_count;
        if (cljs.core.truth_(and__8620__auto__)) {
          return count >= max_count;
        } else {
          return and__8620__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__34004 = count + 1;
        var G__34005 = iter_result;
        var G__34006 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__34004;
        args__$1 = G__34005;
        last_pos = G__34006;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__34013 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__34013, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__34013, 1, null);
  var vec__34016 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__34016, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__34016, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__8632__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        var and__8620__auto__ = max_count;
        if (cljs.core.truth_(and__8620__auto__)) {
          return count >= max_count;
        } else {
          return and__8620__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__34019 = count + 1;
        var G__34020 = cljs.core.next.call(null, arg_list__$1);
        count = G__34019;
        arg_list__$1 = G__34020;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__34024 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__34024, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__34024, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__8632__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        var and__8620__auto__ = max_count;
        if (cljs.core.truth_(and__8620__auto__)) {
          return count >= max_count;
        } else {
          return and__8620__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__34027 = count + 1;
        var G__34028 = iter_result;
        var G__34029 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__34027;
        navigator__$2 = G__34028;
        last_pos = G__34029;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__34036 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__34036, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__34036, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__8632__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        var and__8620__auto__ = max_count;
        if (cljs.core.truth_(and__8620__auto__)) {
          return count >= max_count;
        } else {
          return and__8620__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__34039 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__34039, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__34039, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__34042 = count + 1;
        var G__34043 = navigator__$3;
        count = G__34042;
        navigator__$2 = G__34043;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__34048 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_34051 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_34051;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__34048, 0, null);
      var result_str = cljs.core.nth.call(null, vec__34048, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__34052 = cljs.core.next.call(null, clauses__$1);
        var G__34053 = cljs.core.conj.call(null, acc, result_str);
        var G__34054 = iter_result;
        clauses__$1 = G__34052;
        acc = G__34053;
        navigator__$1 = G__34054;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__34067 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var else$ = temp__4657__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__34070 = cljs.core.nth.call(null, vec__34067, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__34070, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__34067, 1, null);
  var navigator__$1 = function() {
    var or__8632__auto__ = new_navigator;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__34073 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__34073, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__34073, 1, null);
  var navigator__$2 = function() {
    var or__8632__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__8632__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__8632__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__34076 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__34076, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__34076, 1, null);
  var slots = function() {
    var x__8963__auto__ = 1;
    var y__8964__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__8963__auto__ = minpad;
    var y__8964__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = eol_str;
    if (cljs.core.truth_(and__8620__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__8620__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_34079__$1 = slots;
  var extra_pad_34080__$1 = extra_pad;
  var strs_34081__$1 = strs;
  var pad_only_34082 = function() {
    var or__8632__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_34081__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_34081__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_34082) ? cljs.core.first.call(null, strs_34081__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__8632__auto__ = pad_only_34082;
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          var or__8632__auto____$1 = cljs.core.next.call(null, strs_34081__$1);
          if (or__8632__auto____$1) {
            return or__8632__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_34080__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__34083 = slots_34079__$1 - 1;
      var G__34084 = extra_pad_34080__$1 - 1;
      var G__34085 = cljs.core.truth_(pad_only_34082) ? strs_34081__$1 : cljs.core.next.call(null, strs_34081__$1);
      var G__34086 = false;
      slots_34079__$1 = G__34083;
      extra_pad_34080__$1 = G__34084;
      strs_34081__$1 = G__34085;
      pad_only_34082 = G__34086;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint34093 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint34093 = function(downcase_writer, writer, meta34094) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta34094 = meta34094;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint34093.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_34095, meta34094__$1) {
      var self__ = this;
      var _34095__$1 = this;
      return new cljs.pprint.t_cljs$pprint34093(self__.downcase_writer, self__.writer, meta34094__$1);
    };
    cljs.pprint.t_cljs$pprint34093.prototype.cljs$core$IMeta$_meta$arity$1 = function(_34095) {
      var self__ = this;
      var _34095__$1 = this;
      return self__.meta34094;
    };
    cljs.pprint.t_cljs$pprint34093.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint34093.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__34096 = cljs.core._EQ_;
      var expr__34097 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__34096.call(null, String, expr__34097))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__34096.call(null, Number, expr__34097))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__34097)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint34093.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta34094", "meta34094", 1927089461, null)], null);
    };
    cljs.pprint.t_cljs$pprint34093.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint34093.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint34093";
    cljs.pprint.t_cljs$pprint34093.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.pprint/t_cljs$pprint34093");
    };
    cljs.pprint.__GT_t_cljs$pprint34093 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint34093(downcase_writer__$1, writer__$1, meta34094) {
      return new cljs.pprint.t_cljs$pprint34093(downcase_writer__$1, writer__$1, meta34094);
    };
  }
  return new cljs.pprint.t_cljs$pprint34093(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint34105 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint34105 = function(upcase_writer, writer, meta34106) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta34106 = meta34106;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint34105.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_34107, meta34106__$1) {
      var self__ = this;
      var _34107__$1 = this;
      return new cljs.pprint.t_cljs$pprint34105(self__.upcase_writer, self__.writer, meta34106__$1);
    };
    cljs.pprint.t_cljs$pprint34105.prototype.cljs$core$IMeta$_meta$arity$1 = function(_34107) {
      var self__ = this;
      var _34107__$1 = this;
      return self__.meta34106;
    };
    cljs.pprint.t_cljs$pprint34105.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint34105.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__34108 = cljs.core._EQ_;
      var expr__34109 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__34108.call(null, String, expr__34109))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__34108.call(null, Number, expr__34109))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__34109)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint34105.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta34106", "meta34106", -1221612676, null)], null);
    };
    cljs.pprint.t_cljs$pprint34105.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint34105.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint34105";
    cljs.pprint.t_cljs$pprint34105.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cljs.pprint/t_cljs$pprint34105");
    };
    cljs.pprint.__GT_t_cljs$pprint34105 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint34105(upcase_writer__$1, writer__$1, meta34106) {
      return new cljs.pprint.t_cljs$pprint34105(upcase_writer__$1, writer__$1, meta34106);
    };
  }
  return new cljs.pprint.t_cljs$pprint34105(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__8620__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = f;
      if (cljs.core.truth_(and__8620__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__8620__auto__ = m;
          if (cljs.core.truth_(and__8620__auto__)) {
            return m.index + 1;
          } else {
            return and__8620__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t_cljs$pprint34117 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint34117 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta34118) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta34118 = meta34118;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint34117.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_34119, meta34118__$1) {
        var self__ = this;
        var _34119__$1 = this;
        return new cljs.pprint.t_cljs$pprint34117(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta34118__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint34117.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_34119) {
        var self__ = this;
        var _34119__$1 = this;
        return self__.meta34118;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint34117.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint34117.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__34120 = cljs.core._EQ_;
        var expr__34121 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__34120.call(null, String, expr__34121))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__34120.call(null, Number, expr__34121))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__34121)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint34117.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta34118", "meta34118", -1299242634, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint34117.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint34117.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint34117";
    cljs.pprint.t_cljs$pprint34117.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
        return cljs.core._write.call(null, writer__9239__auto__, "cljs.pprint/t_cljs$pprint34117");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t_cljs$pprint34117 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint34117(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta34118) {
        return new cljs.pprint.t_cljs$pprint34117(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta34118);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t_cljs$pprint34117(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t_cljs$pprint34129 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint34129 = function(init_cap_writer, writer, capped, meta34130) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta34130 = meta34130;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint34129.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_34131, meta34130__$1) {
        var self__ = this;
        var _34131__$1 = this;
        return new cljs.pprint.t_cljs$pprint34129(self__.init_cap_writer, self__.writer, self__.capped, meta34130__$1);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint34129.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_34131) {
        var self__ = this;
        var _34131__$1 = this;
        return self__.meta34130;
      };
    }(capped);
    cljs.pprint.t_cljs$pprint34129.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint34129.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__34132 = cljs.core._EQ_;
        var expr__34133 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__34132.call(null, String, expr__34133))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__8620__auto__ = m;
              if (cljs.core.truth_(and__8620__auto__)) {
                return m.index;
              } else {
                return and__8620__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__34132.call(null, Number, expr__34133))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__8620__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__8620__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__8620__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__34133)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t_cljs$pprint34129.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta34130", "meta34130", 1933875867, null)], null);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint34129.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint34129.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint34129";
    cljs.pprint.t_cljs$pprint34129.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
        return cljs.core._write.call(null, writer__9239__auto__, "cljs.pprint/t_cljs$pprint34129");
      };
    }(capped);
    cljs.pprint.__GT_t_cljs$pprint34129 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint34129(init_cap_writer__$1, writer__$1, capped__$1, meta34130) {
        return new cljs.pprint.t_cljs$pprint34129(init_cap_writer__$1, writer__$1, capped__$1, meta34130);
      };
    }(capped);
  }
  return new cljs.pprint.t_cljs$pprint34129(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_34136 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_34136;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_34139 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_34140 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_34141 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_34142 = current_34141 < colnum_34139 ? colnum_34139 - current_34141 : cljs.core._EQ_.call(null, colinc_34140, 0) ? 0 : colinc_34140 - cljs.core.rem.call(null, current_34141 - colnum_34139, colinc_34140);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_34142, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_34143 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_34144 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_34145 = colrel_34143 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_34146 = colinc_34144 > 0 ? cljs.core.rem.call(null, start_col_34145, colinc_34144) : 0;
  var space_count_34147 = colrel_34143 + (cljs.core._EQ_.call(null, 0, offset_34146) ? 0 : colinc_34144 - offset_34146);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_34147, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__34153 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__34153, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__34153, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34156_34158 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34157_34159 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34157_34159;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34156_34158;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__34160_SHARP_, p2__34161_SHARP_, p3__34162_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__34160_SHARP_, p2__34161_SHARP_, p3__34162_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__34163_SHARP_, p2__34164_SHARP_, p3__34165_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__34163_SHARP_, p2__34164_SHARP_, p3__34165_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__34166_SHARP_, p2__34167_SHARP_, p3__34168_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__34166_SHARP_, p2__34167_SHARP_, p3__34168_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__34169_SHARP_, p2__34170_SHARP_, p3__34171_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__34169_SHARP_, p2__34170_SHARP_, p3__34171_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__34172_SHARP_, p2__34173_SHARP_, p3__34174_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__34172_SHARP_, p2__34173_SHARP_, p3__34174_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__34175_SHARP_, p2__34176_SHARP_, p3__34177_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__34175_SHARP_, p2__34176_SHARP_, p3__34177_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__34178_SHARP_, p2__34179_SHARP_, p3__34180_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__34178_SHARP_), p1__34178_SHARP_, p2__34179_SHARP_, p3__34180_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__8620__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__8620__auto__;
      }
    }())) {
      return function(p1__34181_SHARP_, p2__34182_SHARP_, p3__34183_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__34181_SHARP_, p2__34182_SHARP_, p3__34183_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__34184_SHARP_, p2__34185_SHARP_, p3__34186_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__34184_SHARP_, p2__34185_SHARP_, p3__34186_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__34187_SHARP_, p2__34188_SHARP_, p3__34189_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__34187_SHARP_, p2__34188_SHARP_, p3__34189_SHARP_);
          };
        } else {
          return function(p1__34190_SHARP_, p2__34191_SHARP_, p3__34192_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__34190_SHARP_, p2__34191_SHARP_, p3__34192_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__34202 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__34202, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__34202, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__9547__auto___34220 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_34221 = 0;
    while (true) {
      if (i_34221 < n__9547__auto___34220) {
        cljs.pprint.prn.call(null);
        var G__34222 = i_34221 + 1;
        i_34221 = G__34222;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_34223 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_34223 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__9547__auto___34224 = cnt_34223 - 1;
    var i_34225 = 0;
    while (true) {
      if (i_34225 < n__9547__auto___34224) {
        cljs.pprint.prn.call(null);
        var G__34226 = i_34225 + 1;
        i_34225 = G__34226;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__9547__auto___34227 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_34228 = 0;
    while (true) {
      if (i_34228 < n__9547__auto___34227) {
        cljs.pprint.print.call(null, "\f");
        var G__34229 = i_34228 + 1;
        i_34228 = G__34229;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__34193_SHARP_, p2__34194_SHARP_, p3__34195_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__34193_SHARP_, p2__34194_SHARP_, p3__34195_SHARP_);
    };
  } else {
    return function(p1__34196_SHARP_, p2__34197_SHARP_, p3__34198_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__34196_SHARP_, p2__34197_SHARP_, p3__34198_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__34205 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__34205, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__34205, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__34208 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__34208, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__34208, 1, null);
      var vec__34211 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__34211, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__34211, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__8620__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__8620__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__8620__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__34199_SHARP_, p2__34200_SHARP_, p3__34201_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__34199_SHARP_, p2__34200_SHARP_, p3__34201_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__8620__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__8620__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__8620__auto__ = arg1;
      if (cljs.core.truth_(and__8620__auto__)) {
        var and__8620__auto____$1 = arg2;
        if (cljs.core.truth_(and__8620__auto____$1)) {
          return arg3;
        } else {
          return and__8620__auto____$1;
        }
      } else {
        return and__8620__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__8620__auto__ = arg1;
        if (cljs.core.truth_(and__8620__auto__)) {
          return arg2;
        } else {
          return and__8620__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__8632__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__34214 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__34214, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__34214, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__34217 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__34217, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__34217, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__34230) {
  var vec__34234 = p__34230;
  var s = cljs.core.nth.call(null, vec__34234, 0, null);
  var offset = cljs.core.nth.call(null, vec__34234, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__34234, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__34237) {
  var vec__34241 = p__34237;
  var p = cljs.core.nth.call(null, vec__34241, 0, null);
  var offset = cljs.core.nth.call(null, vec__34241, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__34248) {
    var vec__34249 = p__34248;
    var s__$1 = cljs.core.nth.call(null, vec__34249, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__34249, 1, null);
    var flags = cljs.core.nth.call(null, vec__34249, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__8620__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__8620__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__8620__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__8620__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__8620__auto__) {
      var and__8620__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__8620__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__8970__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__8971__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__8970__auto__ < y__8971__auto__ ? x__8970__auto__ : y__8971__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__34252_SHARP_, p2__34253_SHARP_) {
    var val = cljs.core.first.call(null, p1__34252_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__34253_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__34253_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__34252_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__9412__auto__ = function cljs$pprint$map_params_$_iter__34285(s__34286) {
      return new cljs.core.LazySeq(null, function() {
        var s__34286__$1 = s__34286;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__34286__$1);
          if (temp__4657__auto__) {
            var s__34286__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__34286__$2)) {
              var c__9410__auto__ = cljs.core.chunk_first.call(null, s__34286__$2);
              var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
              var b__34288 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
              if (function() {
                var i__34287 = 0;
                while (true) {
                  if (i__34287 < size__9411__auto__) {
                    var vec__34301 = cljs.core._nth.call(null, c__9410__auto__, i__34287);
                    var name = cljs.core.nth.call(null, vec__34301, 0, null);
                    var vec__34304 = cljs.core.nth.call(null, vec__34301, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__34304, 0, null);
                    cljs.core.chunk_append.call(null, b__34288, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__34313 = i__34287 + 1;
                    i__34287 = G__34313;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34288), cljs$pprint$map_params_$_iter__34285.call(null, cljs.core.chunk_rest.call(null, s__34286__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34288), null);
              }
            } else {
              var vec__34307 = cljs.core.first.call(null, s__34286__$2);
              var name = cljs.core.nth.call(null, vec__34307, 0, null);
              var vec__34310 = cljs.core.nth.call(null, vec__34307, 1, null);
              var default$ = cljs.core.nth.call(null, vec__34310, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__34285.call(null, cljs.core.rest.call(null, s__34286__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__9412__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__34254_SHARP_, p2__34255_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__34254_SHARP_, p2__34255_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__34256_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__34256_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__34326 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__34326, 0, null);
  var vec__34329 = cljs.core.nth.call(null, vec__34326, 1, null);
  var rest = cljs.core.nth.call(null, vec__34329, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__34329, 1, null);
  var vec__34332 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__34332, 0, null);
  var vec__34335 = cljs.core.nth.call(null, vec__34332, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__34335, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__34335, 1, null);
  var flags = cljs.core.nth.call(null, vec__34335, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__8620__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__8620__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__8620__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__34341 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__34341, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__34341, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__34354) {
    var vec__34355 = p__34354;
    var clause_map = cljs.core.nth.call(null, vec__34355, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__34355, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__34355, 2, null);
    var vec__34358 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__34358, 0, null);
    var vec__34361 = cljs.core.nth.call(null, vec__34358, 1, null);
    var type = cljs.core.nth.call(null, vec__34361, 0, null);
    var right_params = cljs.core.nth.call(null, vec__34361, 1, null);
    var else_params = cljs.core.nth.call(null, vec__34361, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__34361, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_34369 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_34369) {
      return function(p__34370) {
        var vec__34371 = p__34370;
        var s = cljs.core.nth.call(null, vec__34371, 0, null);
        var offset = cljs.core.nth.call(null, vec__34371, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_34369), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_34369;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__8632__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          var or__8632__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__8632__auto____$1)) {
            return or__8632__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__34374 = cljs.core.next.call(null, format__$1);
        format__$1 = G__34374;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var args34375 = [];
  var len__9707__auto___34385 = arguments.length;
  var i__9708__auto___34386 = 0;
  while (true) {
    if (i__9708__auto___34386 < len__9707__auto___34385) {
      args34375.push(arguments[i__9708__auto___34386]);
      var G__34387 = i__9708__auto___34386 + 1;
      i__9708__auto___34386 = G__34387;
      continue;
    } else {
    }
    break;
  }
  var G__34377 = args34375.length;
  switch(G__34377) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34375.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__8620__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__8620__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__8620__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_34378 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_34378;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__34379 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__34379, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__34379, 1, null);
      var vec__34382 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__34382, 0, null);
      var offsets = cljs.core.nth.call(null, vec__34382, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = macro_char;
    if (cljs.core.truth_(and__8620__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__8620__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34392_34395 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34393_34396 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count34394_34397 = 0;
      var alis_34398__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count34394_34397 < cljs.core._STAR_print_length_STAR_) {
          if (alis_34398__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_34398__$1));
            if (cljs.core.next.call(null, alis_34398__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__34399 = length_count34394_34397 + 1;
              var G__34400 = cljs.core.next.call(null, alis_34398__$1);
              length_count34394_34397 = G__34399;
              alis_34398__$1 = G__34400;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34393_34396;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34392_34395;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34404_34407 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34405_34408 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count34406_34409 = 0;
      var aseq_34410 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count34406_34409 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_34410) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_34410));
            if (cljs.core.next.call(null, aseq_34410)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__34411 = length_count34406_34409 + 1;
              var G__34412 = cljs.core.next.call(null, aseq_34410);
              length_count34406_34409 = G__34411;
              aseq_34410 = G__34412;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34405_34408;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34404_34407;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__33244__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
  return function(format_in__33244__auto__, cf__33245__auto__) {
    return function() {
      var G__34413__delegate = function(args__33246__auto__) {
        var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
        return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
      };
      var G__34413 = function(var_args) {
        var args__33246__auto__ = null;
        if (arguments.length > 0) {
          var G__34414__i = 0, G__34414__a = new Array(arguments.length - 0);
          while (G__34414__i < G__34414__a.length) {
            G__34414__a[G__34414__i] = arguments[G__34414__i + 0];
            ++G__34414__i;
          }
          args__33246__auto__ = new cljs.core.IndexedSeq(G__34414__a, 0);
        }
        return G__34413__delegate.call(this, args__33246__auto__);
      };
      G__34413.cljs$lang$maxFixedArity = 0;
      G__34413.cljs$lang$applyTo = function(arglist__34415) {
        var args__33246__auto__ = cljs.core.seq(arglist__34415);
        return G__34413__delegate(args__33246__auto__);
      };
      G__34413.cljs$core$IFn$_invoke$arity$variadic = G__34413__delegate;
      return G__34413;
    }();
  }(format_in__33244__auto__, cf__33245__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34421_34426 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34422_34427 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count34423_34428 = 0;
      var aseq_34429 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count34423_34428 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_34429) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_34424_34430 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_34425_34431 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_34429));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_34429)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34425_34431;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34424_34430;
              }
            }
            if (cljs.core.next.call(null, aseq_34429)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__34432 = length_count34423_34428 + 1;
              var G__34433 = cljs.core.next.call(null, aseq_34429);
              length_count34423_34428 = G__34432;
              aseq_34429 = G__34433;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34422_34427;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34421_34426;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__33244__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
  return function(format_in__33244__auto__, cf__33245__auto__) {
    return function() {
      var G__34434__delegate = function(args__33246__auto__) {
        var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
        return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
      };
      var G__34434 = function(var_args) {
        var args__33246__auto__ = null;
        if (arguments.length > 0) {
          var G__34435__i = 0, G__34435__a = new Array(arguments.length - 0);
          while (G__34435__i < G__34435__a.length) {
            G__34435__a[G__34435__i] = arguments[G__34435__i + 0];
            ++G__34435__i;
          }
          args__33246__auto__ = new cljs.core.IndexedSeq(G__34435__a, 0);
        }
        return G__34434__delegate.call(this, args__33246__auto__);
      };
      G__34434.cljs$lang$maxFixedArity = 0;
      G__34434.cljs$lang$applyTo = function(arglist__34436) {
        var args__33246__auto__ = cljs.core.seq(arglist__34436);
        return G__34434__delegate(args__33246__auto__);
      };
      G__34434.cljs$core$IFn$_invoke$arity$variadic = G__34434__delegate;
      return G__34434;
    }();
  }(format_in__33244__auto__, cf__33245__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__8632__auto__ = function() {
    var temp__4657__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var match = temp__4657__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34441_34445 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34442_34446 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__8620__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__8620__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__8620__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34442_34446;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34441_34445;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__33244__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
  return function(format_in__33244__auto__, cf__33245__auto__) {
    return function() {
      var G__34447__delegate = function(args__33246__auto__) {
        var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
        return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
      };
      var G__34447 = function(var_args) {
        var args__33246__auto__ = null;
        if (arguments.length > 0) {
          var G__34448__i = 0, G__34448__a = new Array(arguments.length - 0);
          while (G__34448__i < G__34448__a.length) {
            G__34448__a[G__34448__i] = arguments[G__34448__i + 0];
            ++G__34448__i;
          }
          args__33246__auto__ = new cljs.core.IndexedSeq(G__34448__a, 0);
        }
        return G__34447__delegate.call(this, args__33246__auto__);
      };
      G__34447.cljs$lang$maxFixedArity = 0;
      G__34447.cljs$lang$applyTo = function(arglist__34449) {
        var args__33246__auto__ = cljs.core.seq(arglist__34449);
        return G__34447__delegate(args__33246__auto__);
      };
      G__34447.cljs$core$IFn$_invoke$arity$variadic = G__34447__delegate;
      return G__34447;
    }();
  }(format_in__33244__auto__, cf__33245__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__9557__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__9558__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__9559__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__9560__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__9561__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__9561__auto__, method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__34468 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__34468, 0, null);
    var end = cljs.core.nth.call(null, vec__34468, 1, null);
    var vec__34471 = reference;
    var seq__34472 = cljs.core.seq.call(null, vec__34471);
    var first__34473 = cljs.core.first.call(null, seq__34472);
    var seq__34472__$1 = cljs.core.next.call(null, seq__34472);
    var keyw = first__34473;
    var args = seq__34472__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_34474_34484 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_34475_34485 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__33244__auto__ = "~w~:i";
          var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
          return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args) {
            return function() {
              var G__34486__delegate = function(args__33246__auto__) {
                var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
              };
              var G__34486 = function(var_args) {
                var args__33246__auto__ = null;
                if (arguments.length > 0) {
                  var G__34487__i = 0, G__34487__a = new Array(arguments.length - 0);
                  while (G__34487__i < G__34487__a.length) {
                    G__34487__a[G__34487__i] = arguments[G__34487__i + 0];
                    ++G__34487__i;
                  }
                  args__33246__auto__ = new cljs.core.IndexedSeq(G__34487__a, 0);
                }
                return G__34486__delegate.call(this, args__33246__auto__);
              };
              G__34486.cljs$lang$maxFixedArity = 0;
              G__34486.cljs$lang$applyTo = function(arglist__34488) {
                var args__33246__auto__ = cljs.core.seq(arglist__34488);
                return G__34486__delegate(args__33246__auto__);
              };
              G__34486.cljs$core$IFn$_invoke$arity$variadic = G__34486__delegate;
              return G__34486;
            }();
          }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args);
        })().call(null, keyw);
        var args_34489__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_34489__$1)) {
            (function() {
              var format_in__33244__auto__ = " ";
              var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
              return function(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args) {
                return function() {
                  var G__34490__delegate = function(args__33246__auto__) {
                    var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                    return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                  };
                  var G__34490 = function(var_args) {
                    var args__33246__auto__ = null;
                    if (arguments.length > 0) {
                      var G__34491__i = 0, G__34491__a = new Array(arguments.length - 0);
                      while (G__34491__i < G__34491__a.length) {
                        G__34491__a[G__34491__i] = arguments[G__34491__i + 0];
                        ++G__34491__i;
                      }
                      args__33246__auto__ = new cljs.core.IndexedSeq(G__34491__a, 0);
                    }
                    return G__34490__delegate.call(this, args__33246__auto__);
                  };
                  G__34490.cljs$lang$maxFixedArity = 0;
                  G__34490.cljs$lang$applyTo = function(arglist__34492) {
                    var args__33246__auto__ = cljs.core.seq(arglist__34492);
                    return G__34490__delegate(args__33246__auto__);
                  };
                  G__34490.cljs$core$IFn$_invoke$arity$variadic = G__34490__delegate;
                  return G__34490;
                }();
              }(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args);
            })().call(null);
            var arg_34493 = cljs.core.first.call(null, args_34489__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_34493)) {
              var vec__34476_34494 = cljs.pprint.brackets.call(null, arg_34493);
              var start_34495__$1 = cljs.core.nth.call(null, vec__34476_34494, 0, null);
              var end_34496__$1 = cljs.core.nth.call(null, vec__34476_34494, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_34479_34497 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_34480_34498 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_34495__$1, null, end_34496__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_34493), 3) && cljs.core.second.call(null, arg_34493) instanceof cljs.core.Keyword) {
                    var vec__34481_34499 = arg_34493;
                    var ns_34500 = cljs.core.nth.call(null, vec__34481_34499, 0, null);
                    var kw_34501 = cljs.core.nth.call(null, vec__34481_34499, 1, null);
                    var lis_34502 = cljs.core.nth.call(null, vec__34481_34499, 2, null);
                    (function() {
                      var format_in__33244__auto__ = "~w ~w ";
                      var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
                      return function(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, vec__34481_34499, ns_34500, kw_34501, lis_34502, _STAR_current_level_STAR_34479_34497, _STAR_current_length_STAR_34480_34498, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args) {
                        return function() {
                          var G__34503__delegate = function(args__33246__auto__) {
                            var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                            return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                          };
                          var G__34503 = function(var_args) {
                            var args__33246__auto__ = null;
                            if (arguments.length > 0) {
                              var G__34504__i = 0, G__34504__a = new Array(arguments.length - 0);
                              while (G__34504__i < G__34504__a.length) {
                                G__34504__a[G__34504__i] = arguments[G__34504__i + 0];
                                ++G__34504__i;
                              }
                              args__33246__auto__ = new cljs.core.IndexedSeq(G__34504__a, 0);
                            }
                            return G__34503__delegate.call(this, args__33246__auto__);
                          };
                          G__34503.cljs$lang$maxFixedArity = 0;
                          G__34503.cljs$lang$applyTo = function(arglist__34505) {
                            var args__33246__auto__ = cljs.core.seq(arglist__34505);
                            return G__34503__delegate(args__33246__auto__);
                          };
                          G__34503.cljs$core$IFn$_invoke$arity$variadic = G__34503__delegate;
                          return G__34503;
                        }();
                      }(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, vec__34481_34499, ns_34500, kw_34501, lis_34502, _STAR_current_level_STAR_34479_34497, _STAR_current_length_STAR_34480_34498, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args);
                    })().call(null, ns_34500, kw_34501);
                    if (cljs.core.sequential_QMARK_.call(null, lis_34502)) {
                      (function() {
                        var format_in__33244__auto__ = cljs.core.vector_QMARK_.call(null, lis_34502) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
                        return function(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, vec__34481_34499, ns_34500, kw_34501, lis_34502, _STAR_current_level_STAR_34479_34497, _STAR_current_length_STAR_34480_34498, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args) {
                          return function() {
                            var G__34506__delegate = function(args__33246__auto__) {
                              var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                              return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                            };
                            var G__34506 = function(var_args) {
                              var args__33246__auto__ = null;
                              if (arguments.length > 0) {
                                var G__34507__i = 0, G__34507__a = new Array(arguments.length - 0);
                                while (G__34507__i < G__34507__a.length) {
                                  G__34507__a[G__34507__i] = arguments[G__34507__i + 0];
                                  ++G__34507__i;
                                }
                                args__33246__auto__ = new cljs.core.IndexedSeq(G__34507__a, 0);
                              }
                              return G__34506__delegate.call(this, args__33246__auto__);
                            };
                            G__34506.cljs$lang$maxFixedArity = 0;
                            G__34506.cljs$lang$applyTo = function(arglist__34508) {
                              var args__33246__auto__ = cljs.core.seq(arglist__34508);
                              return G__34506__delegate(args__33246__auto__);
                            };
                            G__34506.cljs$core$IFn$_invoke$arity$variadic = G__34506__delegate;
                            return G__34506;
                          }();
                        }(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, vec__34481_34499, ns_34500, kw_34501, lis_34502, _STAR_current_level_STAR_34479_34497, _STAR_current_length_STAR_34480_34498, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args);
                      })().call(null, lis_34502);
                    } else {
                      cljs.pprint.write_out.call(null, lis_34502);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__33244__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
                      return function(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34479_34497, _STAR_current_length_STAR_34480_34498, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args) {
                        return function() {
                          var G__34509__delegate = function(args__33246__auto__) {
                            var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                            return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                          };
                          var G__34509 = function(var_args) {
                            var args__33246__auto__ = null;
                            if (arguments.length > 0) {
                              var G__34510__i = 0, G__34510__a = new Array(arguments.length - 0);
                              while (G__34510__i < G__34510__a.length) {
                                G__34510__a[G__34510__i] = arguments[G__34510__i + 0];
                                ++G__34510__i;
                              }
                              args__33246__auto__ = new cljs.core.IndexedSeq(G__34510__a, 0);
                            }
                            return G__34509__delegate.call(this, args__33246__auto__);
                          };
                          G__34509.cljs$lang$maxFixedArity = 0;
                          G__34509.cljs$lang$applyTo = function(arglist__34511) {
                            var args__33246__auto__ = cljs.core.seq(arglist__34511);
                            return G__34509__delegate(args__33246__auto__);
                          };
                          G__34509.cljs$core$IFn$_invoke$arity$variadic = G__34509__delegate;
                          return G__34509;
                        }();
                      }(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34479_34497, _STAR_current_length_STAR_34480_34498, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args);
                    }(), arg_34493);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34480_34498;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34479_34497;
                }
              }
              if (cljs.core.next.call(null, args_34489__$1)) {
                (function() {
                  var format_in__33244__auto__ = "~_";
                  var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
                  return function(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args) {
                    return function() {
                      var G__34512__delegate = function(args__33246__auto__) {
                        var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                        return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                      };
                      var G__34512 = function(var_args) {
                        var args__33246__auto__ = null;
                        if (arguments.length > 0) {
                          var G__34513__i = 0, G__34513__a = new Array(arguments.length - 0);
                          while (G__34513__i < G__34513__a.length) {
                            G__34513__a[G__34513__i] = arguments[G__34513__i + 0];
                            ++G__34513__i;
                          }
                          args__33246__auto__ = new cljs.core.IndexedSeq(G__34513__a, 0);
                        }
                        return G__34512__delegate.call(this, args__33246__auto__);
                      };
                      G__34512.cljs$lang$maxFixedArity = 0;
                      G__34512.cljs$lang$applyTo = function(arglist__34514) {
                        var args__33246__auto__ = cljs.core.seq(arglist__34514);
                        return G__34512__delegate(args__33246__auto__);
                      };
                      G__34512.cljs$core$IFn$_invoke$arity$variadic = G__34512__delegate;
                      return G__34512;
                    }();
                  }(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, vec__34476_34494, start_34495__$1, end_34496__$1, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_34493);
              if (cljs.core.next.call(null, args_34489__$1)) {
                (function() {
                  var format_in__33244__auto__ = "~:_";
                  var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
                  return function(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args) {
                    return function() {
                      var G__34515__delegate = function(args__33246__auto__) {
                        var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                        return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                      };
                      var G__34515 = function(var_args) {
                        var args__33246__auto__ = null;
                        if (arguments.length > 0) {
                          var G__34516__i = 0, G__34516__a = new Array(arguments.length - 0);
                          while (G__34516__i < G__34516__a.length) {
                            G__34516__a[G__34516__i] = arguments[G__34516__i + 0];
                            ++G__34516__i;
                          }
                          args__33246__auto__ = new cljs.core.IndexedSeq(G__34516__a, 0);
                        }
                        return G__34515__delegate.call(this, args__33246__auto__);
                      };
                      G__34515.cljs$lang$maxFixedArity = 0;
                      G__34515.cljs$lang$applyTo = function(arglist__34517) {
                        var args__33246__auto__ = cljs.core.seq(arglist__34517);
                        return G__34515__delegate(args__33246__auto__);
                      };
                      G__34515.cljs$core$IFn$_invoke$arity$variadic = G__34515__delegate;
                      return G__34515;
                    }();
                  }(args_34489__$1, format_in__33244__auto__, cf__33245__auto__, arg_34493, _STAR_current_level_STAR_34474_34484, _STAR_current_length_STAR_34475_34485, vec__34468, start, end, vec__34471, seq__34472, first__34473, seq__34472__$1, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__34518 = cljs.core.next.call(null, args_34489__$1);
            args_34489__$1 = G__34518;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34475_34485;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34474_34484;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__34530 = alis;
    var seq__34531 = cljs.core.seq.call(null, vec__34530);
    var first__34532 = cljs.core.first.call(null, seq__34531);
    var seq__34531__$1 = cljs.core.next.call(null, seq__34531);
    var ns_sym = first__34532;
    var first__34532__$1 = cljs.core.first.call(null, seq__34531__$1);
    var seq__34531__$2 = cljs.core.next.call(null, seq__34531__$1);
    var ns_name = first__34532__$1;
    var stuff = seq__34531__$2;
    var vec__34533 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__34533, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__34533, 1, null);
    var vec__34536 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__34536, 0, null);
    var references = cljs.core.nth.call(null, vec__34536, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_34539_34541 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_34540_34542 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__33244__auto__ = "~w ~1I~@_~w";
          var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
          return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34539_34541, _STAR_current_length_STAR_34540_34542, vec__34530, seq__34531, first__34532, seq__34531__$1, ns_sym, first__34532__$1, seq__34531__$2, ns_name, stuff, vec__34533, doc_str, stuff__$1, vec__34536, attr_map, references) {
            return function() {
              var G__34543__delegate = function(args__33246__auto__) {
                var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
              };
              var G__34543 = function(var_args) {
                var args__33246__auto__ = null;
                if (arguments.length > 0) {
                  var G__34544__i = 0, G__34544__a = new Array(arguments.length - 0);
                  while (G__34544__i < G__34544__a.length) {
                    G__34544__a[G__34544__i] = arguments[G__34544__i + 0];
                    ++G__34544__i;
                  }
                  args__33246__auto__ = new cljs.core.IndexedSeq(G__34544__a, 0);
                }
                return G__34543__delegate.call(this, args__33246__auto__);
              };
              G__34543.cljs$lang$maxFixedArity = 0;
              G__34543.cljs$lang$applyTo = function(arglist__34545) {
                var args__33246__auto__ = cljs.core.seq(arglist__34545);
                return G__34543__delegate(args__33246__auto__);
              };
              G__34543.cljs$core$IFn$_invoke$arity$variadic = G__34543__delegate;
              return G__34543;
            }();
          }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34539_34541, _STAR_current_length_STAR_34540_34542, vec__34530, seq__34531, first__34532, seq__34531__$1, ns_sym, first__34532__$1, seq__34531__$2, ns_name, stuff, vec__34533, doc_str, stuff__$1, vec__34536, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__8632__auto__ = doc_str;
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            var or__8632__auto____$1 = attr_map;
            if (cljs.core.truth_(or__8632__auto____$1)) {
              return or__8632__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__33244__auto__ = "~@:_";
            var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
            return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34539_34541, _STAR_current_length_STAR_34540_34542, vec__34530, seq__34531, first__34532, seq__34531__$1, ns_sym, first__34532__$1, seq__34531__$2, ns_name, stuff, vec__34533, doc_str, stuff__$1, vec__34536, attr_map, references) {
              return function() {
                var G__34546__delegate = function(args__33246__auto__) {
                  var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                  return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                };
                var G__34546 = function(var_args) {
                  var args__33246__auto__ = null;
                  if (arguments.length > 0) {
                    var G__34547__i = 0, G__34547__a = new Array(arguments.length - 0);
                    while (G__34547__i < G__34547__a.length) {
                      G__34547__a[G__34547__i] = arguments[G__34547__i + 0];
                      ++G__34547__i;
                    }
                    args__33246__auto__ = new cljs.core.IndexedSeq(G__34547__a, 0);
                  }
                  return G__34546__delegate.call(this, args__33246__auto__);
                };
                G__34546.cljs$lang$maxFixedArity = 0;
                G__34546.cljs$lang$applyTo = function(arglist__34548) {
                  var args__33246__auto__ = cljs.core.seq(arglist__34548);
                  return G__34546__delegate(args__33246__auto__);
                };
                G__34546.cljs$core$IFn$_invoke$arity$variadic = G__34546__delegate;
                return G__34546;
              }();
            }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34539_34541, _STAR_current_length_STAR_34540_34542, vec__34530, seq__34531, first__34532, seq__34531__$1, ns_sym, first__34532__$1, seq__34531__$2, ns_name, stuff, vec__34533, doc_str, stuff__$1, vec__34536, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__8632__auto__ = attr_map;
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__33244__auto__ = "~w~:[~;~:@_~]";
            var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
            return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34539_34541, _STAR_current_length_STAR_34540_34542, vec__34530, seq__34531, first__34532, seq__34531__$1, ns_sym, first__34532__$1, seq__34531__$2, ns_name, stuff, vec__34533, doc_str, stuff__$1, vec__34536, attr_map, references) {
              return function() {
                var G__34549__delegate = function(args__33246__auto__) {
                  var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                  return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                };
                var G__34549 = function(var_args) {
                  var args__33246__auto__ = null;
                  if (arguments.length > 0) {
                    var G__34550__i = 0, G__34550__a = new Array(arguments.length - 0);
                    while (G__34550__i < G__34550__a.length) {
                      G__34550__a[G__34550__i] = arguments[G__34550__i + 0];
                      ++G__34550__i;
                    }
                    args__33246__auto__ = new cljs.core.IndexedSeq(G__34550__a, 0);
                  }
                  return G__34549__delegate.call(this, args__33246__auto__);
                };
                G__34549.cljs$lang$maxFixedArity = 0;
                G__34549.cljs$lang$applyTo = function(arglist__34551) {
                  var args__33246__auto__ = cljs.core.seq(arglist__34551);
                  return G__34549__delegate(args__33246__auto__);
                };
                G__34549.cljs$core$IFn$_invoke$arity$variadic = G__34549__delegate;
                return G__34549;
              }();
            }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34539_34541, _STAR_current_length_STAR_34540_34542, vec__34530, seq__34531, first__34532, seq__34531__$1, ns_sym, first__34532__$1, seq__34531__$2, ns_name, stuff, vec__34533, doc_str, stuff__$1, vec__34536, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_34552__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_34552__$1));
          var temp__4657__auto___34553 = cljs.core.next.call(null, references_34552__$1);
          if (temp__4657__auto___34553) {
            var references_34554__$2 = temp__4657__auto___34553;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__34555 = references_34554__$2;
            references_34552__$1 = G__34555;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34540_34542;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34539_34541;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__33244__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
  return function(format_in__33244__auto__, cf__33245__auto__) {
    return function() {
      var G__34556__delegate = function(args__33246__auto__) {
        var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
        return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
      };
      var G__34556 = function(var_args) {
        var args__33246__auto__ = null;
        if (arguments.length > 0) {
          var G__34557__i = 0, G__34557__a = new Array(arguments.length - 0);
          while (G__34557__i < G__34557__a.length) {
            G__34557__a[G__34557__i] = arguments[G__34557__i + 0];
            ++G__34557__i;
          }
          args__33246__auto__ = new cljs.core.IndexedSeq(G__34557__a, 0);
        }
        return G__34556__delegate.call(this, args__33246__auto__);
      };
      G__34556.cljs$lang$maxFixedArity = 0;
      G__34556.cljs$lang$applyTo = function(arglist__34558) {
        var args__33246__auto__ = cljs.core.seq(arglist__34558);
        return G__34556__delegate(args__33246__auto__);
      };
      G__34556.cljs$core$IFn$_invoke$arity$variadic = G__34556__delegate;
      return G__34556;
    }();
  }(format_in__33244__auto__, cf__33245__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__33244__auto__ = " ~_";
        var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
        return function(format_in__33244__auto__, cf__33245__auto__) {
          return function() {
            var G__34559__delegate = function(args__33246__auto__) {
              var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
              return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
            };
            var G__34559 = function(var_args) {
              var args__33246__auto__ = null;
              if (arguments.length > 0) {
                var G__34560__i = 0, G__34560__a = new Array(arguments.length - 0);
                while (G__34560__i < G__34560__a.length) {
                  G__34560__a[G__34560__i] = arguments[G__34560__i + 0];
                  ++G__34560__i;
                }
                args__33246__auto__ = new cljs.core.IndexedSeq(G__34560__a, 0);
              }
              return G__34559__delegate.call(this, args__33246__auto__);
            };
            G__34559.cljs$lang$maxFixedArity = 0;
            G__34559.cljs$lang$applyTo = function(arglist__34561) {
              var args__33246__auto__ = cljs.core.seq(arglist__34561);
              return G__34559__delegate(args__33246__auto__);
            };
            G__34559.cljs$core$IFn$_invoke$arity$variadic = G__34559__delegate;
            return G__34559;
          }();
        }(format_in__33244__auto__, cf__33245__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__33244__auto__ = " ~@_";
        var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
        return function(format_in__33244__auto__, cf__33245__auto__) {
          return function() {
            var G__34562__delegate = function(args__33246__auto__) {
              var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
              return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
            };
            var G__34562 = function(var_args) {
              var args__33246__auto__ = null;
              if (arguments.length > 0) {
                var G__34563__i = 0, G__34563__a = new Array(arguments.length - 0);
                while (G__34563__i < G__34563__a.length) {
                  G__34563__a[G__34563__i] = arguments[G__34563__i + 0];
                  ++G__34563__i;
                }
                args__33246__auto__ = new cljs.core.IndexedSeq(G__34563__a, 0);
              }
              return G__34562__delegate.call(this, args__33246__auto__);
            };
            G__34562.cljs$lang$maxFixedArity = 0;
            G__34562.cljs$lang$applyTo = function(arglist__34564) {
              var args__33246__auto__ = cljs.core.seq(arglist__34564);
              return G__34562__delegate(args__33246__auto__);
            };
            G__34562.cljs$core$IFn$_invoke$arity$variadic = G__34562__delegate;
            return G__34562;
          }();
        }(format_in__33244__auto__, cf__33245__auto__);
      })().call(null);
    }
    return function() {
      var format_in__33244__auto__ = "~{~w~^ ~_~}";
      var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
      return function(format_in__33244__auto__, cf__33245__auto__) {
        return function() {
          var G__34565__delegate = function(args__33246__auto__) {
            var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
            return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
          };
          var G__34565 = function(var_args) {
            var args__33246__auto__ = null;
            if (arguments.length > 0) {
              var G__34566__i = 0, G__34566__a = new Array(arguments.length - 0);
              while (G__34566__i < G__34566__a.length) {
                G__34566__a[G__34566__i] = arguments[G__34566__i + 0];
                ++G__34566__i;
              }
              args__33246__auto__ = new cljs.core.IndexedSeq(G__34566__a, 0);
            }
            return G__34565__delegate.call(this, args__33246__auto__);
          };
          G__34565.cljs$lang$maxFixedArity = 0;
          G__34565.cljs$lang$applyTo = function(arglist__34567) {
            var args__33246__auto__ = cljs.core.seq(arglist__34567);
            return G__34565__delegate(args__33246__auto__);
          };
          G__34565.cljs$core$IFn$_invoke$arity$variadic = G__34565__delegate;
          return G__34565;
        }();
      }(format_in__33244__auto__, cf__33245__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__33244__auto__ = " ~_~{~w~^ ~_~}";
      var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
      return function(format_in__33244__auto__, cf__33245__auto__) {
        return function() {
          var G__34568__delegate = function(args__33246__auto__) {
            var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
            return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
          };
          var G__34568 = function(var_args) {
            var args__33246__auto__ = null;
            if (arguments.length > 0) {
              var G__34569__i = 0, G__34569__a = new Array(arguments.length - 0);
              while (G__34569__i < G__34569__a.length) {
                G__34569__a[G__34569__i] = arguments[G__34569__i + 0];
                ++G__34569__i;
              }
              args__33246__auto__ = new cljs.core.IndexedSeq(G__34569__a, 0);
            }
            return G__34568__delegate.call(this, args__33246__auto__);
          };
          G__34568.cljs$lang$maxFixedArity = 0;
          G__34568.cljs$lang$applyTo = function(arglist__34570) {
            var args__33246__auto__ = cljs.core.seq(arglist__34570);
            return G__34568__delegate(args__33246__auto__);
          };
          G__34568.cljs$core$IFn$_invoke$arity$variadic = G__34568__delegate;
          return G__34568;
        }();
      }(format_in__33244__auto__, cf__33245__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__34582 = alis;
    var seq__34583 = cljs.core.seq.call(null, vec__34582);
    var first__34584 = cljs.core.first.call(null, seq__34583);
    var seq__34583__$1 = cljs.core.next.call(null, seq__34583);
    var defn_sym = first__34584;
    var first__34584__$1 = cljs.core.first.call(null, seq__34583__$1);
    var seq__34583__$2 = cljs.core.next.call(null, seq__34583__$1);
    var defn_name = first__34584__$1;
    var stuff = seq__34583__$2;
    var vec__34585 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__34585, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__34585, 1, null);
    var vec__34588 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__34588, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__34588, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_34591_34593 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_34592_34594 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__33244__auto__ = "~w ~1I~@_~w";
          var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
          return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34591_34593, _STAR_current_length_STAR_34592_34594, vec__34582, seq__34583, first__34584, seq__34583__$1, defn_sym, first__34584__$1, seq__34583__$2, defn_name, stuff, vec__34585, doc_str, stuff__$1, vec__34588, attr_map, stuff__$2) {
            return function() {
              var G__34595__delegate = function(args__33246__auto__) {
                var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
              };
              var G__34595 = function(var_args) {
                var args__33246__auto__ = null;
                if (arguments.length > 0) {
                  var G__34596__i = 0, G__34596__a = new Array(arguments.length - 0);
                  while (G__34596__i < G__34596__a.length) {
                    G__34596__a[G__34596__i] = arguments[G__34596__i + 0];
                    ++G__34596__i;
                  }
                  args__33246__auto__ = new cljs.core.IndexedSeq(G__34596__a, 0);
                }
                return G__34595__delegate.call(this, args__33246__auto__);
              };
              G__34595.cljs$lang$maxFixedArity = 0;
              G__34595.cljs$lang$applyTo = function(arglist__34597) {
                var args__33246__auto__ = cljs.core.seq(arglist__34597);
                return G__34595__delegate(args__33246__auto__);
              };
              G__34595.cljs$core$IFn$_invoke$arity$variadic = G__34595__delegate;
              return G__34595;
            }();
          }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34591_34593, _STAR_current_length_STAR_34592_34594, vec__34582, seq__34583, first__34584, seq__34583__$1, defn_sym, first__34584__$1, seq__34583__$2, defn_name, stuff, vec__34585, doc_str, stuff__$1, vec__34588, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__33244__auto__ = " ~_~w";
            var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
            return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34591_34593, _STAR_current_length_STAR_34592_34594, vec__34582, seq__34583, first__34584, seq__34583__$1, defn_sym, first__34584__$1, seq__34583__$2, defn_name, stuff, vec__34585, doc_str, stuff__$1, vec__34588, attr_map, stuff__$2) {
              return function() {
                var G__34598__delegate = function(args__33246__auto__) {
                  var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                  return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                };
                var G__34598 = function(var_args) {
                  var args__33246__auto__ = null;
                  if (arguments.length > 0) {
                    var G__34599__i = 0, G__34599__a = new Array(arguments.length - 0);
                    while (G__34599__i < G__34599__a.length) {
                      G__34599__a[G__34599__i] = arguments[G__34599__i + 0];
                      ++G__34599__i;
                    }
                    args__33246__auto__ = new cljs.core.IndexedSeq(G__34599__a, 0);
                  }
                  return G__34598__delegate.call(this, args__33246__auto__);
                };
                G__34598.cljs$lang$maxFixedArity = 0;
                G__34598.cljs$lang$applyTo = function(arglist__34600) {
                  var args__33246__auto__ = cljs.core.seq(arglist__34600);
                  return G__34598__delegate(args__33246__auto__);
                };
                G__34598.cljs$core$IFn$_invoke$arity$variadic = G__34598__delegate;
                return G__34598;
              }();
            }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34591_34593, _STAR_current_length_STAR_34592_34594, vec__34582, seq__34583, first__34584, seq__34583__$1, defn_sym, first__34584__$1, seq__34583__$2, defn_name, stuff, vec__34585, doc_str, stuff__$1, vec__34588, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__33244__auto__ = " ~_~w";
            var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
            return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34591_34593, _STAR_current_length_STAR_34592_34594, vec__34582, seq__34583, first__34584, seq__34583__$1, defn_sym, first__34584__$1, seq__34583__$2, defn_name, stuff, vec__34585, doc_str, stuff__$1, vec__34588, attr_map, stuff__$2) {
              return function() {
                var G__34601__delegate = function(args__33246__auto__) {
                  var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                  return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
                };
                var G__34601 = function(var_args) {
                  var args__33246__auto__ = null;
                  if (arguments.length > 0) {
                    var G__34602__i = 0, G__34602__a = new Array(arguments.length - 0);
                    while (G__34602__i < G__34602__a.length) {
                      G__34602__a[G__34602__i] = arguments[G__34602__i + 0];
                      ++G__34602__i;
                    }
                    args__33246__auto__ = new cljs.core.IndexedSeq(G__34602__a, 0);
                  }
                  return G__34601__delegate.call(this, args__33246__auto__);
                };
                G__34601.cljs$lang$maxFixedArity = 0;
                G__34601.cljs$lang$applyTo = function(arglist__34603) {
                  var args__33246__auto__ = cljs.core.seq(arglist__34603);
                  return G__34601__delegate(args__33246__auto__);
                };
                G__34601.cljs$core$IFn$_invoke$arity$variadic = G__34601__delegate;
                return G__34601;
              }();
            }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34591_34593, _STAR_current_length_STAR_34592_34594, vec__34582, seq__34583, first__34584, seq__34583__$1, defn_sym, first__34584__$1, seq__34583__$2, defn_name, stuff, vec__34585, doc_str, stuff__$1, vec__34588, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__8632__auto__ = doc_str;
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__8632__auto__ = doc_str;
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34592_34594;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34591_34593;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34609_34614 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34610_34615 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count34611_34616 = 0;
      var binding_34617 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count34611_34616 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_34617)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_34612_34618 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_34613_34619 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_34617));
                if (cljs.core.next.call(null, binding_34617)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_34617));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34613_34619;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34612_34618;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_34617))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__34620 = length_count34611_34616 + 1;
              var G__34621 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_34617));
              length_count34611_34616 = G__34620;
              binding_34617 = G__34621;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34610_34615;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34609_34614;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34624_34626 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34625_34627 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__33244__auto__ = "~w ~1I~@_";
          var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
          return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34624_34626, _STAR_current_length_STAR_34625_34627, base_sym) {
            return function() {
              var G__34628__delegate = function(args__33246__auto__) {
                var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
              };
              var G__34628 = function(var_args) {
                var args__33246__auto__ = null;
                if (arguments.length > 0) {
                  var G__34629__i = 0, G__34629__a = new Array(arguments.length - 0);
                  while (G__34629__i < G__34629__a.length) {
                    G__34629__a[G__34629__i] = arguments[G__34629__i + 0];
                    ++G__34629__i;
                  }
                  args__33246__auto__ = new cljs.core.IndexedSeq(G__34629__a, 0);
                }
                return G__34628__delegate.call(this, args__33246__auto__);
              };
              G__34628.cljs$lang$maxFixedArity = 0;
              G__34628.cljs$lang$applyTo = function(arglist__34630) {
                var args__33246__auto__ = cljs.core.seq(arglist__34630);
                return G__34628__delegate(args__33246__auto__);
              };
              G__34628.cljs$core$IFn$_invoke$arity$variadic = G__34628__delegate;
              return G__34628;
            }();
          }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34624_34626, _STAR_current_length_STAR_34625_34627, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__33244__auto__ = " ~_~{~w~^ ~_~}";
          var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
          return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34624_34626, _STAR_current_length_STAR_34625_34627, base_sym) {
            return function() {
              var G__34631__delegate = function(args__33246__auto__) {
                var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
              };
              var G__34631 = function(var_args) {
                var args__33246__auto__ = null;
                if (arguments.length > 0) {
                  var G__34632__i = 0, G__34632__a = new Array(arguments.length - 0);
                  while (G__34632__i < G__34632__a.length) {
                    G__34632__a[G__34632__i] = arguments[G__34632__i + 0];
                    ++G__34632__i;
                  }
                  args__33246__auto__ = new cljs.core.IndexedSeq(G__34632__a, 0);
                }
                return G__34631__delegate.call(this, args__33246__auto__);
              };
              G__34631.cljs$lang$maxFixedArity = 0;
              G__34631.cljs$lang$applyTo = function(arglist__34633) {
                var args__33246__auto__ = cljs.core.seq(arglist__34633);
                return G__34631__delegate(args__33246__auto__);
              };
              G__34631.cljs$core$IFn$_invoke$arity$variadic = G__34631__delegate;
              return G__34631;
            }();
          }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34624_34626, _STAR_current_length_STAR_34625_34627, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34625_34627;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34624_34626;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__33244__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
  return function(format_in__33244__auto__, cf__33245__auto__) {
    return function() {
      var G__34634__delegate = function(args__33246__auto__) {
        var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
        return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
      };
      var G__34634 = function(var_args) {
        var args__33246__auto__ = null;
        if (arguments.length > 0) {
          var G__34635__i = 0, G__34635__a = new Array(arguments.length - 0);
          while (G__34635__i < G__34635__a.length) {
            G__34635__a[G__34635__i] = arguments[G__34635__i + 0];
            ++G__34635__i;
          }
          args__33246__auto__ = new cljs.core.IndexedSeq(G__34635__a, 0);
        }
        return G__34634__delegate.call(this, args__33246__auto__);
      };
      G__34634.cljs$lang$maxFixedArity = 0;
      G__34634.cljs$lang$applyTo = function(arglist__34636) {
        var args__33246__auto__ = cljs.core.seq(arglist__34636);
        return G__34634__delegate(args__33246__auto__);
      };
      G__34634.cljs$core$IFn$_invoke$arity$variadic = G__34634__delegate;
      return G__34634;
    }();
  }(format_in__33244__auto__, cf__33245__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34642_34647 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34643_34648 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count34644_34649 = 0;
        var alis_34650__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count34644_34649 < cljs.core._STAR_print_length_STAR_) {
            if (alis_34650__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_34645_34651 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_34646_34652 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_34650__$1));
                  if (cljs.core.next.call(null, alis_34650__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_34650__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34646_34652;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34645_34651;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_34650__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__34653 = length_count34644_34649 + 1;
                var G__34654 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_34650__$1));
                length_count34644_34649 = G__34653;
                alis_34650__$1 = G__34654;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34643_34648;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34642_34647;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_34660_34665 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_34661_34666 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__33244__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
          return function(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34660_34665, _STAR_current_length_STAR_34661_34666) {
            return function() {
              var G__34667__delegate = function(args__33246__auto__) {
                var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
                return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
              };
              var G__34667 = function(var_args) {
                var args__33246__auto__ = null;
                if (arguments.length > 0) {
                  var G__34668__i = 0, G__34668__a = new Array(arguments.length - 0);
                  while (G__34668__i < G__34668__a.length) {
                    G__34668__a[G__34668__i] = arguments[G__34668__i + 0];
                    ++G__34668__i;
                  }
                  args__33246__auto__ = new cljs.core.IndexedSeq(G__34668__a, 0);
                }
                return G__34667__delegate.call(this, args__33246__auto__);
              };
              G__34667.cljs$lang$maxFixedArity = 0;
              G__34667.cljs$lang$applyTo = function(arglist__34669) {
                var args__33246__auto__ = cljs.core.seq(arglist__34669);
                return G__34667__delegate(args__33246__auto__);
              };
              G__34667.cljs$core$IFn$_invoke$arity$variadic = G__34667__delegate;
              return G__34667;
            }();
          }(format_in__33244__auto__, cf__33245__auto__, _STAR_current_level_STAR_34660_34665, _STAR_current_length_STAR_34661_34666);
        }(), alis);
        var length_count34662_34670 = 0;
        var alis_34671__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count34662_34670 < cljs.core._STAR_print_length_STAR_) {
            if (alis_34671__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_34663_34672 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_34664_34673 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_34671__$1));
                  if (cljs.core.next.call(null, alis_34671__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_34671__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34664_34673;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34663_34672;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_34671__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__34674 = length_count34662_34670 + 1;
                var G__34675 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_34671__$1));
                length_count34662_34670 = G__34674;
                alis_34671__$1 = G__34675;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34661_34666;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34660_34665;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_34679 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_34679, args, nlis) {
      return function(p1__34676_SHARP_, p2__34677_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__34676_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__34677_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_34679, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__33244__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__33245__auto__ = typeof format_in__33244__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__33244__auto__) : format_in__33244__auto__;
        return function(format_in__33244__auto__, cf__33245__auto__, _STAR_symbol_map_STAR_34679, args, nlis) {
          return function() {
            var G__34680__delegate = function(args__33246__auto__) {
              var navigator__33247__auto__ = cljs.pprint.init_navigator.call(null, args__33246__auto__);
              return cljs.pprint.execute_format.call(null, cf__33245__auto__, navigator__33247__auto__);
            };
            var G__34680 = function(var_args) {
              var args__33246__auto__ = null;
              if (arguments.length > 0) {
                var G__34681__i = 0, G__34681__a = new Array(arguments.length - 0);
                while (G__34681__i < G__34681__a.length) {
                  G__34681__a[G__34681__i] = arguments[G__34681__i + 0];
                  ++G__34681__i;
                }
                args__33246__auto__ = new cljs.core.IndexedSeq(G__34681__a, 0);
              }
              return G__34680__delegate.call(this, args__33246__auto__);
            };
            G__34680.cljs$lang$maxFixedArity = 0;
            G__34680.cljs$lang$applyTo = function(arglist__34682) {
              var args__33246__auto__ = cljs.core.seq(arglist__34682);
              return G__34680__delegate(args__33246__auto__);
            };
            G__34680.cljs$core$IFn$_invoke$arity$variadic = G__34680__delegate;
            return G__34680;
          }();
        }(format_in__33244__auto__, cf__33245__auto__, _STAR_symbol_map_STAR_34679, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_34679;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_34686_34689 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_34687_34690 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count34688_34691 = 0;
      var alis_34692__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count34688_34691 < cljs.core._STAR_print_length_STAR_) {
          if (alis_34692__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_34692__$1));
            if (cljs.core.next.call(null, alis_34692__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__34693 = length_count34688_34691 + 1;
              var G__34694 = cljs.core.next.call(null, alis_34692__$1);
              length_count34688_34691 = G__34693;
              alis_34692__$1 = G__34694;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_34687_34690;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_34686_34689;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__9412__auto__ = function cljs$pprint$two_forms_$_iter__34699(s__34700) {
      return new cljs.core.LazySeq(null, function() {
        var s__34700__$1 = s__34700;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__34700__$1);
          if (temp__4657__auto__) {
            var s__34700__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__34700__$2)) {
              var c__9410__auto__ = cljs.core.chunk_first.call(null, s__34700__$2);
              var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
              var b__34702 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
              if (function() {
                var i__34701 = 0;
                while (true) {
                  if (i__34701 < size__9411__auto__) {
                    var x = cljs.core._nth.call(null, c__9410__auto__, i__34701);
                    cljs.core.chunk_append.call(null, b__34702, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__34703 = i__34701 + 1;
                    i__34701 = G__34703;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34702), cljs$pprint$two_forms_$_iter__34699.call(null, cljs.core.chunk_rest.call(null, s__34700__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34702), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__34700__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__34699.call(null, cljs.core.rest.call(null, s__34700__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__9412__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__34704_SHARP_) {
      var vec__34708 = p1__34704_SHARP_;
      var s = cljs.core.nth.call(null, vec__34708, 0, null);
      var f = cljs.core.nth.call(null, vec__34708, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__8632__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__34704_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4655__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4655__auto__)) {
      var special_form = temp__4655__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4655__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var arg_num = temp__4655__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__9557__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__9558__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__9559__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__9560__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__9561__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__9561__auto__, method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__8963__auto__ = 0;
    var y__8964__auto__ = width - cljs.core.count.call(null, s);
    return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var args34714 = [];
  var len__9707__auto___34738 = arguments.length;
  var i__9708__auto___34739 = 0;
  while (true) {
    if (i__9708__auto___34739 < len__9707__auto___34738) {
      args34714.push(arguments[i__9708__auto___34739]);
      var G__34740 = i__9708__auto___34739 + 1;
      i__9708__auto___34739 = G__34740;
      continue;
    } else {
    }
    break;
  }
  var G__34716 = args34714.length;
  switch(G__34716) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34714.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_34717 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_34717) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_34717) {
            return function(p1__34711_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__34711_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_34717), rows));
        };
      }(_STAR_print_newline_STAR_34717), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_34717) {
        return function(p1__34712_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__34712_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_34717), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_34717) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__9412__auto__ = function(widths, spacers, _STAR_print_newline_STAR_34717) {
              return function cljs$pprint$iter__34718(s__34719) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_34717) {
                  return function() {
                    var s__34719__$1 = s__34719;
                    while (true) {
                      var temp__4657__auto__ = cljs.core.seq.call(null, s__34719__$1);
                      if (temp__4657__auto__) {
                        var s__34719__$2 = temp__4657__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__34719__$2)) {
                          var c__9410__auto__ = cljs.core.chunk_first.call(null, s__34719__$2);
                          var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
                          var b__34721 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
                          if (function() {
                            var i__34720 = 0;
                            while (true) {
                              if (i__34720 < size__9411__auto__) {
                                var vec__34728 = cljs.core._nth.call(null, c__9410__auto__, i__34720);
                                var col = cljs.core.nth.call(null, vec__34728, 0, null);
                                var width = cljs.core.nth.call(null, vec__34728, 1, null);
                                cljs.core.chunk_append.call(null, b__34721, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__34742 = i__34720 + 1;
                                i__34720 = G__34742;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34721), cljs$pprint$iter__34718.call(null, cljs.core.chunk_rest.call(null, s__34719__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34721), null);
                          }
                        } else {
                          var vec__34731 = cljs.core.first.call(null, s__34719__$2);
                          var col = cljs.core.nth.call(null, vec__34731, 0, null);
                          var width = cljs.core.nth.call(null, vec__34731, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__34718.call(null, cljs.core.rest.call(null, s__34719__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_34717), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_34717);
            return iter__9412__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__9412__auto__, widths, spacers, _STAR_print_newline_STAR_34717) {
              return function(p1__34713_SHARP_) {
                return cljs.core.get.call(null, row, p1__34713_SHARP_);
              };
            }(iter__9412__auto__, widths, spacers, _STAR_print_newline_STAR_34717), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_34717);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__34734 = cljs.core.seq.call(null, rows);
      var chunk__34735 = null;
      var count__34736 = 0;
      var i__34737 = 0;
      while (true) {
        if (i__34737 < count__34736) {
          var row = cljs.core._nth.call(null, chunk__34735, i__34737);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__34743 = seq__34734;
          var G__34744 = chunk__34735;
          var G__34745 = count__34736;
          var G__34746 = i__34737 + 1;
          seq__34734 = G__34743;
          chunk__34735 = G__34744;
          count__34736 = G__34745;
          i__34737 = G__34746;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__34734);
          if (temp__4657__auto__) {
            var seq__34734__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__34734__$1)) {
              var c__9443__auto__ = cljs.core.chunk_first.call(null, seq__34734__$1);
              var G__34747 = cljs.core.chunk_rest.call(null, seq__34734__$1);
              var G__34748 = c__9443__auto__;
              var G__34749 = cljs.core.count.call(null, c__9443__auto__);
              var G__34750 = 0;
              seq__34734 = G__34747;
              chunk__34735 = G__34748;
              count__34736 = G__34749;
              i__34737 = G__34750;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__34734__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__34751 = cljs.core.next.call(null, seq__34734__$1);
              var G__34752 = null;
              var G__34753 = 0;
              var G__34754 = 0;
              seq__34734 = G__34751;
              chunk__34735 = G__34752;
              count__34736 = G__34753;
              i__34737 = G__34754;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_34717;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var args34923 = [];
  var len__9707__auto___34927 = arguments.length;
  var i__9708__auto___34928 = 0;
  while (true) {
    if (i__9708__auto___34928 < len__9707__auto___34927) {
      args34923.push(arguments[i__9708__auto___34928]);
      var G__34929 = i__9708__auto___34928 + 1;
      i__9708__auto___34928 = G__34929;
      continue;
    } else {
    }
    break;
  }
  var G__34925 = args34923.length;
  switch(G__34925) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34923.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__34926 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__34926, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__34926;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__8632__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___34934 = arguments.length;
  var i__9708__auto___34935 = 0;
  while (true) {
    if (i__9708__auto___34935 < len__9707__auto___34934) {
      args__9714__auto__.push(arguments[i__9708__auto___34935]);
      var G__34936 = i__9708__auto___34935 + 1;
      i__9708__auto___34935 = G__34936;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq34931) {
  var G__34932 = cljs.core.first.call(null, seq34931);
  var seq34931__$1 = cljs.core.next.call(null, seq34931);
  var G__34933 = cljs.core.first.call(null, seq34931__$1);
  var seq34931__$2 = cljs.core.next.call(null, seq34931__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__34932, G__34933, seq34931__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__34940 = m;
  var map__34940__$1 = (!(map__34940 == null) ? map__34940.cljs$lang$protocol_mask$partition0$ & 64 || map__34940.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__34940) : map__34940;
  var file = cljs.core.get.call(null, map__34940__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__34940__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__34940__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__34940, map__34940__$1, file, line, column) {
    return function(p1__34937_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__34937_SHARP_));
    };
  }(map__34940, map__34940__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__9557__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__9558__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__9559__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__9560__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__9561__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__, hierarchy__9561__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__, hierarchy__9561__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__9561__auto__, method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__8632__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___34942 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___34942)) {
    var message_34943 = temp__4657__auto___34942;
    cljs.core.println.call(null, message_34943);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___34944 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___34944)) {
    var message_34945 = temp__4657__auto___34944;
    cljs.core.println.call(null, message_34945);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var source_map = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var columns = temp__4655__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4655__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4655__auto____$2)) {
          var mapping = temp__4655__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4655__auto__ = function() {
    var and__8620__auto__ = typeof exception.stack === "string";
    if (and__8620__auto__) {
      var G__34955 = exception.stack;
      var G__34955__$1 = G__34955 == null ? null : clojure.string.split_lines.call(null, G__34955);
      var G__34955__$2 = G__34955__$1 == null ? null : cljs.core.get.call(null, G__34955__$1, depth);
      if (G__34955__$2 == null) {
        return null;
      } else {
        return clojure.string.trim.call(null, G__34955__$2);
      }
    } else {
      return and__8620__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var stack_element = temp__4655__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__34956 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__34956, 0, null);
    var column = cljs.core.nth.call(null, vec__34956, 1, null);
    var vec__34959 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__34959, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__34959, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__34959, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__34963 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__34963) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4657__auto__) {
      var xs__5205__auto__ = temp__4657__auto__;
      var f = cljs.core.first.call(null, xs__5205__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__5205__auto__, temp__4657__auto__), null);
          return function(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__);
        }());
      } else {
        var G__34969 = function() {
          var G__34968 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__34968);
          } else {
            return G__34968;
          }
        }();
        fns = G__34969;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__34971 = fns;
  if (G__34971 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__34971, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e34974) {
      var e = e34974;
      var G__34975 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__34975) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var t = temp__4655__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__34980 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__34980, 0, null);
  var types = vec__34980;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str("(not-any? nil? types)")].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str("(\x3e 2 (count types))")].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__34992) {
    var vec__34993 = p__34992;
    var ns = cljs.core.nth.call(null, vec__34993, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__34993, 1, null);
    return function(vec__34993, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__34996 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__34996) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1) {
                    return function() {
                      var seq__34997 = cljs.core.seq.call(null, vars__$1);
                      var chunk__34998 = null;
                      var count__34999 = 0;
                      var i__35000 = 0;
                      while (true) {
                        if (i__35000 < count__34999) {
                          var v = cljs.core._nth.call(null, chunk__34998, i__35000);
                          var temp__4657__auto___35002 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4657__auto___35002)) {
                            var t_35003 = temp__4657__auto___35002;
                            each_fixture_fn.call(null, function(seq__34997, chunk__34998, count__34999, i__35000, t_35003, temp__4657__auto___35002, v, each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_35003)));
                              };
                            }(seq__34997, chunk__34998, count__34999, i__35000, t_35003, temp__4657__auto___35002, v, each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1));
                          } else {
                          }
                          var G__35004 = seq__34997;
                          var G__35005 = chunk__34998;
                          var G__35006 = count__34999;
                          var G__35007 = i__35000 + 1;
                          seq__34997 = G__35004;
                          chunk__34998 = G__35005;
                          count__34999 = G__35006;
                          i__35000 = G__35007;
                          continue;
                        } else {
                          var temp__4657__auto__ = cljs.core.seq.call(null, seq__34997);
                          if (temp__4657__auto__) {
                            var seq__34997__$1 = temp__4657__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__34997__$1)) {
                              var c__9443__auto__ = cljs.core.chunk_first.call(null, seq__34997__$1);
                              var G__35008 = cljs.core.chunk_rest.call(null, seq__34997__$1);
                              var G__35009 = c__9443__auto__;
                              var G__35010 = cljs.core.count.call(null, c__9443__auto__);
                              var G__35011 = 0;
                              seq__34997 = G__35008;
                              chunk__34998 = G__35009;
                              count__34999 = G__35010;
                              i__35000 = G__35011;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__34997__$1);
                              var temp__4657__auto___35012__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4657__auto___35012__$1)) {
                                var t_35013 = temp__4657__auto___35012__$1;
                                each_fixture_fn.call(null, function(seq__34997, chunk__34998, count__34999, i__35000, t_35013, temp__4657__auto___35012__$1, v, seq__34997__$1, temp__4657__auto__, each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_35013)));
                                  };
                                }(seq__34997, chunk__34998, count__34999, i__35000, t_35013, temp__4657__auto___35012__$1, v, seq__34997__$1, temp__4657__auto__, each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1));
                              } else {
                              }
                              var G__35014 = cljs.core.next.call(null, seq__34997__$1);
                              var G__35015 = null;
                              var G__35016 = 0;
                              var G__35017 = 0;
                              seq__34997 = G__35014;
                              chunk__34998 = G__35015;
                              count__34999 = G__35016;
                              i__35000 = G__35017;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1));
                };
              }(each_fixture_fn, G__34996, env, once_fixtures, each_fixtures, vec__34993, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__34993, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= Number(width)) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", Number(width) - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", Number(width) - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (Number(value) < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (Number(value) >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= Number(width)) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(Number(value)).toString() : Math.abs(Number(value)).toFixed(precision);
  var padCount = Number(width) - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.reader.PushbackReader = function() {
};
cljs.reader.read_char = function cljs$reader$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$read_char$arity$1 == null)) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.reader.read_char[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader);
    } else {
      var m__9296__auto____$1 = cljs.reader.read_char["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
      }
    }
  }
};
cljs.reader.unread = function cljs$reader$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$unread$arity$2 == null)) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__9295__auto__ = reader == null ? null : reader;
    var m__9296__auto__ = cljs.reader.unread[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, reader, ch);
    } else {
      var m__9296__auto____$1 = cljs.reader.unread["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
      }
    }
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), cljs.core.with_meta(new cljs.core.Symbol(null, "idx", "idx", -1600747296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function cljs$reader$__GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function cljs$reader$push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function cljs$reader$whitespace_QMARK_(ch) {
  var or__8632__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function cljs$reader$numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function cljs$reader$comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function cljs$reader$number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function cljs$reader$reader_error(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35022 = arguments.length;
  var i__9708__auto___35023 = 0;
  while (true) {
    if (i__9708__auto___35023 < len__9707__auto___35022) {
      args__9714__auto__.push(arguments[i__9708__auto___35023]);
      var G__35024 = i__9708__auto___35023 + 1;
      i__9708__auto___35023 = G__35024;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
};
cljs.reader.reader_error.cljs$lang$maxFixedArity = 1;
cljs.reader.reader_error.cljs$lang$applyTo = function(seq35020) {
  var G__35021 = cljs.core.first.call(null, seq35020);
  var seq35020__$1 = cljs.core.next.call(null, seq35020);
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__35021, seq35020__$1);
};
cljs.reader.macro_terminating_QMARK_ = function cljs$reader$macro_terminating_QMARK_(ch) {
  var and__8620__auto__ = !(ch === "#");
  if (and__8620__auto__) {
    var and__8620__auto____$1 = !(ch === "'");
    if (and__8620__auto____$1) {
      var and__8620__auto____$2 = !(ch === ":");
      if (and__8620__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__8620__auto____$2;
      }
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
cljs.reader.read_token = function cljs$reader$read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__35025 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__35026 = cljs.reader.read_char.call(null, rdr);
      sb = G__35025;
      ch = G__35026;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function cljs$reader$skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function cljs$reader$re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function cljs$reader$match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return -parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function cljs$reader$match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function cljs$reader$match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function cljs$reader$match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function cljs$reader$escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return '"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function cljs$reader$read_2_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function cljs$reader$read_4_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function cljs$reader$validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function cljs$reader$make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function cljs$reader$escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function cljs$reader$read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__35027 = cljs.reader.read_char.call(null, rdr);
      ch = G__35027;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function cljs$reader$read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = [];
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return a;
    } else {
      var temp__4655__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var macrofn = temp__4655__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__35028 = mret === rdr ? a : function() {
          a.push(mret);
          return a;
        }();
        a = G__35028;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__35029 = o === rdr ? a : function() {
          a.push(o);
          return a;
        }();
        a = G__35029;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function cljs$reader$not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function cljs$reader$read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4655__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var obj = temp__4655__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function cljs$reader$read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function cljs$reader$read_list(rdr, _) {
  var arr = cljs.reader.read_delimited_list.call(null, ")", rdr, true);
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__35030 = i - 1;
      var G__35031 = cljs.core._conj.call(null, r, arr[i - 1]);
      i = G__35030;
      r = G__35031;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function cljs$reader$read_vector(rdr, _) {
  return cljs.core.vec.call(null, cljs.reader.read_delimited_list.call(null, "]", rdr, true));
};
cljs.reader.read_map = function cljs$reader$read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  var c = l.length;
  if (cljs.core.odd_QMARK_.call(null, c)) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  if (c <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    return cljs.core.PersistentArrayMap.fromArray(l, true, true);
  } else {
    return cljs.core.PersistentHashMap.fromArray(l, true);
  }
};
cljs.reader.read_number = function cljs$reader$read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__8632__auto__ = ch == null;
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__8632__auto____$1) {
          return or__8632__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__8632__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__35032 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__35033 = cljs.reader.read_char.call(null, reader);
      buffer = G__35032;
      ch = G__35033;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function cljs$reader$read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__35034 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__35035 = cljs.reader.read_char.call(null, reader);
        buffer = G__35034;
        ch = G__35035;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__35036 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__35037 = cljs.reader.read_char.call(null, reader);
          buffer = G__35036;
          ch = G__35037;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function cljs$reader$read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__35042 = function() {
            var G__35040 = buffer;
            G__35040.append(nch);
            return G__35040;
          }();
          var G__35043 = cljs.reader.read_char.call(null, reader);
          buffer = G__35042;
          ch = G__35043;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__35044 = function() {
            var G__35041 = buffer;
            G__35041.append(ch);
            return G__35041;
          }();
          var G__35045 = cljs.reader.read_char.call(null, reader);
          buffer = G__35044;
          ch = G__35045;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function cljs$reader$special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function cljs$reader$read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__8620__auto__)) {
      return !(token.length === 1);
    } else {
      return and__8620__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_literal = function cljs$reader$read_literal(rdr, ch) {
  var token = cljs.reader.read_token.call(null, rdr, ch);
  var chars = cljs.core.subs.call(null, token, 1);
  if (chars.length === 1) {
    return chars;
  } else {
    if (chars === "tab") {
      return "\t";
    } else {
      if (chars === "return") {
        return "\r";
      } else {
        if (chars === "newline") {
          return "\n";
        } else {
          if (chars === "space") {
            return " ";
          } else {
            if (chars === "backspace") {
              return "\b";
            } else {
              if (chars === "formfeed") {
                return "\f";
              } else {
                if (chars.charAt(0) === "u") {
                  return cljs.reader.make_unicode_char.call(null, cljs.core.subs.call(null, chars, 1));
                } else {
                  if (chars.charAt(0) === "o") {
                    return cljs.reader.not_implemented.call(null, rdr, token);
                  } else {
                    return cljs.reader.reader_error.call(null, rdr, "Unknown character literal: ", token);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_keyword = function cljs$reader$read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function cljs$reader$desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function cljs$reader$wrapping_reader(sym) {
  return function(rdr, _) {
    var x__9466__auto__ = sym;
    return cljs.core._conj.call(null, function() {
      var x__9466__auto____$1 = cljs.reader.read.call(null, rdr, true, null, true);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto____$1);
    }(), x__9466__auto__);
  };
};
cljs.reader.throwing_reader = function cljs$reader$throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function cljs$reader$read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, o)) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function cljs$reader$read_set(rdr, _) {
  return cljs.core.PersistentHashSet.fromArray(cljs.reader.read_delimited_list.call(null, "}", rdr, true), true);
};
cljs.reader.read_regex = function cljs$reader$read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function cljs$reader$read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function cljs$reader$macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_literal;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function cljs$reader$dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function cljs$reader$read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__35048 = reader;
        var G__35049 = eof_is_error;
        var G__35050 = sentinel;
        var G__35051 = is_recursive;
        reader = G__35048;
        eof_is_error = G__35049;
        sentinel = G__35050;
        is_recursive = G__35051;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__35052 = cljs.reader.read_comment.call(null, reader, ch);
          var G__35053 = eof_is_error;
          var G__35054 = sentinel;
          var G__35055 = is_recursive;
          reader = G__35052;
          eof_is_error = G__35053;
          sentinel = G__35054;
          is_recursive = G__35055;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__35056 = reader;
            var G__35057 = eof_is_error;
            var G__35058 = sentinel;
            var G__35059 = is_recursive;
            reader = G__35056;
            eof_is_error = G__35057;
            sentinel = G__35058;
            is_recursive = G__35059;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function cljs$reader$read_string(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Cannot read from non-string object.");
  }
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__35060 = b.append("0");
          b = G__35060;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div));
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  var and__8620__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if (cljs.core.truth_(and__8620__auto__)) {
    var or__8632__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400);
    }
  } else {
    return and__8620__auto__;
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__35064 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__35064, 0, null);
  var years = cljs.core.nth.call(null, vec__35064, 1, null);
  var months = cljs.core.nth.call(null, vec__35064, 2, null);
  var days = cljs.core.nth.call(null, vec__35064, 3, null);
  var hours = cljs.core.nth.call(null, vec__35064, 4, null);
  var minutes = cljs.core.nth.call(null, vec__35064, 5, null);
  var seconds = cljs.core.nth.call(null, vec__35064, 6, null);
  var fraction = cljs.core.nth.call(null, vec__35064, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__35064, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__35064, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__35064, 10, null);
  var v = vec__35064;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__8632__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4655__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var vec__35070 = temp__4655__auto__;
    var years = cljs.core.nth.call(null, vec__35070, 0, null);
    var months = cljs.core.nth.call(null, vec__35070, 1, null);
    var days = cljs.core.nth.call(null, vec__35070, 2, null);
    var hours = cljs.core.nth.call(null, vec__35070, 3, null);
    var minutes = cljs.core.nth.call(null, vec__35070, 4, null);
    var seconds = cljs.core.nth.call(null, vec__35070, 5, null);
    var ms = cljs.core.nth.call(null, vec__35070, 6, null);
    var offset = cljs.core.nth.call(null, vec__35070, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__35089_35105 = cljs.core.seq.call(null, form);
    var chunk__35090_35106 = null;
    var count__35091_35107 = 0;
    var i__35092_35108 = 0;
    while (true) {
      if (i__35092_35108 < count__35091_35107) {
        var x_35109 = cljs.core._nth.call(null, chunk__35090_35106, i__35092_35108);
        arr.push(x_35109);
        var G__35110 = seq__35089_35105;
        var G__35111 = chunk__35090_35106;
        var G__35112 = count__35091_35107;
        var G__35113 = i__35092_35108 + 1;
        seq__35089_35105 = G__35110;
        chunk__35090_35106 = G__35111;
        count__35091_35107 = G__35112;
        i__35092_35108 = G__35113;
        continue;
      } else {
        var temp__4657__auto___35114 = cljs.core.seq.call(null, seq__35089_35105);
        if (temp__4657__auto___35114) {
          var seq__35089_35115__$1 = temp__4657__auto___35114;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__35089_35115__$1)) {
            var c__9443__auto___35116 = cljs.core.chunk_first.call(null, seq__35089_35115__$1);
            var G__35117 = cljs.core.chunk_rest.call(null, seq__35089_35115__$1);
            var G__35118 = c__9443__auto___35116;
            var G__35119 = cljs.core.count.call(null, c__9443__auto___35116);
            var G__35120 = 0;
            seq__35089_35105 = G__35117;
            chunk__35090_35106 = G__35118;
            count__35091_35107 = G__35119;
            i__35092_35108 = G__35120;
            continue;
          } else {
            var x_35121 = cljs.core.first.call(null, seq__35089_35115__$1);
            arr.push(x_35121);
            var G__35122 = cljs.core.next.call(null, seq__35089_35115__$1);
            var G__35123 = null;
            var G__35124 = 0;
            var G__35125 = 0;
            seq__35089_35105 = G__35122;
            chunk__35090_35106 = G__35123;
            count__35091_35107 = G__35124;
            i__35092_35108 = G__35125;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = {};
      var seq__35095_35126 = cljs.core.seq.call(null, form);
      var chunk__35096_35127 = null;
      var count__35097_35128 = 0;
      var i__35098_35129 = 0;
      while (true) {
        if (i__35098_35129 < count__35097_35128) {
          var vec__35099_35130 = cljs.core._nth.call(null, chunk__35096_35127, i__35098_35129);
          var k_35131 = cljs.core.nth.call(null, vec__35099_35130, 0, null);
          var v_35132 = cljs.core.nth.call(null, vec__35099_35130, 1, null);
          obj[cljs.core.name.call(null, k_35131)] = v_35132;
          var G__35133 = seq__35095_35126;
          var G__35134 = chunk__35096_35127;
          var G__35135 = count__35097_35128;
          var G__35136 = i__35098_35129 + 1;
          seq__35095_35126 = G__35133;
          chunk__35096_35127 = G__35134;
          count__35097_35128 = G__35135;
          i__35098_35129 = G__35136;
          continue;
        } else {
          var temp__4657__auto___35137 = cljs.core.seq.call(null, seq__35095_35126);
          if (temp__4657__auto___35137) {
            var seq__35095_35138__$1 = temp__4657__auto___35137;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__35095_35138__$1)) {
              var c__9443__auto___35139 = cljs.core.chunk_first.call(null, seq__35095_35138__$1);
              var G__35140 = cljs.core.chunk_rest.call(null, seq__35095_35138__$1);
              var G__35141 = c__9443__auto___35139;
              var G__35142 = cljs.core.count.call(null, c__9443__auto___35139);
              var G__35143 = 0;
              seq__35095_35126 = G__35140;
              chunk__35096_35127 = G__35141;
              count__35097_35128 = G__35142;
              i__35098_35129 = G__35143;
              continue;
            } else {
              var vec__35102_35144 = cljs.core.first.call(null, seq__35095_35138__$1);
              var k_35145 = cljs.core.nth.call(null, vec__35102_35144, 0, null);
              var v_35146 = cljs.core.nth.call(null, vec__35102_35144, 1, null);
              obj[cljs.core.name.call(null, k_35145)] = v_35146;
              var G__35147 = cljs.core.next.call(null, seq__35095_35138__$1);
              var G__35148 = null;
              var G__35149 = 0;
              var G__35150 = 0;
              seq__35095_35126 = G__35147;
              chunk__35096_35127 = G__35148;
              count__35097_35128 = G__35149;
              i__35098_35129 = G__35150;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return cljs.core.uuid.call(null, uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function cljs$reader$maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("taoensso.encore");
goog.require("cljs.core");
goog.require("goog.net.XhrIoPool");
goog.require("goog.events");
goog.require("clojure.set");
goog.require("cljs.test");
goog.require("cljs.tools.reader.edn");
goog.require("taoensso.truss");
goog.require("goog.net.XhrIo");
goog.require("goog.Uri.QueryData");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.net.EventType");
goog.require("goog.structs");
goog.require("goog.string.format");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.net.ErrorCode");
taoensso.encore.encore_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 84, 2], null);
taoensso.encore.get_dynamic_assertion_data = function taoensso$encore$get_dynamic_assertion_data() {
  return taoensso.truss.get_dynamic_assertion_data.call(null);
};
taoensso.encore.name_with_attrs = function taoensso$encore$name_with_attrs(var_args) {
  var args35153 = [];
  var len__9707__auto___35162 = arguments.length;
  var i__9708__auto___35163 = 0;
  while (true) {
    if (i__9708__auto___35163 < len__9707__auto___35162) {
      args35153.push(arguments[i__9708__auto___35163]);
      var G__35164 = i__9708__auto___35163 + 1;
      i__9708__auto___35163 = G__35164;
      continue;
    } else {
    }
    break;
  }
  var G__35155 = args35153.length;
  switch(G__35155) {
    case 2:
      return taoensso.encore.name_with_attrs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.name_with_attrs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35153.length)].join(""));;
  }
};
taoensso.encore.name_with_attrs.cljs$core$IFn$_invoke$arity$2 = function(sym, args) {
  return taoensso.encore.name_with_attrs.call(null, sym, args, null);
};
taoensso.encore.name_with_attrs.cljs$core$IFn$_invoke$arity$3 = function(sym, args, attrs_merge) {
  var vec__35156 = typeof cljs.core.first.call(null, args) === "string" && cljs.core.next.call(null, args) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, args), cljs.core.next.call(null, args)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, args], null);
  var _QMARK_docstring = cljs.core.nth.call(null, vec__35156, 0, null);
  var args__$1 = cljs.core.nth.call(null, vec__35156, 1, null);
  var vec__35159 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args__$1)) && cljs.core.next.call(null, args__$1) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, args__$1), cljs.core.next.call(null, args__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY, args__$1], null);
  var attrs = cljs.core.nth.call(null, vec__35159, 0, null);
  var args__$2 = cljs.core.nth.call(null, vec__35159, 1, null);
  var attrs__$1 = cljs.core.truth_(_QMARK_docstring) ? cljs.core.assoc.call(null, attrs, new cljs.core.Keyword(null, "doc", "doc", 1913296891), _QMARK_docstring) : attrs;
  var attrs__$2 = cljs.core.truth_(cljs.core.meta.call(null, sym)) ? cljs.core.conj.call(null, cljs.core.meta.call(null, sym), attrs__$1) : attrs__$1;
  var attrs__$3 = cljs.core.conj.call(null, attrs__$2, attrs_merge);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta.call(null, sym, attrs__$3), args__$2], null);
};
taoensso.encore.name_with_attrs.cljs$lang$maxFixedArity = 3;
taoensso.encore._core_merge = cljs.core.merge;
taoensso.encore._core_update_in = cljs.core.update_in;
taoensso.encore.read_edn = function taoensso$encore$read_edn(var_args) {
  var args35166 = [];
  var len__9707__auto___35169 = arguments.length;
  var i__9708__auto___35170 = 0;
  while (true) {
    if (i__9708__auto___35170 < len__9707__auto___35169) {
      args35166.push(arguments[i__9708__auto___35170]);
      var G__35171 = i__9708__auto___35170 + 1;
      i__9708__auto___35170 = G__35171;
      continue;
    } else {
    }
    break;
  }
  var G__35168 = args35166.length;
  switch(G__35168) {
    case 1:
      return taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35166.length)].join(""));;
  }
};
taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return taoensso.encore.read_edn.call(null, null, s);
};
taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (s == null || s === "") {
    return null;
  } else {
    if (typeof s === "string") {
      var readers = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "readers", "readers", -2118263030), new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399));
      var default$ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328), new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399));
      var readers__$1 = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, readers, new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399))) ? taoensso.encore.map_keys.call(null, cljs.core.symbol, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_)) : readers;
      var default$__$1 = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, default$, new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399))) ? cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_) : default$;
      var opts__$1 = cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "readers", "readers", -2118263030), readers__$1, new cljs.core.Keyword(null, "default", "default", -1987822328), default$__$1);
      return cljs.tools.reader.edn.read_string.call(null, opts__$1, s);
    } else {
      throw cljs.core.ex_info.call(null, "`read-edn` attempt against non-nil, non-string arg", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "given", "given", 716253602), s, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, s)], null));
    }
  }
};
taoensso.encore.read_edn.cljs$lang$maxFixedArity = 2;
taoensso.encore.pr_edn = function taoensso$encore$pr_edn(var_args) {
  var args35173 = [];
  var len__9707__auto___35178 = arguments.length;
  var i__9708__auto___35179 = 0;
  while (true) {
    if (i__9708__auto___35179 < len__9707__auto___35178) {
      args35173.push(arguments[i__9708__auto___35179]);
      var G__35180 = i__9708__auto___35179 + 1;
      i__9708__auto___35179 = G__35180;
      continue;
    } else {
    }
    break;
  }
  var G__35175 = args35173.length;
  switch(G__35175) {
    case 1:
      return taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35173.length)].join(""));;
  }
};
taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return taoensso.encore.pr_edn.call(null, null, x);
};
taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$2 = function(_opts, x) {
  var _STAR_print_level_STAR_35176 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_length_STAR_35177 = cljs.core._STAR_print_length_STAR_;
  cljs.core._STAR_print_level_STAR_ = null;
  cljs.core._STAR_print_length_STAR_ = null;
  try {
    return cljs.core.pr_str.call(null, x);
  } finally {
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_35177;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_35176;
  }
};
taoensso.encore.pr_edn.cljs$lang$maxFixedArity = 2;
taoensso.encore.error_data = function taoensso$encore$error_data(x) {
  var b2__20870__auto__ = function() {
    var or__8632__auto__ = cljs.core.ex_data.call(null, x);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      if (x instanceof Error) {
        return cljs.core.PersistentArrayMap.EMPTY;
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(b2__20870__auto__)) {
    var data_map = b2__20870__auto__;
    return cljs.core.conj.call(null, function() {
      var err = x;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "err-type", "err-type", -116717722), cljs.core.type.call(null, err), new cljs.core.Keyword(null, "err-msg", "err-msg", -1158512684), err.message, new cljs.core.Keyword(null, "err-cause", "err-cause", 897008749), err.cause], null);
    }(), data_map);
  } else {
    return null;
  }
};
taoensso.encore.some_QMARK_ = function taoensso$encore$some_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    return true;
  }
};
taoensso.encore.stringy_QMARK_ = function taoensso$encore$stringy_QMARK_(x) {
  return x instanceof cljs.core.Keyword || typeof x === "string";
};
taoensso.encore.ident_QMARK_ = function taoensso$encore$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
taoensso.encore.boolean_QMARK_ = function taoensso$encore$boolean_QMARK_(x) {
  return x === true || x === false;
};
taoensso.encore.indexed_QMARK_ = function taoensso$encore$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, x);
  }
};
taoensso.encore.named_QMARK_ = function taoensso$encore$named_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
taoensso.encore.editable_QMARK_ = function taoensso$encore$editable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 4 || x.cljs$core$IEditableCollection$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
taoensso.encore.derefable_QMARK_ = function taoensso$encore$derefable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  }
};
taoensso.encore.error_QMARK_ = function taoensso$encore$error_QMARK_(x) {
  return x instanceof Error;
};
taoensso.encore.atom_QMARK_ = function taoensso$encore$atom_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
taoensso.encore.lazy_seq_QMARK_ = function taoensso$encore$lazy_seq_QMARK_(x) {
  return x instanceof cljs.core.LazySeq;
};
taoensso.encore.re_pattern_QMARK_ = function taoensso$encore$re_pattern_QMARK_(x) {
  return x instanceof RegExp;
};
taoensso.encore.simple_ident_QMARK_ = function taoensso$encore$simple_ident_QMARK_(x) {
  return taoensso.encore.ident_QMARK_.call(null, x) && cljs.core.namespace.call(null, x) == null;
};
taoensso.encore.qualified_ident_QMARK_ = function taoensso$encore$qualified_ident_QMARK_(x) {
  var and__8620__auto__ = taoensso.encore.ident_QMARK_.call(null, x);
  if (and__8620__auto__) {
    var and__8620__auto____$1 = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(and__8620__auto____$1)) {
      return true;
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
taoensso.encore.simple_symbol_QMARK_ = function taoensso$encore$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace.call(null, x) == null;
};
taoensso.encore.qualified_symbol_QMARK_ = function taoensso$encore$qualified_symbol_QMARK_(x) {
  var and__8620__auto__ = x instanceof cljs.core.Symbol;
  if (and__8620__auto__) {
    var and__8620__auto____$1 = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(and__8620__auto____$1)) {
      return true;
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
taoensso.encore.simple_keyword_QMARK_ = function taoensso$encore$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace.call(null, x) == null;
};
taoensso.encore.qualified_keyword_QMARK_ = function taoensso$encore$qualified_keyword_QMARK_(x) {
  var and__8620__auto__ = x instanceof cljs.core.Keyword;
  if (and__8620__auto__) {
    var and__8620__auto____$1 = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(and__8620__auto____$1)) {
      return true;
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
taoensso.encore.nempty_str_QMARK_ = function taoensso$encore$nempty_str_QMARK_(x) {
  return typeof x === "string" && !cljs.core._EQ_.call(null, x, "");
};
taoensso.encore.nblank_str_QMARK_ = function taoensso$encore$nblank_str_QMARK_(x) {
  return typeof x === "string" && !clojure.string.blank_QMARK_.call(null, x);
};
taoensso.encore.nblank_QMARK_ = function taoensso$encore$nblank_QMARK_(x) {
  return !clojure.string.blank_QMARK_.call(null, x);
};
taoensso.encore.vec2_QMARK_ = function taoensso$encore$vec2_QMARK_(x) {
  return cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), 2);
};
taoensso.encore.vec3_QMARK_ = function taoensso$encore$vec3_QMARK_(x) {
  return cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), 3);
};
taoensso.encore.nneg_QMARK_ = function taoensso$encore$nneg_QMARK_(x) {
  return !(x < 0);
};
taoensso.encore.zero_num_QMARK_ = function taoensso$encore$zero_num_QMARK_(x) {
  return cljs.core._EQ_.call(null, x, 0);
};
taoensso.encore.regular_num_QMARK_ = function taoensso$encore$regular_num_QMARK_(x) {
  return typeof x === "number" && !isNaN(x) && !(x === Infinity);
};
taoensso.encore.float_QMARK_ = function taoensso$encore$float_QMARK_(x) {
  return typeof x === "number" && !isNaN(x) && !(x === Infinity) && !(parseFloat(x) === parseInt(x, 10));
};
taoensso.encore.int_QMARK_ = function taoensso$encore$int_QMARK_(x) {
  return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
};
taoensso.encore.nat_num_QMARK_ = function taoensso$encore$nat_num_QMARK_(x) {
  return typeof x === "number" && !(x < 0);
};
taoensso.encore.pos_num_QMARK_ = function taoensso$encore$pos_num_QMARK_(x) {
  return typeof x === "number" && x > 0;
};
taoensso.encore.neg_num_QMARK_ = function taoensso$encore$neg_num_QMARK_(x) {
  return typeof x === "number" && x < 0;
};
taoensso.encore.nat_int_QMARK_ = function taoensso$encore$nat_int_QMARK_(x) {
  return taoensso.encore.int_QMARK_.call(null, x) && !(x < 0);
};
taoensso.encore.pos_int_QMARK_ = function taoensso$encore$pos_int_QMARK_(x) {
  return taoensso.encore.int_QMARK_.call(null, x) && x > 0;
};
taoensso.encore.neg_int_QMARK_ = function taoensso$encore$neg_int_QMARK_(x) {
  return taoensso.encore.int_QMARK_.call(null, x) && x < 0;
};
taoensso.encore.nat_float_QMARK_ = function taoensso$encore$nat_float_QMARK_(x) {
  return taoensso.encore.float_QMARK_.call(null, x) && !(x < 0);
};
taoensso.encore.pos_float_QMARK_ = function taoensso$encore$pos_float_QMARK_(x) {
  return taoensso.encore.float_QMARK_.call(null, x) && x > 0;
};
taoensso.encore.neg_float_QMARK_ = function taoensso$encore$neg_float_QMARK_(x) {
  return taoensso.encore.float_QMARK_.call(null, x) && x < 0;
};
taoensso.encore.udt_QMARK_ = function taoensso$encore$udt_QMARK_(x) {
  return taoensso.encore.int_QMARK_.call(null, x) && !(x < 0);
};
taoensso.encore.pval_QMARK_ = function taoensso$encore$pval_QMARK_(x) {
  var and__8620__auto__ = typeof x === "number";
  if (and__8620__auto__) {
    var n = x;
    return n >= 0 && n <= 1;
  } else {
    return and__8620__auto__;
  }
};
taoensso.encore.chan_QMARK_ = function taoensso$encore$chan_QMARK_(x) {
  return x instanceof cljs.core.async.impl.channels.ManyToManyChannel;
};
taoensso.encore.kw_identical_QMARK_ = cljs.core.keyword_identical_QMARK_;
taoensso.encore.as__QMARK_nzero = function taoensso$encore$as__QMARK_nzero(x) {
  if (typeof x === "number") {
    if (x === 0) {
      return null;
    } else {
      return x;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_nblank = function taoensso$encore$as__QMARK_nblank(x) {
  if (typeof x === "string") {
    if (clojure.string.blank_QMARK_.call(null, x)) {
      return null;
    } else {
      return x;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_kw = function taoensso$encore$as__QMARK_kw(x) {
  if (x instanceof cljs.core.Keyword) {
    return x;
  } else {
    if (typeof x === "string") {
      return cljs.core.keyword.call(null, x);
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_name = function taoensso$encore$as__QMARK_name(x) {
  if (taoensso.encore.named_QMARK_.call(null, x)) {
    return cljs.core.name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_qname = function taoensso$encore$as__QMARK_qname(x) {
  if (taoensso.encore.named_QMARK_.call(null, x)) {
    var n = cljs.core.name.call(null, x);
    var b2__20870__auto__ = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(b2__20870__auto__)) {
      var ns = b2__20870__auto__;
      return [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(n)].join("");
    } else {
      return n;
    }
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_nempty_str = function taoensso$encore$as__QMARK_nempty_str(x) {
  if (typeof x === "string") {
    if (cljs.core._EQ_.call(null, x, "")) {
      return null;
    } else {
      return x;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_int = function taoensso$encore$as__QMARK_int(x) {
  if (typeof x === "number") {
    return cljs.core.long$.call(null, x);
  } else {
    if (typeof x === "string") {
      var x__$1 = parseInt(x, 10);
      if (cljs.core.truth_(isNaN(x__$1))) {
        return null;
      } else {
        return x__$1;
      }
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_float = function taoensso$encore$as__QMARK_float(x) {
  if (typeof x === "number") {
    return x;
  } else {
    if (typeof x === "string") {
      var x__$1 = parseFloat(x);
      if (cljs.core.truth_(isNaN(x__$1))) {
        return null;
      } else {
        return x__$1;
      }
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_udt = function taoensso$encore$as__QMARK_udt(x) {
  var b2__20870__auto__ = taoensso.encore.as__QMARK_int.call(null, x);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var n = b2__20870__auto__;
    if (n < 0) {
      return null;
    } else {
      return n;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_nat_int = function taoensso$encore$as__QMARK_nat_int(x) {
  var b2__20870__auto__ = taoensso.encore.as__QMARK_int.call(null, x);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var n = b2__20870__auto__;
    if (n < 0) {
      return null;
    } else {
      return n;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_pos_int = function taoensso$encore$as__QMARK_pos_int(x) {
  var b2__20870__auto__ = taoensso.encore.as__QMARK_int.call(null, x);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var n = b2__20870__auto__;
    if (n > 0) {
      return n;
    } else {
      return null;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_nat_float = function taoensso$encore$as__QMARK_nat_float(x) {
  var b2__20870__auto__ = taoensso.encore.as__QMARK_float.call(null, x);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var n = b2__20870__auto__;
    if (n < 0) {
      return null;
    } else {
      return n;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_pos_float = function taoensso$encore$as__QMARK_pos_float(x) {
  var b2__20870__auto__ = taoensso.encore.as__QMARK_float.call(null, x);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var n = b2__20870__auto__;
    if (n > 0) {
      return n;
    } else {
      return null;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_pval = function taoensso$encore$as__QMARK_pval(x) {
  var b2__20870__auto__ = taoensso.encore.as__QMARK_float.call(null, x);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var f = b2__20870__auto__;
    if (f > 1) {
      return 1;
    } else {
      if (f < 0) {
        return 0;
      } else {
        return f;
      }
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_bool = function taoensso$encore$as__QMARK_bool(x) {
  if (x == null) {
    return null;
  } else {
    if (x === true || x === false) {
      return x;
    } else {
      if (cljs.core._EQ_.call(null, x, 0) || cljs.core._EQ_.call(null, x, "false") || cljs.core._EQ_.call(null, x, "FALSE") || cljs.core._EQ_.call(null, x, "0")) {
        return false;
      } else {
        if (cljs.core._EQ_.call(null, x, 1) || cljs.core._EQ_.call(null, x, "true") || cljs.core._EQ_.call(null, x, "TRUE") || cljs.core._EQ_.call(null, x, "1")) {
          return true;
        } else {
          return null;
        }
      }
    }
  }
};
taoensso.encore.as__QMARK_email = function taoensso$encore$as__QMARK_email(_QMARK_s) {
  if (cljs.core.truth_(_QMARK_s)) {
    return cljs.core.re_find.call(null, /^[^\s@]+@[^\s@]+\.\S*[^\.]$/, clojure.string.trim.call(null, _QMARK_s));
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_nemail = function taoensso$encore$as__QMARK_nemail(_QMARK_s) {
  var b2__20870__auto__ = taoensso.encore.as__QMARK_email.call(null, _QMARK_s);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var email = b2__20870__auto__;
    return clojure.string.lower_case.call(null, email);
  } else {
    return null;
  }
};
taoensso.encore.try_pred = function taoensso$encore$try_pred(pred, x) {
  try {
    return pred.call(null, x);
  } catch (e35191) {
    if (e35191 instanceof Error) {
      var _ = e35191;
      return false;
    } else {
      throw e35191;
    }
  }
};
taoensso.encore.when_QMARK_ = function taoensso$encore$when_QMARK_(pred, x) {
  if (cljs.core.truth_(taoensso.encore.try_pred.call(null, pred, x))) {
    return x;
  } else {
    return null;
  }
};
taoensso.encore.is_BANG_ = function taoensso$encore$is_BANG_(var_args) {
  var args35192 = [];
  var len__9707__auto___35195 = arguments.length;
  var i__9708__auto___35196 = 0;
  while (true) {
    if (i__9708__auto___35196 < len__9707__auto___35195) {
      args35192.push(arguments[i__9708__auto___35196]);
      var G__35197 = i__9708__auto___35196 + 1;
      i__9708__auto___35196 = G__35197;
      continue;
    } else {
    }
    break;
  }
  var G__35194 = args35192.length;
  switch(G__35194) {
    case 1:
      return taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35192.length)].join(""));;
  }
};
taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return taoensso.encore.is_BANG_.call(null, cljs.core.identity, x, null);
};
taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$2 = function(pred, x) {
  return taoensso.encore.is_BANG_.call(null, cljs.core.identity, x, null);
};
taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$3 = function(pred, x, fail__QMARK_data) {
  if (cljs.core.truth_(taoensso.encore.try_pred.call(null, pred, x))) {
    return x;
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("`is!` "), cljs.core.str([cljs.core.str(pred)].join("")), cljs.core.str(" failure against arg: "), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "given", "given", 716253602), x, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, x), new cljs.core.Keyword(null, "fail-?data", "fail-?data", 1702764975), fail__QMARK_data], null));
  }
};
taoensso.encore.is_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore._as_throw = function taoensso$encore$_as_throw(as_name, x) {
  throw cljs.core.ex_info.call(null, [cljs.core.str("`as-"), cljs.core.str(cljs.core.name.call(null, as_name)), cljs.core.str("` failed against: `"), cljs.core.str(cljs.core.pr_str.call(null, x)), cljs.core.str("`")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "given", "given", 716253602), x, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, x)], null));
};
taoensso.encore.as_nzero = function taoensso$encore$as_nzero(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_nzero.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "nzero", "nzero", 2053173656), x);
  }
};
taoensso.encore.as_nblank = function taoensso$encore$as_nblank(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_nblank.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "nblank", "nblank", 626815585), x);
  }
};
taoensso.encore.as_nempty_str = function taoensso$encore$as_nempty_str(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_nempty_str.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "nempty-str", "nempty-str", -215700100), x);
  }
};
taoensso.encore.as_kw = function taoensso$encore$as_kw(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_kw.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "kw", "kw", 1158308175), x);
  }
};
taoensso.encore.as_name = function taoensso$encore$as_name(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_name.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), x);
  }
};
taoensso.encore.as_qname = function taoensso$encore$as_qname(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_qname.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "qname", "qname", -1983612179), x);
  }
};
taoensso.encore.as_email = function taoensso$encore$as_email(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_email.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "email", "email", 1415816706), x);
  }
};
taoensso.encore.as_nemail = function taoensso$encore$as_nemail(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_nemail.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "nemail", "nemail", 318708381), x);
  }
};
taoensso.encore.as_udt = function taoensso$encore$as_udt(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_udt.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "udt", "udt", 2011712751), x);
  }
};
taoensso.encore.as_int = function taoensso$encore$as_int(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_int.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "int", "int", -1741416922), x);
  }
};
taoensso.encore.as_nat_int = function taoensso$encore$as_nat_int(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_nat_int.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "nat-int", "nat-int", 313429715), x);
  }
};
taoensso.encore.as_pos_int = function taoensso$encore$as_pos_int(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_pos_int.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "pos-int", "pos-int", 15030207), x);
  }
};
taoensso.encore.as_float = function taoensso$encore$as_float(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_float.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "float", "float", -1732389368), x);
  }
};
taoensso.encore.as_nat_float = function taoensso$encore$as_nat_float(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_nat_float.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "nat-float", "nat-float", -371030973), x);
  }
};
taoensso.encore.as_pos_float = function taoensso$encore$as_pos_float(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_pos_float.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "pos-float", "pos-float", -715200084), x);
  }
};
taoensso.encore.as_pval = function taoensso$encore$as_pval(x) {
  var or__8632__auto__ = taoensso.encore.as__QMARK_pval.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "pval", "pval", -274256857), x);
  }
};
taoensso.encore.as_bool = function taoensso$encore$as_bool(x) {
  var _QMARK_b = taoensso.encore.as__QMARK_bool.call(null, x);
  if (_QMARK_b == null) {
    return taoensso.encore._as_throw.call(null, new cljs.core.Keyword(null, "bool", "bool", 1444635321), x);
  } else {
    return _QMARK_b;
  }
};
taoensso.encore.explode_keyword = function taoensso$encore$explode_keyword(k) {
  return clojure.string.split.call(null, taoensso.encore.as_qname.call(null, k), /[\.\/]/);
};
taoensso.encore.merge_keywords = function taoensso$encore$merge_keywords(var_args) {
  var args35199 = [];
  var len__9707__auto___35202 = arguments.length;
  var i__9708__auto___35203 = 0;
  while (true) {
    if (i__9708__auto___35203 < len__9707__auto___35202) {
      args35199.push(arguments[i__9708__auto___35203]);
      var G__35204 = i__9708__auto___35203 + 1;
      i__9708__auto___35203 = G__35204;
      continue;
    } else {
    }
    break;
  }
  var G__35201 = args35199.length;
  switch(G__35201) {
    case 1:
      return taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35199.length)].join(""));;
  }
};
taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$1 = function(ks) {
  return taoensso.encore.merge_keywords.call(null, ks, false);
};
taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$2 = function(ks, omit_slash_QMARK_) {
  if (cljs.core.seq.call(null, ks)) {
    var parts = cljs.core.reduce.call(null, function(acc, in$) {
      if (in$ == null) {
        return acc;
      } else {
        return cljs.core.reduce.call(null, cljs.core.conj, acc, taoensso.encore.explode_keyword.call(null, in$));
      }
    }, cljs.core.PersistentVector.EMPTY, ks);
    if (cljs.core.seq.call(null, parts)) {
      if (cljs.core.truth_(omit_slash_QMARK_)) {
        return cljs.core.keyword.call(null, clojure.string.join.call(null, ".", parts));
      } else {
        var ppop = cljs.core.pop.call(null, parts);
        return cljs.core.keyword.call(null, cljs.core.seq.call(null, ppop) ? clojure.string.join.call(null, ".", ppop) : null, cljs.core.peek.call(null, parts));
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
taoensso.encore.merge_keywords.cljs$lang$maxFixedArity = 2;
taoensso.encore.preserve_reduced = function taoensso$encore$preserve_reduced(rf) {
  return function(acc, in$) {
    var result = rf.call(null, acc, in$);
    if (cljs.core.reduced_QMARK_.call(null, result)) {
      return cljs.core.reduced.call(null, result);
    } else {
      return result;
    }
  };
};
taoensso.encore.reduce_kvs = function taoensso$encore$reduce_kvs(rf, init, kvs) {
  return cljs.core.transduce.call(null, cljs.core.partition_all.call(null, 2), cljs.core.completing.call(null, function(acc, p__35212) {
    var vec__35213 = p__35212;
    var k = cljs.core.nth.call(null, vec__35213, 0, null);
    var v = cljs.core.nth.call(null, vec__35213, 1, null);
    return rf.call(null, acc, k, v);
  }), init, kvs);
};
taoensso.encore.reduce_n = function taoensso$encore$reduce_n(rf, init, n) {
  return cljs.core.reduce.call(null, rf, init, cljs.core.range.call(null, n));
};
taoensso.encore.reduce_indexed = function taoensso$encore$reduce_indexed(rf, init, coll) {
  var i = cljs.core.volatile_BANG_.call(null, -1);
  return cljs.core.reduce.call(null, function(i) {
    return function(acc, in$) {
      return rf.call(null, acc, cljs.core._vreset_BANG_.call(null, i, cljs.core._deref.call(null, i) + 1), in$);
    };
  }(i), init, coll);
};
taoensso.encore.reduce_obj = function taoensso$encore$reduce_obj(f, init, o) {
  return cljs.core.reduce.call(null, function(acc, k) {
    return f.call(null, acc, k, goog.object.get(o, k, null));
  }, init, cljs.core.js_keys.call(null, o));
};
taoensso.encore.run_BANG_ = function taoensso$encore$run_BANG_(proc, coll) {
  cljs.core.reduce.call(null, function(p1__35217_SHARP_, p2__35216_SHARP_) {
    return proc.call(null, p2__35216_SHARP_);
  }, null, coll);
  return null;
};
taoensso.encore.run_kv_BANG_ = function taoensso$encore$run_kv_BANG_(proc, m) {
  cljs.core.reduce_kv.call(null, function(p1__35220_SHARP_, p2__35218_SHARP_, p3__35219_SHARP_) {
    return proc.call(null, p2__35218_SHARP_, p3__35219_SHARP_);
  }, null, m);
  return null;
};
taoensso.encore.run_kvs_BANG_ = function taoensso$encore$run_kvs_BANG_(proc, kvs) {
  taoensso.encore.reduce_kvs.call(null, function(p1__35223_SHARP_, p2__35221_SHARP_, p3__35222_SHARP_) {
    return proc.call(null, p2__35221_SHARP_, p3__35222_SHARP_);
  }, null, kvs);
  return null;
};
taoensso.encore.run_obj_BANG_ = function taoensso$encore$run_obj_BANG_(proc, obj) {
  taoensso.encore.reduce_obj.call(null, function(p1__35226_SHARP_, p2__35224_SHARP_, p3__35225_SHARP_) {
    return proc.call(null, p2__35224_SHARP_, p3__35225_SHARP_);
  }, null, obj);
  return null;
};
taoensso.encore.rsome = function taoensso$encore$rsome(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    var b2__20870__auto__ = pred.call(null, in$);
    if (cljs.core.truth_(b2__20870__auto__)) {
      var p = b2__20870__auto__;
      return cljs.core.reduced.call(null, p);
    } else {
      return null;
    }
  }, null, coll);
};
taoensso.encore.rsome_kv = function taoensso$encore$rsome_kv(pred, coll) {
  return cljs.core.reduce_kv.call(null, function(acc, k, v) {
    var b2__20870__auto__ = pred.call(null, k, v);
    if (cljs.core.truth_(b2__20870__auto__)) {
      var p = b2__20870__auto__;
      return cljs.core.reduced.call(null, p);
    } else {
      return null;
    }
  }, null, coll);
};
taoensso.encore.rfirst = function taoensso$encore$rfirst(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    if (cljs.core.truth_(pred.call(null, in$))) {
      return cljs.core.reduced.call(null, in$);
    } else {
      return null;
    }
  }, null, coll);
};
taoensso.encore.rfirst_kv = function taoensso$encore$rfirst_kv(pred, coll) {
  return cljs.core.reduce_kv.call(null, function(acc, k, v) {
    if (cljs.core.truth_(pred.call(null, k, v))) {
      return cljs.core.reduced.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
    } else {
      return null;
    }
  }, null, coll);
};
taoensso.encore.revery_QMARK_ = function taoensso$encore$revery_QMARK_(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    if (cljs.core.truth_(pred.call(null, in$))) {
      return true;
    } else {
      return cljs.core.reduced.call(null, false);
    }
  }, true, coll);
};
taoensso.encore.revery_kv_QMARK_ = function taoensso$encore$revery_kv_QMARK_(pred, coll) {
  return cljs.core.reduce_kv.call(null, function(acc, k, v) {
    if (cljs.core.truth_(pred.call(null, k, v))) {
      return true;
    } else {
      return cljs.core.reduced.call(null, false);
    }
  }, true, coll);
};
taoensso.encore.revery = function taoensso$encore$revery(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    if (cljs.core.truth_(pred.call(null, in$))) {
      return coll;
    } else {
      return cljs.core.reduced.call(null, null);
    }
  }, coll, coll);
};
taoensso.encore.revery_kv = function taoensso$encore$revery_kv(pred, coll) {
  return cljs.core.reduce_kv.call(null, function(acc, k, v) {
    if (cljs.core.truth_(pred.call(null, k, v))) {
      return coll;
    } else {
      return cljs.core.reduced.call(null, null);
    }
  }, coll, coll);
};
taoensso.encore.idx_fn = function taoensso$encore$idx_fn() {
  var idx_ = cljs.core.atom.call(null, -1);
  return function(idx_) {
    return function() {
      return cljs.core.swap_BANG_.call(null, idx_, cljs.core.inc);
    };
  }(idx_);
};
taoensso.encore.max_long = 9007199254740991;
taoensso.encore.min_long = -9007199254740991;
taoensso.encore.approx_EQ__EQ_ = function taoensso$encore$approx_EQ__EQ_(var_args) {
  var args35228 = [];
  var len__9707__auto___35231 = arguments.length;
  var i__9708__auto___35232 = 0;
  while (true) {
    if (i__9708__auto___35232 < len__9707__auto___35231) {
      args35228.push(arguments[i__9708__auto___35232]);
      var G__35233 = i__9708__auto___35232 + 1;
      i__9708__auto___35232 = G__35233;
      continue;
    } else {
    }
    break;
  }
  var G__35230 = args35228.length;
  switch(G__35230) {
    case 2:
      return taoensso.encore.approx_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.approx_EQ__EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35228.length)].join(""));;
  }
};
taoensso.encore.approx_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return Math.abs(x - y) < .001;
};
taoensso.encore.approx_EQ__EQ_.cljs$core$IFn$_invoke$arity$3 = function(signf, x, y) {
  return Math.abs(x - y) < signf;
};
taoensso.encore.approx_EQ__EQ_.cljs$lang$maxFixedArity = 3;
taoensso.encore.clamp = function taoensso$encore$clamp(nmin, nmax, n) {
  if (n < nmin) {
    return nmin;
  } else {
    if (n > nmax) {
      return nmax;
    } else {
      return n;
    }
  }
};
taoensso.encore.pow = function taoensso$encore$pow(n, exp) {
  return Math.pow(n, exp);
};
taoensso.encore.abs = function taoensso$encore$abs(n) {
  if (n < 0) {
    return -n;
  } else {
    return n;
  }
};
taoensso.encore.round_STAR_ = function taoensso$encore$round_STAR_(var_args) {
  var args35235 = [];
  var len__9707__auto___35239 = arguments.length;
  var i__9708__auto___35240 = 0;
  while (true) {
    if (i__9708__auto___35240 < len__9707__auto___35239) {
      args35235.push(arguments[i__9708__auto___35240]);
      var G__35241 = i__9708__auto___35240 + 1;
      i__9708__auto___35240 = G__35241;
      continue;
    } else {
    }
    break;
  }
  var G__35237 = args35235.length;
  switch(G__35237) {
    case 1:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35235.length)].join(""));;
  }
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return taoensso.encore.round_STAR_.call(null, new cljs.core.Keyword(null, "round", "round", 2009433328), null, n);
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$2 = function(type, n) {
  return taoensso.encore.round_STAR_.call(null, type, null, n);
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$3 = function(type, nplaces, n) {
  var n__$1 = n;
  var modifier = cljs.core.truth_(nplaces) ? Math.pow(10, nplaces) : null;
  var n_STAR_ = cljs.core.truth_(modifier) ? n__$1 * modifier : n__$1;
  var rounded = function() {
    var G__35238 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__35238) {
      case "round":
        return Math.round(n_STAR_);
        break;
      case "floor":
        return Math.floor(n_STAR_);
        break;
      case "ceil":
        return Math.ceil(n_STAR_);
        break;
      case "trunc":
        return cljs.core.long$.call(null, n_STAR_);
        break;
      default:
        throw cljs.core.ex_info.call(null, "Unrecognized round type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "given", "given", 716253602), type], null));;
    }
  }();
  if (cljs.core.truth_(modifier)) {
    return rounded / modifier;
  } else {
    return cljs.core.long$.call(null, rounded);
  }
};
taoensso.encore.round_STAR_.cljs$lang$maxFixedArity = 3;
taoensso.encore.round0 = function taoensso$encore$round0(n) {
  return Math.round(n);
};
taoensso.encore.round1 = function taoensso$encore$round1(n) {
  return Math.round(n * 10) / 10;
};
taoensso.encore.round2 = function taoensso$encore$round2(n) {
  return Math.round(n * 100) / 100;
};
taoensso.encore.exp_backoff = function taoensso$encore$exp_backoff(var_args) {
  var args35244 = [];
  var len__9707__auto___35250 = arguments.length;
  var i__9708__auto___35251 = 0;
  while (true) {
    if (i__9708__auto___35251 < len__9707__auto___35250) {
      args35244.push(arguments[i__9708__auto___35251]);
      var G__35252 = i__9708__auto___35251 + 1;
      i__9708__auto___35251 = G__35252;
      continue;
    } else {
    }
    break;
  }
  var G__35246 = args35244.length;
  switch(G__35246) {
    case 1:
      return taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35244.length)].join(""));;
  }
};
taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$1 = function(n_attempt) {
  return taoensso.encore.exp_backoff.call(null, n_attempt, null);
};
taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$2 = function(n_attempt, p__35247) {
  var map__35248 = p__35247;
  var map__35248__$1 = (!(map__35248 == null) ? map__35248.cljs$lang$protocol_mask$partition0$ & 64 || map__35248.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__35248) : map__35248;
  var min = cljs.core.get.call(null, map__35248__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__35248__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var factor = cljs.core.get.call(null, map__35248__$1, new cljs.core.Keyword(null, "factor", "factor", -2103172748), 1E3);
  var n = n_attempt > 36 ? 36 : n_attempt;
  var b = Math.pow(2, n);
  var t = cljs.core.long$.call(null, (b + cljs.core.rand.call(null, b)) * .5 * factor);
  var t__$1 = cljs.core.long$.call(null, cljs.core.truth_(min) ? t < min ? min : t : t);
  var t__$2 = cljs.core.long$.call(null, cljs.core.truth_(max) ? t__$1 > max ? max : t__$1 : t__$1);
  return t__$2;
};
taoensso.encore.exp_backoff.cljs$lang$maxFixedArity = 2;
taoensso.encore.node_target_QMARK_ = cljs.core._EQ_.call(null, cljs.core._STAR_target_STAR_, "nodejs");
taoensso.encore.js__QMARK_win = typeof window !== "undefined" ? window : null;
taoensso.encore.force_ref = function taoensso$encore$force_ref(x) {
  if (taoensso.encore.derefable_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
taoensso.encore.merge_meta = function taoensso$encore$merge_meta(x, m) {
  return cljs.core.with_meta.call(null, x, taoensso.encore.merge.call(null, cljs.core.meta.call(null, x), m));
};
taoensso.encore.without_meta = function taoensso$encore$without_meta(x) {
  if (cljs.core.truth_(cljs.core.meta.call(null, x))) {
    return cljs.core.with_meta.call(null, x, null);
  } else {
    return x;
  }
};
taoensso.encore.some_EQ_ = function taoensso$encore$some_EQ_(var_args) {
  var args35255 = [];
  var len__9707__auto___35261 = arguments.length;
  var i__9708__auto___35262 = 0;
  while (true) {
    if (i__9708__auto___35262 < len__9707__auto___35261) {
      args35255.push(arguments[i__9708__auto___35262]);
      var G__35263 = i__9708__auto___35262 + 1;
      i__9708__auto___35262 = G__35263;
      continue;
    } else {
    }
    break;
  }
  var G__35260 = args35255.length;
  switch(G__35260) {
    case 2:
      return taoensso.encore.some_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35255.slice(2), 0, null);
      return taoensso.encore.some_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
taoensso.encore.some_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return taoensso.encore.some_QMARK_.call(null, x) && cljs.core._EQ_.call(null, x, y);
};
taoensso.encore.some_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  var and__8620__auto__ = taoensso.encore.some_QMARK_.call(null, x);
  if (and__8620__auto__) {
    var and__8620__auto____$1 = cljs.core._EQ_.call(null, x, y);
    if (and__8620__auto____$1) {
      return taoensso.encore.revery_QMARK_.call(null, function(and__8620__auto____$1, and__8620__auto__) {
        return function(p1__35254_SHARP_) {
          return cljs.core._EQ_.call(null, p1__35254_SHARP_, x);
        };
      }(and__8620__auto____$1, and__8620__auto__), more);
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
taoensso.encore.some_EQ_.cljs$lang$applyTo = function(seq35256) {
  var G__35257 = cljs.core.first.call(null, seq35256);
  var seq35256__$1 = cljs.core.next.call(null, seq35256);
  var G__35258 = cljs.core.first.call(null, seq35256__$1);
  var seq35256__$2 = cljs.core.next.call(null, seq35256__$1);
  return taoensso.encore.some_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__35257, G__35258, seq35256__$2);
};
taoensso.encore.some_EQ_.cljs$lang$maxFixedArity = 2;
taoensso.encore.nnil = function taoensso$encore$nnil(var_args) {
  var args35265 = [];
  var len__9707__auto___35272 = arguments.length;
  var i__9708__auto___35273 = 0;
  while (true) {
    if (i__9708__auto___35273 < len__9707__auto___35272) {
      args35265.push(arguments[i__9708__auto___35273]);
      var G__35274 = i__9708__auto___35273 + 1;
      i__9708__auto___35273 = G__35274;
      continue;
    } else {
    }
    break;
  }
  var G__35271 = args35265.length;
  switch(G__35271) {
    case 0:
      return taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35265.slice(3), 0, null);
      return taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$0 = function() {
  return null;
};
taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y;
  } else {
    return x;
  }
};
taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$3 = function(x, y, z) {
  if (x == null) {
    if (y == null) {
      return z;
    } else {
      return y;
    }
  } else {
    return x;
  }
};
taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$variadic = function(x, y, z, more) {
  if (x == null) {
    if (y == null) {
      if (z == null) {
        return taoensso.encore.rfirst.call(null, taoensso.encore.some_QMARK_, more);
      } else {
        return z;
      }
    } else {
      return y;
    }
  } else {
    return x;
  }
};
taoensso.encore.nnil.cljs$lang$applyTo = function(seq35266) {
  var G__35267 = cljs.core.first.call(null, seq35266);
  var seq35266__$1 = cljs.core.next.call(null, seq35266);
  var G__35268 = cljs.core.first.call(null, seq35266__$1);
  var seq35266__$2 = cljs.core.next.call(null, seq35266__$1);
  var G__35269 = cljs.core.first.call(null, seq35266__$2);
  var seq35266__$3 = cljs.core.next.call(null, seq35266__$2);
  return taoensso.encore.nnil.cljs$core$IFn$_invoke$arity$variadic(G__35267, G__35268, G__35269, seq35266__$3);
};
taoensso.encore.nnil.cljs$lang$maxFixedArity = 3;
taoensso.encore.parse_version = function taoensso$encore$parse_version(x) {
  var vec__35279 = clojure.string.split.call(null, [cljs.core.str(x)].join(""), /-/, 2);
  var s_version = cljs.core.nth.call(null, vec__35279, 0, null);
  var _QMARK_s_qualifier = cljs.core.nth.call(null, vec__35279, 1, null);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "version", "version", 425292698), function() {
    var b2__20870__auto__ = cljs.core.re_seq.call(null, /\d+/, s_version);
    if (cljs.core.truth_(b2__20870__auto__)) {
      var s = b2__20870__auto__;
      return cljs.core.mapv.call(null, taoensso.encore.as__QMARK_int, s);
    } else {
      return null;
    }
  }(), new cljs.core.Keyword(null, "qualifier", "qualifier", 125841738), function() {
    var b2__20870__auto__ = _QMARK_s_qualifier;
    if (cljs.core.truth_(b2__20870__auto__)) {
      var s = b2__20870__auto__;
      return clojure.string.lower_case.call(null, s);
    } else {
      return null;
    }
  }()], null);
};
taoensso.encore.assert_min_encore_version = function taoensso$encore$assert_min_encore_version(min_version) {
  var vec__35292 = taoensso.encore.encore_version;
  var xc = cljs.core.nth.call(null, vec__35292, 0, null);
  var yc = cljs.core.nth.call(null, vec__35292, 1, null);
  var zc = cljs.core.nth.call(null, vec__35292, 2, null);
  var vec__35295 = cljs.core.vector_QMARK_.call(null, min_version) ? min_version : (new cljs.core.Keyword(null, "version", "version", 425292698)).cljs$core$IFn$_invoke$arity$1(taoensso.encore.parse_version.call(null, min_version));
  var xm = cljs.core.nth.call(null, vec__35295, 0, null);
  var ym = cljs.core.nth.call(null, vec__35295, 1, null);
  var zm = cljs.core.nth.call(null, vec__35295, 2, null);
  var vec__35298 = cljs.core.mapv.call(null, function(vec__35292, xc, yc, zc, vec__35295, xm, ym, zm) {
    return function(p1__35282_SHARP_) {
      var or__8632__auto__ = p1__35282_SHARP_;
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    };
  }(vec__35292, xc, yc, zc, vec__35295, xm, ym, zm), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xm, ym, zm], null));
  var xm__$1 = cljs.core.nth.call(null, vec__35298, 0, null);
  var ym__$1 = cljs.core.nth.call(null, vec__35298, 1, null);
  var zm__$1 = cljs.core.nth.call(null, vec__35298, 2, null);
  if (xc > xm__$1 || cljs.core._EQ_.call(null, xc, xm__$1) && (yc > ym__$1 || cljs.core._EQ_.call(null, yc, ym__$1) && zc >= zm__$1)) {
    return null;
  } else {
    throw cljs.core.ex_info.call(null, "Insufficient `com.taoensso/encore` version, you may have a dependency conflict: see http://goo.gl/qBbLvC for solutions.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-version", "min-version", -1697197126), clojure.string.join.call(null, ".", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xm__$1, ym__$1, zm__$1], null)), new cljs.core.Keyword(null, "your-version", "your-version", -351781765), 
    clojure.string.join.call(null, ".", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xc, yc, zc], null))], null));
  }
};
taoensso.encore.queue_QMARK_ = function taoensso$encore$queue_QMARK_(x) {
  return x instanceof cljs.core.PersistentQueue;
};
taoensso.encore.queue = function taoensso$encore$queue(var_args) {
  var args35301 = [];
  var len__9707__auto___35304 = arguments.length;
  var i__9708__auto___35305 = 0;
  while (true) {
    if (i__9708__auto___35305 < len__9707__auto___35304) {
      args35301.push(arguments[i__9708__auto___35305]);
      var G__35306 = i__9708__auto___35305 + 1;
      i__9708__auto___35305 = G__35306;
      continue;
    } else {
    }
    break;
  }
  var G__35303 = args35301.length;
  switch(G__35303) {
    case 1:
      return taoensso.encore.queue.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 0:
      return taoensso.encore.queue.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35301.length)].join(""));;
  }
};
taoensso.encore.queue.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.into.call(null, taoensso.encore.queue.call(null), coll);
};
taoensso.encore.queue.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentQueue.EMPTY;
};
taoensso.encore.queue.cljs$lang$maxFixedArity = 1;
taoensso.encore.queue_STAR_ = function taoensso$encore$queue_STAR_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35309 = arguments.length;
  var i__9708__auto___35310 = 0;
  while (true) {
    if (i__9708__auto___35310 < len__9707__auto___35309) {
      args__9714__auto__.push(arguments[i__9708__auto___35310]);
      var G__35311 = i__9708__auto___35310 + 1;
      i__9708__auto___35310 = G__35311;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(items) {
  return taoensso.encore.queue.call(null, items);
};
taoensso.encore.queue_STAR_.cljs$lang$maxFixedArity = 0;
taoensso.encore.queue_STAR_.cljs$lang$applyTo = function(seq35308) {
  return taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35308));
};
taoensso.encore.vec_STAR_ = cljs.core.vec;
taoensso.encore.set_STAR_ = cljs.core.set;
taoensso.encore.oget = function taoensso$encore$oget(var_args) {
  var args35312 = [];
  var len__9707__auto___35315 = arguments.length;
  var i__9708__auto___35316 = 0;
  while (true) {
    if (i__9708__auto___35316 < len__9707__auto___35315) {
      args35312.push(arguments[i__9708__auto___35316]);
      var G__35317 = i__9708__auto___35316 + 1;
      i__9708__auto___35316 = G__35317;
      continue;
    } else {
    }
    break;
  }
  var G__35314 = args35312.length;
  switch(G__35314) {
    case 2:
      return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35312.length)].join(""));;
  }
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  return goog.object.get(o, k, null);
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  return goog.object.get(o, k, not_found);
};
taoensso.encore.oget.cljs$lang$maxFixedArity = 3;
var sentinel_35324 = {};
taoensso.encore.oget_in = function(sentinel_35324) {
  return function taoensso$encore$oget_in(var_args) {
    var args35321 = [];
    var len__9707__auto___35325 = arguments.length;
    var i__9708__auto___35326 = 0;
    while (true) {
      if (i__9708__auto___35326 < len__9707__auto___35325) {
        args35321.push(arguments[i__9708__auto___35326]);
        var G__35327 = i__9708__auto___35326 + 1;
        i__9708__auto___35326 = G__35327;
        continue;
      } else {
      }
      break;
    }
    var G__35323 = args35321.length;
    switch(G__35323) {
      case 2:
        return taoensso.encore.oget_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      case 3:
        return taoensso.encore.oget_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35321.length)].join(""));;
    }
  };
}(sentinel_35324);
taoensso.encore.oget_in.cljs$core$IFn$_invoke$arity$2 = function(sentinel_35324) {
  return function(o, ks) {
    return taoensso.encore.oget_in.call(null, o, ks, null);
  };
}(sentinel_35324);
taoensso.encore.oget_in.cljs$core$IFn$_invoke$arity$3 = function(sentinel_35324) {
  return function(o, ks, not_found) {
    var o__$1 = o;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        var o__$2 = goog.object.get(o__$1, cljs.core.first.call(null, ks__$1), sentinel_35324);
        if (o__$2 === sentinel_35324) {
          return not_found;
        } else {
          var G__35329 = o__$2;
          var G__35330 = cljs.core.next.call(null, ks__$1);
          o__$1 = G__35329;
          ks__$1 = G__35330;
          continue;
        }
      } else {
        return o__$1;
      }
      break;
    }
  };
}(sentinel_35324);
taoensso.encore.oget_in.cljs$lang$maxFixedArity = 3;
taoensso.encore.conj_some = function taoensso$encore$conj_some(var_args) {
  var args35331 = [];
  var len__9707__auto___35343 = arguments.length;
  var i__9708__auto___35344 = 0;
  while (true) {
    if (i__9708__auto___35344 < len__9707__auto___35343) {
      args35331.push(arguments[i__9708__auto___35344]);
      var G__35345 = i__9708__auto___35344 + 1;
      i__9708__auto___35344 = G__35345;
      continue;
    } else {
    }
    break;
  }
  var G__35336 = args35331.length;
  switch(G__35336) {
    case 0:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35331.slice(2), 0, null);
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (x == null) {
    return coll;
  } else {
    return cljs.core.conj.call(null, coll, x);
  }
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, more) {
  return cljs.core.reduce.call(null, taoensso.encore.conj_some, taoensso.encore.conj_some.call(null, coll, x), more);
};
taoensso.encore.conj_some.cljs$lang$applyTo = function(seq35332) {
  var G__35333 = cljs.core.first.call(null, seq35332);
  var seq35332__$1 = cljs.core.next.call(null, seq35332);
  var G__35334 = cljs.core.first.call(null, seq35332__$1);
  var seq35332__$2 = cljs.core.next.call(null, seq35332__$1);
  return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic(G__35333, G__35334, seq35332__$2);
};
taoensso.encore.conj_some.cljs$lang$maxFixedArity = 2;
taoensso.encore.conj_when = function taoensso$encore$conj_when(var_args) {
  var args35337 = [];
  var len__9707__auto___35347 = arguments.length;
  var i__9708__auto___35348 = 0;
  while (true) {
    if (i__9708__auto___35348 < len__9707__auto___35347) {
      args35337.push(arguments[i__9708__auto___35348]);
      var G__35349 = i__9708__auto___35348 + 1;
      i__9708__auto___35348 = G__35349;
      continue;
    } else {
    }
    break;
  }
  var G__35342 = args35337.length;
  switch(G__35342) {
    case 0:
      return taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35337.slice(2), 0, null);
      return taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (cljs.core.truth_(x)) {
    return cljs.core.conj.call(null, coll, x);
  } else {
    return coll;
  }
};
taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, more) {
  return cljs.core.reduce.call(null, taoensso.encore.conj_when, taoensso.encore.conj_when.call(null, coll, x), more);
};
taoensso.encore.conj_when.cljs$lang$applyTo = function(seq35338) {
  var G__35339 = cljs.core.first.call(null, seq35338);
  var seq35338__$1 = cljs.core.next.call(null, seq35338);
  var G__35340 = cljs.core.first.call(null, seq35338__$1);
  var seq35338__$2 = cljs.core.next.call(null, seq35338__$1);
  return taoensso.encore.conj_when.cljs$core$IFn$_invoke$arity$variadic(G__35339, G__35340, seq35338__$2);
};
taoensso.encore.conj_when.cljs$lang$maxFixedArity = 2;
taoensso.encore.assoc_some = function taoensso$encore$assoc_some(var_args) {
  var args35351 = [];
  var len__9707__auto___35365 = arguments.length;
  var i__9708__auto___35366 = 0;
  while (true) {
    if (i__9708__auto___35366 < len__9707__auto___35365) {
      args35351.push(arguments[i__9708__auto___35366]);
      var G__35367 = i__9708__auto___35366 + 1;
      i__9708__auto___35366 = G__35367;
      continue;
    } else {
    }
    break;
  }
  var G__35357 = args35351.length;
  switch(G__35357) {
    case 3:
      return taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35351.slice(3), 0, null);
      return taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$3 = function(m, k, v) {
  if (v == null) {
    if (m == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      return m;
    }
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic = function(m, k, v, kvs) {
  return taoensso.encore.reduce_kvs.call(null, function(acc, k__$1, v__$1) {
    return taoensso.encore.assoc_some.call(null, acc, k__$1, v__$1);
  }, taoensso.encore.assoc_some.call(null, m, k, v), kvs);
};
taoensso.encore.assoc_some.cljs$lang$applyTo = function(seq35352) {
  var G__35353 = cljs.core.first.call(null, seq35352);
  var seq35352__$1 = cljs.core.next.call(null, seq35352);
  var G__35354 = cljs.core.first.call(null, seq35352__$1);
  var seq35352__$2 = cljs.core.next.call(null, seq35352__$1);
  var G__35355 = cljs.core.first.call(null, seq35352__$2);
  var seq35352__$3 = cljs.core.next.call(null, seq35352__$2);
  return taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic(G__35353, G__35354, G__35355, seq35352__$3);
};
taoensso.encore.assoc_some.cljs$lang$maxFixedArity = 3;
taoensso.encore.assoc_when = function taoensso$encore$assoc_when(var_args) {
  var args35358 = [];
  var len__9707__auto___35369 = arguments.length;
  var i__9708__auto___35370 = 0;
  while (true) {
    if (i__9708__auto___35370 < len__9707__auto___35369) {
      args35358.push(arguments[i__9708__auto___35370]);
      var G__35371 = i__9708__auto___35370 + 1;
      i__9708__auto___35370 = G__35371;
      continue;
    } else {
    }
    break;
  }
  var G__35364 = args35358.length;
  switch(G__35364) {
    case 3:
      return taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35358.slice(3), 0, null);
      return taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$3 = function(m, k, v) {
  if (cljs.core.truth_(v)) {
    return cljs.core.assoc.call(null, m, k, v);
  } else {
    if (m == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      return m;
    }
  }
};
taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic = function(m, k, v, kvs) {
  return taoensso.encore.reduce_kvs.call(null, function(acc, k__$1, v__$1) {
    return taoensso.encore.assoc_when.call(null, acc, k__$1, v__$1);
  }, taoensso.encore.assoc_when.call(null, m, k, v), kvs);
};
taoensso.encore.assoc_when.cljs$lang$applyTo = function(seq35359) {
  var G__35360 = cljs.core.first.call(null, seq35359);
  var seq35359__$1 = cljs.core.next.call(null, seq35359);
  var G__35361 = cljs.core.first.call(null, seq35359__$1);
  var seq35359__$2 = cljs.core.next.call(null, seq35359__$1);
  var G__35362 = cljs.core.first.call(null, seq35359__$2);
  var seq35359__$3 = cljs.core.next.call(null, seq35359__$2);
  return taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic(G__35360, G__35361, G__35362, seq35359__$3);
};
taoensso.encore.assoc_when.cljs$lang$maxFixedArity = 3;
taoensso.encore.get_subvec = function taoensso$encore$get_subvec(var_args) {
  var args35373 = [];
  var len__9707__auto___35376 = arguments.length;
  var i__9708__auto___35377 = 0;
  while (true) {
    if (i__9708__auto___35377 < len__9707__auto___35376) {
      args35373.push(arguments[i__9708__auto___35377]);
      var G__35378 = i__9708__auto___35377 + 1;
      i__9708__auto___35377 = G__35378;
      continue;
    } else {
    }
    break;
  }
  var G__35375 = args35373.length;
  switch(G__35375) {
    case 2:
      return taoensso.encore.get_subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.get_subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35373.length)].join(""));;
  }
};
taoensso.encore.get_subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  var start__$1 = start < 0 ? 0 : start;
  var vlen = cljs.core.count.call(null, v);
  if (start__$1 >= vlen) {
    return cljs.core.PersistentVector.EMPTY;
  } else {
    return cljs.core.subvec.call(null, v, start__$1, vlen);
  }
};
taoensso.encore.get_subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  var start__$1 = start < 0 ? 0 : start;
  var vlen = cljs.core.long$.call(null, cljs.core.count.call(null, v));
  var end__$1 = end > vlen ? vlen : end;
  if (start__$1 >= end__$1) {
    return cljs.core.PersistentVector.EMPTY;
  } else {
    return cljs.core.subvec.call(null, v, start__$1, end__$1);
  }
};
taoensso.encore.get_subvec.cljs$lang$maxFixedArity = 3;
taoensso.encore.get_subvector = function taoensso$encore$get_subvector(var_args) {
  var args35380 = [];
  var len__9707__auto___35383 = arguments.length;
  var i__9708__auto___35384 = 0;
  while (true) {
    if (i__9708__auto___35384 < len__9707__auto___35383) {
      args35380.push(arguments[i__9708__auto___35384]);
      var G__35385 = i__9708__auto___35384 + 1;
      i__9708__auto___35384 = G__35385;
      continue;
    } else {
    }
    break;
  }
  var G__35382 = args35380.length;
  switch(G__35382) {
    case 2:
      return taoensso.encore.get_subvector.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.get_subvector.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35380.length)].join(""));;
  }
};
taoensso.encore.get_subvector.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  var vlen = cljs.core.count.call(null, v);
  if (start < 0) {
    var start__$1 = start + vlen;
    var start__$2 = start__$1 < 0 ? 0 : start__$1;
    return cljs.core.subvec.call(null, v, start__$2, vlen);
  } else {
    if (start >= vlen) {
      return cljs.core.PersistentVector.EMPTY;
    } else {
      return cljs.core.subvec.call(null, v, start, vlen);
    }
  }
};
taoensso.encore.get_subvector.cljs$core$IFn$_invoke$arity$3 = function(v, start, length) {
  if (length <= 0) {
    return cljs.core.PersistentVector.EMPTY;
  } else {
    var vlen = cljs.core.long$.call(null, cljs.core.count.call(null, v));
    if (start < 0) {
      var start__$1 = start + vlen;
      var start__$2 = start__$1 < 0 ? 0 : start__$1;
      var end = start__$2 + length;
      var end__$1 = end > vlen ? vlen : end;
      return cljs.core.subvec.call(null, v, start__$2, end__$1);
    } else {
      var end = start + length;
      var end__$1 = end > vlen ? vlen : end;
      if (start >= end__$1) {
        return cljs.core.PersistentVector.EMPTY;
      } else {
        return cljs.core.subvec.call(null, v, start, end__$1);
      }
    }
  }
};
taoensso.encore.get_subvector.cljs$lang$maxFixedArity = 3;
taoensso.encore.vnext = function taoensso$encore$vnext(v) {
  if (cljs.core.count.call(null, v) > 1) {
    return cljs.core.subvec.call(null, v, 1);
  } else {
    return null;
  }
};
taoensso.encore.vsplit_last = function taoensso$encore$vsplit_last(v) {
  var c = cljs.core.count.call(null, v);
  if (c > 0) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c > 1 ? cljs.core.pop.call(null, v) : null, cljs.core.peek.call(null, v)], null);
  } else {
    return null;
  }
};
taoensso.encore.vsplit_first = function taoensso$encore$vsplit_first(v) {
  var c = cljs.core.count.call(null, v);
  if (c > 0) {
    var vec__35390 = v;
    var v1 = cljs.core.nth.call(null, vec__35390, 0, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v1, c > 1 ? cljs.core.subvec.call(null, v, 1) : null], null);
  } else {
    return null;
  }
};
taoensso.encore.fsplit_last = function taoensso$encore$fsplit_last(f, xs) {
  var butlast = cljs.core.PersistentVector.EMPTY;
  var xs__$1 = xs;
  while (true) {
    var vec__35396 = xs__$1;
    var seq__35397 = cljs.core.seq.call(null, vec__35396);
    var first__35398 = cljs.core.first.call(null, seq__35397);
    var seq__35397__$1 = cljs.core.next.call(null, seq__35397);
    var x1 = first__35398;
    var xn = seq__35397__$1;
    if (xn) {
      var G__35399 = cljs.core.conj.call(null, butlast, x1);
      var G__35400 = xn;
      butlast = G__35399;
      xs__$1 = G__35400;
      continue;
    } else {
      return f.call(null, butlast, x1);
    }
    break;
  }
};
taoensso.encore.takev = function taoensso$encore$takev(n, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    return taoensso.encore.get_subvector.call(null, coll, 0, n);
  } else {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.take.call(null, n), coll);
  }
};
taoensso.encore.nnil_set = function taoensso$encore$nnil_set(x) {
  return cljs.core.disj.call(null, taoensso.encore.set_STAR_.call(null, x), null);
};
taoensso.encore.distinct_elements_QMARK_ = function taoensso$encore$distinct_elements_QMARK_(x) {
  return cljs.core.set_QMARK_.call(null, x) || cljs.core._EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, taoensso.encore.set_STAR_.call(null, x)));
};
taoensso.encore.seq_kvs = cljs.core.partial.call(null, cljs.core.reduce, cljs.core.concat);
taoensso.encore.mapply = function taoensso$encore$mapply(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35403 = arguments.length;
  var i__9708__auto___35404 = 0;
  while (true) {
    if (i__9708__auto___35404 < len__9707__auto___35403) {
      args__9714__auto__.push(arguments[i__9708__auto___35404]);
      var G__35405 = i__9708__auto___35404 + 1;
      i__9708__auto___35404 = G__35405;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.call(null, f, taoensso.encore.fsplit_last.call(null, function(xs, lx) {
    return cljs.core.concat.call(null, xs, taoensso.encore.seq_kvs.call(null, lx));
  }, args));
};
taoensso.encore.mapply.cljs$lang$maxFixedArity = 1;
taoensso.encore.mapply.cljs$lang$applyTo = function(seq35401) {
  var G__35402 = cljs.core.first.call(null, seq35401);
  var seq35401__$1 = cljs.core.next.call(null, seq35401);
  return taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic(G__35402, seq35401__$1);
};
taoensso.encore.into_all = function taoensso$encore$into_all(var_args) {
  var args35406 = [];
  var len__9707__auto___35412 = arguments.length;
  var i__9708__auto___35413 = 0;
  while (true) {
    if (i__9708__auto___35413 < len__9707__auto___35412) {
      args35406.push(arguments[i__9708__auto___35413]);
      var G__35414 = i__9708__auto___35413 + 1;
      i__9708__auto___35413 = G__35414;
      continue;
    } else {
    }
    break;
  }
  var G__35411 = args35406.length;
  switch(G__35411) {
    case 2:
      return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35406.slice(2), 0, null);
      return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  return cljs.core.into.call(null, to, from);
};
taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic = function(to, from, more) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(acc, in$) {
    return cljs.core.reduce.call(null, cljs.core.conj_BANG_, acc, in$);
  }, cljs.core.transient$.call(null, to), cljs.core.cons.call(null, from, more)));
};
taoensso.encore.into_all.cljs$lang$applyTo = function(seq35407) {
  var G__35408 = cljs.core.first.call(null, seq35407);
  var seq35407__$1 = cljs.core.next.call(null, seq35407);
  var G__35409 = cljs.core.first.call(null, seq35407__$1);
  var seq35407__$2 = cljs.core.next.call(null, seq35407__$1);
  return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic(G__35408, G__35409, seq35407__$2);
};
taoensso.encore.into_all.cljs$lang$maxFixedArity = 2;
taoensso.encore.repeatedly_into = function taoensso$encore$repeatedly_into(coll, n, f) {
  if (n > 10 && taoensso.encore.editable_QMARK_.call(null, coll)) {
    return cljs.core.persistent_BANG_.call(null, taoensso.encore.reduce_n.call(null, function(acc, _) {
      return cljs.core.conj_BANG_.call(null, acc, f.call(null));
    }, cljs.core.transient$.call(null, coll), n));
  } else {
    return taoensso.encore.reduce_n.call(null, function(acc, _) {
      return cljs.core.conj.call(null, acc, f.call(null));
    }, coll, n);
  }
};
taoensso.encore.into_BANG_ = function taoensso$encore$into_BANG_(var_args) {
  var args35416 = [];
  var len__9707__auto___35419 = arguments.length;
  var i__9708__auto___35420 = 0;
  while (true) {
    if (i__9708__auto___35420 < len__9707__auto___35419) {
      args35416.push(arguments[i__9708__auto___35420]);
      var G__35421 = i__9708__auto___35420 + 1;
      i__9708__auto___35420 = G__35421;
      continue;
    } else {
    }
    break;
  }
  var G__35418 = args35416.length;
  switch(G__35418) {
    case 2:
      return taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35416.length)].join(""));;
  }
};
taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  return cljs.core.reduce.call(null, cljs.core.conj_BANG_, to, from);
};
taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  return cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, to, from);
};
taoensso.encore.into_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore.xdistinct = function taoensso$encore$xdistinct(var_args) {
  var args35423 = [];
  var len__9707__auto___35426 = arguments.length;
  var i__9708__auto___35427 = 0;
  while (true) {
    if (i__9708__auto___35427 < len__9707__auto___35426) {
      args35423.push(arguments[i__9708__auto___35427]);
      var G__35428 = i__9708__auto___35427 + 1;
      i__9708__auto___35427 = G__35428;
      continue;
    } else {
    }
    break;
  }
  var G__35425 = args35423.length;
  switch(G__35425) {
    case 0:
      return taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35423.length)].join(""));;
  }
};
taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.distinct.call(null);
};
taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$1 = function(keyfn) {
  return function(rf) {
    var seen_ = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentHashSet.EMPTY);
    return function(seen_) {
      return function() {
        var G__35430 = null;
        var G__35430__0 = function() {
          return rf.call(null);
        };
        var G__35430__1 = function(acc) {
          return rf.call(null, acc);
        };
        var G__35430__2 = function(acc, input) {
          var k = keyfn.call(null, input);
          if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, seen_), k)) {
            return acc;
          } else {
            cljs.core._vreset_BANG_.call(null, seen_, cljs.core.conj.call(null, cljs.core._deref.call(null, seen_), k));
            return rf.call(null, acc, input);
          }
        };
        G__35430 = function(acc, input) {
          switch(arguments.length) {
            case 0:
              return G__35430__0.call(this);
            case 1:
              return G__35430__1.call(this, acc);
            case 2:
              return G__35430__2.call(this, acc, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__35430.cljs$core$IFn$_invoke$arity$0 = G__35430__0;
        G__35430.cljs$core$IFn$_invoke$arity$1 = G__35430__1;
        G__35430.cljs$core$IFn$_invoke$arity$2 = G__35430__2;
        return G__35430;
      }();
    }(seen_);
  };
};
taoensso.encore.xdistinct.cljs$lang$maxFixedArity = 1;
taoensso.encore.map_vals = function taoensso$encore$map_vals(f, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      return cljs.core.assoc.call(null, m__$1, k, f.call(null, v));
    }, m, m);
  }
};
taoensso.encore.map_keys = function taoensso$encore$map_keys(f, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      return cljs.core.assoc.call(null, m__$1, f.call(null, k), v);
    }, cljs.core.PersistentArrayMap.EMPTY, m);
  }
};
taoensso.encore.filter_keys = function taoensso$encore$filter_keys(pred, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, k))) {
        return m__$1;
      } else {
        return cljs.core.dissoc.call(null, m__$1, k);
      }
    }, m, m);
  }
};
taoensso.encore.filter_vals = function taoensso$encore$filter_vals(pred, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, v))) {
        return m__$1;
      } else {
        return cljs.core.dissoc.call(null, m__$1, k);
      }
    }, m, m);
  }
};
taoensso.encore.remove_keys = function taoensso$encore$remove_keys(pred, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, k))) {
        return cljs.core.dissoc.call(null, m__$1, k);
      } else {
        return m__$1;
      }
    }, m, m);
  }
};
taoensso.encore.remove_vals = function taoensso$encore$remove_vals(pred, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, v))) {
        return cljs.core.dissoc.call(null, m__$1, k);
      } else {
        return m__$1;
      }
    }, m, m);
  }
};
taoensso.encore.ks_EQ_ = function taoensso$encore$ks_EQ_(ks, m) {
  return cljs.core._EQ_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_LT__EQ_ = function taoensso$encore$ks_LT__EQ_(ks, m) {
  return clojure.set.subset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_GT__EQ_ = function taoensso$encore$ks_GT__EQ_(ks, m) {
  return clojure.set.superset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_nnil_QMARK_ = function taoensso$encore$ks_nnil_QMARK_(ks, m) {
  return taoensso.encore.revery_QMARK_.call(null, function(p1__35431_SHARP_) {
    return taoensso.encore.some_QMARK_.call(null, cljs.core.get.call(null, m, p1__35431_SHARP_));
  }, ks);
};
taoensso.encore.update_in = function taoensso$encore$update_in(var_args) {
  var args35432 = [];
  var len__9707__auto___35435 = arguments.length;
  var i__9708__auto___35436 = 0;
  while (true) {
    if (i__9708__auto___35436 < len__9707__auto___35435) {
      args35432.push(arguments[i__9708__auto___35436]);
      var G__35437 = i__9708__auto___35436 + 1;
      i__9708__auto___35436 = G__35437;
      continue;
    } else {
    }
    break;
  }
  var G__35434 = args35432.length;
  switch(G__35434) {
    case 3:
      return taoensso.encore.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return taoensso.encore.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35432.length)].join(""));;
  }
};
taoensso.encore.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, f) {
  return taoensso.encore.update_in.call(null, m, ks, null, f);
};
taoensso.encore.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, ks, not_found, f) {
  var b2__20870__auto__ = cljs.core.seq.call(null, ks);
  if (b2__20870__auto__) {
    var ks_seq = b2__20870__auto__;
    var k = cljs.core.nth.call(null, ks, 0);
    var b2__20870__auto____$1 = cljs.core.next.call(null, ks_seq);
    if (b2__20870__auto____$1) {
      var ks__$1 = b2__20870__auto____$1;
      return cljs.core.assoc.call(null, m, k, taoensso.encore.update_in.call(null, cljs.core.get.call(null, m, k), ks__$1, not_found, f));
    } else {
      if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, f, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
        return cljs.core.dissoc.call(null, m, k);
      } else {
        var v = f.call(null, cljs.core.get.call(null, m, k, not_found));
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, v, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
          return cljs.core.dissoc.call(null, m, k);
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      }
    }
  } else {
    return f.call(null, m);
  }
};
taoensso.encore.update_in.cljs$lang$maxFixedArity = 4;
taoensso.encore.contains_in_QMARK_ = function taoensso$encore$contains_in_QMARK_(var_args) {
  var args35439 = [];
  var len__9707__auto___35442 = arguments.length;
  var i__9708__auto___35443 = 0;
  while (true) {
    if (i__9708__auto___35443 < len__9707__auto___35442) {
      args35439.push(arguments[i__9708__auto___35443]);
      var G__35444 = i__9708__auto___35443 + 1;
      i__9708__auto___35443 = G__35444;
      continue;
    } else {
    }
    break;
  }
  var G__35441 = args35439.length;
  switch(G__35441) {
    case 3:
      return taoensso.encore.contains_in_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return taoensso.encore.contains_in_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35439.length)].join(""));;
  }
};
taoensso.encore.contains_in_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(coll, ks, k) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.get_in.call(null, coll, ks), k);
};
taoensso.encore.contains_in_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(coll, ks) {
  if (cljs.core.seq.call(null, ks)) {
    return taoensso.encore.fsplit_last.call(null, function(ks__$1, lk) {
      return taoensso.encore.contains_in_QMARK_.call(null, coll, ks__$1, lk);
    }, ks);
  } else {
    return false;
  }
};
taoensso.encore.contains_in_QMARK_.cljs$lang$maxFixedArity = 3;
taoensso.encore.dissoc_in = function taoensso$encore$dissoc_in(var_args) {
  var args35446 = [];
  var len__9707__auto___35453 = arguments.length;
  var i__9708__auto___35454 = 0;
  while (true) {
    if (i__9708__auto___35454 < len__9707__auto___35453) {
      args35446.push(arguments[i__9708__auto___35454]);
      var G__35455 = i__9708__auto___35454 + 1;
      i__9708__auto___35454 = G__35455;
      continue;
    } else {
    }
    break;
  }
  var G__35452 = args35446.length;
  switch(G__35452) {
    case 3:
      return taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35446.slice(3), 0, null);
      return taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9726__auto__);
  }
};
taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, dissoc_k) {
  return taoensso.encore.update_in.call(null, m, ks, null, function(m__$1) {
    return cljs.core.dissoc.call(null, m__$1, dissoc_k);
  });
};
taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic = function(m, ks, dissoc_k, more) {
  return taoensso.encore.update_in.call(null, m, ks, null, function(m__$1) {
    return cljs.core.apply.call(null, cljs.core.dissoc, m__$1, dissoc_k, more);
  });
};
taoensso.encore.dissoc_in.cljs$lang$applyTo = function(seq35447) {
  var G__35448 = cljs.core.first.call(null, seq35447);
  var seq35447__$1 = cljs.core.next.call(null, seq35447);
  var G__35449 = cljs.core.first.call(null, seq35447__$1);
  var seq35447__$2 = cljs.core.next.call(null, seq35447__$1);
  var G__35450 = cljs.core.first.call(null, seq35447__$2);
  var seq35447__$3 = cljs.core.next.call(null, seq35447__$2);
  return taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic(G__35448, G__35449, G__35450, seq35447__$3);
};
taoensso.encore.dissoc_in.cljs$lang$maxFixedArity = 3;
taoensso.encore.interleave_all = function taoensso$encore$interleave_all(var_args) {
  var args35457 = [];
  var len__9707__auto___35463 = arguments.length;
  var i__9708__auto___35464 = 0;
  while (true) {
    if (i__9708__auto___35464 < len__9707__auto___35463) {
      args35457.push(arguments[i__9708__auto___35464]);
      var G__35465 = i__9708__auto___35464 + 1;
      i__9708__auto___35464 = G__35465;
      continue;
    } else {
    }
    break;
  }
  var G__35462 = args35457.length;
  switch(G__35462) {
    case 0:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35457.slice(2), 0, null);
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq.call(null, c1);
    var s2 = cljs.core.seq.call(null, c2);
    if (s1 && s2) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), taoensso.encore.interleave_all.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
    } else {
      if (s1) {
        return s1;
      } else {
        if (s2) {
          return s2;
        } else {
          return null;
        }
      }
    }
  }, null, null);
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1)));
    return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, taoensso.encore.interleave_all, cljs.core.map.call(null, cljs.core.rest, ss)));
  }, null, null);
};
taoensso.encore.interleave_all.cljs$lang$applyTo = function(seq35458) {
  var G__35459 = cljs.core.first.call(null, seq35458);
  var seq35458__$1 = cljs.core.next.call(null, seq35458);
  var G__35460 = cljs.core.first.call(null, seq35458__$1);
  var seq35458__$2 = cljs.core.next.call(null, seq35458__$1);
  return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic(G__35459, G__35460, seq35458__$2);
};
taoensso.encore.interleave_all.cljs$lang$maxFixedArity = 2;
taoensso.encore.vinterleave_all = function taoensso$encore$vinterleave_all(c1, c2) {
  var v = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  var s1 = cljs.core.seq.call(null, c1);
  var s2 = cljs.core.seq.call(null, c2);
  while (true) {
    if (s1 && s2) {
      var G__35467 = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, v, cljs.core.first.call(null, s1)), cljs.core.first.call(null, s2));
      var G__35468 = cljs.core.next.call(null, s1);
      var G__35469 = cljs.core.next.call(null, s2);
      v = G__35467;
      s1 = G__35468;
      s2 = G__35469;
      continue;
    } else {
      if (s1) {
        return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core.conj_BANG_, v, s1));
      } else {
        if (s2) {
          return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core.conj_BANG_, v, s2));
        } else {
          return cljs.core.persistent_BANG_.call(null, v);
        }
      }
    }
    break;
  }
};
var not_found_35472 = {};
taoensso.encore._merge_with = function(not_found_35472) {
  return function taoensso$encore$_merge_with(nest_QMARK_, f, maps) {
    return cljs.core.reduce.call(null, function(not_found_35472) {
      return function(acc, in$) {
        if (in$ == null) {
          return acc;
        } else {
          return cljs.core.reduce_kv.call(null, function(not_found_35472) {
            return function taoensso$encore$_merge_with_$_rf2(acc__$1, k, rv) {
              var lv = cljs.core.get.call(null, acc__$1, k, not_found_35472);
              if (lv === not_found_35472) {
                return cljs.core.assoc.call(null, acc__$1, k, rv);
              } else {
                if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, rv, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
                  return cljs.core.dissoc.call(null, acc__$1, k);
                } else {
                  if (cljs.core.truth_(function() {
                    var and__8620__auto__ = nest_QMARK_;
                    if (cljs.core.truth_(and__8620__auto__)) {
                      return cljs.core.map_QMARK_.call(null, rv) && cljs.core.map_QMARK_.call(null, lv);
                    } else {
                      return and__8620__auto__;
                    }
                  }())) {
                    return cljs.core.assoc.call(null, acc__$1, k, cljs.core.reduce_kv.call(null, taoensso$encore$_merge_with_$_rf2, lv, rv));
                  } else {
                    var new_rv = f.call(null, lv, rv);
                    if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, new_rv, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
                      return cljs.core.dissoc.call(null, acc__$1, k);
                    } else {
                      return cljs.core.assoc.call(null, acc__$1, k, new_rv);
                    }
                  }
                }
              }
            };
          }(not_found_35472), function() {
            var or__8632__auto__ = acc;
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), in$);
        }
      };
    }(not_found_35472), null, maps);
  };
}(not_found_35472);
taoensso.encore.merge = function taoensso$encore$merge(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35479 = arguments.length;
  var i__9708__auto___35480 = 0;
  while (true) {
    if (i__9708__auto___35480 < len__9707__auto___35479) {
      args__9714__auto__.push(arguments[i__9708__auto___35480]);
      var G__35481 = i__9708__auto___35480 + 1;
      i__9708__auto___35480 = G__35481;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  return taoensso.encore._merge_with.call(null, false, function(x, y) {
    return y;
  }, maps);
};
taoensso.encore.merge.cljs$lang$maxFixedArity = 0;
taoensso.encore.merge.cljs$lang$applyTo = function(seq35473) {
  return taoensso.encore.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35473));
};
taoensso.encore.merge_with = function taoensso$encore$merge_with(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35482 = arguments.length;
  var i__9708__auto___35483 = 0;
  while (true) {
    if (i__9708__auto___35483 < len__9707__auto___35482) {
      args__9714__auto__.push(arguments[i__9708__auto___35483]);
      var G__35484 = i__9708__auto___35483 + 1;
      i__9708__auto___35483 = G__35484;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  return taoensso.encore._merge_with.call(null, false, f, maps);
};
taoensso.encore.merge_with.cljs$lang$maxFixedArity = 1;
taoensso.encore.merge_with.cljs$lang$applyTo = function(seq35474) {
  var G__35475 = cljs.core.first.call(null, seq35474);
  var seq35474__$1 = cljs.core.next.call(null, seq35474);
  return taoensso.encore.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__35475, seq35474__$1);
};
taoensso.encore.nested_merge = function taoensso$encore$nested_merge(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35485 = arguments.length;
  var i__9708__auto___35486 = 0;
  while (true) {
    if (i__9708__auto___35486 < len__9707__auto___35485) {
      args__9714__auto__.push(arguments[i__9708__auto___35486]);
      var G__35487 = i__9708__auto___35486 + 1;
      i__9708__auto___35486 = G__35487;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.nested_merge.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.nested_merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  return taoensso.encore._merge_with.call(null, new cljs.core.Keyword(null, "nest", "nest", -314993663), function(x, y) {
    return y;
  }, maps);
};
taoensso.encore.nested_merge.cljs$lang$maxFixedArity = 0;
taoensso.encore.nested_merge.cljs$lang$applyTo = function(seq35476) {
  return taoensso.encore.nested_merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35476));
};
taoensso.encore.nested_merge_with = function taoensso$encore$nested_merge_with(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35488 = arguments.length;
  var i__9708__auto___35489 = 0;
  while (true) {
    if (i__9708__auto___35489 < len__9707__auto___35488) {
      args__9714__auto__.push(arguments[i__9708__auto___35489]);
      var G__35490 = i__9708__auto___35489 + 1;
      i__9708__auto___35489 = G__35490;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  return taoensso.encore._merge_with.call(null, new cljs.core.Keyword(null, "nest", "nest", -314993663), f, maps);
};
taoensso.encore.nested_merge_with.cljs$lang$maxFixedArity = 1;
taoensso.encore.nested_merge_with.cljs$lang$applyTo = function(seq35477) {
  var G__35478 = cljs.core.first.call(null, seq35477);
  var seq35477__$1 = cljs.core.next.call(null, seq35477);
  return taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic(G__35478, seq35477__$1);
};
taoensso.encore.Swapped = function(newv, returnv) {
  this.newv = newv;
  this.returnv = returnv;
};
taoensso.encore.Swapped.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "newv", "newv", -238403387, null), new cljs.core.Symbol(null, "returnv", "returnv", -1488668972, null)], null);
};
taoensso.encore.Swapped.cljs$lang$type = true;
taoensso.encore.Swapped.cljs$lang$ctorStr = "taoensso.encore/Swapped";
taoensso.encore.Swapped.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/Swapped");
};
taoensso.encore.__GT_Swapped = function taoensso$encore$__GT_Swapped(newv, returnv) {
  return new taoensso.encore.Swapped(newv, returnv);
};
taoensso.encore.swapped_QMARK_ = function taoensso$encore$swapped_QMARK_(x) {
  return x instanceof taoensso.encore.Swapped;
};
taoensso.encore.swapped = function taoensso$encore$swapped(new_val, return_val) {
  return new taoensso.encore.Swapped(new_val, return_val);
};
taoensso.encore.swapped_vec = function taoensso$encore$swapped_vec(x) {
  if (x instanceof taoensso.encore.Swapped) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x.newv, x.returnv], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, x], null);
  }
};
taoensso.encore.atom_tag = new cljs.core.Symbol(null, "clojure.lang.IAtom", "clojure.lang.IAtom", 2048990995, null);
taoensso.encore._swap_val_BANG_ = function taoensso$encore$_swap_val_BANG_(atom_, k, f) {
  while (true) {
    var m0 = cljs.core.deref.call(null, atom_);
    var v1 = f.call(null, cljs.core.get.call(null, m0, k));
    var m1 = cljs.core.assoc.call(null, m0, k, v1);
    if (function() {
      cljs.core.reset_BANG_.call(null, atom_, m1);
      return true;
    }()) {
      return v1;
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore._swap_k0_BANG_ = function taoensso$encore$_swap_k0_BANG_(return$, atom_, f) {
  while (true) {
    var v0 = cljs.core.deref.call(null, atom_);
    var s1 = f.call(null, v0);
    var sw_QMARK_ = s1 instanceof taoensso.encore.Swapped;
    var v1 = sw_QMARK_ ? s1.newv : s1;
    if (function() {
      cljs.core.reset_BANG_.call(null, atom_, v1);
      return true;
    }()) {
      if (sw_QMARK_) {
        return s1.returnv;
      } else {
        return return$.call(null, v0, v1);
      }
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore._reset_k0_BANG_ = function taoensso$encore$_reset_k0_BANG_(return$, atom_, v1) {
  while (true) {
    var v0 = cljs.core.deref.call(null, atom_);
    if (function() {
      cljs.core.reset_BANG_.call(null, atom_, v1);
      return true;
    }()) {
      return return$.call(null, v0, v1);
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore._swap_k1_BANG_ = function taoensso$encore$_swap_k1_BANG_(return$, atom_, k, not_found, f) {
  if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, f, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
    while (true) {
      var m0 = cljs.core.deref.call(null, atom_);
      var m1 = cljs.core.dissoc.call(null, m0, k);
      if (function() {
        cljs.core.reset_BANG_.call(null, atom_, m1);
        return true;
      }()) {
        return return$.call(null, cljs.core.get.call(null, m0, k, not_found), new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782));
      } else {
        continue;
      }
      break;
    }
  } else {
    while (true) {
      var m0 = cljs.core.deref.call(null, atom_);
      var v0 = cljs.core.get.call(null, m0, k, not_found);
      var s1 = f.call(null, v0);
      var sw_QMARK_ = s1 instanceof taoensso.encore.Swapped;
      var v1 = sw_QMARK_ ? s1.newv : s1;
      var m1 = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, v1, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782))) ? cljs.core.dissoc.call(null, m0, k) : cljs.core.assoc.call(null, m0, k, v1);
      if (function() {
        cljs.core.reset_BANG_.call(null, atom_, m1);
        return true;
      }()) {
        if (sw_QMARK_) {
          return s1.returnv;
        } else {
          return return$.call(null, v0, v1);
        }
      } else {
        continue;
      }
      break;
    }
  }
};
taoensso.encore._reset_k1_BANG_ = function taoensso$encore$_reset_k1_BANG_(return$, atom_, k, not_found, v1) {
  while (true) {
    var m0 = cljs.core.deref.call(null, atom_);
    var m1 = cljs.core.assoc.call(null, m0, k, v1);
    if (function() {
      cljs.core.reset_BANG_.call(null, atom_, m1);
      return true;
    }()) {
      return return$.call(null, cljs.core.get.call(null, m0, k, not_found), v1);
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore._swap_kn_BANG_ = function taoensso$encore$_swap_kn_BANG_(return$, atom_, ks, not_found, f) {
  var b2__20870__auto__ = cljs.core.seq.call(null, ks);
  if (b2__20870__auto__) {
    var ks_seq = b2__20870__auto__;
    if (cljs.core.next.call(null, ks_seq)) {
      if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, f, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
        while (true) {
          var m0 = cljs.core.deref.call(null, atom_);
          var m1 = taoensso.encore.fsplit_last.call(null, function(m0, ks_seq, b2__20870__auto__) {
            return function(ks__$1, lk) {
              return taoensso.encore.dissoc_in.call(null, m0, ks__$1, lk);
            };
          }(m0, ks_seq, b2__20870__auto__), ks);
          if (function() {
            cljs.core.reset_BANG_.call(null, atom_, m1);
            return true;
          }()) {
            return return$.call(null, cljs.core.get_in.call(null, m0, ks, not_found), new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782));
          } else {
            continue;
          }
          break;
        }
      } else {
        while (true) {
          var m0 = cljs.core.deref.call(null, atom_);
          var v0 = cljs.core.get_in.call(null, m0, ks, not_found);
          var s1 = f.call(null, v0);
          var sw_QMARK_ = s1 instanceof taoensso.encore.Swapped;
          var v1 = sw_QMARK_ ? s1.newv : s1;
          var m1 = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, v1, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782))) ? taoensso.encore.fsplit_last.call(null, function(m0, v0, s1, sw_QMARK_, v1, ks_seq, b2__20870__auto__) {
            return function(ks__$1, lk) {
              return taoensso.encore.dissoc_in.call(null, m0, ks__$1, lk);
            };
          }(m0, v0, s1, sw_QMARK_, v1, ks_seq, b2__20870__auto__), ks) : cljs.core.assoc_in.call(null, m0, ks, v1);
          if (function() {
            cljs.core.reset_BANG_.call(null, atom_, m1);
            return true;
          }()) {
            if (sw_QMARK_) {
              return s1.returnv;
            } else {
              return return$.call(null, v0, v1);
            }
          } else {
            continue;
          }
          break;
        }
      }
    } else {
      return taoensso.encore._swap_k1_BANG_.call(null, return$, atom_, cljs.core.nth.call(null, ks, 0), not_found, f);
    }
  } else {
    return taoensso.encore._swap_k0_BANG_.call(null, return$, atom_, f);
  }
};
taoensso.encore._reset_kn_BANG_ = function taoensso$encore$_reset_kn_BANG_(return$, atom_, ks, not_found, v1) {
  var b2__20870__auto__ = cljs.core.seq.call(null, ks);
  if (b2__20870__auto__) {
    var ks_seq = b2__20870__auto__;
    if (cljs.core.next.call(null, ks_seq)) {
      while (true) {
        var m0 = cljs.core.deref.call(null, atom_);
        var m1 = cljs.core.assoc_in.call(null, m0, ks, v1);
        if (function() {
          cljs.core.reset_BANG_.call(null, atom_, m1);
          return true;
        }()) {
          return return$.call(null, cljs.core.get_in.call(null, m0, ks, not_found), v1);
        } else {
          continue;
        }
        break;
      }
    } else {
      return taoensso.encore._reset_k1_BANG_.call(null, return$, atom_, cljs.core.nth.call(null, ks, 0), not_found, v1);
    }
  } else {
    return taoensso.encore._reset_k0_BANG_.call(null, return$, atom_, v1);
  }
};
var return_35494 = function(v0, v1) {
  return v1;
};
taoensso.encore.swap_val_BANG_ = function(return_35494) {
  return function taoensso$encore$swap_val_BANG_(var_args) {
    var args35491 = [];
    var len__9707__auto___35495 = arguments.length;
    var i__9708__auto___35496 = 0;
    while (true) {
      if (i__9708__auto___35496 < len__9707__auto___35495) {
        args35491.push(arguments[i__9708__auto___35496]);
        var G__35497 = i__9708__auto___35496 + 1;
        i__9708__auto___35496 = G__35497;
        continue;
      } else {
      }
      break;
    }
    var G__35493 = args35491.length;
    switch(G__35493) {
      case 3:
        return taoensso.encore.swap_val_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.swap_val_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35491.length)].join(""));;
    }
  };
}(return_35494);
taoensso.encore.swap_val_BANG_.cljs$core$IFn$_invoke$arity$3 = function(return_35494) {
  return function(atom_, k, f) {
    return taoensso.encore._swap_k1_BANG_.call(null, return_35494, atom_, k, null, f);
  };
}(return_35494);
taoensso.encore.swap_val_BANG_.cljs$core$IFn$_invoke$arity$4 = function(return_35494) {
  return function(atom_, k, not_found, f) {
    return taoensso.encore._swap_k1_BANG_.call(null, return_35494, atom_, k, not_found, f);
  };
}(return_35494);
taoensso.encore.swap_val_BANG_.cljs$lang$maxFixedArity = 4;
var return_35502 = function(v0, v1) {
  return v0;
};
taoensso.encore.reset_val_BANG_ = function(return_35502) {
  return function taoensso$encore$reset_val_BANG_(var_args) {
    var args35499 = [];
    var len__9707__auto___35503 = arguments.length;
    var i__9708__auto___35504 = 0;
    while (true) {
      if (i__9708__auto___35504 < len__9707__auto___35503) {
        args35499.push(arguments[i__9708__auto___35504]);
        var G__35505 = i__9708__auto___35504 + 1;
        i__9708__auto___35504 = G__35505;
        continue;
      } else {
      }
      break;
    }
    var G__35501 = args35499.length;
    switch(G__35501) {
      case 3:
        return taoensso.encore.reset_val_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.reset_val_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35499.length)].join(""));;
    }
  };
}(return_35502);
taoensso.encore.reset_val_BANG_.cljs$core$IFn$_invoke$arity$3 = function(return_35502) {
  return function(atom_, k, val) {
    return taoensso.encore._reset_k1_BANG_.call(null, return_35502, atom_, k, null, val);
  };
}(return_35502);
taoensso.encore.reset_val_BANG_.cljs$core$IFn$_invoke$arity$4 = function(return_35502) {
  return function(atom_, k, not_found, val) {
    return taoensso.encore._reset_k1_BANG_.call(null, return_35502, atom_, k, not_found, val);
  };
}(return_35502);
taoensso.encore.reset_val_BANG_.cljs$lang$maxFixedArity = 4;
var return_35510 = function(v0, v1) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v0, v1], null);
};
taoensso.encore.swap_val_BANG__STAR_ = function(return_35510) {
  return function taoensso$encore$swap_val_BANG__STAR_(var_args) {
    var args35507 = [];
    var len__9707__auto___35511 = arguments.length;
    var i__9708__auto___35512 = 0;
    while (true) {
      if (i__9708__auto___35512 < len__9707__auto___35511) {
        args35507.push(arguments[i__9708__auto___35512]);
        var G__35513 = i__9708__auto___35512 + 1;
        i__9708__auto___35512 = G__35513;
        continue;
      } else {
      }
      break;
    }
    var G__35509 = args35507.length;
    switch(G__35509) {
      case 3:
        return taoensso.encore.swap_val_BANG__STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.swap_val_BANG__STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35507.length)].join(""));;
    }
  };
}(return_35510);
taoensso.encore.swap_val_BANG__STAR_.cljs$core$IFn$_invoke$arity$3 = function(return_35510) {
  return function(atom_, k, f) {
    return taoensso.encore._swap_k1_BANG_.call(null, return_35510, atom_, k, null, f);
  };
}(return_35510);
taoensso.encore.swap_val_BANG__STAR_.cljs$core$IFn$_invoke$arity$4 = function(return_35510) {
  return function(atom_, k, not_found, f) {
    return taoensso.encore._swap_k1_BANG_.call(null, return_35510, atom_, k, not_found, f);
  };
}(return_35510);
taoensso.encore.swap_val_BANG__STAR_.cljs$lang$maxFixedArity = 4;
taoensso.encore.pull_val_BANG_ = function taoensso$encore$pull_val_BANG_(var_args) {
  var args35515 = [];
  var len__9707__auto___35521 = arguments.length;
  var i__9708__auto___35522 = 0;
  while (true) {
    if (i__9708__auto___35522 < len__9707__auto___35521) {
      args35515.push(arguments[i__9708__auto___35522]);
      var G__35523 = i__9708__auto___35522 + 1;
      i__9708__auto___35522 = G__35523;
      continue;
    } else {
    }
    break;
  }
  var G__35517 = args35515.length;
  switch(G__35517) {
    case 2:
      return taoensso.encore.pull_val_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.pull_val_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35515.length)].join(""));;
  }
};
taoensso.encore.pull_val_BANG_.cljs$core$IFn$_invoke$arity$2 = function(atom_, k) {
  return taoensso.encore.pull_val_BANG_.call(null, atom_, k, null);
};
taoensso.encore.pull_val_BANG_.cljs$core$IFn$_invoke$arity$3 = function(atom_, k, not_found) {
  var vec__35518 = taoensso.encore.swap_val_BANG__STAR_.call(null, atom_, k, not_found, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782));
  var v0 = cljs.core.nth.call(null, vec__35518, 0, null);
  return v0;
};
taoensso.encore.pull_val_BANG_.cljs$lang$maxFixedArity = 3;
var not_found_35527 = {};
taoensso.encore.reset_val_BANG__QMARK_ = function(not_found_35527) {
  return function taoensso$encore$reset_val_BANG__QMARK_(atom_, k, new_val) {
    var v0 = taoensso.encore.reset_val_BANG_.call(null, atom_, k, not_found_35527, new_val);
    if (cljs.core._EQ_.call(null, v0, new_val)) {
      return false;
    } else {
      return true;
    }
  };
}(not_found_35527);
var return_35531 = function(v0, v1) {
  return v1;
};
taoensso.encore.swap_in_BANG_ = function(return_35531) {
  return function taoensso$encore$swap_in_BANG_(var_args) {
    var args35528 = [];
    var len__9707__auto___35532 = arguments.length;
    var i__9708__auto___35533 = 0;
    while (true) {
      if (i__9708__auto___35533 < len__9707__auto___35532) {
        args35528.push(arguments[i__9708__auto___35533]);
        var G__35534 = i__9708__auto___35533 + 1;
        i__9708__auto___35533 = G__35534;
        continue;
      } else {
      }
      break;
    }
    var G__35530 = args35528.length;
    switch(G__35530) {
      case 2:
        return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      case 3:
        return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35528.length)].join(""));;
    }
  };
}(return_35531);
taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2 = function(return_35531) {
  return function(atom_, f) {
    return taoensso.encore._swap_k0_BANG_.call(null, return_35531, atom_, f);
  };
}(return_35531);
taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3 = function(return_35531) {
  return function(atom_, ks, f) {
    return taoensso.encore._swap_kn_BANG_.call(null, return_35531, atom_, ks, null, f);
  };
}(return_35531);
taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$4 = function(return_35531) {
  return function(atom_, ks, not_found, f) {
    return taoensso.encore._swap_kn_BANG_.call(null, return_35531, atom_, ks, not_found, f);
  };
}(return_35531);
taoensso.encore.swap_in_BANG_.cljs$lang$maxFixedArity = 4;
var return_35539 = function(v0, v1) {
  return v0;
};
taoensso.encore.reset_in_BANG_ = function(return_35539) {
  return function taoensso$encore$reset_in_BANG_(var_args) {
    var args35536 = [];
    var len__9707__auto___35540 = arguments.length;
    var i__9708__auto___35541 = 0;
    while (true) {
      if (i__9708__auto___35541 < len__9707__auto___35540) {
        args35536.push(arguments[i__9708__auto___35541]);
        var G__35542 = i__9708__auto___35541 + 1;
        i__9708__auto___35541 = G__35542;
        continue;
      } else {
      }
      break;
    }
    var G__35538 = args35536.length;
    switch(G__35538) {
      case 2:
        return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      case 3:
        return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35536.length)].join(""));;
    }
  };
}(return_35539);
taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$2 = function(return_35539) {
  return function(atom_, val) {
    return taoensso.encore._reset_k0_BANG_.call(null, return_35539, atom_, val);
  };
}(return_35539);
taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3 = function(return_35539) {
  return function(atom_, ks, val) {
    return taoensso.encore._reset_kn_BANG_.call(null, return_35539, atom_, ks, null, val);
  };
}(return_35539);
taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$4 = function(return_35539) {
  return function(atom_, ks, not_found, val) {
    return taoensso.encore._reset_kn_BANG_.call(null, return_35539, atom_, ks, not_found, val);
  };
}(return_35539);
taoensso.encore.reset_in_BANG_.cljs$lang$maxFixedArity = 4;
var return_35547 = function(v0, v1) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v0, v1], null);
};
taoensso.encore.swap_in_BANG__STAR_ = function(return_35547) {
  return function taoensso$encore$swap_in_BANG__STAR_(var_args) {
    var args35544 = [];
    var len__9707__auto___35548 = arguments.length;
    var i__9708__auto___35549 = 0;
    while (true) {
      if (i__9708__auto___35549 < len__9707__auto___35548) {
        args35544.push(arguments[i__9708__auto___35549]);
        var G__35550 = i__9708__auto___35549 + 1;
        i__9708__auto___35549 = G__35550;
        continue;
      } else {
      }
      break;
    }
    var G__35546 = args35544.length;
    switch(G__35546) {
      case 2:
        return taoensso.encore.swap_in_BANG__STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      case 3:
        return taoensso.encore.swap_in_BANG__STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.swap_in_BANG__STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35544.length)].join(""));;
    }
  };
}(return_35547);
taoensso.encore.swap_in_BANG__STAR_.cljs$core$IFn$_invoke$arity$2 = function(return_35547) {
  return function(atom_, f) {
    return taoensso.encore._swap_k0_BANG_.call(null, return_35547, atom_, f);
  };
}(return_35547);
taoensso.encore.swap_in_BANG__STAR_.cljs$core$IFn$_invoke$arity$3 = function(return_35547) {
  return function(atom_, ks, f) {
    return taoensso.encore._swap_kn_BANG_.call(null, return_35547, atom_, ks, null, f);
  };
}(return_35547);
taoensso.encore.swap_in_BANG__STAR_.cljs$core$IFn$_invoke$arity$4 = function(return_35547) {
  return function(atom_, ks, not_found, f) {
    return taoensso.encore._swap_kn_BANG_.call(null, return_35547, atom_, ks, not_found, f);
  };
}(return_35547);
taoensso.encore.swap_in_BANG__STAR_.cljs$lang$maxFixedArity = 4;
taoensso.encore.now_dt = function taoensso$encore$now_dt() {
  return new Date;
};
taoensso.encore.now_udt = function taoensso$encore$now_udt() {
  return (new Date).getTime();
};
taoensso.encore.now_nano = function() {
  var b2__20870__auto__ = taoensso.encore.oget.call(null, taoensso.encore.js__QMARK_win, "performance");
  if (cljs.core.truth_(b2__20870__auto__)) {
    var perf = b2__20870__auto__;
    var b2__20870__auto____$1 = function() {
      var or__8632__auto__ = taoensso.encore.oget.call(null, perf, "now");
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = taoensso.encore.oget.call(null, perf, "mozNow");
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          var or__8632__auto____$2 = taoensso.encore.oget.call(null, perf, "msNow");
          if (cljs.core.truth_(or__8632__auto____$2)) {
            return or__8632__auto____$2;
          } else {
            var or__8632__auto____$3 = taoensso.encore.oget.call(null, perf, "oNow");
            if (cljs.core.truth_(or__8632__auto____$3)) {
              return or__8632__auto____$3;
            } else {
              return taoensso.encore.oget.call(null, perf, "webkitNow");
            }
          }
        }
      }
    }();
    if (cljs.core.truth_(b2__20870__auto____$1)) {
      var f = b2__20870__auto____$1;
      return function(f, b2__20870__auto____$1, perf, b2__20870__auto__) {
        return function() {
          return 1E6 * cljs.core.long$.call(null, f.call(perf));
        };
      }(f, b2__20870__auto____$1, perf, b2__20870__auto__);
    } else {
      return function(b2__20870__auto____$1, perf, b2__20870__auto__) {
        return function() {
          return 1E6 * (new Date).getTime();
        };
      }(b2__20870__auto____$1, perf, b2__20870__auto__);
    }
  } else {
    return function(b2__20870__auto__) {
      return function() {
        return 1E6 * (new Date).getTime();
      };
    }(b2__20870__auto__);
  }
}();
taoensso.encore.memoize_ = function taoensso$encore$memoize_(f) {
  var cache_ = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var get_sentinel = {};
  return function(cache_, get_sentinel) {
    return function() {
      var G__35556__delegate = function(xs) {
        var x1 = cljs.core.first.call(null, xs);
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, x1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
          var xn = cljs.core.next.call(null, xs);
          var x2 = cljs.core.first.call(null, xn);
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, x2, new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
            cljs.core.vreset_BANG_.call(null, cache_, cljs.core.PersistentArrayMap.EMPTY);
          } else {
            cljs.core._vreset_BANG_.call(null, cache_, cljs.core.dissoc.call(null, cljs.core._deref.call(null, cache_), xn));
          }
          return null;
        } else {
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, x1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133)))) {
            var xn = cljs.core.next.call(null, xs);
            var v = cljs.core.apply.call(null, f, xn);
            cljs.core._vreset_BANG_.call(null, cache_, cljs.core.assoc.call(null, cljs.core._deref.call(null, cache_), xn, v));
            return v;
          } else {
            var v = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), xs, get_sentinel);
            if (v === get_sentinel) {
              var v__$1 = cljs.core.apply.call(null, f, xs);
              cljs.core._vreset_BANG_.call(null, cache_, cljs.core.assoc.call(null, cljs.core._deref.call(null, cache_), xs, v__$1));
              return v__$1;
            } else {
              return v;
            }
          }
        }
      };
      var G__35556 = function(var_args) {
        var xs = null;
        if (arguments.length > 0) {
          var G__35557__i = 0, G__35557__a = new Array(arguments.length - 0);
          while (G__35557__i < G__35557__a.length) {
            G__35557__a[G__35557__i] = arguments[G__35557__i + 0];
            ++G__35557__i;
          }
          xs = new cljs.core.IndexedSeq(G__35557__a, 0);
        }
        return G__35556__delegate.call(this, xs);
      };
      G__35556.cljs$lang$maxFixedArity = 0;
      G__35556.cljs$lang$applyTo = function(arglist__35558) {
        var xs = cljs.core.seq(arglist__35558);
        return G__35556__delegate(xs);
      };
      G__35556.cljs$core$IFn$_invoke$arity$variadic = G__35556__delegate;
      return G__35556;
    }();
  }(cache_, get_sentinel);
};
taoensso.encore.memoize_last = function taoensso$encore$memoize_last(f) {
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(cache_) {
    return function() {
      var G__35559__delegate = function(args) {
        return cljs.core.deref.call(null, function() {
          var or__8632__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), args);
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, cache_, function(or__8632__auto__, cache_) {
              return function(cache) {
                if (cljs.core.truth_(cljs.core.get.call(null, cache, args))) {
                  return cache;
                } else {
                  return cljs.core.PersistentArrayMap.fromArray([args, new cljs.core.Delay(function(or__8632__auto__, cache_) {
                    return function() {
                      return cljs.core.apply.call(null, f, args);
                    };
                  }(or__8632__auto__, cache_), null)], true, false);
                }
              };
            }(or__8632__auto__, cache_)), args);
          }
        }());
      };
      var G__35559 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__35560__i = 0, G__35560__a = new Array(arguments.length - 0);
          while (G__35560__i < G__35560__a.length) {
            G__35560__a[G__35560__i] = arguments[G__35560__i + 0];
            ++G__35560__i;
          }
          args = new cljs.core.IndexedSeq(G__35560__a, 0);
        }
        return G__35559__delegate.call(this, args);
      };
      G__35559.cljs$lang$maxFixedArity = 0;
      G__35559.cljs$lang$applyTo = function(arglist__35561) {
        var args = cljs.core.seq(arglist__35561);
        return G__35559__delegate(args);
      };
      G__35559.cljs$core$IFn$_invoke$arity$variadic = G__35559__delegate;
      return G__35559;
    }();
  }(cache_);
};
taoensso.encore.SimpleCacheEntry = function(delay, udt) {
  this.delay = delay;
  this.udt = udt;
};
taoensso.encore.SimpleCacheEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "delay", "delay", 1066306308, null), cljs.core.with_meta(new cljs.core.Symbol(null, "udt", "udt", -642723018, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null))], null);
};
taoensso.encore.SimpleCacheEntry.cljs$lang$type = true;
taoensso.encore.SimpleCacheEntry.cljs$lang$ctorStr = "taoensso.encore/SimpleCacheEntry";
taoensso.encore.SimpleCacheEntry.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/SimpleCacheEntry");
};
taoensso.encore.__GT_SimpleCacheEntry = function taoensso$encore$__GT_SimpleCacheEntry(delay, udt) {
  return new taoensso.encore.SimpleCacheEntry(delay, udt);
};
taoensso.encore.TickedCacheEntry = function(delay, udt, tick_lru, tick_lfu) {
  this.delay = delay;
  this.udt = udt;
  this.tick_lru = tick_lru;
  this.tick_lfu = tick_lfu;
};
taoensso.encore.TickedCacheEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "delay", "delay", 1066306308, null), cljs.core.with_meta(new cljs.core.Symbol(null, "udt", "udt", -642723018, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tick-lru", "tick-lru", 1625824877, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tick-lfu", "tick-lfu", -1976905322, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null))], null);
};
taoensso.encore.TickedCacheEntry.cljs$lang$type = true;
taoensso.encore.TickedCacheEntry.cljs$lang$ctorStr = "taoensso.encore/TickedCacheEntry";
taoensso.encore.TickedCacheEntry.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/TickedCacheEntry");
};
taoensso.encore.__GT_TickedCacheEntry = function taoensso$encore$__GT_TickedCacheEntry(delay, udt, tick_lru, tick_lfu) {
  return new taoensso.encore.TickedCacheEntry(delay, udt, tick_lru, tick_lfu);
};
taoensso.encore.memoize_STAR_ = function taoensso$encore$memoize_STAR_(var_args) {
  var args35562 = [];
  var len__9707__auto___35567 = arguments.length;
  var i__9708__auto___35568 = 0;
  while (true) {
    if (i__9708__auto___35568 < len__9707__auto___35567) {
      args35562.push(arguments[i__9708__auto___35568]);
      var G__35569 = i__9708__auto___35568 + 1;
      i__9708__auto___35568 = G__35569;
      continue;
    } else {
    }
    break;
  }
  var G__35564 = args35562.length;
  switch(G__35564) {
    case 1:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35562.length)].join(""));;
  }
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return taoensso.encore.memoize_.call(null, f);
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$2 = function(ttl_ms, f) {
  var e_35571 = function() {
    try {
      if (taoensso.encore.pos_int_QMARK_.call(null, ttl_ms)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e35565) {
      if (e35565 instanceof Error) {
        var e = e35565;
        return e;
      } else {
        throw e35565;
      }
    }
  }();
  if (e_35571 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(pos-int? ttl-ms)", ttl_ms, e_35571, null);
  }
  var cache_ = cljs.core.atom.call(null, null);
  var latch_ = cljs.core.atom.call(null, null);
  var ttl_ms__$1 = cljs.core.long$.call(null, ttl_ms);
  return function(cache_, latch_, ttl_ms__$1) {
    return function() {
      var G__35572__delegate = function(args) {
        var a1 = cljs.core.first.call(null, args);
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
          var argn = cljs.core.next.call(null, args);
          var a2 = cljs.core.first.call(null, argn);
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a2, new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
            cljs.core.reset_BANG_.call(null, cache_, null);
          } else {
            cljs.core.swap_BANG_.call(null, cache_, cljs.core.dissoc, argn);
          }
          return null;
        } else {
          var instant = (new Date).getTime();
          if (Math.random() <= 6.25E-5) {
            var latch_35573 = null;
            if (function() {
              cljs.core.reset_BANG_.call(null, latch_, latch_35573);
              return true;
            }()) {
              cljs.core.swap_BANG_.call(null, cache_, function(latch_35573, instant, a1, cache_, latch_, ttl_ms__$1) {
                return function(m) {
                  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(latch_35573, instant, a1, cache_, latch_, ttl_ms__$1) {
                    return function(acc, k, e) {
                      if (instant - e.udt > ttl_ms__$1) {
                        return cljs.core.dissoc_BANG_.call(null, acc, k);
                      } else {
                        return acc;
                      }
                    };
                  }(latch_35573, instant, a1, cache_, latch_, ttl_ms__$1), cljs.core.transient$.call(null, function() {
                    var or__8632__auto__ = m;
                    if (cljs.core.truth_(or__8632__auto__)) {
                      return or__8632__auto__;
                    } else {
                      return cljs.core.PersistentArrayMap.EMPTY;
                    }
                  }()), m));
                };
              }(latch_35573, instant, a1, cache_, latch_, ttl_ms__$1));
            } else {
            }
          } else {
          }
          var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, a1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
          var args__$1 = cljs.core.truth_(fresh_QMARK_) ? cljs.core.next.call(null, args) : args;
          var e = taoensso.encore._swap_val_BANG_.call(null, cache_, args__$1, function(fresh_QMARK_, args__$1, instant, a1, cache_, latch_, ttl_ms__$1) {
            return function(_QMARK_e) {
              if (cljs.core.truth_(function() {
                var or__8632__auto__ = _QMARK_e == null;
                if (or__8632__auto__) {
                  return or__8632__auto__;
                } else {
                  var or__8632__auto____$1 = fresh_QMARK_;
                  if (cljs.core.truth_(or__8632__auto____$1)) {
                    return or__8632__auto____$1;
                  } else {
                    return instant - _QMARK_e.udt > ttl_ms__$1;
                  }
                }
              }())) {
                return new taoensso.encore.SimpleCacheEntry(new cljs.core.Delay(function(fresh_QMARK_, args__$1, instant, a1, cache_, latch_, ttl_ms__$1) {
                  return function() {
                    return cljs.core.apply.call(null, f, args__$1);
                  };
                }(fresh_QMARK_, args__$1, instant, a1, cache_, latch_, ttl_ms__$1), null), instant);
              } else {
                return _QMARK_e;
              }
            };
          }(fresh_QMARK_, args__$1, instant, a1, cache_, latch_, ttl_ms__$1));
          return cljs.core.deref.call(null, e.delay);
        }
      };
      var G__35572 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__35574__i = 0, G__35574__a = new Array(arguments.length - 0);
          while (G__35574__i < G__35574__a.length) {
            G__35574__a[G__35574__i] = arguments[G__35574__i + 0];
            ++G__35574__i;
          }
          args = new cljs.core.IndexedSeq(G__35574__a, 0);
        }
        return G__35572__delegate.call(this, args);
      };
      G__35572.cljs$lang$maxFixedArity = 0;
      G__35572.cljs$lang$applyTo = function(arglist__35575) {
        var args = cljs.core.seq(arglist__35575);
        return G__35572__delegate(args);
      };
      G__35572.cljs$core$IFn$_invoke$arity$variadic = G__35572__delegate;
      return G__35572;
    }();
  }(cache_, latch_, ttl_ms__$1);
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$3 = function(cache_size, ttl_ms, f) {
  if (cljs.core.truth_(function(x) {
    var or__8632__auto__ = x == null;
    if (or__8632__auto__) {
      return or__8632__auto__;
    } else {
      return taoensso.truss.impl.non_throwing.call(null, taoensso.encore.pos_int_QMARK_).call(null, x);
    }
  }.call(null, ttl_ms))) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "([:or nil? pos-int?] ttl-ms)", ttl_ms, null, null);
  }
  var e_35576 = function() {
    try {
      if (taoensso.encore.pos_int_QMARK_.call(null, cache_size)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e35566) {
      if (e35566 instanceof Error) {
        var e = e35566;
        return e;
      } else {
        throw e35566;
      }
    }
  }();
  if (e_35576 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(pos-int? cache-size)", cache_size, e_35576, null);
  }
  var tick_ = cljs.core.atom.call(null, 0);
  var cache_ = cljs.core.atom.call(null, null);
  var latch_ = cljs.core.atom.call(null, null);
  var ttl_ms__$1 = cljs.core.long$.call(null, function() {
    var or__8632__auto__ = ttl_ms;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return 0;
    }
  }());
  var ttl_ms_QMARK_ = !(ttl_ms__$1 === 0);
  var cache_size__$1 = cljs.core.long$.call(null, cache_size);
  return function(tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
    return function() {
      var G__35577__delegate = function(args) {
        var a1 = cljs.core.first.call(null, args);
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
          var argn = cljs.core.next.call(null, args);
          var a2 = cljs.core.first.call(null, argn);
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a2, new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
            cljs.core.reset_BANG_.call(null, cache_, null);
          } else {
            cljs.core.swap_BANG_.call(null, cache_, cljs.core.dissoc, argn);
          }
          return null;
        } else {
          var instant = ttl_ms_QMARK_ ? (new Date).getTime() : 0;
          if (Math.random() <= 6.25E-5) {
            var latch_35578 = null;
            if (function() {
              cljs.core.reset_BANG_.call(null, latch_, latch_35578);
              return true;
            }()) {
              if (ttl_ms_QMARK_) {
                cljs.core.swap_BANG_.call(null, cache_, function(latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
                  return function(m) {
                    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
                      return function(acc, k, e) {
                        if (instant - e.udt > ttl_ms__$1) {
                          return cljs.core.dissoc_BANG_.call(null, acc, k);
                        } else {
                          return acc;
                        }
                      };
                    }(latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1), cljs.core.transient$.call(null, function() {
                      var or__8632__auto__ = m;
                      if (cljs.core.truth_(or__8632__auto__)) {
                        return or__8632__auto__;
                      } else {
                        return cljs.core.PersistentArrayMap.EMPTY;
                      }
                    }()), m));
                  };
                }(latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1));
              } else {
              }
              var snapshot_35579 = cljs.core.deref.call(null, cache_);
              var n_to_gc_35580 = cljs.core.count.call(null, snapshot_35579) - cache_size__$1;
              if (n_to_gc_35580 > 64) {
                var ks_to_gc_35581 = taoensso.encore.top.call(null, n_to_gc_35580, function(snapshot_35579, n_to_gc_35580, latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
                  return function(k) {
                    var e = cljs.core.get.call(null, snapshot_35579, k);
                    return e.tick_lru + e.tick_lfu;
                  };
                }(snapshot_35579, n_to_gc_35580, latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1), cljs.core.keys.call(null, snapshot_35579));
                cljs.core.swap_BANG_.call(null, cache_, function(ks_to_gc_35581, snapshot_35579, n_to_gc_35580, latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
                  return function(m) {
                    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ks_to_gc_35581, snapshot_35579, n_to_gc_35580, latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
                      return function(acc, in$) {
                        return cljs.core.dissoc_BANG_.call(null, acc, in$);
                      };
                    }(ks_to_gc_35581, snapshot_35579, n_to_gc_35580, latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1), cljs.core.transient$.call(null, function() {
                      var or__8632__auto__ = m;
                      if (cljs.core.truth_(or__8632__auto__)) {
                        return or__8632__auto__;
                      } else {
                        return cljs.core.PersistentArrayMap.EMPTY;
                      }
                    }()), ks_to_gc_35581));
                  };
                }(ks_to_gc_35581, snapshot_35579, n_to_gc_35580, latch_35578, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1));
              } else {
              }
            } else {
            }
          } else {
          }
          var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, a1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
          var args__$1 = cljs.core.truth_(fresh_QMARK_) ? cljs.core.next.call(null, args) : args;
          var tick = cljs.core.swap_BANG_.call(null, tick_, function(fresh_QMARK_, args__$1, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
            return function(n) {
              return n + 1;
            };
          }(fresh_QMARK_, args__$1, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1));
          var e = taoensso.encore._swap_val_BANG_.call(null, cache_, args__$1, function(fresh_QMARK_, args__$1, tick, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
            return function(_QMARK_e) {
              if (cljs.core.truth_(function() {
                var or__8632__auto__ = _QMARK_e == null;
                if (or__8632__auto__) {
                  return or__8632__auto__;
                } else {
                  var or__8632__auto____$1 = fresh_QMARK_;
                  if (cljs.core.truth_(or__8632__auto____$1)) {
                    return or__8632__auto____$1;
                  } else {
                    return instant - _QMARK_e.udt > ttl_ms__$1;
                  }
                }
              }())) {
                return new taoensso.encore.TickedCacheEntry(new cljs.core.Delay(function(fresh_QMARK_, args__$1, tick, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1) {
                  return function() {
                    return cljs.core.apply.call(null, f, args__$1);
                  };
                }(fresh_QMARK_, args__$1, tick, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1), null), instant, tick, 1);
              } else {
                var e = _QMARK_e;
                return new taoensso.encore.TickedCacheEntry(e.delay, e.udt, tick, e.tick_lfu + 1);
              }
            };
          }(fresh_QMARK_, args__$1, tick, instant, a1, tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1));
          return cljs.core.deref.call(null, e.delay);
        }
      };
      var G__35577 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__35582__i = 0, G__35582__a = new Array(arguments.length - 0);
          while (G__35582__i < G__35582__a.length) {
            G__35582__a[G__35582__i] = arguments[G__35582__i + 0];
            ++G__35582__i;
          }
          args = new cljs.core.IndexedSeq(G__35582__a, 0);
        }
        return G__35577__delegate.call(this, args);
      };
      G__35577.cljs$lang$maxFixedArity = 0;
      G__35577.cljs$lang$applyTo = function(arglist__35583) {
        var args = cljs.core.seq(arglist__35583);
        return G__35577__delegate(args);
      };
      G__35577.cljs$core$IFn$_invoke$arity$variadic = G__35577__delegate;
      return G__35577;
    }();
  }(tick_, cache_, latch_, ttl_ms__$1, ttl_ms_QMARK_, cache_size__$1);
};
taoensso.encore.memoize_STAR_.cljs$lang$maxFixedArity = 3;
taoensso.encore.LimitSpec = function(n, ms) {
  this.n = n;
  this.ms = ms;
};
taoensso.encore.LimitSpec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "n", "n", -2092305744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "ms", "ms", 487821794, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 
  -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null))], null);
};
taoensso.encore.LimitSpec.cljs$lang$type = true;
taoensso.encore.LimitSpec.cljs$lang$ctorStr = "taoensso.encore/LimitSpec";
taoensso.encore.LimitSpec.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/LimitSpec");
};
taoensso.encore.__GT_LimitSpec = function taoensso$encore$__GT_LimitSpec(n, ms) {
  return new taoensso.encore.LimitSpec(n, ms);
};
taoensso.encore.LimitEntry = function(n, udt0) {
  this.n = n;
  this.udt0 = udt0;
};
taoensso.encore.LimitEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "n", "n", -2092305744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "udt0", "udt0", -969222777, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 
  -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null))], null);
};
taoensso.encore.LimitEntry.cljs$lang$type = true;
taoensso.encore.LimitEntry.cljs$lang$ctorStr = "taoensso.encore/LimitEntry";
taoensso.encore.LimitEntry.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/LimitEntry");
};
taoensso.encore.__GT_LimitEntry = function taoensso$encore$__GT_LimitEntry(n, udt0) {
  return new taoensso.encore.LimitEntry(n, udt0);
};
taoensso.encore.LimitHits = function(m, worst_sid, worst_ms) {
  this.m = m;
  this.worst_sid = worst_sid;
  this.worst_ms = worst_ms;
};
taoensso.encore.LimitHits.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Symbol(null, "worst-sid", "worst-sid", 1427291395, null), cljs.core.with_meta(new cljs.core.Symbol(null, "worst-ms", "worst-ms", 1541498579, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null))], null);
};
taoensso.encore.LimitHits.cljs$lang$type = true;
taoensso.encore.LimitHits.cljs$lang$ctorStr = "taoensso.encore/LimitHits";
taoensso.encore.LimitHits.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/LimitHits");
};
taoensso.encore.__GT_LimitHits = function taoensso$encore$__GT_LimitHits(m, worst_sid, worst_ms) {
  return new taoensso.encore.LimitHits(m, worst_sid, worst_ms);
};
var limit_spec_35602 = function(n, ms) {
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var e = function() {
      try {
        if (taoensso.encore.pos_int_QMARK_.call(null, n)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e35584) {
        if (e35584 instanceof Error) {
          var e = e35584;
          return e;
        } else {
          throw e35584;
        }
      }
    }();
    if (e == null) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(pos-int? n)", n, e, null);
    }
  }(), function() {
    var e = function() {
      try {
        if (taoensso.encore.pos_int_QMARK_.call(null, ms)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e35585) {
        if (e35585 instanceof Error) {
          var e = e35585;
          return e;
        } else {
          throw e35585;
        }
      }
    }();
    if (e == null) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(pos-int? ms)", ms, e, null);
    }
  }()], null);
  return new taoensso.encore.LimitSpec(n, ms);
};
taoensso.encore.coerce_limit_specs = function(limit_spec_35602) {
  return function taoensso$encore$coerce_limit_specs(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.reduce_kv.call(null, function(limit_spec_35602) {
        return function(acc, sid, p__35594) {
          var vec__35595 = p__35594;
          var n = cljs.core.nth.call(null, vec__35595, 0, null);
          var ms = cljs.core.nth.call(null, vec__35595, 1, null);
          return cljs.core.assoc.call(null, acc, sid, limit_spec_35602.call(null, n, ms));
        };
      }(limit_spec_35602), cljs.core.PersistentArrayMap.EMPTY, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        var i = cljs.core.volatile_BANG_.call(null, -1);
        return cljs.core.reduce.call(null, function(i, limit_spec_35602) {
          return function(acc, p__35598) {
            var vec__35599 = p__35598;
            var n = cljs.core.nth.call(null, vec__35599, 0, null);
            var ms = cljs.core.nth.call(null, vec__35599, 1, null);
            var _QMARK_id = cljs.core.nth.call(null, vec__35599, 2, null);
            return cljs.core.assoc.call(null, acc, function() {
              var or__8632__auto__ = _QMARK_id;
              if (cljs.core.truth_(or__8632__auto__)) {
                return or__8632__auto__;
              } else {
                return cljs.core._vreset_BANG_.call(null, i, function(or__8632__auto__, vec__35599, n, ms, _QMARK_id, i, limit_spec_35602) {
                  return function(i__$1) {
                    return i__$1 + 1;
                  };
                }(or__8632__auto__, vec__35599, n, ms, _QMARK_id, i, limit_spec_35602).call(null, cljs.core._deref.call(null, i)));
              }
            }(), limit_spec_35602.call(null, n, ms));
          };
        }(i, limit_spec_35602), cljs.core.PersistentArrayMap.EMPTY, x);
      } else {
        throw cljs.core.ex_info.call(null, "No matching `encore/cond!` clause", cljs.core.PersistentArrayMap.EMPTY);
      }
    }
  };
}(limit_spec_35602);
taoensso.encore.limiter_STAR_ = function taoensso$encore$limiter_STAR_(specs) {
  if (cljs.core.empty_QMARK_.call(null, specs)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.constantly.call(null, null)], null);
  } else {
    var latch_ = cljs.core.atom.call(null, null);
    var reqs_ = cljs.core.atom.call(null, null);
    var specs__$1 = taoensso.encore.coerce_limit_specs.call(null, specs);
    var f1 = function(latch_, reqs_, specs__$1) {
      return function(rid, peek_QMARK_) {
        var instant = (new Date).getTime();
        if (cljs.core.not.call(null, peek_QMARK_) && Math.random() <= 6.25E-5) {
          var latch_35603 = null;
          if (function() {
            cljs.core.reset_BANG_.call(null, latch_, latch_35603);
            return true;
          }()) {
            cljs.core.swap_BANG_.call(null, reqs_, function(latch_35603, instant, latch_, reqs_, specs__$1) {
              return function(reqs) {
                return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(latch_35603, instant, latch_, reqs_, specs__$1) {
                  return function(acc, rid__$1, entries) {
                    var new_entries = cljs.core.reduce_kv.call(null, function(latch_35603, instant, latch_, reqs_, specs__$1) {
                      return function(acc__$1, sid, e) {
                        var b2__20870__auto__ = cljs.core.get.call(null, specs__$1, sid);
                        if (cljs.core.truth_(b2__20870__auto__)) {
                          var s = b2__20870__auto__;
                          if (instant >= e.udt0 + s.ms) {
                            return cljs.core.dissoc.call(null, acc__$1, sid);
                          } else {
                            return acc__$1;
                          }
                        } else {
                          return cljs.core.dissoc.call(null, acc__$1, sid);
                        }
                      };
                    }(latch_35603, instant, latch_, reqs_, specs__$1), entries, entries);
                    if (cljs.core.empty_QMARK_.call(null, new_entries)) {
                      return cljs.core.dissoc_BANG_.call(null, acc, rid__$1);
                    } else {
                      return cljs.core.assoc_BANG_.call(null, acc, rid__$1, new_entries);
                    }
                  };
                }(latch_35603, instant, latch_, reqs_, specs__$1), cljs.core.transient$.call(null, function() {
                  var or__8632__auto__ = reqs;
                  if (cljs.core.truth_(or__8632__auto__)) {
                    return or__8632__auto__;
                  } else {
                    return cljs.core.PersistentArrayMap.EMPTY;
                  }
                }()), reqs));
              };
            }(latch_35603, instant, latch_, reqs_, specs__$1));
          } else {
          }
        } else {
        }
        while (true) {
          var reqs = cljs.core.deref.call(null, reqs_);
          var entries = cljs.core.get.call(null, reqs, rid);
          var _QMARK_hits = entries == null ? null : cljs.core.reduce_kv.call(null, function(reqs, entries, instant, latch_, reqs_, specs__$1) {
            return function(acc, sid, e) {
              var b2__20870__auto__ = cljs.core.get.call(null, specs__$1, sid);
              if (cljs.core.truth_(b2__20870__auto__)) {
                var s = b2__20870__auto__;
                if (e.n < s.n) {
                  return acc;
                } else {
                  var tdelta = e.udt0 + s.ms - instant;
                  if (tdelta <= 0) {
                    return acc;
                  } else {
                    if (acc == null) {
                      return new taoensso.encore.LimitHits(cljs.core.PersistentArrayMap.fromArray([sid, tdelta], true, false), sid, tdelta);
                    } else {
                      if (tdelta > acc.worst_ms) {
                        return new taoensso.encore.LimitHits(cljs.core.assoc.call(null, acc.m, sid, tdelta), sid, tdelta);
                      } else {
                        return new taoensso.encore.LimitHits(cljs.core.assoc.call(null, acc.m, sid, tdelta), acc.worst_sid, acc.worst_ms);
                      }
                    }
                  }
                }
              } else {
                return acc;
              }
            };
          }(reqs, entries, instant, latch_, reqs_, specs__$1), null, entries);
          if (cljs.core.truth_(function() {
            var or__8632__auto__ = peek_QMARK_;
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return _QMARK_hits;
            }
          }())) {
            var b2__20870__auto__ = _QMARK_hits;
            if (cljs.core.truth_(b2__20870__auto__)) {
              var h = b2__20870__auto__;
              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [h.worst_sid, h.worst_ms, h.m], null);
            } else {
              return null;
            }
          } else {
            var b2__20870__auto__ = cljs.core.deref.call(null, latch_);
            if (cljs.core.truth_(b2__20870__auto__)) {
              var l = b2__20870__auto__;
              return null;
            } else {
              var new_entries = cljs.core.reduce_kv.call(null, function(b2__20870__auto__, reqs, entries, _QMARK_hits, instant, latch_, reqs_, specs__$1) {
                return function(acc, sid, s) {
                  return cljs.core.assoc.call(null, acc, sid, function() {
                    var b2__20870__auto____$1 = cljs.core.get.call(null, entries, sid);
                    if (cljs.core.truth_(b2__20870__auto____$1)) {
                      var e = b2__20870__auto____$1;
                      var udt0 = e.udt0;
                      if (instant >= udt0 + s.ms) {
                        return new taoensso.encore.LimitEntry(1, instant);
                      } else {
                        return new taoensso.encore.LimitEntry(e.n + 1, udt0);
                      }
                    } else {
                      return new taoensso.encore.LimitEntry(1, instant);
                    }
                  }());
                };
              }(b2__20870__auto__, reqs, entries, _QMARK_hits, instant, latch_, reqs_, specs__$1), entries, specs__$1);
              if (function() {
                cljs.core.reset_BANG_.call(null, reqs_, cljs.core.assoc.call(null, reqs, rid, new_entries));
                return true;
              }()) {
                return null;
              } else {
                continue;
              }
            }
          }
          break;
        }
      };
    }(latch_, reqs_, specs__$1);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reqs_, function(latch_, reqs_, specs__$1, f1) {
      return function() {
        var taoensso$encore$limiter_STAR__$_check_limits_BANG_ = null;
        var taoensso$encore$limiter_STAR__$_check_limits_BANG___0 = function() {
          return f1.call(null, null, false);
        };
        var taoensso$encore$limiter_STAR__$_check_limits_BANG___1 = function(req_id) {
          return f1.call(null, req_id, false);
        };
        var taoensso$encore$limiter_STAR__$_check_limits_BANG___2 = function(cmd, req_id) {
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cmd, new cljs.core.Keyword("rl", "reset", "rl/reset", -800926172)))) {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, req_id, new cljs.core.Keyword("rl", "all", "rl/all", 892118056)))) {
              cljs.core.reset_BANG_.call(null, reqs_, null);
            } else {
              cljs.core.swap_BANG_.call(null, reqs_, cljs.core.dissoc, req_id);
            }
            return null;
          } else {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cmd, new cljs.core.Keyword("rl", "peek", "rl/peek", -291391771)))) {
              return f1.call(null, req_id, true);
            } else {
              throw cljs.core.ex_info.call(null, "Unrecognized rate limiter command", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "given", "given", 716253602), cmd, new cljs.core.Keyword(null, "req-id", "req-id", -471642231), req_id], null));
            }
          }
        };
        taoensso$encore$limiter_STAR__$_check_limits_BANG_ = function(cmd, req_id) {
          switch(arguments.length) {
            case 0:
              return taoensso$encore$limiter_STAR__$_check_limits_BANG___0.call(this);
            case 1:
              return taoensso$encore$limiter_STAR__$_check_limits_BANG___1.call(this, cmd);
            case 2:
              return taoensso$encore$limiter_STAR__$_check_limits_BANG___2.call(this, cmd, req_id);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        taoensso$encore$limiter_STAR__$_check_limits_BANG_.cljs$core$IFn$_invoke$arity$0 = taoensso$encore$limiter_STAR__$_check_limits_BANG___0;
        taoensso$encore$limiter_STAR__$_check_limits_BANG_.cljs$core$IFn$_invoke$arity$1 = taoensso$encore$limiter_STAR__$_check_limits_BANG___1;
        taoensso$encore$limiter_STAR__$_check_limits_BANG_.cljs$core$IFn$_invoke$arity$2 = taoensso$encore$limiter_STAR__$_check_limits_BANG___2;
        return taoensso$encore$limiter_STAR__$_check_limits_BANG_;
      }();
    }(latch_, reqs_, specs__$1, f1)], null);
  }
};
taoensso.encore.limiter = function taoensso$encore$limiter(specs) {
  var vec__35607 = taoensso.encore.limiter_STAR_.call(null, specs);
  var _ = cljs.core.nth.call(null, vec__35607, 0, null);
  var f = cljs.core.nth.call(null, vec__35607, 1, null);
  return f;
};
taoensso.encore.str_builder_QMARK_ = function taoensso$encore$str_builder_QMARK_(x) {
  return x instanceof goog.string.StringBuffer;
};
taoensso.encore.str_builder = function() {
  var taoensso$encore$str_builder = null;
  var taoensso$encore$str_builder__0 = function() {
    return new goog.string.StringBuffer;
  };
  var taoensso$encore$str_builder__1 = function(s_init) {
    return new goog.string.StringBuffer(s_init);
  };
  taoensso$encore$str_builder = function(s_init) {
    switch(arguments.length) {
      case 0:
        return taoensso$encore$str_builder__0.call(this);
      case 1:
        return taoensso$encore$str_builder__1.call(this, s_init);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  taoensso$encore$str_builder.cljs$core$IFn$_invoke$arity$0 = taoensso$encore$str_builder__0;
  taoensso$encore$str_builder.cljs$core$IFn$_invoke$arity$1 = taoensso$encore$str_builder__1;
  return taoensso$encore$str_builder;
}();
taoensso.encore.sb_append = function taoensso$encore$sb_append(var_args) {
  var args35610 = [];
  var len__9707__auto___35616 = arguments.length;
  var i__9708__auto___35617 = 0;
  while (true) {
    if (i__9708__auto___35617 < len__9707__auto___35616) {
      args35610.push(arguments[i__9708__auto___35617]);
      var G__35618 = i__9708__auto___35617 + 1;
      i__9708__auto___35617 = G__35618;
      continue;
    } else {
    }
    break;
  }
  var G__35615 = args35610.length;
  switch(G__35615) {
    case 2:
      return taoensso.encore.sb_append.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__9726__auto__ = new cljs.core.IndexedSeq(args35610.slice(2), 0, null);
      return taoensso.encore.sb_append.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9726__auto__);
  }
};
taoensso.encore.sb_append.cljs$core$IFn$_invoke$arity$2 = function(str_builder, s) {
  return str_builder.append(s);
};
taoensso.encore.sb_append.cljs$core$IFn$_invoke$arity$variadic = function(str_builder, s, more) {
  taoensso.encore.sb_append.call(null, str_builder, s);
  return cljs.core.reduce.call(null, function(acc, in$) {
    return taoensso.encore.sb_append.call(null, acc, in$);
  }, str_builder, more);
};
taoensso.encore.sb_append.cljs$lang$applyTo = function(seq35611) {
  var G__35612 = cljs.core.first.call(null, seq35611);
  var seq35611__$1 = cljs.core.next.call(null, seq35611);
  var G__35613 = cljs.core.first.call(null, seq35611__$1);
  var seq35611__$2 = cljs.core.next.call(null, seq35611__$1);
  return taoensso.encore.sb_append.cljs$core$IFn$_invoke$arity$variadic(G__35612, G__35613, seq35611__$2);
};
taoensso.encore.sb_append.cljs$lang$maxFixedArity = 2;
taoensso.encore.str_rf = function() {
  var taoensso$encore$str_rf = null;
  var taoensso$encore$str_rf__0 = function() {
    return taoensso.encore.str_builder.call(null);
  };
  var taoensso$encore$str_rf__1 = function(acc) {
    if (taoensso.encore.str_builder_QMARK_.call(null, acc)) {
      return acc;
    } else {
      return taoensso.encore.str_builder.call(null, [cljs.core.str(acc)].join(""));
    }
  };
  var taoensso$encore$str_rf__2 = function(acc, in$) {
    return taoensso.encore.sb_append.call(null, taoensso.encore.str_builder_QMARK_.call(null, acc) ? acc : taoensso.encore.str_builder.call(null, [cljs.core.str(acc)].join("")), [cljs.core.str(in$)].join(""));
  };
  taoensso$encore$str_rf = function(acc, in$) {
    switch(arguments.length) {
      case 0:
        return taoensso$encore$str_rf__0.call(this);
      case 1:
        return taoensso$encore$str_rf__1.call(this, acc);
      case 2:
        return taoensso$encore$str_rf__2.call(this, acc, in$);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  taoensso$encore$str_rf.cljs$core$IFn$_invoke$arity$0 = taoensso$encore$str_rf__0;
  taoensso$encore$str_rf.cljs$core$IFn$_invoke$arity$1 = taoensso$encore$str_rf__1;
  taoensso$encore$str_rf.cljs$core$IFn$_invoke$arity$2 = taoensso$encore$str_rf__2;
  return taoensso$encore$str_rf;
}();
taoensso.encore.str_join = function taoensso$encore$str_join(var_args) {
  var args35620 = [];
  var len__9707__auto___35623 = arguments.length;
  var i__9708__auto___35624 = 0;
  while (true) {
    if (i__9708__auto___35624 < len__9707__auto___35623) {
      args35620.push(arguments[i__9708__auto___35624]);
      var G__35625 = i__9708__auto___35624 + 1;
      i__9708__auto___35624 = G__35625;
      continue;
    } else {
    }
    break;
  }
  var G__35622 = args35620.length;
  switch(G__35622) {
    case 1:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35620.length)].join(""));;
  }
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return taoensso.encore.str_join.call(null, null, null, coll);
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  return taoensso.encore.str_join.call(null, separator, null, coll);
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$3 = function(separator, xform, coll) {
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = separator;
    if (cljs.core.truth_(and__8620__auto__)) {
      return cljs.core.not_EQ_.call(null, separator, "");
    } else {
      return and__8620__auto__;
    }
  }())) {
    var sep_xform = cljs.core.interpose.call(null, separator);
    var str_rf_STAR_ = cljs.core.completing.call(null, taoensso.encore.str_rf, cljs.core.str);
    if (cljs.core.truth_(xform)) {
      return cljs.core.transduce.call(null, cljs.core.comp.call(null, xform, sep_xform), str_rf_STAR_, coll);
    } else {
      return cljs.core.transduce.call(null, sep_xform, str_rf_STAR_, coll);
    }
  } else {
    if (cljs.core.truth_(xform)) {
      return cljs.core.transduce.call(null, xform, cljs.core.completing.call(null, taoensso.encore.str_rf, cljs.core.str), coll);
    } else {
      return [cljs.core.str(cljs.core.reduce.call(null, taoensso.encore.str_rf, coll))].join("");
    }
  }
};
taoensso.encore.str_join.cljs$lang$maxFixedArity = 3;
taoensso.encore.str_contains_QMARK_ = function taoensso$encore$str_contains_QMARK_(s, substr) {
  return cljs.core.not_EQ_.call(null, -1, s.indexOf(substr));
};
taoensso.encore.str_starts_with_QMARK_ = function taoensso$encore$str_starts_with_QMARK_(s, substr) {
  return s.indexOf(substr) === 0;
};
taoensso.encore.str_ends_with_QMARK_ = function taoensso$encore$str_ends_with_QMARK_(s, substr) {
  var s_len = s.length;
  var substr_len = substr.length;
  if (s_len >= substr_len) {
    return cljs.core.not_EQ_.call(null, -1, s.indexOf(substr, s_len - substr_len));
  } else {
    return null;
  }
};
taoensso.encore.str__QMARK_index = function taoensso$encore$str__QMARK_index(var_args) {
  var args35627 = [];
  var len__9707__auto___35630 = arguments.length;
  var i__9708__auto___35631 = 0;
  while (true) {
    if (i__9708__auto___35631 < len__9707__auto___35630) {
      args35627.push(arguments[i__9708__auto___35631]);
      var G__35632 = i__9708__auto___35631 + 1;
      i__9708__auto___35631 = G__35632;
      continue;
    } else {
    }
    break;
  }
  var G__35629 = args35627.length;
  switch(G__35629) {
    case 2:
      return taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35627.length)].join(""));;
  }
};
taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$2 = function(s, substr) {
  return taoensso.encore.str__QMARK_index.call(null, s, substr, 0, false);
};
taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$3 = function(s, substr, start_idx) {
  return taoensso.encore.str__QMARK_index.call(null, s, substr, start_idx, false);
};
taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$4 = function(s, substr, start_idx, last_QMARK_) {
  var result = cljs.core.truth_(last_QMARK_) ? s.lastIndexOf(substr, start_idx) : s.indexOf(substr, start_idx);
  if (cljs.core.not_EQ_.call(null, result, -1)) {
    return result;
  } else {
    return null;
  }
};
taoensso.encore.str__QMARK_index.cljs$lang$maxFixedArity = 4;
taoensso.encore.get_substr = function taoensso$encore$get_substr(var_args) {
  var args35634 = [];
  var len__9707__auto___35637 = arguments.length;
  var i__9708__auto___35638 = 0;
  while (true) {
    if (i__9708__auto___35638 < len__9707__auto___35637) {
      args35634.push(arguments[i__9708__auto___35638]);
      var G__35639 = i__9708__auto___35638 + 1;
      i__9708__auto___35638 = G__35639;
      continue;
    } else {
    }
    break;
  }
  var G__35636 = args35634.length;
  switch(G__35636) {
    case 2:
      return taoensso.encore.get_substr.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.get_substr.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35634.length)].join(""));;
  }
};
taoensso.encore.get_substr.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
taoensso.encore.get_substr.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  if (start >= end) {
    return "";
  } else {
    return s.substring(start, end);
  }
};
taoensso.encore.get_substr.cljs$lang$maxFixedArity = 3;
taoensso.encore.get_substring = function taoensso$encore$get_substring(var_args) {
  var args35641 = [];
  var len__9707__auto___35644 = arguments.length;
  var i__9708__auto___35645 = 0;
  while (true) {
    if (i__9708__auto___35645 < len__9707__auto___35644) {
      args35641.push(arguments[i__9708__auto___35645]);
      var G__35646 = i__9708__auto___35645 + 1;
      i__9708__auto___35645 = G__35646;
      continue;
    } else {
    }
    break;
  }
  var G__35643 = args35641.length;
  switch(G__35643) {
    case 2:
      return taoensso.encore.get_substring.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.get_substring.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35641.length)].join(""));;
  }
};
taoensso.encore.get_substring.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return taoensso.encore.as__QMARK_nempty_str.call(null, s.substr(start));
};
taoensso.encore.get_substring.cljs$core$IFn$_invoke$arity$3 = function(s, start, length) {
  return taoensso.encore.as__QMARK_nempty_str.call(null, s.substr(start, length));
};
taoensso.encore.get_substring.cljs$lang$maxFixedArity = 3;
taoensso.encore.str_replace = function taoensso$encore$str_replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      var flags = [cljs.core.str("g"), cljs.core.str(cljs.core.truth_(match.ignoreCase) ? "i" : null), cljs.core.str(cljs.core.truth_(match.multiline) ? "m" : null)].join("");
      var replacement__$1 = typeof replacement === "string" ? replacement : function(flags) {
        return function() {
          var G__35648__delegate = function(args) {
            return replacement.call(null, cljs.core.vec.call(null, args));
          };
          var G__35648 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__35649__i = 0, G__35649__a = new Array(arguments.length - 0);
              while (G__35649__i < G__35649__a.length) {
                G__35649__a[G__35649__i] = arguments[G__35649__i + 0];
                ++G__35649__i;
              }
              args = new cljs.core.IndexedSeq(G__35649__a, 0);
            }
            return G__35648__delegate.call(this, args);
          };
          G__35648.cljs$lang$maxFixedArity = 0;
          G__35648.cljs$lang$applyTo = function(arglist__35650) {
            var args = cljs.core.seq(arglist__35650);
            return G__35648__delegate(args);
          };
          G__35648.cljs$core$IFn$_invoke$arity$variadic = G__35648__delegate;
          return G__35648;
        }();
      }(flags);
      return s.replace(new RegExp(match.source, flags), replacement__$1);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
taoensso.encore.nil__GT_str = function taoensso$encore$nil__GT_str(x) {
  if (void 0 === x || x == null) {
    return "nil";
  } else {
    return x;
  }
};
taoensso.encore.format_STAR_ = function taoensso$encore$format_STAR_(fmt, args) {
  var fmt__$1 = function() {
    var or__8632__auto__ = fmt;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return "";
    }
  }();
  var args__$1 = cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, args);
  return cljs.core.apply.call(null, goog.string.format, fmt__$1, args__$1);
};
taoensso.encore.format = function taoensso$encore$format(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35653 = arguments.length;
  var i__9708__auto___35654 = 0;
  while (true) {
    if (i__9708__auto___35654 < len__9707__auto___35653) {
      args__9714__auto__.push(arguments[i__9708__auto___35654]);
      var G__35655 = i__9708__auto___35654 + 1;
      i__9708__auto___35654 = G__35655;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic = function(fmt, args) {
  return taoensso.encore.format_STAR_.call(null, fmt, args);
};
taoensso.encore.format.cljs$lang$maxFixedArity = 1;
taoensso.encore.format.cljs$lang$applyTo = function(seq35651) {
  var G__35652 = cljs.core.first.call(null, seq35651);
  var seq35651__$1 = cljs.core.next.call(null, seq35651);
  return taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic(G__35652, seq35651__$1);
};
taoensso.encore.str_join_once = function taoensso$encore$str_join_once(separator, coll) {
  var sep = separator;
  if (clojure.string.blank_QMARK_.call(null, sep)) {
    return [cljs.core.str(cljs.core.reduce.call(null, taoensso.encore.str_rf, "", coll))].join("");
  } else {
    var acc_ends_with_sep_QMARK__ = cljs.core.volatile_BANG_.call(null, false);
    var acc_empty_QMARK__ = cljs.core.volatile_BANG_.call(null, true);
    return [cljs.core.str(cljs.core.reduce.call(null, function(acc_ends_with_sep_QMARK__, acc_empty_QMARK__, sep) {
      return function(acc, in$) {
        var in$__$1 = [cljs.core.str(in$)].join("");
        var in_empty_QMARK_ = cljs.core._EQ_.call(null, in$__$1, "");
        var in_starts_with_sep_QMARK_ = taoensso.encore.str_starts_with_QMARK_.call(null, in$__$1, sep);
        var in_ends_with_sep_QMARK_ = taoensso.encore.str_ends_with_QMARK_.call(null, in$__$1, sep);
        var acc_ends_with_sep_QMARK_ = cljs.core.deref.call(null, acc_ends_with_sep_QMARK__);
        var acc_empty_QMARK_ = cljs.core.deref.call(null, acc_empty_QMARK__);
        cljs.core.vreset_BANG_.call(null, acc_ends_with_sep_QMARK__, in_ends_with_sep_QMARK_);
        if (cljs.core.truth_(acc_empty_QMARK_)) {
          cljs.core.vreset_BANG_.call(null, acc_empty_QMARK__, in_empty_QMARK_);
        } else {
        }
        if (cljs.core.truth_(acc_ends_with_sep_QMARK_)) {
          if (in_starts_with_sep_QMARK_) {
            return taoensso.encore.sb_append.call(null, acc, in$__$1.substring(1));
          } else {
            return taoensso.encore.sb_append.call(null, acc, in$__$1);
          }
        } else {
          if (in_starts_with_sep_QMARK_) {
            return taoensso.encore.sb_append.call(null, acc, in$__$1);
          } else {
            if (cljs.core.truth_(function() {
              var or__8632__auto__ = acc_empty_QMARK_;
              if (cljs.core.truth_(or__8632__auto__)) {
                return or__8632__auto__;
              } else {
                return in_empty_QMARK_;
              }
            }())) {
              return taoensso.encore.sb_append.call(null, acc, in$__$1);
            } else {
              taoensso.encore.sb_append.call(null, acc, sep);
              return taoensso.encore.sb_append.call(null, acc, in$__$1);
            }
          }
        }
      };
    }(acc_ends_with_sep_QMARK__, acc_empty_QMARK__, sep), taoensso.encore.str_builder.call(null), coll))].join("");
  }
};
taoensso.encore.path = function taoensso$encore$path(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35657 = arguments.length;
  var i__9708__auto___35658 = 0;
  while (true) {
    if (i__9708__auto___35658 < len__9707__auto___35657) {
      args__9714__auto__.push(arguments[i__9708__auto___35658]);
      var G__35659 = i__9708__auto___35658 + 1;
      i__9708__auto___35658 = G__35659;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic = function(parts) {
  return taoensso.encore.str_join_once.call(null, "/", parts);
};
taoensso.encore.path.cljs$lang$maxFixedArity = 0;
taoensso.encore.path.cljs$lang$applyTo = function(seq35656) {
  return taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35656));
};
taoensso.encore.norm_word_breaks = function taoensso$encore$norm_word_breaks(s) {
  return clojure.string.replace.call(null, [cljs.core.str(s)].join(""), /\s+/, " ");
};
taoensso.encore.count_words = function taoensso$encore$count_words(s) {
  if (clojure.string.blank_QMARK_.call(null, s)) {
    return 0;
  } else {
    return cljs.core.count.call(null, clojure.string.split.call(null, s, /\s+/));
  }
};
taoensso.encore.uuid_str = function taoensso$encore$uuid_str(var_args) {
  var args35660 = [];
  var len__9707__auto___35663 = arguments.length;
  var i__9708__auto___35664 = 0;
  while (true) {
    if (i__9708__auto___35664 < len__9707__auto___35663) {
      args35660.push(arguments[i__9708__auto___35664]);
      var G__35665 = i__9708__auto___35664 + 1;
      i__9708__auto___35664 = G__35665;
      continue;
    } else {
    }
    break;
  }
  var G__35662 = args35660.length;
  switch(G__35662) {
    case 1:
      return taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 0:
      return taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35660.length)].join(""));;
  }
};
taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1 = function(max_length) {
  return taoensso.encore.get_substring.call(null, taoensso.encore.uuid_str.call(null), 0, max_length);
};
taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0 = function() {
  var hex = function() {
    return cljs.core.rand_int.call(null, 16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int.call(null, 16)).toString(16);
  return [cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), 
  cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), 
  cljs.core.str(hex.call(null))].join("");
};
taoensso.encore.uuid_str.cljs$lang$maxFixedArity = 1;
taoensso.encore.into_str = function taoensso$encore$into_str(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35668 = arguments.length;
  var i__9708__auto___35669 = 0;
  while (true) {
    if (i__9708__auto___35669 < len__9707__auto___35668) {
      args__9714__auto__.push(arguments[i__9708__auto___35669]);
      var G__35670 = i__9708__auto___35669 + 1;
      i__9708__auto___35669 = G__35670;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.into_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.into_str.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return [cljs.core.str(cljs.core.reduce.call(null, function taoensso$encore$rf(acc, in$) {
    if (cljs.core.sequential_QMARK_.call(null, in$)) {
      return cljs.core.reduce.call(null, taoensso$encore$rf, acc, in$);
    } else {
      return taoensso.encore.sb_append.call(null, acc, [cljs.core.str(in$)].join(""));
    }
  }, taoensso.encore.str_builder.call(null), xs))].join("");
};
taoensso.encore.into_str.cljs$lang$maxFixedArity = 0;
taoensso.encore.into_str.cljs$lang$applyTo = function(seq35667) {
  return taoensso.encore.into_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35667));
};
taoensso.encore.rcompare = function taoensso$encore$rcompare(x, y) {
  return cljs.core.compare.call(null, y, x);
};
var sentinel_35679 = {};
var nil__GT_sentinel_35680 = function(sentinel_35679) {
  return function(x) {
    if (x == null) {
      return sentinel_35679;
    } else {
      return x;
    }
  };
}(sentinel_35679);
var sentinel__GT_nil_35681 = function(sentinel_35679, nil__GT_sentinel_35680) {
  return function(x) {
    if (x === sentinel_35679) {
      return null;
    } else {
      return x;
    }
  };
}(sentinel_35679, nil__GT_sentinel_35680);
taoensso.encore.top_into = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function taoensso$encore$top_into(var_args) {
    var args35673 = [];
    var len__9707__auto___35682 = arguments.length;
    var i__9708__auto___35683 = 0;
    while (true) {
      if (i__9708__auto___35683 < len__9707__auto___35682) {
        args35673.push(arguments[i__9708__auto___35683]);
        var G__35684 = i__9708__auto___35683 + 1;
        i__9708__auto___35683 = G__35684;
        continue;
      } else {
      }
      break;
    }
    var G__35675 = args35673.length;
    switch(G__35675) {
      case 3:
        return taoensso.encore.top_into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.top_into.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      case 5:
        return taoensso.encore.top_into.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35673.length)].join(""));;
    }
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top_into.cljs$core$IFn$_invoke$arity$3 = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function(to, n, coll) {
    return taoensso.encore.top_into.call(null, to, n, cljs.core.identity, cljs.core.compare, coll);
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top_into.cljs$core$IFn$_invoke$arity$4 = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function(to, n, keyfn, coll) {
    return taoensso.encore.top_into.call(null, to, n, keyfn, cljs.core.compare, coll);
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top_into.cljs$core$IFn$_invoke$arity$5 = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function(to, n, keyfn, cmp, coll) {
    var coll_size = cljs.core.count.call(null, coll);
    var n__$1 = cljs.core.long$.call(null, function() {
      var x__8970__auto__ = coll_size;
      var y__8971__auto__ = cljs.core.long$.call(null, n);
      return x__8970__auto__ < y__8971__auto__ ? x__8970__auto__ : y__8971__auto__;
    }());
    if (n__$1 > 0) {
      return cljs.core.into.call(null, to, cljs.core.take.call(null, n__$1), cljs.core.sort_by.call(null, keyfn, cmp, coll));
    } else {
      return to;
    }
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top_into.cljs$lang$maxFixedArity = 5;
taoensso.encore.top = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function taoensso$encore$top(var_args) {
    var args35676 = [];
    var len__9707__auto___35686 = arguments.length;
    var i__9708__auto___35687 = 0;
    while (true) {
      if (i__9708__auto___35687 < len__9707__auto___35686) {
        args35676.push(arguments[i__9708__auto___35687]);
        var G__35688 = i__9708__auto___35687 + 1;
        i__9708__auto___35687 = G__35688;
        continue;
      } else {
      }
      break;
    }
    var G__35678 = args35676.length;
    switch(G__35678) {
      case 2:
        return taoensso.encore.top.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
        break;
      case 3:
        return taoensso.encore.top.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return taoensso.encore.top.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35676.length)].join(""));;
    }
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top.cljs$core$IFn$_invoke$arity$2 = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function(n, coll) {
    return taoensso.encore.top_into.call(null, cljs.core.PersistentVector.EMPTY, n, cljs.core.identity, cljs.core.compare, coll);
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top.cljs$core$IFn$_invoke$arity$3 = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function(n, keyfn, coll) {
    return taoensso.encore.top_into.call(null, cljs.core.PersistentVector.EMPTY, n, keyfn, cljs.core.compare, coll);
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top.cljs$core$IFn$_invoke$arity$4 = function(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681) {
  return function(n, keyfn, cmp, coll) {
    return taoensso.encore.top_into.call(null, cljs.core.PersistentVector.EMPTY, n, keyfn, cmp, coll);
  };
}(sentinel_35679, nil__GT_sentinel_35680, sentinel__GT_nil_35681);
taoensso.encore.top.cljs$lang$maxFixedArity = 4;
taoensso.encore.secs__GT_ms = function taoensso$encore$secs__GT_ms(secs) {
  return cljs.core.long$.call(null, secs) * 1E3;
};
taoensso.encore.ms__GT_secs = function taoensso$encore$ms__GT_secs(ms) {
  return cljs.core.quot.call(null, cljs.core.long$.call(null, ms), 1E3);
};
taoensso.encore.ms = function taoensso$encore$ms(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35706 = arguments.length;
  var i__9708__auto___35707 = 0;
  while (true) {
    if (i__9708__auto___35707 < len__9707__auto___35706) {
      args__9714__auto__.push(arguments[i__9708__auto___35707]);
      var G__35708 = i__9708__auto___35707 + 1;
      i__9708__auto___35707 = G__35708;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic = function(p__35703) {
  var map__35704 = p__35703;
  var map__35704__$1 = (!(map__35704 == null) ? map__35704.cljs$lang$protocol_mask$partition0$ & 64 || map__35704.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__35704) : map__35704;
  var opts = map__35704__$1;
  var years = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var months = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var weeks = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var days = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var hours = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var mins = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "mins", "mins", 467369676));
  var secs = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "secs", "secs", 1532330091));
  var msecs = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "msecs", "msecs", 1711980553));
  var ms = cljs.core.get.call(null, map__35704__$1, new cljs.core.Keyword(null, "ms", "ms", -1152709733));
  taoensso.truss.impl.revery_QMARK_.call(null, function(map__35704, map__35704__$1, opts, years, months, weeks, days, hours, mins, secs, msecs, ms) {
    return function(__in) {
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, 
      "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null], null), null)).call(null, __in))) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(#{:msecs :secs :months :days :mins :hours :years :ms :weeks} __in)", __in, null, null);
      }
    };
  }(map__35704, map__35704__$1, opts, years, months, weeks, days, hours, mins, secs, msecs, ms), cljs.core.keys.call(null, opts));
  return taoensso.encore.round0.call(null, (cljs.core.truth_(years) ? years * 31536E6 : 0) + (cljs.core.truth_(months) ? months * 2551392E3 : 0) + (cljs.core.truth_(weeks) ? weeks * 6048E5 : 0) + (cljs.core.truth_(days) ? days * 864E5 : 0) + (cljs.core.truth_(hours) ? hours * 36E5 : 0) + (cljs.core.truth_(mins) ? mins * 6E4 : 0) + (cljs.core.truth_(secs) ? secs * 1E3 : 0) + (cljs.core.truth_(msecs) ? msecs : 0) + (cljs.core.truth_(ms) ? ms : 0));
};
taoensso.encore.ms.cljs$lang$maxFixedArity = 0;
taoensso.encore.ms.cljs$lang$applyTo = function(seq35702) {
  return taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35702));
};
taoensso.encore.secs = cljs.core.comp.call(null, taoensso.encore.ms__GT_secs, taoensso.encore.ms);
taoensso.encore.console_log = typeof console !== "undefined" ? function() {
  var G__35719__delegate = function(xs) {
    var b2__20870__auto__ = console.log;
    if (cljs.core.truth_(b2__20870__auto__)) {
      var f = b2__20870__auto__;
      return f.apply(console, cljs.core.into_array.call(null, xs));
    } else {
      return null;
    }
  };
  var G__35719 = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__35720__i = 0, G__35720__a = new Array(arguments.length - 0);
      while (G__35720__i < G__35720__a.length) {
        G__35720__a[G__35720__i] = arguments[G__35720__i + 0];
        ++G__35720__i;
      }
      xs = new cljs.core.IndexedSeq(G__35720__a, 0);
    }
    return G__35719__delegate.call(this, xs);
  };
  G__35719.cljs$lang$maxFixedArity = 0;
  G__35719.cljs$lang$applyTo = function(arglist__35721) {
    var xs = cljs.core.seq(arglist__35721);
    return G__35719__delegate(xs);
  };
  G__35719.cljs$core$IFn$_invoke$arity$variadic = G__35719__delegate;
  return G__35719;
}() : function() {
  var G__35722__delegate = function(xs) {
    return null;
  };
  var G__35722 = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__35723__i = 0, G__35723__a = new Array(arguments.length - 0);
      while (G__35723__i < G__35723__a.length) {
        G__35723__a[G__35723__i] = arguments[G__35723__i + 0];
        ++G__35723__i;
      }
      xs = new cljs.core.IndexedSeq(G__35723__a, 0);
    }
    return G__35722__delegate.call(this, xs);
  };
  G__35722.cljs$lang$maxFixedArity = 0;
  G__35722.cljs$lang$applyTo = function(arglist__35724) {
    var xs = cljs.core.seq(arglist__35724);
    return G__35722__delegate(xs);
  };
  G__35722.cljs$core$IFn$_invoke$arity$variadic = G__35722__delegate;
  return G__35722;
}();
taoensso.encore.log = taoensso.encore.console_log;
taoensso.encore.logp = function taoensso$encore$logp(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35725 = arguments.length;
  var i__9708__auto___35726 = 0;
  while (true) {
    if (i__9708__auto___35726 < len__9707__auto___35725) {
      args__9714__auto__.push(arguments[i__9708__auto___35726]);
      var G__35727 = i__9708__auto___35726 + 1;
      i__9708__auto___35726 = G__35727;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return taoensso.encore.console_log.call(null, taoensso.encore.str_join.call(null, " ", cljs.core.map.call(null, taoensso.encore.nil__GT_str), xs));
};
taoensso.encore.logp.cljs$lang$maxFixedArity = 0;
taoensso.encore.logp.cljs$lang$applyTo = function(seq35713) {
  return taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35713));
};
taoensso.encore.sayp = function taoensso$encore$sayp(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35728 = arguments.length;
  var i__9708__auto___35729 = 0;
  while (true) {
    if (i__9708__auto___35729 < len__9707__auto___35728) {
      args__9714__auto__.push(arguments[i__9708__auto___35729]);
      var G__35730 = i__9708__auto___35729 + 1;
      i__9708__auto___35729 = G__35730;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return alert(taoensso.encore.str_join.call(null, " ", cljs.core.map.call(null, taoensso.encore.nil__GT_str), xs));
};
taoensso.encore.sayp.cljs$lang$maxFixedArity = 0;
taoensso.encore.sayp.cljs$lang$applyTo = function(seq35714) {
  return taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq35714));
};
taoensso.encore.logf = function taoensso$encore$logf(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35731 = arguments.length;
  var i__9708__auto___35732 = 0;
  while (true) {
    if (i__9708__auto___35732 < len__9707__auto___35731) {
      args__9714__auto__.push(arguments[i__9708__auto___35732]);
      var G__35733 = i__9708__auto___35732 + 1;
      i__9708__auto___35732 = G__35733;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  return taoensso.encore.console_log.call(null, taoensso.encore.format_STAR_.call(null, fmt, xs));
};
taoensso.encore.logf.cljs$lang$maxFixedArity = 1;
taoensso.encore.logf.cljs$lang$applyTo = function(seq35715) {
  var G__35716 = cljs.core.first.call(null, seq35715);
  var seq35715__$1 = cljs.core.next.call(null, seq35715);
  return taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic(G__35716, seq35715__$1);
};
taoensso.encore.sayf = function taoensso$encore$sayf(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35734 = arguments.length;
  var i__9708__auto___35735 = 0;
  while (true) {
    if (i__9708__auto___35735 < len__9707__auto___35734) {
      args__9714__auto__.push(arguments[i__9708__auto___35735]);
      var G__35736 = i__9708__auto___35735 + 1;
      i__9708__auto___35735 = G__35736;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  return alert(taoensso.encore.format_STAR_.call(null, fmt, xs));
};
taoensso.encore.sayf.cljs$lang$maxFixedArity = 1;
taoensso.encore.sayf.cljs$lang$applyTo = function(seq35717) {
  var G__35718 = cljs.core.first.call(null, seq35717);
  var seq35717__$1 = cljs.core.next.call(null, seq35717);
  return taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic(G__35718, seq35717__$1);
};
taoensso.encore.get_win_loc = function taoensso$encore$get_win_loc() {
  var b2__20870__auto__ = taoensso.encore.js__QMARK_win;
  if (cljs.core.truth_(b2__20870__auto__)) {
    var js_win = b2__20870__auto__;
    var b2__20870__auto____$1 = js_win.location;
    if (cljs.core.truth_(b2__20870__auto____$1)) {
      var loc = b2__20870__auto____$1;
      return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "href", "href", -793805698), loc.href, new cljs.core.Keyword(null, "protocol", "protocol", 652470118), loc.protocol, new cljs.core.Keyword(null, "hostname", "hostname", 2105669933), loc.hostname, new cljs.core.Keyword(null, "host", "host", -1558485167), loc.host, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528), loc.pathname, new cljs.core.Keyword(null, "search", "search", 1564939822), loc.search, 
      new cljs.core.Keyword(null, "hash", "hash", -13781596), loc.hash], null);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
taoensso.encore.xhr_pool_ = new cljs.core.Delay(function() {
  return new goog.net.XhrIoPool;
}, null);
taoensso.encore.get_pooled_xhr_BANG_ = function taoensso$encore$get_pooled_xhr_BANG_() {
  var result = cljs.core.deref.call(null, taoensso.encore.xhr_pool_).getObject();
  if (void 0 === result) {
    return null;
  } else {
    return result;
  }
};
taoensso.encore.js_form_data_QMARK_ = typeof FormData !== "undefined" ? function(x) {
  return x instanceof FormData;
} : function(x) {
  return null;
};
taoensso.encore.js_file_QMARK_ = typeof File !== "undefined" ? function(x) {
  return x instanceof File;
} : function(x) {
  return null;
};
taoensso.encore.coerce_xhr_params = function() {
  var url_encode = function() {
    var taoensso$encore$url_encode = null;
    var taoensso$encore$url_encode__1 = function(params) {
      if (cljs.core.seq.call(null, params)) {
        return goog.Uri.QueryData.createFromMap(new goog.structs.Map(cljs.core.clj__GT_js.call(null, params))).toString();
      } else {
        return null;
      }
    };
    var taoensso$encore$url_encode__2 = function(uri, params) {
      var qstr = taoensso$encore$url_encode.call(null, params);
      var uri_with_query = clojure.string.blank_QMARK_.call(null, qstr) ? uri : [cljs.core.str(uri), cljs.core.str("?"), cljs.core.str(qstr)].join("");
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri_with_query, null], null);
    };
    taoensso$encore$url_encode = function(uri, params) {
      switch(arguments.length) {
        case 1:
          return taoensso$encore$url_encode__1.call(this, uri);
        case 2:
          return taoensso$encore$url_encode__2.call(this, uri, params);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    taoensso$encore$url_encode.cljs$core$IFn$_invoke$arity$1 = taoensso$encore$url_encode__1;
    taoensso$encore$url_encode.cljs$core$IFn$_invoke$arity$2 = taoensso$encore$url_encode__2;
    return taoensso$encore$url_encode;
  }();
  var adaptive_encode = function(url_encode) {
    return function(uri, params) {
      if (cljs.core.truth_(taoensso.encore.js_form_data_QMARK_.call(null, params))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, params], null);
      } else {
        var e_35749 = function() {
          try {
            if (cljs.core.map_QMARK_.call(null, params)) {
              return null;
            } else {
              return taoensso.truss.impl._dummy_error;
            }
          } catch (e35737) {
            if (e35737 instanceof Error) {
              var e = e35737;
              return e;
            } else {
              throw e35737;
            }
          }
        }();
        if (e_35749 == null) {
        } else {
          taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(map? params)", params, e_35749, null);
        }
        if (cljs.core.truth_(function() {
          var and__8620__auto__ = typeof FormData !== "undefined";
          if (and__8620__auto__) {
            return taoensso.encore.rsome.call(null, taoensso.encore.js_file_QMARK_, cljs.core.vals.call(null, params));
          } else {
            return and__8620__auto__;
          }
        }())) {
          var form_data = new FormData;
          var seq__35738_35750 = cljs.core.seq.call(null, params);
          var chunk__35739_35751 = null;
          var count__35740_35752 = 0;
          var i__35741_35753 = 0;
          while (true) {
            if (i__35741_35753 < count__35740_35752) {
              var vec__35742_35754 = cljs.core._nth.call(null, chunk__35739_35751, i__35741_35753);
              var k_35755 = cljs.core.nth.call(null, vec__35742_35754, 0, null);
              var v_35756 = cljs.core.nth.call(null, vec__35742_35754, 1, null);
              form_data.append(cljs.core.name.call(null, k_35755), v_35756);
              var G__35757 = seq__35738_35750;
              var G__35758 = chunk__35739_35751;
              var G__35759 = count__35740_35752;
              var G__35760 = i__35741_35753 + 1;
              seq__35738_35750 = G__35757;
              chunk__35739_35751 = G__35758;
              count__35740_35752 = G__35759;
              i__35741_35753 = G__35760;
              continue;
            } else {
              var temp__4657__auto___35761 = cljs.core.seq.call(null, seq__35738_35750);
              if (temp__4657__auto___35761) {
                var seq__35738_35762__$1 = temp__4657__auto___35761;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__35738_35762__$1)) {
                  var c__9443__auto___35763 = cljs.core.chunk_first.call(null, seq__35738_35762__$1);
                  var G__35764 = cljs.core.chunk_rest.call(null, seq__35738_35762__$1);
                  var G__35765 = c__9443__auto___35763;
                  var G__35766 = cljs.core.count.call(null, c__9443__auto___35763);
                  var G__35767 = 0;
                  seq__35738_35750 = G__35764;
                  chunk__35739_35751 = G__35765;
                  count__35740_35752 = G__35766;
                  i__35741_35753 = G__35767;
                  continue;
                } else {
                  var vec__35745_35768 = cljs.core.first.call(null, seq__35738_35762__$1);
                  var k_35769 = cljs.core.nth.call(null, vec__35745_35768, 0, null);
                  var v_35770 = cljs.core.nth.call(null, vec__35745_35768, 1, null);
                  form_data.append(cljs.core.name.call(null, k_35769), v_35770);
                  var G__35771 = cljs.core.next.call(null, seq__35738_35762__$1);
                  var G__35772 = null;
                  var G__35773 = 0;
                  var G__35774 = 0;
                  seq__35738_35750 = G__35771;
                  chunk__35739_35751 = G__35772;
                  count__35740_35752 = G__35773;
                  i__35741_35753 = G__35774;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, form_data], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, url_encode.call(null, params)], null);
        }
      }
    };
  }(url_encode);
  return function(url_encode, adaptive_encode) {
    return function(uri, method, params) {
      if (cljs.core.truth_(function(url_encode, adaptive_encode) {
        return function(x) {
          var or__8632__auto__ = x == null;
          if (or__8632__auto__) {
            return or__8632__auto__;
          } else {
            return taoensso.truss.impl.non_throwing.call(null, cljs.core.map_QMARK_).call(null, x);
          }
        };
      }(url_encode, adaptive_encode).call(null, params))) {
      } else {
        taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "([:or nil? map?] params)", params, null, null);
      }
      var G__35748 = method instanceof cljs.core.Keyword ? method.fqn : null;
      switch(G__35748) {
        case "get":
          return url_encode.call(null, uri, params);
          break;
        case "post":
          return adaptive_encode.call(null, uri, params);
          break;
        case "put":
          return adaptive_encode.call(null, uri, params);
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(method)].join(""));;
      }
    };
  }(url_encode, adaptive_encode);
}();
taoensso.encore.ajax_lite = function taoensso$encore$ajax_lite(uri, p__35777, callback_fn) {
  var map__35796 = p__35777;
  var map__35796__$1 = (!(map__35796 == null) ? map__35796.cljs$lang$protocol_mask$partition0$ & 64 || map__35796.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__35796) : map__35796;
  var opts = map__35796__$1;
  var method = cljs.core.get.call(null, map__35796__$1, new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755));
  var params = cljs.core.get.call(null, map__35796__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var headers = cljs.core.get.call(null, map__35796__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var timeout_ms = cljs.core.get.call(null, map__35796__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), 1E4);
  var resp_type = cljs.core.get.call(null, map__35796__$1, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "auto", "auto", -566279492));
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__35796__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  if (cljs.core.truth_(function(map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_) {
    return function(x) {
      var or__8632__auto__ = x == null;
      if (or__8632__auto__) {
        return or__8632__auto__;
      } else {
        return taoensso.truss.impl.non_throwing.call(null, taoensso.encore.nat_int_QMARK_).call(null, x);
      }
    };
  }(map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_).call(null, timeout_ms))) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "([:or nil? nat-int?] timeout-ms)", timeout_ms, null, null);
  }
  var b2__20870__auto__ = taoensso.encore.get_pooled_xhr_BANG_.call(null);
  if (cljs.core.truth_(b2__20870__auto__)) {
    var xhr = b2__20870__auto__;
    try {
      var timeout_ms__$1 = function() {
        var or__8632__auto__ = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(opts);
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return timeout_ms;
        }
      }();
      var xhr_method = function() {
        var G__35802 = method instanceof cljs.core.Keyword ? method.fqn : null;
        switch(G__35802) {
          case "get":
            return "GET";
            break;
          case "post":
            return "POST";
            break;
          case "put":
            return "PUT";
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(method)].join(""));;
        }
      }();
      var vec__35799 = taoensso.encore.coerce_xhr_params.call(null, uri, method, params);
      var xhr_uri = cljs.core.nth.call(null, vec__35799, 0, null);
      var xhr__QMARK_data = cljs.core.nth.call(null, vec__35799, 1, null);
      var xhr_headers = function() {
        var headers__$1 = taoensso.encore.map_keys.call(null, function(timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_) {
          return function(p1__35776_SHARP_) {
            return clojure.string.lower_case.call(null, cljs.core.name.call(null, p1__35776_SHARP_));
          };
        }(timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_), headers);
        var headers__$2 = taoensso.encore.assoc_some.call(null, headers__$1, "x-requested-with", cljs.core.get.call(null, headers__$1, "x-requested-with", "XMLHTTPRequest"));
        return cljs.core.clj__GT_js.call(null, headers__$2);
      }();
      var G__35803_35815 = xhr;
      goog.events.listenOnce(G__35803_35815, goog.net.EventType.READY, function(G__35803_35815, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_) {
        return function(_) {
          return cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(xhr);
        };
      }(G__35803_35815, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_));
      goog.events.listenOnce(G__35803_35815, goog.net.EventType.COMPLETE, function(G__35803_35815, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_) {
        return function taoensso$encore$ajax_lite_$_wrapped_callback_fn(resp) {
          var success_QMARK_ = xhr.isSuccess();
          var _status = xhr.getStatus();
          var vec__35809 = cljs.core.not_EQ_.call(null, _status, -1) ? function() {
            var _QMARK_content_type = xhr.getResponseHeader("content-type");
            var _QMARK_content = function() {
              var resp_type__$1 = cljs.core.not_EQ_.call(null, resp_type, new cljs.core.Keyword(null, "auto", "auto", -566279492)) ? resp_type : _QMARK_content_type == null ? new cljs.core.Keyword(null, "text", "text", -1790561697) : function() {
                var cts = clojure.string.lower_case.call(null, [cljs.core.str(_QMARK_content_type)].join(""));
                var match_QMARK_ = function(cts, _QMARK_content_type, success_QMARK_, _status, G__35803_35815, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_) {
                  return function(s) {
                    return taoensso.encore.str_contains_QMARK_.call(null, cts, s);
                  };
                }(cts, _QMARK_content_type, success_QMARK_, _status, G__35803_35815, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_);
                if (cljs.core.truth_(match_QMARK_.call(null, "/edn"))) {
                  return new cljs.core.Keyword(null, "edn", "edn", 1317840885);
                } else {
                  if (cljs.core.truth_(match_QMARK_.call(null, "/json"))) {
                    return new cljs.core.Keyword(null, "json", "json", 1279968570);
                  } else {
                    if (cljs.core.truth_(match_QMARK_.call(null, "/xml"))) {
                      return new cljs.core.Keyword(null, "xml", "xml", -1170142052);
                    } else {
                      return new cljs.core.Keyword(null, "text", "text", -1790561697);
                    }
                  }
                }
              }();
              try {
                var G__35813 = resp_type__$1 instanceof cljs.core.Keyword ? resp_type__$1.fqn : null;
                switch(G__35813) {
                  case "edn":
                    return taoensso.encore.read_edn.call(null, xhr.getResponseText());
                    break;
                  case "json":
                    return xhr.getResponseJson();
                    break;
                  case "xml":
                    return xhr.getResponseXml();
                    break;
                  case "text":
                    return xhr.getResponseText();
                    break;
                  default:
                    throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(resp_type__$1)].join(""));;
                }
              } catch (e35812) {
                if (e35812 instanceof Error) {
                  var _e = e35812;
                  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("ajax", "bad-response-type", "ajax/bad-response-type", 789441015), resp_type__$1, new cljs.core.Keyword("ajax", "resp-as-text", "ajax/resp-as-text", 141416819), xhr.getResponseText()], null);
                } else {
                  throw e35812;
                }
              }
            }();
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_status, _QMARK_content_type, _QMARK_content], null);
          }() : null;
          var _QMARK_status = cljs.core.nth.call(null, vec__35809, 0, null);
          var _QMARK_content_type = cljs.core.nth.call(null, vec__35809, 1, null);
          var _QMARK_content = cljs.core.nth.call(null, vec__35809, 2, null);
          return callback_fn.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "raw-resp", "raw-resp", -1924342506), resp, new cljs.core.Keyword(null, "xhr", "xhr", -177710851), xhr, new cljs.core.Keyword(null, "success?", "success?", -122854052), success_QMARK_, new cljs.core.Keyword(null, "?status", "?status", 938730360), _QMARK_status, new cljs.core.Keyword(null, "?content-type", "?content-type", -2129759049), _QMARK_content_type, new cljs.core.Keyword(null, "?content", 
          "?content", 1697782054), _QMARK_content, new cljs.core.Keyword(null, "?error", "?error", 1070752222), cljs.core.truth_(success_QMARK_) ? null : cljs.core.truth_(_QMARK_status) ? _QMARK_status : cljs.core.get.call(null, cljs.core.PersistentArrayMap.fromArray([goog.net.ErrorCode.NO_ERROR, null, goog.net.ErrorCode.EXCEPTION, new cljs.core.Keyword(null, "exception", "exception", -335277064), goog.net.ErrorCode.HTTP_ERROR, new cljs.core.Keyword(null, "http-error", "http-error", -1040049553), 
          goog.net.ErrorCode.ABORT, new cljs.core.Keyword(null, "abort", "abort", 521193198), goog.net.ErrorCode.TIMEOUT, new cljs.core.Keyword(null, "timeout", "timeout", -318625318)], true, false), xhr.getLastErrorCode(), new cljs.core.Keyword(null, "unknown", "unknown", -935977881))], null));
        };
      }(G__35803_35815, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_));
      var b2__20870__auto___35817__$1 = (new cljs.core.Keyword(null, "progress-fn", "progress-fn", -1146547855)).cljs$core$IFn$_invoke$arity$1(opts);
      if (cljs.core.truth_(b2__20870__auto___35817__$1)) {
        var pf_35818 = b2__20870__auto___35817__$1;
        goog.events.listen(xhr, goog.net.EventType.PROGRESS, function(pf_35818, b2__20870__auto___35817__$1, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_) {
          return function(ev) {
            var length_computable_QMARK_ = ev.lengthComputable;
            var loaded = ev.loaded;
            var total = ev.total;
            var _QMARK_ratio = cljs.core.truth_(function() {
              var and__8620__auto__ = length_computable_QMARK_;
              if (cljs.core.truth_(and__8620__auto__)) {
                return cljs.core.not_EQ_.call(null, total, 0);
              } else {
                return and__8620__auto__;
              }
            }()) ? loaded / total : null;
            return pf_35818.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "?ratio", "?ratio", -1275760831), _QMARK_ratio, new cljs.core.Keyword(null, "length-computable?", "length-computable?", 1915473276), length_computable_QMARK_, new cljs.core.Keyword(null, "loaded", "loaded", -1246482293), loaded, new cljs.core.Keyword(null, "total", "total", 1916810418), total, new cljs.core.Keyword(null, "ev", "ev", -406827324), ev], null));
          };
        }(pf_35818, b2__20870__auto___35817__$1, timeout_ms__$1, xhr_method, vec__35799, xhr_uri, xhr__QMARK_data, xhr_headers, xhr, b2__20870__auto__, map__35796, map__35796__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_));
      } else {
      }
      xhr.setTimeoutInterval(function() {
        var or__8632__auto__ = timeout_ms__$1;
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return 0;
        }
      }());
      if (cljs.core.truth_(with_credentials_QMARK_)) {
        xhr.setWithCredentials(true);
      } else {
      }
      xhr.send(xhr_uri, xhr_method, xhr__QMARK_data, xhr_headers);
      return xhr;
    } catch (e35798) {
      if (e35798 instanceof Error) {
        var e = e35798;
        cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(xhr);
        callback_fn.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "?error", "?error", 1070752222), e], null));
        return null;
      } else {
        throw e35798;
      }
    }
  } else {
    callback_fn.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "?error", "?error", 1070752222), new cljs.core.Keyword(null, "xhr-pool-depleted", "xhr-pool-depleted", -1812092376)], null));
    return null;
  }
};
taoensso.encore.url_encode = function taoensso$encore$url_encode(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, encodeURIComponent([cljs.core.str(s)].join(""), s), "*", "%2A"), "'", "%27");
  } else {
    return null;
  }
};
taoensso.encore.url_decode = function taoensso$encore$url_decode(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35825 = arguments.length;
  var i__9708__auto___35826 = 0;
  while (true) {
    if (i__9708__auto___35826 < len__9707__auto___35825) {
      args__9714__auto__.push(arguments[i__9708__auto___35826]);
      var G__35827 = i__9708__auto___35826 + 1;
      i__9708__auto___35826 = G__35827;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic = function(s, p__35821) {
  var vec__35822 = p__35821;
  var encoding = cljs.core.nth.call(null, vec__35822, 0, null);
  if (cljs.core.truth_(s)) {
    return decodeURIComponent(s);
  } else {
    return null;
  }
};
taoensso.encore.url_decode.cljs$lang$maxFixedArity = 1;
taoensso.encore.url_decode.cljs$lang$applyTo = function(seq35819) {
  var G__35820 = cljs.core.first.call(null, seq35819);
  var seq35819__$1 = cljs.core.next.call(null, seq35819);
  return taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic(G__35820, seq35819__$1);
};
taoensso.encore.format_query_string = function taoensso$encore$format_query_string(m) {
  var param = function(k, v) {
    return [cljs.core.str(taoensso.encore.url_encode.call(null, taoensso.encore.as_qname.call(null, k))), cljs.core.str("\x3d"), cljs.core.str(taoensso.encore.url_encode.call(null, function() {
      var or__8632__auto__ = taoensso.encore.as__QMARK_qname.call(null, v);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return [cljs.core.str(v)].join("");
      }
    }()))].join("");
  };
  var join = function(param) {
    return function(strs) {
      return clojure.string.join.call(null, "\x26", strs);
    };
  }(param);
  if (cljs.core.empty_QMARK_.call(null, m)) {
    return "";
  } else {
    return join.call(null, function() {
      var iter__9412__auto__ = function(param, join) {
        return function taoensso$encore$format_query_string_$_iter__35844(s__35845) {
          return new cljs.core.LazySeq(null, function(param, join) {
            return function() {
              var s__35845__$1 = s__35845;
              while (true) {
                var temp__4657__auto__ = cljs.core.seq.call(null, s__35845__$1);
                if (temp__4657__auto__) {
                  var s__35845__$2 = temp__4657__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__35845__$2)) {
                    var c__9410__auto__ = cljs.core.chunk_first.call(null, s__35845__$2);
                    var size__9411__auto__ = cljs.core.count.call(null, c__9410__auto__);
                    var b__35847 = cljs.core.chunk_buffer.call(null, size__9411__auto__);
                    if (function() {
                      var i__35846 = 0;
                      while (true) {
                        if (i__35846 < size__9411__auto__) {
                          var vec__35854 = cljs.core._nth.call(null, c__9410__auto__, i__35846);
                          var k = cljs.core.nth.call(null, vec__35854, 0, null);
                          var v = cljs.core.nth.call(null, vec__35854, 1, null);
                          if (taoensso.encore.some_QMARK_.call(null, v)) {
                            cljs.core.chunk_append.call(null, b__35847, cljs.core.sequential_QMARK_.call(null, v) ? join.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, param, k), function() {
                              var or__8632__auto__ = cljs.core.seq.call(null, v);
                              if (or__8632__auto__) {
                                return or__8632__auto__;
                              } else {
                                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                              }
                            }())) : param.call(null, k, v));
                            var G__35860 = i__35846 + 1;
                            i__35846 = G__35860;
                            continue;
                          } else {
                            var G__35861 = i__35846 + 1;
                            i__35846 = G__35861;
                            continue;
                          }
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__35847), taoensso$encore$format_query_string_$_iter__35844.call(null, cljs.core.chunk_rest.call(null, s__35845__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__35847), null);
                    }
                  } else {
                    var vec__35857 = cljs.core.first.call(null, s__35845__$2);
                    var k = cljs.core.nth.call(null, vec__35857, 0, null);
                    var v = cljs.core.nth.call(null, vec__35857, 1, null);
                    if (taoensso.encore.some_QMARK_.call(null, v)) {
                      return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, v) ? join.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, param, k), function() {
                        var or__8632__auto__ = cljs.core.seq.call(null, v);
                        if (or__8632__auto__) {
                          return or__8632__auto__;
                        } else {
                          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                        }
                      }())) : param.call(null, k, v), taoensso$encore$format_query_string_$_iter__35844.call(null, cljs.core.rest.call(null, s__35845__$2)));
                    } else {
                      var G__35862 = cljs.core.rest.call(null, s__35845__$2);
                      s__35845__$1 = G__35862;
                      continue;
                    }
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(param, join), null, null);
        };
      }(param, join);
      return iter__9412__auto__.call(null, m);
    }());
  }
};
taoensso.encore.assoc_conj = function taoensso$encore$assoc_conj(m, k, v) {
  return cljs.core.assoc.call(null, m, k, function() {
    var b2__20870__auto__ = cljs.core.get.call(null, m, k);
    if (cljs.core.truth_(b2__20870__auto__)) {
      var cur = b2__20870__auto__;
      if (cljs.core.vector_QMARK_.call(null, cur)) {
        return cljs.core.conj.call(null, cur, v);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cur, v], null);
      }
    } else {
      return v;
    }
  }());
};
taoensso.encore.parse_query_params = function taoensso$encore$parse_query_params(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___35872 = arguments.length;
  var i__9708__auto___35873 = 0;
  while (true) {
    if (i__9708__auto___35873 < len__9707__auto___35872) {
      args__9714__auto__.push(arguments[i__9708__auto___35873]);
      var G__35874 = i__9708__auto___35873 + 1;
      i__9708__auto___35873 = G__35874;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic = function(s, p__35865) {
  var vec__35866 = p__35865;
  var keywordize_QMARK_ = cljs.core.nth.call(null, vec__35866, 0, null);
  var encoding = cljs.core.nth.call(null, vec__35866, 1, null);
  if (clojure.string.blank_QMARK_.call(null, s) || !taoensso.encore.str_contains_QMARK_.call(null, s, "\x3d")) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    var s__$1 = taoensso.encore.str_starts_with_QMARK_.call(null, s, "?") ? cljs.core.subs.call(null, s, 1) : s;
    var m = cljs.core.reduce.call(null, function(s__$1, vec__35866, keywordize_QMARK_, encoding) {
      return function(m, param) {
        var b2__20870__auto__ = clojure.string.split.call(null, param, /=/, 2);
        if (cljs.core.truth_(b2__20870__auto__)) {
          var vec__35869 = b2__20870__auto__;
          var k = cljs.core.nth.call(null, vec__35869, 0, null);
          var v = cljs.core.nth.call(null, vec__35869, 1, null);
          return taoensso.encore.assoc_conj.call(null, m, taoensso.encore.url_decode.call(null, k, encoding), taoensso.encore.url_decode.call(null, v, encoding));
        } else {
          return m;
        }
      };
    }(s__$1, vec__35866, keywordize_QMARK_, encoding), cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, s__$1, /&/));
    if (cljs.core.truth_(keywordize_QMARK_)) {
      return taoensso.encore.map_keys.call(null, cljs.core.keyword, m);
    } else {
      return m;
    }
  }
};
taoensso.encore.parse_query_params.cljs$lang$maxFixedArity = 1;
taoensso.encore.parse_query_params.cljs$lang$applyTo = function(seq35863) {
  var G__35864 = cljs.core.first.call(null, seq35863);
  var seq35863__$1 = cljs.core.next.call(null, seq35863);
  return taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic(G__35864, seq35863__$1);
};
taoensso.encore.merge_url_with_query_string = function taoensso$encore$merge_url_with_query_string(url, m) {
  var vec__35878 = clojure.string.split.call(null, [cljs.core.str(url)].join(""), /\?/, 2);
  var url__$1 = cljs.core.nth.call(null, vec__35878, 0, null);
  var _QMARK_qstr = cljs.core.nth.call(null, vec__35878, 1, null);
  var qmap = taoensso.encore.merge.call(null, cljs.core.truth_(_QMARK_qstr) ? taoensso.encore.map_keys.call(null, cljs.core.keyword, taoensso.encore.parse_query_params.call(null, _QMARK_qstr)) : null, taoensso.encore.map_keys.call(null, cljs.core.keyword, m));
  var _QMARK_qstr__$1 = taoensso.encore.as__QMARK_nblank.call(null, taoensso.encore.format_query_string.call(null, qmap));
  var b2__20870__auto__ = _QMARK_qstr__$1;
  if (cljs.core.truth_(b2__20870__auto__)) {
    var qstr = b2__20870__auto__;
    return [cljs.core.str(url__$1), cljs.core.str("?"), cljs.core.str(qstr)].join("");
  } else {
    return url__$1;
  }
};
taoensso.encore._new_stubfn_ = function taoensso$encore$_new_stubfn_(name) {
  return cljs.core.volatile_BANG_.call(null, function() {
    var G__35881__delegate = function(args) {
      throw cljs.core.ex_info.call(null, "Attempting to call uninitialized stub fn", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "stub", "stub", 1339145807), name, new cljs.core.Keyword(null, "args", "args", 1315556576), args], null));
    };
    var G__35881 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__35882__i = 0, G__35882__a = new Array(arguments.length - 0);
        while (G__35882__i < G__35882__a.length) {
          G__35882__a[G__35882__i] = arguments[G__35882__i + 0];
          ++G__35882__i;
        }
        args = new cljs.core.IndexedSeq(G__35882__a, 0);
      }
      return G__35881__delegate.call(this, args);
    };
    G__35881.cljs$lang$maxFixedArity = 0;
    G__35881.cljs$lang$applyTo = function(arglist__35883) {
      var args = cljs.core.seq(arglist__35883);
      return G__35881__delegate(args);
    };
    G__35881.cljs$core$IFn$_invoke$arity$variadic = G__35881__delegate;
    return G__35881;
  }());
};
taoensso.encore._assert_unstub_val = function taoensso$encore$_assert_unstub_val(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
    return f;
  } else {
    throw cljs.core.ex_info.call(null, "Unstub value must be a fn", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "given", "given", 716253602), f, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, f)], null));
  }
};
taoensso.encore.compile_ns_filter = function() {
  var compile1 = function(x) {
    if (taoensso.encore.re_pattern_QMARK_.call(null, x)) {
      return function(ns_str) {
        return cljs.core.re_find.call(null, x, ns_str);
      };
    } else {
      if (typeof x === "string") {
        if (taoensso.encore.str_contains_QMARK_.call(null, x, "*")) {
          var re = cljs.core.re_pattern.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, [cljs.core.str("^"), cljs.core.str(x), cljs.core.str("$")].join(""), ".", "\\."), "*", "(.*)"));
          return function(re) {
            return function(ns_str) {
              return cljs.core.re_find.call(null, re, ns_str);
            };
          }(re);
        } else {
          return function(ns_str) {
            return cljs.core._EQ_.call(null, ns_str, x);
          };
        }
      } else {
        throw cljs.core.ex_info.call(null, "Unexpected ns-pattern type", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "given", "given", 716253602), x, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, x)], null));
      }
    }
  };
  return function(compile1) {
    return function() {
      var taoensso$encore$self = null;
      var taoensso$encore$self__1 = function(ns_pattern) {
        var x = ns_pattern;
        if (cljs.core.map_QMARK_.call(null, x)) {
          return taoensso$encore$self.call(null, (new cljs.core.Keyword(null, "whitelist", "whitelist", -979294437)).cljs$core$IFn$_invoke$arity$1(x), (new cljs.core.Keyword(null, "blacklist", "blacklist", 1248093170)).cljs$core$IFn$_invoke$arity$1(x));
        } else {
          if (cljs.core.vector_QMARK_.call(null, x) || cljs.core.set_QMARK_.call(null, x)) {
            return taoensso$encore$self.call(null, x, null);
          } else {
            if (cljs.core._EQ_.call(null, x, "*")) {
              return function(x, compile1) {
                return function(_QMARK_ns) {
                  return true;
                };
              }(x, compile1);
            } else {
              var match_QMARK_ = compile1.call(null, x);
              return function(match_QMARK_, x, compile1) {
                return function(_QMARK_ns) {
                  if (cljs.core.truth_(match_QMARK_.call(null, [cljs.core.str(_QMARK_ns)].join("")))) {
                    return true;
                  } else {
                    return null;
                  }
                };
              }(match_QMARK_, x, compile1);
            }
          }
        }
      };
      var taoensso$encore$self__2 = function(whitelist, blacklist) {
        var white = cljs.core.seq.call(null, whitelist) ? function() {
          var match_fns = cljs.core.mapv.call(null, compile1, whitelist);
          var vec__35892 = match_fns;
          var seq__35893 = cljs.core.seq.call(null, vec__35892);
          var first__35894 = cljs.core.first.call(null, seq__35893);
          var seq__35893__$1 = cljs.core.next.call(null, seq__35893);
          var m1 = first__35894;
          var mn = seq__35893__$1;
          if (mn) {
            return function(match_fns, vec__35892, seq__35893, first__35894, seq__35893__$1, m1, mn, compile1) {
              return function(ns_str) {
                return taoensso.encore.rsome.call(null, function(match_fns, vec__35892, seq__35893, first__35894, seq__35893__$1, m1, mn, compile1) {
                  return function(p1__35884_SHARP_) {
                    return p1__35884_SHARP_.call(null, ns_str);
                  };
                }(match_fns, vec__35892, seq__35893, first__35894, seq__35893__$1, m1, mn, compile1), match_fns);
              };
            }(match_fns, vec__35892, seq__35893, first__35894, seq__35893__$1, m1, mn, compile1);
          } else {
            return function(match_fns, vec__35892, seq__35893, first__35894, seq__35893__$1, m1, mn, compile1) {
              return function(ns_str) {
                return m1.call(null, ns_str);
              };
            }(match_fns, vec__35892, seq__35893, first__35894, seq__35893__$1, m1, mn, compile1);
          }
        }() : null;
        var black = cljs.core.seq.call(null, blacklist) ? function() {
          var match_fns = cljs.core.mapv.call(null, compile1, blacklist);
          var vec__35895 = match_fns;
          var seq__35896 = cljs.core.seq.call(null, vec__35895);
          var first__35897 = cljs.core.first.call(null, seq__35896);
          var seq__35896__$1 = cljs.core.next.call(null, seq__35896);
          var m1 = first__35897;
          var mn = seq__35896__$1;
          if (mn) {
            return function(match_fns, vec__35895, seq__35896, first__35897, seq__35896__$1, m1, mn, white, compile1) {
              return function(ns_str) {
                return cljs.core.not.call(null, taoensso.encore.rsome.call(null, function(match_fns, vec__35895, seq__35896, first__35897, seq__35896__$1, m1, mn, white, compile1) {
                  return function(p1__35885_SHARP_) {
                    return p1__35885_SHARP_.call(null, ns_str);
                  };
                }(match_fns, vec__35895, seq__35896, first__35897, seq__35896__$1, m1, mn, white, compile1), match_fns));
              };
            }(match_fns, vec__35895, seq__35896, first__35897, seq__35896__$1, m1, mn, white, compile1);
          } else {
            return function(match_fns, vec__35895, seq__35896, first__35897, seq__35896__$1, m1, mn, white, compile1) {
              return function(ns_str) {
                return cljs.core.not.call(null, m1.call(null, ns_str));
              };
            }(match_fns, vec__35895, seq__35896, first__35897, seq__35896__$1, m1, mn, white, compile1);
          }
        }() : null;
        if (cljs.core.truth_(function() {
          var and__8620__auto__ = white;
          if (cljs.core.truth_(and__8620__auto__)) {
            return black;
          } else {
            return and__8620__auto__;
          }
        }())) {
          return function(white, black, compile1) {
            return function(_QMARK_ns) {
              var ns_str = [cljs.core.str(_QMARK_ns)].join("");
              if (cljs.core.truth_(white.call(null, ns_str))) {
                if (cljs.core.truth_(black.call(null, ns_str))) {
                  return true;
                } else {
                  return null;
                }
              } else {
                return null;
              }
            };
          }(white, black, compile1);
        } else {
          if (cljs.core.truth_(white)) {
            return function(white, black, compile1) {
              return function(_QMARK_ns) {
                if (cljs.core.truth_(white.call(null, [cljs.core.str(_QMARK_ns)].join("")))) {
                  return true;
                } else {
                  return null;
                }
              };
            }(white, black, compile1);
          } else {
            if (cljs.core.truth_(black)) {
              return function(white, black, compile1) {
                return function(_QMARK_ns) {
                  if (cljs.core.truth_(black.call(null, [cljs.core.str(_QMARK_ns)].join("")))) {
                    return true;
                  } else {
                    return null;
                  }
                };
              }(white, black, compile1);
            } else {
              return function(white, black, compile1) {
                return function(_QMARK_ns) {
                  return true;
                };
              }(white, black, compile1);
            }
          }
        }
      };
      taoensso$encore$self = function(whitelist, blacklist) {
        switch(arguments.length) {
          case 1:
            return taoensso$encore$self__1.call(this, whitelist);
          case 2:
            return taoensso$encore$self__2.call(this, whitelist, blacklist);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      taoensso$encore$self.cljs$core$IFn$_invoke$arity$1 = taoensso$encore$self__1;
      taoensso$encore$self.cljs$core$IFn$_invoke$arity$2 = taoensso$encore$self__2;
      return taoensso$encore$self;
    }();
  }(compile1);
}();
taoensso.encore.ITimeoutImpl = function() {
};
taoensso.encore._schedule_timeout = function taoensso$encore$_schedule_timeout(_, msecs, f) {
  if (!(_ == null) && !(_.taoensso$encore$ITimeoutImpl$_schedule_timeout$arity$3 == null)) {
    return _.taoensso$encore$ITimeoutImpl$_schedule_timeout$arity$3(_, msecs, f);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.encore._schedule_timeout[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _, msecs, f);
    } else {
      var m__9296__auto____$1 = taoensso.encore._schedule_timeout["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _, msecs, f);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITimeoutImpl.-schedule-timeout", _);
      }
    }
  }
};
taoensso.encore.DefaultTimeoutImpl = function() {
};
taoensso.encore.DefaultTimeoutImpl.prototype.taoensso$encore$ITimeoutImpl$ = true;
taoensso.encore.DefaultTimeoutImpl.prototype.taoensso$encore$ITimeoutImpl$_schedule_timeout$arity$3 = function(_, msecs, f) {
  var self__ = this;
  var ___$1 = this;
  return window.setTimeout(f, msecs);
};
taoensso.encore.DefaultTimeoutImpl.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.encore.DefaultTimeoutImpl.cljs$lang$type = true;
taoensso.encore.DefaultTimeoutImpl.cljs$lang$ctorStr = "taoensso.encore/DefaultTimeoutImpl";
taoensso.encore.DefaultTimeoutImpl.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/DefaultTimeoutImpl");
};
taoensso.encore.__GT_DefaultTimeoutImpl = function taoensso$encore$__GT_DefaultTimeoutImpl() {
  return new taoensso.encore.DefaultTimeoutImpl;
};
if (typeof taoensso.encore.default_timeout_impl_ !== "undefined") {
} else {
  taoensso.encore.default_timeout_impl_ = new cljs.core.Delay(function() {
    return new taoensso.encore.DefaultTimeoutImpl;
  }, null);
}
taoensso.encore._tout_pending = {};
taoensso.encore._tout_cancelled = {};
taoensso.encore.tout_result = function taoensso$encore$tout_result(result_) {
  if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, result_, taoensso.encore._tout_pending))) {
    return new cljs.core.Keyword("timeout", "pending", "timeout/pending", -1523854352);
  } else {
    if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, result_, taoensso.encore._tout_cancelled))) {
      return new cljs.core.Keyword("timeout", "cancelled", "timeout/cancelled", 1188007279);
    } else {
      return cljs.core.deref.call(null, result_);
    }
  }
};
taoensso.encore.ITimeoutFuture = function() {
};
taoensso.encore.tf_state = function taoensso$encore$tf_state(_) {
  if (!(_ == null) && !(_.taoensso$encore$ITimeoutFuture$tf_state$arity$1 == null)) {
    return _.taoensso$encore$ITimeoutFuture$tf_state$arity$1(_);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.encore.tf_state[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _);
    } else {
      var m__9296__auto____$1 = taoensso.encore.tf_state["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITimeoutFuture.tf-state", _);
      }
    }
  }
};
taoensso.encore.tf_poll = function taoensso$encore$tf_poll(_) {
  if (!(_ == null) && !(_.taoensso$encore$ITimeoutFuture$tf_poll$arity$1 == null)) {
    return _.taoensso$encore$ITimeoutFuture$tf_poll$arity$1(_);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.encore.tf_poll[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _);
    } else {
      var m__9296__auto____$1 = taoensso.encore.tf_poll["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITimeoutFuture.tf-poll", _);
      }
    }
  }
};
taoensso.encore.tf_done_QMARK_ = function taoensso$encore$tf_done_QMARK_(_) {
  if (!(_ == null) && !(_.taoensso$encore$ITimeoutFuture$tf_done_QMARK_$arity$1 == null)) {
    return _.taoensso$encore$ITimeoutFuture$tf_done_QMARK_$arity$1(_);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.encore.tf_done_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _);
    } else {
      var m__9296__auto____$1 = taoensso.encore.tf_done_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITimeoutFuture.tf-done?", _);
      }
    }
  }
};
taoensso.encore.tf_pending_QMARK_ = function taoensso$encore$tf_pending_QMARK_(_) {
  if (!(_ == null) && !(_.taoensso$encore$ITimeoutFuture$tf_pending_QMARK_$arity$1 == null)) {
    return _.taoensso$encore$ITimeoutFuture$tf_pending_QMARK_$arity$1(_);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.encore.tf_pending_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _);
    } else {
      var m__9296__auto____$1 = taoensso.encore.tf_pending_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITimeoutFuture.tf-pending?", _);
      }
    }
  }
};
taoensso.encore.tf_cancelled_QMARK_ = function taoensso$encore$tf_cancelled_QMARK_(_) {
  if (!(_ == null) && !(_.taoensso$encore$ITimeoutFuture$tf_cancelled_QMARK_$arity$1 == null)) {
    return _.taoensso$encore$ITimeoutFuture$tf_cancelled_QMARK_$arity$1(_);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.encore.tf_cancelled_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _);
    } else {
      var m__9296__auto____$1 = taoensso.encore.tf_cancelled_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITimeoutFuture.tf-cancelled?", _);
      }
    }
  }
};
taoensso.encore.tf_cancel_BANG_ = function taoensso$encore$tf_cancel_BANG_(_) {
  if (!(_ == null) && !(_.taoensso$encore$ITimeoutFuture$tf_cancel_BANG_$arity$1 == null)) {
    return _.taoensso$encore$ITimeoutFuture$tf_cancel_BANG_$arity$1(_);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.encore.tf_cancel_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _);
    } else {
      var m__9296__auto____$1 = taoensso.encore.tf_cancel_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITimeoutFuture.tf-cancel!", _);
      }
    }
  }
};
taoensso.encore.TimeoutFuture = function(f, result__, udt) {
  this.f = f;
  this.result__ = result__;
  this.udt = udt;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
taoensso.encore.TimeoutFuture.prototype.taoensso$encore$ITimeoutFuture$ = true;
taoensso.encore.TimeoutFuture.prototype.taoensso$encore$ITimeoutFuture$tf_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), self__.f, new cljs.core.Keyword(null, "udt", "udt", 2011712751), self__.udt], null);
};
taoensso.encore.TimeoutFuture.prototype.taoensso$encore$ITimeoutFuture$tf_poll$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.encore.tout_result.call(null, cljs.core.deref.call(null, self__.result__));
};
taoensso.encore.TimeoutFuture.prototype.taoensso$encore$ITimeoutFuture$tf_done_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.deref.call(null, self__.result__), taoensso.encore._tout_pending));
};
taoensso.encore.TimeoutFuture.prototype.taoensso$encore$ITimeoutFuture$tf_pending_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.deref.call(null, self__.result__), taoensso.encore._tout_pending);
};
taoensso.encore.TimeoutFuture.prototype.taoensso$encore$ITimeoutFuture$tf_cancelled_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.deref.call(null, self__.result__), taoensso.encore._tout_cancelled);
};
taoensso.encore.TimeoutFuture.prototype.taoensso$encore$ITimeoutFuture$tf_cancel_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.compare_and_set_BANG_.call(null, self__.result__, taoensso.encore._tout_pending, taoensso.encore._tout_cancelled);
};
taoensso.encore.TimeoutFuture.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(t) {
  var self__ = this;
  var t__$1 = this;
  return taoensso.encore.tf_done_QMARK_.call(null, t__$1);
};
taoensso.encore.TimeoutFuture.prototype.cljs$core$IDeref$_deref$arity$1 = function(t) {
  var self__ = this;
  var t__$1 = this;
  return taoensso.encore.tf_poll.call(null, t__$1);
};
taoensso.encore.TimeoutFuture.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "result__", "result__", 1529131748, null), new cljs.core.Symbol(null, "udt", "udt", -642723018, null)], null);
};
taoensso.encore.TimeoutFuture.cljs$lang$type = true;
taoensso.encore.TimeoutFuture.cljs$lang$ctorStr = "taoensso.encore/TimeoutFuture";
taoensso.encore.TimeoutFuture.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.encore/TimeoutFuture");
};
taoensso.encore.__GT_TimeoutFuture = function taoensso$encore$__GT_TimeoutFuture(f, result__, udt) {
  return new taoensso.encore.TimeoutFuture(f, result__, udt);
};
taoensso.encore.timeout_future_QMARK_ = function taoensso$encore$timeout_future_QMARK_(x) {
  return x instanceof taoensso.encore.TimeoutFuture;
};
taoensso.encore.call_after_timeout = function taoensso$encore$call_after_timeout(var_args) {
  var args35902 = [];
  var len__9707__auto___35905 = arguments.length;
  var i__9708__auto___35906 = 0;
  while (true) {
    if (i__9708__auto___35906 < len__9707__auto___35905) {
      args35902.push(arguments[i__9708__auto___35906]);
      var G__35907 = i__9708__auto___35906 + 1;
      i__9708__auto___35906 = G__35907;
      continue;
    } else {
    }
    break;
  }
  var G__35904 = args35902.length;
  switch(G__35904) {
    case 2:
      return taoensso.encore.call_after_timeout.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.call_after_timeout.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35902.length)].join(""));;
  }
};
taoensso.encore.call_after_timeout.cljs$core$IFn$_invoke$arity$2 = function(msecs, f) {
  return taoensso.encore.call_after_timeout.call(null, taoensso.encore.default_timeout_impl_, msecs, f);
};
taoensso.encore.call_after_timeout.cljs$core$IFn$_invoke$arity$3 = function(impl_, msecs, f) {
  var msecs__$1 = cljs.core.long$.call(null, msecs);
  var udt = (new Date).getTime() + msecs__$1;
  var result__ = cljs.core.atom.call(null, taoensso.encore._tout_pending);
  var cas_f = function(msecs__$1, udt, result__) {
    return function() {
      var result_ = new cljs.core.Delay(function(msecs__$1, udt, result__) {
        return function() {
          return f.call(null);
        };
      }(msecs__$1, udt, result__), null);
      if (cljs.core.truth_(cljs.core.compare_and_set_BANG_.call(null, result__, taoensso.encore._tout_pending, result_))) {
        return cljs.core.deref.call(null, result_);
      } else {
        return null;
      }
    };
  }(msecs__$1, udt, result__);
  var impl_35909 = cljs.core.force.call(null, impl_);
  taoensso.encore._schedule_timeout.call(null, impl_35909, msecs__$1, cas_f);
  return new taoensso.encore.TimeoutFuture(f, result__, udt);
};
taoensso.encore.call_after_timeout.cljs$lang$maxFixedArity = 3;
taoensso.encore.fixture_map__GT_fn = function taoensso$encore$fixture_map__GT_fn(p__35911) {
  var map__35914 = p__35911;
  var map__35914__$1 = (!(map__35914 == null) ? map__35914.cljs$lang$protocol_mask$partition0$ & 64 || map__35914.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__35914) : map__35914;
  var before = cljs.core.get.call(null, map__35914__$1, new cljs.core.Keyword(null, "before", "before", -1633692388), new cljs.core.Symbol(null, "do", "do", 1686842252, null));
  var after = cljs.core.get.call(null, map__35914__$1, new cljs.core.Keyword(null, "after", "after", 594996914), new cljs.core.Symbol(null, "do", "do", 1686842252, null));
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
    var x__9466__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "f__35910__auto__", "f__35910__auto__", -2061411953, null))))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), function() {
    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
      var x__9466__auto__ = before;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), function() {
    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "f__35910__auto__", "f__35910__auto__", -2061411953, null)))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }(), function() {
    var x__9466__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
      var x__9466__auto__ = after;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__9466__auto__);
  }())));
};
taoensso.encore.get_window_location = taoensso.encore.get_win_loc;
taoensso.encore.backport_run_BANG_ = taoensso.encore.run_BANG_;
taoensso.encore.fq_name = taoensso.encore.as_qname;
taoensso.encore.qname = taoensso.encore.as_qname;
taoensso.encore.merge_deep_with = taoensso.encore.nested_merge_with;
taoensso.encore.merge_deep = taoensso.encore.nested_merge;
taoensso.encore.parse_bool = taoensso.encore.as__QMARK_bool;
taoensso.encore.parse_int = taoensso.encore.as__QMARK_int;
taoensso.encore.parse_float = taoensso.encore.as__QMARK_float;
taoensso.encore.swapped_STAR_ = taoensso.encore.swapped;
taoensso.encore.memoize_a0_ = taoensso.encore.memoize_;
taoensso.encore.memoize_a1_ = taoensso.encore.memoize_;
taoensso.encore.a0_memoize_ = taoensso.encore.memoize_;
taoensso.encore.a1_memoize_ = taoensso.encore.memoize_;
taoensso.encore.memoize_1 = taoensso.encore.memoize_last;
taoensso.encore.memoize1 = taoensso.encore.memoize_last;
taoensso.encore.nnil_QMARK_ = taoensso.encore.some_QMARK_;
taoensso.encore.nneg_num_QMARK_ = taoensso.encore.nat_num_QMARK_;
taoensso.encore.nneg_int_QMARK_ = taoensso.encore.nat_int_QMARK_;
taoensso.encore.nneg_float_QMARK_ = taoensso.encore.nat_float_QMARK_;
taoensso.encore.uint_QMARK_ = taoensso.encore.nat_int_QMARK_;
taoensso.encore.pint_QMARK_ = taoensso.encore.pos_int_QMARK_;
taoensso.encore.nnil_EQ_ = taoensso.encore.some_EQ_;
taoensso.encore.as__QMARK_uint = taoensso.encore.as__QMARK_nat_int;
taoensso.encore.as__QMARK_pint = taoensso.encore.as__QMARK_pos_int;
taoensso.encore.as__QMARK_ufloat = taoensso.encore.as__QMARK_nat_float;
taoensso.encore.as__QMARK_pfloat = taoensso.encore.as__QMARK_pos_float;
taoensso.encore.as_uint = taoensso.encore.as_nat_int;
taoensso.encore.as_pint = taoensso.encore.as_pos_int;
taoensso.encore.as_ufloat = taoensso.encore.as_nat_float;
taoensso.encore.as_pfloat = taoensso.encore.as_pos_float;
taoensso.encore.run_BANG__STAR_ = taoensso.encore.run_BANG_;
taoensso.encore.every = taoensso.encore.revery;
taoensso.encore._QMARK_subvec_LT_idx = cljs.core.comp.call(null, cljs.core.not_empty, taoensso.encore.get_subvec);
taoensso.encore._QMARK_subvec_LT_len = cljs.core.comp.call(null, cljs.core.not_empty, taoensso.encore.get_subvector);
taoensso.encore._QMARK_substr_LT_idx = cljs.core.comp.call(null, taoensso.encore.as__QMARK_nempty_str, taoensso.encore.get_substr);
taoensso.encore._QMARK_substr_LT_len = cljs.core.comp.call(null, taoensso.encore.as__QMARK_nempty_str, taoensso.encore.get_substring);
taoensso.encore.dswap_BANG_ = taoensso.encore.swap_in_BANG__STAR_;
taoensso.encore.nano_time = taoensso.encore.now_nano;
taoensso.encore.swap_BANG__STAR_ = taoensso.encore.swap_in_BANG__STAR_;
taoensso.encore._swap_cache_BANG_ = taoensso.encore._swap_val_BANG_;
taoensso.encore._unswapped = taoensso.encore.swapped_vec;
taoensso.encore._vswapped = taoensso.encore.swapped_vec;
taoensso.encore._swap_k_BANG_ = taoensso.encore._swap_val_BANG_;
taoensso.encore.update_in_STAR_ = taoensso.encore.update_in;
taoensso.encore.undefined__GT_nil = function taoensso$encore$undefined__GT_nil(x) {
  if (void 0 === x) {
    return null;
  } else {
    return x;
  }
};
taoensso.encore.spaced_str_with_nils = function taoensso$encore$spaced_str_with_nils(xs) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, xs));
};
taoensso.encore.spaced_str = function taoensso$encore$spaced_str(xs) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.undefined__GT_nil, xs));
};
taoensso.encore.round = function taoensso$encore$round(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36048 = arguments.length;
  var i__9708__auto___36049 = 0;
  while (true) {
    if (i__9708__auto___36049 < len__9707__auto___36048) {
      args__9714__auto__.push(arguments[i__9708__auto___36049]);
      var G__36050 = i__9708__auto___36049 + 1;
      i__9708__auto___36049 = G__36050;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic = function(n, p__35927) {
  var vec__35928 = p__35927;
  var type = cljs.core.nth.call(null, vec__35928, 0, null);
  var nplaces = cljs.core.nth.call(null, vec__35928, 1, null);
  return taoensso.encore.round_STAR_.call(null, function() {
    var or__8632__auto__ = type;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return new cljs.core.Keyword(null, "round", "round", 2009433328);
    }
  }(), nplaces, n);
};
taoensso.encore.round.cljs$lang$maxFixedArity = 1;
taoensso.encore.round.cljs$lang$applyTo = function(seq35925) {
  var G__35926 = cljs.core.first.call(null, seq35925);
  var seq35925__$1 = cljs.core.next.call(null, seq35925);
  return taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic(G__35926, seq35925__$1);
};
taoensso.encore.approx_EQ_ = function taoensso$encore$approx_EQ_(var_args) {
  var args35931 = [];
  var len__9707__auto___36051 = arguments.length;
  var i__9708__auto___36052 = 0;
  while (true) {
    if (i__9708__auto___36052 < len__9707__auto___36051) {
      args35931.push(arguments[i__9708__auto___36052]);
      var G__36053 = i__9708__auto___36052 + 1;
      i__9708__auto___36052 = G__36053;
      continue;
    } else {
    }
    break;
  }
  var G__35933 = args35931.length;
  switch(G__35933) {
    case 2:
      return taoensso.encore.approx_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.approx_EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35931.length)].join(""));;
  }
};
taoensso.encore.approx_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return taoensso.encore.approx_EQ__EQ_.call(null, x, y);
};
taoensso.encore.approx_EQ_.cljs$core$IFn$_invoke$arity$3 = function(x, y, signf) {
  return taoensso.encore.approx_EQ__EQ_.call(null, signf, x, y);
};
taoensso.encore.approx_EQ_.cljs$lang$maxFixedArity = 3;
taoensso.encore.join_once = function taoensso$encore$join_once(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36055 = arguments.length;
  var i__9708__auto___36056 = 0;
  while (true) {
    if (i__9708__auto___36056 < len__9707__auto___36055) {
      args__9714__auto__.push(arguments[i__9708__auto___36056]);
      var G__36057 = i__9708__auto___36056 + 1;
      i__9708__auto___36056 = G__36057;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic = function(sep, coll) {
  return taoensso.encore.str_join_once.call(null, sep, coll);
};
taoensso.encore.join_once.cljs$lang$maxFixedArity = 1;
taoensso.encore.join_once.cljs$lang$applyTo = function(seq35934) {
  var G__35935 = cljs.core.first.call(null, seq35934);
  var seq35934__$1 = cljs.core.next.call(null, seq35934);
  return taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic(G__35935, seq35934__$1);
};
taoensso.encore.keys_EQ_ = function taoensso$encore$keys_EQ_(m, ks) {
  return taoensso.encore.ks_EQ_.call(null, ks, m);
};
taoensso.encore.keys_LT__EQ_ = function taoensso$encore$keys_LT__EQ_(m, ks) {
  return taoensso.encore.ks_LT__EQ_.call(null, ks, m);
};
taoensso.encore.keys_GT__EQ_ = function taoensso$encore$keys_GT__EQ_(m, ks) {
  return taoensso.encore.ks_GT__EQ_.call(null, ks, m);
};
taoensso.encore.keys_EQ_nnil_QMARK_ = function taoensso$encore$keys_EQ_nnil_QMARK_(m, ks) {
  return taoensso.encore.ks_nnil_QMARK_.call(null, ks, m);
};
taoensso.encore.rate_limiter_STAR_ = function taoensso$encore$rate_limiter_STAR_(specs) {
  var ids_QMARK_ = taoensso.encore.rsome.call(null, function(p__35943) {
    var vec__35944 = p__35943;
    var _ = cljs.core.nth.call(null, vec__35944, 0, null);
    var ___$1 = cljs.core.nth.call(null, vec__35944, 1, null);
    var id = cljs.core.nth.call(null, vec__35944, 2, null);
    return id;
  }, specs);
  var lfn = taoensso.encore.limiter.call(null, specs);
  return function(ids_QMARK_, lfn) {
    return function() {
      var G__36058__delegate = function(args) {
        var b2__20870__auto__ = cljs.core.apply.call(null, lfn, args);
        if (cljs.core.truth_(b2__20870__auto__)) {
          var vec__35947 = b2__20870__auto__;
          var worst_sid = cljs.core.nth.call(null, vec__35947, 0, null);
          var backoff_ms = cljs.core.nth.call(null, vec__35947, 1, null);
          if (cljs.core.truth_(ids_QMARK_)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [backoff_ms, worst_sid], null);
          } else {
            return backoff_ms;
          }
        } else {
          return null;
        }
      };
      var G__36058 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__36059__i = 0, G__36059__a = new Array(arguments.length - 0);
          while (G__36059__i < G__36059__a.length) {
            G__36059__a[G__36059__i] = arguments[G__36059__i + 0];
            ++G__36059__i;
          }
          args = new cljs.core.IndexedSeq(G__36059__a, 0);
        }
        return G__36058__delegate.call(this, args);
      };
      G__36058.cljs$lang$maxFixedArity = 0;
      G__36058.cljs$lang$applyTo = function(arglist__36060) {
        var args = cljs.core.seq(arglist__36060);
        return G__36058__delegate(args);
      };
      G__36058.cljs$core$IFn$_invoke$arity$variadic = G__36058__delegate;
      return G__36058;
    }();
  }(ids_QMARK_, lfn);
};
taoensso.encore.rate_limit = function taoensso$encore$rate_limit(specs, f) {
  var rl = taoensso.encore.rate_limiter_STAR_.call(null, specs);
  return function(rl) {
    return function() {
      var G__36061__delegate = function(args) {
        var b2__20870__auto__ = rl.call(null);
        if (cljs.core.truth_(b2__20870__auto__)) {
          var backoff = b2__20870__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, backoff], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), null], null);
        }
      };
      var G__36061 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__36062__i = 0, G__36062__a = new Array(arguments.length - 0);
          while (G__36062__i < G__36062__a.length) {
            G__36062__a[G__36062__i] = arguments[G__36062__i + 0];
            ++G__36062__i;
          }
          args = new cljs.core.IndexedSeq(G__36062__a, 0);
        }
        return G__36061__delegate.call(this, args);
      };
      G__36061.cljs$lang$maxFixedArity = 0;
      G__36061.cljs$lang$applyTo = function(arglist__36063) {
        var args = cljs.core.seq(arglist__36063);
        return G__36061__delegate(args);
      };
      G__36061.cljs$core$IFn$_invoke$arity$variadic = G__36061__delegate;
      return G__36061;
    }();
  }(rl);
};
taoensso.encore.rate_limiter = function taoensso$encore$rate_limiter(ncalls_limit, window_ms) {
  return taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls_limit, window_ms], null)], null));
};
taoensso.encore.rate_limited = function taoensso$encore$rate_limited(ncalls_limit, window_ms, f) {
  var rl = taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls_limit, window_ms], null)], null));
  return function(rl) {
    return function() {
      var G__36064__delegate = function(args) {
        var b2__20870__auto__ = rl.call(null);
        if (cljs.core.truth_(b2__20870__auto__)) {
          var backoff_ms = b2__20870__auto__;
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "backoff-ms", "backoff-ms", 1679281507), backoff_ms], null);
        } else {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "result", "result", 1415092211), f.call(null)], null);
        }
      };
      var G__36064 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__36065__i = 0, G__36065__a = new Array(arguments.length - 0);
          while (G__36065__i < G__36065__a.length) {
            G__36065__a[G__36065__i] = arguments[G__36065__i + 0];
            ++G__36065__i;
          }
          args = new cljs.core.IndexedSeq(G__36065__a, 0);
        }
        return G__36064__delegate.call(this, args);
      };
      G__36064.cljs$lang$maxFixedArity = 0;
      G__36064.cljs$lang$applyTo = function(arglist__36066) {
        var args = cljs.core.seq(arglist__36066);
        return G__36064__delegate(args);
      };
      G__36064.cljs$core$IFn$_invoke$arity$variadic = G__36064__delegate;
      return G__36064;
    }();
  }(rl);
};
taoensso.encore.logging_level = cljs.core.atom.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
taoensso.encore.set_exp_backoff_timeout_BANG_ = function taoensso$encore$set_exp_backoff_timeout_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36067 = arguments.length;
  var i__9708__auto___36068 = 0;
  while (true) {
    if (i__9708__auto___36068 < len__9707__auto___36067) {
      args__9714__auto__.push(arguments[i__9708__auto___36068]);
      var G__36069 = i__9708__auto___36068 + 1;
      i__9708__auto___36068 = G__36069;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(nullary_f, p__35952) {
  var vec__35953 = p__35952;
  var nattempt = cljs.core.nth.call(null, vec__35953, 0, null);
  var b2__20870__auto__ = taoensso.encore.js__QMARK_win;
  if (cljs.core.truth_(b2__20870__auto__)) {
    var js_win = b2__20870__auto__;
    return js_win.setTimeout(nullary_f, taoensso.encore.exp_backoff.call(null, function() {
      var or__8632__auto__ = nattempt;
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return 0;
      }
    }()));
  } else {
    return null;
  }
};
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$lang$applyTo = function(seq35950) {
  var G__35951 = cljs.core.first.call(null, seq35950);
  var seq35950__$1 = cljs.core.next.call(null, seq35950);
  return taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__35951, seq35950__$1);
};
if (typeof taoensso.encore._STAR_log_level_STAR_ !== "undefined") {
} else {
  taoensso.encore._STAR_log_level_STAR_ = new cljs.core.Keyword(null, "debug", "debug", -1608172596);
}
taoensso.encore.log_QMARK_ = function() {
  var __GT_n = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), 1, new cljs.core.Keyword(null, "debug", "debug", -1608172596), 2, new cljs.core.Keyword(null, "info", "info", -317069002), 3, new cljs.core.Keyword(null, "warn", "warn", -436710552), 4, new cljs.core.Keyword(null, "error", "error", -978969032), 5, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), 6, new cljs.core.Keyword(null, "report", "report", 1394055010), 7], null);
  return function(__GT_n) {
    return function(level) {
      return __GT_n.call(null, level) >= __GT_n.call(null, taoensso.encore._STAR_log_level_STAR_);
    };
  }(__GT_n);
}();
taoensso.encore.tracef = function taoensso$encore$tracef(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36070 = arguments.length;
  var i__9708__auto___36071 = 0;
  while (true) {
    if (i__9708__auto___36071 < len__9707__auto___36070) {
      args__9714__auto__.push(arguments[i__9708__auto___36071]);
      var G__36072 = i__9708__auto___36071 + 1;
      i__9708__auto___36071 = G__36072;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "trace", "trace", -1082747415)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.tracef.cljs$lang$maxFixedArity = 1;
taoensso.encore.tracef.cljs$lang$applyTo = function(seq35956) {
  var G__35957 = cljs.core.first.call(null, seq35956);
  var seq35956__$1 = cljs.core.next.call(null, seq35956);
  return taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic(G__35957, seq35956__$1);
};
taoensso.encore.debugf = function taoensso$encore$debugf(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36073 = arguments.length;
  var i__9708__auto___36074 = 0;
  while (true) {
    if (i__9708__auto___36074 < len__9707__auto___36073) {
      args__9714__auto__.push(arguments[i__9708__auto___36074]);
      var G__36075 = i__9708__auto___36074 + 1;
      i__9708__auto___36074 = G__36075;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.debugf.cljs$lang$maxFixedArity = 1;
taoensso.encore.debugf.cljs$lang$applyTo = function(seq35958) {
  var G__35959 = cljs.core.first.call(null, seq35958);
  var seq35958__$1 = cljs.core.next.call(null, seq35958);
  return taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic(G__35959, seq35958__$1);
};
taoensso.encore.infof = function taoensso$encore$infof(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36076 = arguments.length;
  var i__9708__auto___36077 = 0;
  while (true) {
    if (i__9708__auto___36077 < len__9707__auto___36076) {
      args__9714__auto__.push(arguments[i__9708__auto___36077]);
      var G__36078 = i__9708__auto___36077 + 1;
      i__9708__auto___36077 = G__36078;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "info", "info", -317069002)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.infof.cljs$lang$maxFixedArity = 1;
taoensso.encore.infof.cljs$lang$applyTo = function(seq35960) {
  var G__35961 = cljs.core.first.call(null, seq35960);
  var seq35960__$1 = cljs.core.next.call(null, seq35960);
  return taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic(G__35961, seq35960__$1);
};
taoensso.encore.warnf = function taoensso$encore$warnf(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36079 = arguments.length;
  var i__9708__auto___36080 = 0;
  while (true) {
    if (i__9708__auto___36080 < len__9707__auto___36079) {
      args__9714__auto__.push(arguments[i__9708__auto___36080]);
      var G__36081 = i__9708__auto___36080 + 1;
      i__9708__auto___36080 = G__36081;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "warn", "warn", -436710552)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("WARN: "), cljs.core.str(fmt)].join(""), xs);
  } else {
    return null;
  }
};
taoensso.encore.warnf.cljs$lang$maxFixedArity = 1;
taoensso.encore.warnf.cljs$lang$applyTo = function(seq35962) {
  var G__35963 = cljs.core.first.call(null, seq35962);
  var seq35962__$1 = cljs.core.next.call(null, seq35962);
  return taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic(G__35963, seq35962__$1);
};
taoensso.encore.errorf = function taoensso$encore$errorf(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36082 = arguments.length;
  var i__9708__auto___36083 = 0;
  while (true) {
    if (i__9708__auto___36083 < len__9707__auto___36082) {
      args__9714__auto__.push(arguments[i__9708__auto___36083]);
      var G__36084 = i__9708__auto___36083 + 1;
      i__9708__auto___36083 = G__36084;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("ERROR: "), cljs.core.str(fmt)].join(""), xs);
  } else {
    return null;
  }
};
taoensso.encore.errorf.cljs$lang$maxFixedArity = 1;
taoensso.encore.errorf.cljs$lang$applyTo = function(seq35964) {
  var G__35965 = cljs.core.first.call(null, seq35964);
  var seq35964__$1 = cljs.core.next.call(null, seq35964);
  return taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic(G__35965, seq35964__$1);
};
taoensso.encore.fatalf = function taoensso$encore$fatalf(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36085 = arguments.length;
  var i__9708__auto___36086 = 0;
  while (true) {
    if (i__9708__auto___36086 < len__9707__auto___36085) {
      args__9714__auto__.push(arguments[i__9708__auto___36086]);
      var G__36087 = i__9708__auto___36086 + 1;
      i__9708__auto___36086 = G__36087;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("FATAL: "), cljs.core.str(fmt)].join(""), xs);
  } else {
    return null;
  }
};
taoensso.encore.fatalf.cljs$lang$maxFixedArity = 1;
taoensso.encore.fatalf.cljs$lang$applyTo = function(seq35966) {
  var G__35967 = cljs.core.first.call(null, seq35966);
  var seq35966__$1 = cljs.core.next.call(null, seq35966);
  return taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic(G__35967, seq35966__$1);
};
taoensso.encore.reportf = function taoensso$encore$reportf(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36088 = arguments.length;
  var i__9708__auto___36089 = 0;
  while (true) {
    if (i__9708__auto___36089 < len__9707__auto___36088) {
      args__9714__auto__.push(arguments[i__9708__auto___36089]);
      var G__36090 = i__9708__auto___36089 + 1;
      i__9708__auto___36089 = G__36090;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "report", "report", 1394055010)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.reportf.cljs$lang$maxFixedArity = 1;
taoensso.encore.reportf.cljs$lang$applyTo = function(seq35968) {
  var G__35969 = cljs.core.first.call(null, seq35968);
  var seq35968__$1 = cljs.core.next.call(null, seq35968);
  return taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic(G__35969, seq35968__$1);
};
taoensso.encore.greatest = function taoensso$encore$greatest(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36091 = arguments.length;
  var i__9708__auto___36092 = 0;
  while (true) {
    if (i__9708__auto___36092 < len__9707__auto___36091) {
      args__9714__auto__.push(arguments[i__9708__auto___36092]);
      var G__36093 = i__9708__auto___36092 + 1;
      i__9708__auto___36092 = G__36093;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic = function(coll, p__35972) {
  var vec__35973 = p__35972;
  var _QMARK_comparator = cljs.core.nth.call(null, vec__35973, 0, null);
  var comparator = function() {
    var or__8632__auto__ = _QMARK_comparator;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return taoensso.encore.rcompare;
    }
  }();
  return cljs.core.reduce.call(null, function(comparator, vec__35973, _QMARK_comparator) {
    return function(p1__35916_SHARP_, p2__35917_SHARP_) {
      if (comparator.call(null, p1__35916_SHARP_, p2__35917_SHARP_) > 0) {
        return p2__35917_SHARP_;
      } else {
        return p1__35916_SHARP_;
      }
    };
  }(comparator, vec__35973, _QMARK_comparator), coll);
};
taoensso.encore.greatest.cljs$lang$maxFixedArity = 1;
taoensso.encore.greatest.cljs$lang$applyTo = function(seq35970) {
  var G__35971 = cljs.core.first.call(null, seq35970);
  var seq35970__$1 = cljs.core.next.call(null, seq35970);
  return taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic(G__35971, seq35970__$1);
};
taoensso.encore.least = function taoensso$encore$least(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36094 = arguments.length;
  var i__9708__auto___36095 = 0;
  while (true) {
    if (i__9708__auto___36095 < len__9707__auto___36094) {
      args__9714__auto__.push(arguments[i__9708__auto___36095]);
      var G__36096 = i__9708__auto___36095 + 1;
      i__9708__auto___36095 = G__36096;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic = function(coll, p__35978) {
  var vec__35979 = p__35978;
  var _QMARK_comparator = cljs.core.nth.call(null, vec__35979, 0, null);
  var comparator = function() {
    var or__8632__auto__ = _QMARK_comparator;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return taoensso.encore.rcompare;
    }
  }();
  return cljs.core.reduce.call(null, function(comparator, vec__35979, _QMARK_comparator) {
    return function(p1__35918_SHARP_, p2__35919_SHARP_) {
      if (comparator.call(null, p1__35918_SHARP_, p2__35919_SHARP_) < 0) {
        return p2__35919_SHARP_;
      } else {
        return p1__35918_SHARP_;
      }
    };
  }(comparator, vec__35979, _QMARK_comparator), coll);
};
taoensso.encore.least.cljs$lang$maxFixedArity = 1;
taoensso.encore.least.cljs$lang$applyTo = function(seq35976) {
  var G__35977 = cljs.core.first.call(null, seq35976);
  var seq35976__$1 = cljs.core.next.call(null, seq35976);
  return taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic(G__35977, seq35976__$1);
};
taoensso.encore.clj1098 = function taoensso$encore$clj1098(x) {
  var or__8632__auto__ = x;
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
taoensso.encore.distinct_by = function taoensso$encore$distinct_by(keyfn, coll) {
  var step = function taoensso$encore$distinct_by_$_step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__35994, seen__$1) {
        while (true) {
          var vec__35995 = p__35994;
          var v = cljs.core.nth.call(null, vec__35995, 0, null);
          var xs__$1 = vec__35995;
          var b2__20870__auto__ = cljs.core.seq.call(null, xs__$1);
          if (b2__20870__auto__) {
            var s = b2__20870__auto__;
            var v_STAR_ = keyfn.call(null, v);
            if (cljs.core.contains_QMARK_.call(null, seen__$1, v_STAR_)) {
              var G__36097 = cljs.core.rest.call(null, s);
              var G__36098 = seen__$1;
              p__35994 = G__36097;
              seen__$1 = G__36098;
              continue;
            } else {
              return cljs.core.cons.call(null, v, taoensso$encore$distinct_by_$_step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, v_STAR_)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
taoensso.encore.distinctv = function taoensso$encore$distinctv(var_args) {
  var args35998 = [];
  var len__9707__auto___36099 = arguments.length;
  var i__9708__auto___36100 = 0;
  while (true) {
    if (i__9708__auto___36100 < len__9707__auto___36099) {
      args35998.push(arguments[i__9708__auto___36100]);
      var G__36101 = i__9708__auto___36100 + 1;
      i__9708__auto___36100 = G__36101;
      continue;
    } else {
    }
    break;
  }
  var G__36000 = args35998.length;
  switch(G__36000) {
    case 1:
      return taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35998.length)].join(""));;
  }
};
taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return taoensso.encore.distinctv.call(null, cljs.core.identity, coll);
};
taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  var tr = cljs.core.reduce.call(null, function(p__36001, in$) {
    var vec__36002 = p__36001;
    var v = cljs.core.nth.call(null, vec__36002, 0, null);
    var seen = cljs.core.nth.call(null, vec__36002, 1, null);
    var in_STAR_ = keyfn.call(null, in$);
    if (cljs.core.contains_QMARK_.call(null, seen, in_STAR_)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, seen], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj_BANG_.call(null, v, in$), cljs.core.conj.call(null, seen, in_STAR_)], null);
    }
  }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.PersistentHashSet.EMPTY], null), coll);
  return cljs.core.persistent_BANG_.call(null, cljs.core.nth.call(null, tr, 0));
};
taoensso.encore.distinctv.cljs$lang$maxFixedArity = 2;
taoensso.encore.map_kvs = function taoensso$encore$map_kvs(kf, vf, m) {
  if (cljs.core.truth_(m)) {
    var vf__$1 = vf == null ? function(_, v) {
      return v;
    } : vf;
    var kf__$1 = kf == null ? function(vf__$1) {
      return function(k, _) {
        return k;
      };
    }(vf__$1) : cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, kf, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? function(vf__$1) {
      return function(k, _) {
        return cljs.core.keyword.call(null, k);
      };
    }(vf__$1) : kf;
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(vf__$1, kf__$1) {
      return function(m__$1, k, v) {
        return cljs.core.assoc_BANG_.call(null, m__$1, kf__$1.call(null, k, v), vf__$1.call(null, k, v));
      };
    }(vf__$1, kf__$1), cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
taoensso.encore.as_map = function taoensso$encore$as_map(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36103 = arguments.length;
  var i__9708__auto___36104 = 0;
  while (true) {
    if (i__9708__auto___36104 < len__9707__auto___36103) {
      args__9714__auto__.push(arguments[i__9708__auto___36104]);
      var G__36105 = i__9708__auto___36104 + 1;
      i__9708__auto___36104 = G__36105;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic = function(kvs, p__36007) {
  var vec__36008 = p__36007;
  var kf = cljs.core.nth.call(null, vec__36008, 0, null);
  var vf = cljs.core.nth.call(null, vec__36008, 1, null);
  if (cljs.core.empty_QMARK_.call(null, kvs)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    var vf__$1 = vf == null ? function(vec__36008, kf, vf) {
      return function(_, v) {
        return v;
      };
    }(vec__36008, kf, vf) : vf;
    var kf__$1 = kf == null ? function(vf__$1, vec__36008, kf, vf) {
      return function(k, _) {
        return k;
      };
    }(vf__$1, vec__36008, kf, vf) : cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, kf, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? function(vf__$1, vec__36008, kf, vf) {
      return function(k, _) {
        return cljs.core.keyword.call(null, k);
      };
    }(vf__$1, vec__36008, kf, vf) : kf;
    return cljs.core.persistent_BANG_.call(null, taoensso.encore.reduce_kvs.call(null, function(vf__$1, kf__$1, vec__36008, kf, vf) {
      return function(m, k, v) {
        return cljs.core.assoc_BANG_.call(null, m, kf__$1.call(null, k, v), vf__$1.call(null, k, v));
      };
    }(vf__$1, kf__$1, vec__36008, kf, vf), cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), kvs));
  }
};
taoensso.encore.as_map.cljs$lang$maxFixedArity = 1;
taoensso.encore.as_map.cljs$lang$applyTo = function(seq36005) {
  var G__36006 = cljs.core.first.call(null, seq36005);
  var seq36005__$1 = cljs.core.next.call(null, seq36005);
  return taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic(G__36006, seq36005__$1);
};
taoensso.encore.keywordize_map = function taoensso$encore$keywordize_map(m) {
  return taoensso.encore.map_keys.call(null, cljs.core.keyword, m);
};
taoensso.encore.removev = function taoensso$encore$removev(pred, coll) {
  return cljs.core.filterv.call(null, cljs.core.complement.call(null, pred), coll);
};
taoensso.encore.nvec_QMARK_ = function taoensso$encore$nvec_QMARK_(n, x) {
  return cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), n);
};
taoensso.encore.memoized = function taoensso$encore$memoized(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36106 = arguments.length;
  var i__9708__auto___36107 = 0;
  while (true) {
    if (i__9708__auto___36107 < len__9707__auto___36106) {
      args__9714__auto__.push(arguments[i__9708__auto___36107]);
      var G__36108 = i__9708__auto___36107 + 1;
      i__9708__auto___36107 = G__36108;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic = function(cache, f, args) {
  if (cljs.core.truth_(cache)) {
    return cljs.core.deref.call(null, taoensso.encore._swap_val_BANG_.call(null, cache, args, function(_QMARK_dv) {
      if (cljs.core.truth_(_QMARK_dv)) {
        return _QMARK_dv;
      } else {
        return new cljs.core.Delay(function() {
          return cljs.core.apply.call(null, f, args);
        }, null);
      }
    }));
  } else {
    return cljs.core.apply.call(null, f, args);
  }
};
taoensso.encore.memoized.cljs$lang$maxFixedArity = 2;
taoensso.encore.memoized.cljs$lang$applyTo = function(seq36011) {
  var G__36012 = cljs.core.first.call(null, seq36011);
  var seq36011__$1 = cljs.core.next.call(null, seq36011);
  var G__36013 = cljs.core.first.call(null, seq36011__$1);
  var seq36011__$2 = cljs.core.next.call(null, seq36011__$1);
  return taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic(G__36012, G__36013, seq36011__$2);
};
taoensso.encore.translate_signed_idx = function taoensso$encore$translate_signed_idx(signed_idx, max_idx) {
  if (signed_idx >= 0) {
    var x__8970__auto__ = signed_idx;
    var y__8971__auto__ = max_idx;
    return x__8970__auto__ < y__8971__auto__ ? x__8970__auto__ : y__8971__auto__;
  } else {
    var x__8963__auto__ = 0;
    var y__8964__auto__ = signed_idx + max_idx;
    return x__8963__auto__ > y__8964__auto__ ? x__8963__auto__ : y__8964__auto__;
  }
};
taoensso.encore.sub_indexes = function taoensso$encore$sub_indexes(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36109 = arguments.length;
  var i__9708__auto___36110 = 0;
  while (true) {
    if (i__9708__auto___36110 < len__9707__auto___36109) {
      args__9714__auto__.push(arguments[i__9708__auto___36110]);
      var G__36111 = i__9708__auto___36110 + 1;
      i__9708__auto___36110 = G__36111;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic = function(x, start_idx, p__36017) {
  var map__36018 = p__36017;
  var map__36018__$1 = (!(map__36018 == null) ? map__36018.cljs$lang$protocol_mask$partition0$ & 64 || map__36018.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36018) : map__36018;
  var max_len = cljs.core.get.call(null, map__36018__$1, new cljs.core.Keyword(null, "max-len", "max-len", -18846016));
  var end_idx = cljs.core.get.call(null, map__36018__$1, new cljs.core.Keyword(null, "end-idx", "end-idx", -85750788));
  var start_idx__$1 = start_idx;
  var xlen = cljs.core.count.call(null, x);
  var start_idx_STAR_ = taoensso.encore.translate_signed_idx.call(null, start_idx__$1, xlen);
  var end_idx_STAR_ = cljs.core.long$.call(null, cljs.core.truth_(max_len) ? function() {
    var n1__21260__auto__ = start_idx_STAR_ + max_len;
    var n2__21261__auto__ = xlen;
    if (n1__21260__auto__ > n2__21261__auto__) {
      return n2__21261__auto__;
    } else {
      return n1__21260__auto__;
    }
  }() : cljs.core.truth_(end_idx) ? taoensso.encore.translate_signed_idx.call(null, end_idx, xlen) + 1 : xlen);
  if (start_idx_STAR_ > end_idx_STAR_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [start_idx_STAR_, end_idx_STAR_], null);
  }
};
taoensso.encore.sub_indexes.cljs$lang$maxFixedArity = 2;
taoensso.encore.sub_indexes.cljs$lang$applyTo = function(seq36014) {
  var G__36015 = cljs.core.first.call(null, seq36014);
  var seq36014__$1 = cljs.core.next.call(null, seq36014);
  var G__36016 = cljs.core.first.call(null, seq36014__$1);
  var seq36014__$2 = cljs.core.next.call(null, seq36014__$1);
  return taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic(G__36015, G__36016, seq36014__$2);
};
taoensso.encore.substr = function taoensso$encore$substr(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36112 = arguments.length;
  var i__9708__auto___36113 = 0;
  while (true) {
    if (i__9708__auto___36113 < len__9707__auto___36112) {
      args__9714__auto__.push(arguments[i__9708__auto___36113]);
      var G__36114 = i__9708__auto___36113 + 1;
      i__9708__auto___36113 = G__36114;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic = function(s, start_idx, p__36023) {
  var vec__36024 = p__36023;
  var _QMARK_max_len = cljs.core.nth.call(null, vec__36024, 0, null);
  var vec__36027 = taoensso.encore.sub_indexes.call(null, s, start_idx, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), _QMARK_max_len);
  var start_idx_STAR_ = cljs.core.nth.call(null, vec__36027, 0, null);
  var end_idx_STAR_ = cljs.core.nth.call(null, vec__36027, 1, null);
  return s.substring(start_idx_STAR_, end_idx_STAR_);
};
taoensso.encore.substr.cljs$lang$maxFixedArity = 2;
taoensso.encore.substr.cljs$lang$applyTo = function(seq36020) {
  var G__36021 = cljs.core.first.call(null, seq36020);
  var seq36020__$1 = cljs.core.next.call(null, seq36020);
  var G__36022 = cljs.core.first.call(null, seq36020__$1);
  var seq36020__$2 = cljs.core.next.call(null, seq36020__$1);
  return taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic(G__36021, G__36022, seq36020__$2);
};
taoensso.encore.subvec_STAR_ = function taoensso$encore$subvec_STAR_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36115 = arguments.length;
  var i__9708__auto___36116 = 0;
  while (true) {
    if (i__9708__auto___36116 < len__9707__auto___36115) {
      args__9714__auto__.push(arguments[i__9708__auto___36116]);
      var G__36117 = i__9708__auto___36116 + 1;
      i__9708__auto___36116 = G__36117;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(v, start_idx, p__36033) {
  var vec__36034 = p__36033;
  var _QMARK_max_len = cljs.core.nth.call(null, vec__36034, 0, null);
  var vec__36037 = taoensso.encore.sub_indexes.call(null, v, start_idx, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), _QMARK_max_len);
  var start_idx_STAR_ = cljs.core.nth.call(null, vec__36037, 0, null);
  var end_idx_STAR_ = cljs.core.nth.call(null, vec__36037, 1, null);
  return cljs.core.subvec.call(null, v, start_idx_STAR_, end_idx_STAR_);
};
taoensso.encore.subvec_STAR_.cljs$lang$maxFixedArity = 2;
taoensso.encore.subvec_STAR_.cljs$lang$applyTo = function(seq36030) {
  var G__36031 = cljs.core.first.call(null, seq36030);
  var seq36030__$1 = cljs.core.next.call(null, seq36030);
  var G__36032 = cljs.core.first.call(null, seq36030__$1);
  var seq36030__$2 = cljs.core.next.call(null, seq36030__$1);
  return taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__36031, G__36032, seq36030__$2);
};
taoensso.encore.sentinel = {};
taoensso.encore.sentinel_QMARK_ = function taoensso$encore$sentinel_QMARK_(x) {
  return x === taoensso.encore.sentinel;
};
taoensso.encore.nil__GT_sentinel = function taoensso$encore$nil__GT_sentinel(x) {
  if (x == null) {
    return taoensso.encore.sentinel;
  } else {
    return x;
  }
};
taoensso.encore.sentinel__GT_nil = function taoensso$encore$sentinel__GT_nil(x) {
  if (cljs.core.truth_(taoensso.encore.sentinel_QMARK_.call(null, x))) {
    return null;
  } else {
    return x;
  }
};
taoensso.encore.singleton_QMARK_ = function taoensso$encore$singleton_QMARK_(coll) {
  if (cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), 1);
  } else {
    return cljs.core.not.call(null, cljs.core.next.call(null, coll));
  }
};
taoensso.encore.__GT__QMARK_singleton = function taoensso$encore$__GT__QMARK_singleton(coll) {
  if (cljs.core.truth_(taoensso.encore.singleton_QMARK_.call(null, coll))) {
    var vec__36045 = coll;
    var c1 = cljs.core.nth.call(null, vec__36045, 0, null);
    return c1;
  } else {
    return null;
  }
};
taoensso.encore.__GT_vec = function taoensso$encore$__GT_vec(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.vec.call(null, x);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
    }
  }
};
taoensso.encore.fzipmap = function taoensso$encore$fzipmap(ks, vs) {
  var m = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks__$1 = cljs.core.seq.call(null, ks);
  var vs__$1 = cljs.core.seq.call(null, vs);
  while (true) {
    if (ks__$1 && vs__$1) {
      var G__36118 = cljs.core.assoc_BANG_.call(null, m, cljs.core.first.call(null, ks__$1), cljs.core.first.call(null, vs__$1));
      var G__36119 = cljs.core.next.call(null, ks__$1);
      var G__36120 = cljs.core.next.call(null, vs__$1);
      m = G__36118;
      ks__$1 = G__36119;
      vs__$1 = G__36120;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, m);
    }
    break;
  }
};
taoensso.encore.filter_kvs = function taoensso$encore$filter_kvs(pred, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, k, v))) {
        return m__$1;
      } else {
        return cljs.core.dissoc.call(null, m__$1, k);
      }
    }, m, m);
  }
};
taoensso.encore.remove_kvs = function taoensso$encore$remove_kvs(pred, m) {
  if (m == null) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, k, v))) {
        return cljs.core.dissoc.call(null, m__$1, k);
      } else {
        return m__$1;
      }
    }, m, m);
  }
};
taoensso.encore.replace_in = function taoensso$encore$replace_in(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36121 = arguments.length;
  var i__9708__auto___36122 = 0;
  while (true) {
    if (i__9708__auto___36122 < len__9707__auto___36121) {
      args__9714__auto__.push(arguments[i__9708__auto___36122]);
      var G__36123 = i__9708__auto___36122 + 1;
      i__9708__auto___36122 = G__36123;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic = function(m, ops) {
  return cljs.core.reduce.call(null, function(m__$1, _QMARK_op) {
    if (cljs.core.truth_(_QMARK_op)) {
      var vec__35922 = _QMARK_op;
      var type = cljs.core.nth.call(null, vec__35922, 0, null);
      var ks = cljs.core.nth.call(null, vec__35922, 1, null);
      var valf = cljs.core.nth.call(null, vec__35922, 2, null);
      var f = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, type, new cljs.core.Keyword(null, "reset", "reset", -800929946))) ? function(vec__35922, type, ks, valf) {
        return function(_) {
          return valf;
        };
      }(vec__35922, type, ks, valf) : valf;
      return taoensso.encore.update_in.call(null, m__$1, ks, null, f);
    } else {
      return m__$1;
    }
  }, m, ops);
};
taoensso.encore.replace_in.cljs$lang$maxFixedArity = 1;
taoensso.encore.replace_in.cljs$lang$applyTo = function(seq35920) {
  var G__35921 = cljs.core.first.call(null, seq35920);
  var seq35920__$1 = cljs.core.next.call(null, seq35920);
  return taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic(G__35921, seq35920__$1);
};
goog.provide("taoensso.sente.interfaces");
goog.require("cljs.core");
goog.require("taoensso.encore");
taoensso.sente.interfaces.IServerChan = function() {
};
taoensso.sente.interfaces.sch_open_QMARK_ = function taoensso$sente$interfaces$sch_open_QMARK_(sch) {
  if (!(sch == null) && !(sch.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1 == null)) {
    return sch.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1(sch);
  } else {
    var x__9295__auto__ = sch == null ? null : sch;
    var m__9296__auto__ = taoensso.sente.interfaces.sch_open_QMARK_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, sch);
    } else {
      var m__9296__auto____$1 = taoensso.sente.interfaces.sch_open_QMARK_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, sch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChan.sch-open?", sch);
      }
    }
  }
};
taoensso.sente.interfaces.sch_close_BANG_ = function taoensso$sente$interfaces$sch_close_BANG_(sch) {
  if (!(sch == null) && !(sch.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1 == null)) {
    return sch.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1(sch);
  } else {
    var x__9295__auto__ = sch == null ? null : sch;
    var m__9296__auto__ = taoensso.sente.interfaces.sch_close_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, sch);
    } else {
      var m__9296__auto____$1 = taoensso.sente.interfaces.sch_close_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, sch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChan.sch-close!", sch);
      }
    }
  }
};
taoensso.sente.interfaces.sch_send_BANG_ = function taoensso$sente$interfaces$sch_send_BANG_(sch, websocket_QMARK_, msg) {
  if (!(sch == null) && !(sch.taoensso$sente$interfaces$IServerChan$sch_send_BANG_$arity$3 == null)) {
    return sch.taoensso$sente$interfaces$IServerChan$sch_send_BANG_$arity$3(sch, websocket_QMARK_, msg);
  } else {
    var x__9295__auto__ = sch == null ? null : sch;
    var m__9296__auto__ = taoensso.sente.interfaces.sch_send_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, sch, websocket_QMARK_, msg);
    } else {
      var m__9296__auto____$1 = taoensso.sente.interfaces.sch_send_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, sch, websocket_QMARK_, msg);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChan.sch-send!", sch);
      }
    }
  }
};
taoensso.sente.interfaces.IServerChanAdapter = function() {
};
taoensso.sente.interfaces.ring_req__GT_server_ch_resp = function taoensso$sente$interfaces$ring_req__GT_server_ch_resp(sch_adapter, ring_req, callbacks_map) {
  if (!(sch_adapter == null) && !(sch_adapter.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3 == null)) {
    return sch_adapter.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3(sch_adapter, ring_req, callbacks_map);
  } else {
    var x__9295__auto__ = sch_adapter == null ? null : sch_adapter;
    var m__9296__auto__ = taoensso.sente.interfaces.ring_req__GT_server_ch_resp[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, sch_adapter, ring_req, callbacks_map);
    } else {
      var m__9296__auto____$1 = taoensso.sente.interfaces.ring_req__GT_server_ch_resp["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, sch_adapter, ring_req, callbacks_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChanAdapter.ring-req-\x3eserver-ch-resp", sch_adapter);
      }
    }
  }
};
taoensso.sente.interfaces.IPacker = function() {
};
taoensso.sente.interfaces.pack = function taoensso$sente$interfaces$pack(_, x) {
  if (!(_ == null) && !(_.taoensso$sente$interfaces$IPacker$pack$arity$2 == null)) {
    return _.taoensso$sente$interfaces$IPacker$pack$arity$2(_, x);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.sente.interfaces.pack[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _, x);
    } else {
      var m__9296__auto____$1 = taoensso.sente.interfaces.pack["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPacker.pack", _);
      }
    }
  }
};
taoensso.sente.interfaces.unpack = function taoensso$sente$interfaces$unpack(_, x) {
  if (!(_ == null) && !(_.taoensso$sente$interfaces$IPacker$unpack$arity$2 == null)) {
    return _.taoensso$sente$interfaces$IPacker$unpack$arity$2(_, x);
  } else {
    var x__9295__auto__ = _ == null ? null : _;
    var m__9296__auto__ = taoensso.sente.interfaces.unpack[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, _, x);
    } else {
      var m__9296__auto____$1 = taoensso.sente.interfaces.unpack["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, _, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPacker.unpack", _);
      }
    }
  }
};
goog.provide("taoensso.timbre.appenders.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("taoensso.encore");
taoensso.timbre.appenders.core.println_appender = function taoensso$timbre$appenders$core$println_appender(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36135 = arguments.length;
  var i__9708__auto___36136 = 0;
  while (true) {
    if (i__9708__auto___36136 < len__9707__auto___36135) {
      args__9714__auto__.push(arguments[i__9708__auto___36136]);
      var G__36137 = i__9708__auto___36136 + 1;
      i__9708__auto___36136 = G__36137;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic = function(p__36129) {
  var vec__36130 = p__36129;
  var _opts = cljs.core.nth.call(null, vec__36130, 0, null);
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057), true, new cljs.core.Keyword(null, "async?", "async?", 1523057758), false, new cljs.core.Keyword(null, "min-level", "min-level", 1634684919), null, new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022), null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), new cljs.core.Keyword(null, "inherit", "inherit", -1840815422), new cljs.core.Keyword(null, "fn", 
  "fn", -1175266204), function(vec__36130, _opts) {
    return function(data) {
      var map__36133 = data;
      var map__36133__$1 = (!(map__36133 == null) ? map__36133.cljs$lang$protocol_mask$partition0$ & 64 || map__36133.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36133) : map__36133;
      var output_ = cljs.core.get.call(null, map__36133__$1, new cljs.core.Keyword(null, "output_", "output_", -36797880));
      return cljs.core.println.call(null, cljs.core.force.call(null, output_));
    };
  }(vec__36130, _opts)], null);
};
taoensso.timbre.appenders.core.println_appender.cljs$lang$maxFixedArity = 0;
taoensso.timbre.appenders.core.println_appender.cljs$lang$applyTo = function(seq36128) {
  return taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq36128));
};
taoensso.timbre.appenders.core.console_appender = function taoensso$timbre$appenders$core$console_appender(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36145 = arguments.length;
  var i__9708__auto___36146 = 0;
  while (true) {
    if (i__9708__auto___36146 < len__9707__auto___36145) {
      args__9714__auto__.push(arguments[i__9708__auto___36146]);
      var G__36147 = i__9708__auto___36146 + 1;
      i__9708__auto___36146 = G__36147;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic = function(p__36139) {
  var vec__36140 = p__36139;
  var opts = cljs.core.nth.call(null, vec__36140, 0, null);
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057), true, new cljs.core.Keyword(null, "async?", "async?", 1523057758), false, new cljs.core.Keyword(null, "min-level", "min-level", 1634684919), null, new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022), null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), new cljs.core.Keyword(null, "inherit", "inherit", -1840815422), new cljs.core.Keyword(null, "fn", 
  "fn", -1175266204), typeof console !== "undefined" ? function() {
    var level__GT_logger = function(vec__36140, opts) {
      return function(level) {
        var or__8632__auto__ = function() {
          var G__36144 = level instanceof cljs.core.Keyword ? level.fqn : null;
          switch(G__36144) {
            case "trace":
              return console.trace;
              break;
            case "debug":
              return console.debug;
              break;
            case "info":
              return console.info;
              break;
            case "warn":
              return console.warn;
              break;
            case "error":
              return console.error;
              break;
            case "fatal":
              return console.error;
              break;
            case "report":
              return console.info;
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(level)].join(""));;
          }
        }();
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return console.log;
        }
      };
    }(vec__36140, opts);
    return function(level__GT_logger, vec__36140, opts) {
      return function(data) {
        var temp__4657__auto__ = level__GT_logger.call(null, (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$1(data));
        if (cljs.core.truth_(temp__4657__auto__)) {
          var logger = temp__4657__auto__;
          if (cljs.core.truth_(function() {
            var or__8632__auto__ = (new cljs.core.Keyword(null, "raw-console?", "raw-console?", -2061489061)).cljs$core$IFn$_invoke$arity$1(data);
            if (cljs.core.truth_(or__8632__auto__)) {
              return or__8632__auto__;
            } else {
              return cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "?meta", "?meta", -793560773), new cljs.core.Keyword(null, "raw-console?", "raw-console?", -2061489061)], null));
            }
          }())) {
            var output = (new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539)).cljs$core$IFn$_invoke$arity$1(data).call(null, cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3), "", new cljs.core.Keyword(null, "?err", "?err", 549653299), null));
            var args = cljs.core.cons.call(null, output, cljs.core.cons.call(null, (new cljs.core.Keyword(null, "?err", "?err", 549653299)).cljs$core$IFn$_invoke$arity$1(data), (new cljs.core.Keyword(null, "vargs", "vargs", -966597273)).cljs$core$IFn$_invoke$arity$1(data)));
            return logger.apply(console, cljs.core.into_array.call(null, args));
          } else {
            return logger.call(console, cljs.core.force.call(null, (new cljs.core.Keyword(null, "output_", "output_", -36797880)).cljs$core$IFn$_invoke$arity$1(data)));
          }
        } else {
          return null;
        }
      };
    }(level__GT_logger, vec__36140, opts);
  }() : function(vec__36140, opts) {
    return function(data) {
      return null;
    };
  }(vec__36140, opts)], null);
};
taoensso.timbre.appenders.core.console_appender.cljs$lang$maxFixedArity = 0;
taoensso.timbre.appenders.core.console_appender.cljs$lang$applyTo = function(seq36138) {
  return taoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq36138));
};
taoensso.timbre.appenders.core.console__QMARK_appender = taoensso.timbre.appenders.core.console_appender;
goog.provide("taoensso.timbre");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("taoensso.encore");
goog.require("taoensso.timbre.appenders.core");
if (cljs.core.vector_QMARK_.call(null, taoensso.encore.encore_version)) {
  taoensso.encore.assert_min_encore_version.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 67, 2], null));
} else {
  taoensso.encore.assert_min_encore_version.call(null, 2.67);
}
taoensso.timbre.default_output_fn = function taoensso$timbre$default_output_fn(var_args) {
  var args36151 = [];
  var len__9707__auto___36158 = arguments.length;
  var i__9708__auto___36159 = 0;
  while (true) {
    if (i__9708__auto___36159 < len__9707__auto___36158) {
      args36151.push(arguments[i__9708__auto___36159]);
      var G__36160 = i__9708__auto___36159 + 1;
      i__9708__auto___36159 = G__36160;
      continue;
    } else {
    }
    break;
  }
  var G__36153 = args36151.length;
  switch(G__36153) {
    case 1:
      return taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36151.length)].join(""));;
  }
};
taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1 = function(data) {
  return taoensso.timbre.default_output_fn.call(null, null, data);
};
taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2 = function(opts, data) {
  var map__36154 = opts;
  var map__36154__$1 = (!(map__36154 == null) ? map__36154.cljs$lang$protocol_mask$partition0$ & 64 || map__36154.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36154) : map__36154;
  var no_stacktrace_QMARK_ = cljs.core.get.call(null, map__36154__$1, new cljs.core.Keyword(null, "no-stacktrace?", "no-stacktrace?", 1701072694));
  var stacktrace_fonts = cljs.core.get.call(null, map__36154__$1, new cljs.core.Keyword(null, "stacktrace-fonts", "stacktrace-fonts", 830799382));
  var map__36155 = data;
  var map__36155__$1 = (!(map__36155 == null) ? map__36155.cljs$lang$protocol_mask$partition0$ & 64 || map__36155.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36155) : map__36155;
  var level = cljs.core.get.call(null, map__36155__$1, new cljs.core.Keyword(null, "level", "level", 1290497552));
  var _QMARK_err = cljs.core.get.call(null, map__36155__$1, new cljs.core.Keyword(null, "?err", "?err", 549653299));
  var msg_ = cljs.core.get.call(null, map__36155__$1, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3));
  var _QMARK_ns_str = cljs.core.get.call(null, map__36155__$1, new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966));
  var hostname_ = cljs.core.get.call(null, map__36155__$1, new cljs.core.Keyword(null, "hostname_", "hostname_", -2091647379));
  var timestamp_ = cljs.core.get.call(null, map__36155__$1, new cljs.core.Keyword(null, "timestamp_", "timestamp_", -954533417));
  var _QMARK_line = cljs.core.get.call(null, map__36155__$1, new cljs.core.Keyword(null, "?line", "?line", -631853385));
  return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.name.call(null, level))), cljs.core.str(" "), cljs.core.str("["), cljs.core.str(function() {
    var or__8632__auto__ = _QMARK_ns_str;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return "?";
    }
  }()), cljs.core.str(":"), cljs.core.str(function() {
    var or__8632__auto__ = _QMARK_line;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return "?";
    }
  }()), cljs.core.str("] - "), cljs.core.str(cljs.core.force.call(null, msg_)), cljs.core.str(cljs.core.truth_(no_stacktrace_QMARK_) ? null : function() {
    var temp__4657__auto__ = _QMARK_err;
    if (cljs.core.truth_(temp__4657__auto__)) {
      var err = temp__4657__auto__;
      return [cljs.core.str("\n"), cljs.core.str(taoensso.timbre.stacktrace.call(null, err, opts))].join("");
    } else {
      return null;
    }
  }())].join("");
};
taoensso.timbre.default_output_fn.cljs$lang$maxFixedArity = 2;
taoensso.timbre.println_appender = taoensso.timbre.appenders.core.println_appender;
taoensso.timbre.console_appender = taoensso.timbre.appenders.core.console_appender;
taoensso.timbre.example_config = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "level", "level", 1290497552), new cljs.core.Keyword(null, "debug", "debug", -1608172596), new cljs.core.Keyword(null, "ns-whitelist", "ns-whitelist", -1717299774), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "ns-blacklist", "ns-blacklist", 1957763142), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "middleware", "middleware", 1462115504), cljs.core.PersistentVector.EMPTY, 
new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), taoensso.timbre.default_output_fn, new cljs.core.Keyword(null, "appenders", "appenders", 1245583998), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "console", "console", 1228072057), taoensso.timbre.console_appender.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)], null);
if (typeof taoensso.timbre._STAR_config_STAR_ !== "undefined") {
} else {
  taoensso.timbre._STAR_config_STAR_ = taoensso.timbre.example_config;
}
taoensso.timbre.swap_config_BANG_ = function taoensso$timbre$swap_config_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36164 = arguments.length;
  var i__9708__auto___36165 = 0;
  while (true) {
    if (i__9708__auto___36165 < len__9707__auto___36164) {
      args__9714__auto__.push(arguments[i__9708__auto___36165]);
      var G__36166 = i__9708__auto___36165 + 1;
      i__9708__auto___36165 = G__36166;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return taoensso.timbre._STAR_config_STAR_ = cljs.core.apply.call(null, f, taoensso.timbre._STAR_config_STAR_, args);
};
taoensso.timbre.swap_config_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.timbre.swap_config_BANG_.cljs$lang$applyTo = function(seq36162) {
  var G__36163 = cljs.core.first.call(null, seq36162);
  var seq36162__$1 = cljs.core.next.call(null, seq36162);
  return taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__36163, seq36162__$1);
};
taoensso.timbre.set_config_BANG_ = function taoensso$timbre$set_config_BANG_(m) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(_old) {
    return m;
  });
};
taoensso.timbre.merge_config_BANG_ = function taoensso$timbre$merge_config_BANG_(m) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(old) {
    return taoensso.encore.nested_merge.call(null, old, m);
  });
};
taoensso.timbre.set_level_BANG_ = function taoensso$timbre$set_level_BANG_(level) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(m) {
    return cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "level", "level", 1290497552), level);
  });
};
taoensso.timbre._levels_vec = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), new cljs.core.Keyword(null, "debug", "debug", -1608172596), new cljs.core.Keyword(null, "info", "info", -317069002), new cljs.core.Keyword(null, "warn", "warn", -436710552), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), new cljs.core.Keyword(null, "report", 
"report", 1394055010)], null);
taoensso.timbre._levels_set = cljs.core.set.call(null, taoensso.timbre._levels_vec);
taoensso.timbre._levels_map = cljs.core.zipmap.call(null, taoensso.timbre._levels_vec, cljs.core.next.call(null, cljs.core.range.call(null)));
taoensso.timbre.valid_level_QMARK_ = function taoensso$timbre$valid_level_QMARK_(x) {
  if (cljs.core.truth_(taoensso.timbre._levels_set.call(null, x))) {
    return true;
  } else {
    return false;
  }
};
taoensso.timbre.valid_level = function taoensso$timbre$valid_level(x) {
  var or__8632__auto__ = taoensso.timbre._levels_set.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    throw cljs.core.ex_info.call(null, "Invalid Timbre logging level", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "given", "given", 716253602), x], null));
  }
};
taoensso.timbre.level_GT__EQ_ = function taoensso$timbre$level_GT__EQ_(x, y) {
  return taoensso.timbre._levels_map.call(null, taoensso.timbre.valid_level.call(null, x)) >= taoensso.timbre._levels_map.call(null, taoensso.timbre.valid_level.call(null, y));
};
taoensso.timbre._compile_ns_filter = taoensso.encore.memoize_.call(null, taoensso.encore.compile_ns_filter);
taoensso.timbre.ns_filter = taoensso.encore.memoize_.call(null, function(whitelist, blacklist, _QMARK_ns) {
  return taoensso.timbre._compile_ns_filter.call(null, whitelist, blacklist).call(null, _QMARK_ns);
});
taoensso.timbre.may_log_QMARK_ = function taoensso$timbre$may_log_QMARK_(var_args) {
  var args36167 = [];
  var len__9707__auto___36170 = arguments.length;
  var i__9708__auto___36171 = 0;
  while (true) {
    if (i__9708__auto___36171 < len__9707__auto___36170) {
      args36167.push(arguments[i__9708__auto___36171]);
      var G__36172 = i__9708__auto___36171 + 1;
      i__9708__auto___36171 = G__36172;
      continue;
    } else {
    }
    break;
  }
  var G__36169 = args36167.length;
  switch(G__36169) {
    case 1:
      return taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36167.length)].join(""));;
  }
};
taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return taoensso.timbre.may_log_QMARK_.call(null, level, null, null);
};
taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(level, _QMARK_ns_str) {
  return taoensso.timbre.may_log_QMARK_.call(null, level, _QMARK_ns_str, null);
};
taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(level, _QMARK_ns_str, _QMARK_config) {
  var config = function() {
    var or__8632__auto__ = _QMARK_config;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return taoensso.timbre._STAR_config_STAR_;
    }
  }();
  var min_level = cljs.core.get.call(null, config, new cljs.core.Keyword(null, "level", "level", 1290497552), new cljs.core.Keyword(null, "report", "report", 1394055010));
  var and__8620__auto__ = taoensso.timbre.level_GT__EQ_.call(null, level, min_level);
  if (cljs.core.truth_(and__8620__auto__)) {
    var and__8620__auto____$1 = taoensso.timbre.ns_filter.call(null, cljs.core.get.call(null, config, new cljs.core.Keyword(null, "ns-whitelist", "ns-whitelist", -1717299774)), cljs.core.get.call(null, config, new cljs.core.Keyword(null, "ns-blacklist", "ns-blacklist", 1957763142)), _QMARK_ns_str);
    if (cljs.core.truth_(and__8620__auto____$1)) {
      return true;
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
taoensso.timbre.may_log_QMARK_.cljs$lang$maxFixedArity = 3;
taoensso.timbre.str_join = function taoensso$timbre$str_join(xs) {
  return taoensso.encore.str_join.call(null, " ", cljs.core.map.call(null, function(x) {
    var x__$1 = taoensso.encore.nil__GT_str.call(null, x);
    if (cljs.core.record_QMARK_.call(null, x__$1)) {
      return cljs.core.pr_str.call(null, x__$1);
    } else {
      return x__$1;
    }
  }), xs);
};
if (typeof taoensso.timbre.get_rate_limiter !== "undefined") {
} else {
  taoensso.timbre.get_rate_limiter = taoensso.encore.memoize_.call(null, function(appender_id, specs) {
    return taoensso.encore.limiter.call(null, specs);
  });
}
taoensso.timbre._STAR_context_STAR_ = null;
taoensso.timbre.next_vargs = function taoensso$timbre$next_vargs(v) {
  if (cljs.core.count.call(null, v) > 1) {
    return cljs.core.subvec.call(null, v, 1);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
taoensso.timbre.vargs__GT_margs = function taoensso$timbre$vargs__GT_margs(_QMARK_err, msg_type, vargs) {
  var auto_error_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, _QMARK_err, new cljs.core.Keyword(null, "auto", "auto", -566279492));
  var msg_fmt_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, msg_type, new cljs.core.Keyword(null, "f", "f", -1597136552));
  var vec__36185 = vargs;
  var v0 = cljs.core.nth.call(null, vec__36185, 0, null);
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = auto_error_QMARK_;
    if (cljs.core.truth_(and__8620__auto__)) {
      return taoensso.encore.error_QMARK_.call(null, v0);
    } else {
      return and__8620__auto__;
    }
  }())) {
    var vargs__$1 = taoensso.timbre.next_vargs.call(null, vargs);
    var _QMARK_msg_fmt = cljs.core.truth_(msg_fmt_QMARK_) ? function() {
      var vec__36188 = vargs__$1;
      var v0__$1 = cljs.core.nth.call(null, vec__36188, 0, null);
      return v0__$1;
    }() : null;
    var vargs__$2 = cljs.core.truth_(msg_fmt_QMARK_) ? taoensso.timbre.next_vargs.call(null, vargs__$1) : vargs__$1;
    var msg_ = new cljs.core.Delay(function(vargs__$1, _QMARK_msg_fmt, vargs__$2, auto_error_QMARK_, msg_fmt_QMARK_, vec__36185, v0) {
      return function() {
        var G__36191 = msg_type;
        if (cljs.core._EQ_.call(null, null, G__36191)) {
          return "";
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), G__36191)) {
            return taoensso.timbre.str_join.call(null, vargs__$2);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "f", "f", -1597136552), G__36191)) {
              return taoensso.encore.format_STAR_.call(null, typeof _QMARK_msg_fmt === "string" ? _QMARK_msg_fmt : taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.timbre", null, "(string? ?msg-fmt)", _QMARK_msg_fmt, null, null), vargs__$2);
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(msg_type)].join(""));
            }
          }
        }
      };
    }(vargs__$1, _QMARK_msg_fmt, vargs__$2, auto_error_QMARK_, msg_fmt_QMARK_, vec__36185, v0), null);
    return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "?err", "?err", 549653299), v0, new cljs.core.Keyword(null, "?meta", "?meta", -793560773), null, new cljs.core.Keyword(null, "?msg-fmt", "?msg-fmt", -852453891), _QMARK_msg_fmt, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3), msg_, new cljs.core.Keyword(null, "vargs", "vargs", -966597273), vargs__$2], null);
  } else {
    var _QMARK_meta = cljs.core.truth_(function() {
      var and__8620__auto__ = cljs.core.map_QMARK_.call(null, v0);
      if (and__8620__auto__) {
        return (new cljs.core.Keyword(null, "meta", "meta", 1499536964)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v0));
      } else {
        return and__8620__auto__;
      }
    }()) ? v0 : null;
    var _QMARK_err__$1 = function() {
      var or__8632__auto__ = (new cljs.core.Keyword(null, "err", "err", -2089457205)).cljs$core$IFn$_invoke$arity$1(_QMARK_meta);
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        if (cljs.core.truth_(auto_error_QMARK_)) {
          return null;
        } else {
          return _QMARK_err;
        }
      }
    }();
    var _QMARK_meta__$1 = cljs.core.dissoc.call(null, _QMARK_meta, new cljs.core.Keyword(null, "err", "err", -2089457205));
    var vargs__$1 = cljs.core.truth_(_QMARK_meta__$1) ? taoensso.timbre.next_vargs.call(null, vargs) : vargs;
    var _QMARK_msg_fmt = cljs.core.truth_(msg_fmt_QMARK_) ? function() {
      var vec__36192 = vargs__$1;
      var v0__$1 = cljs.core.nth.call(null, vec__36192, 0, null);
      return v0__$1;
    }() : null;
    var vargs__$2 = cljs.core.truth_(msg_fmt_QMARK_) ? taoensso.timbre.next_vargs.call(null, vargs__$1) : vargs__$1;
    var msg_ = new cljs.core.Delay(function(_QMARK_meta, _QMARK_err__$1, _QMARK_meta__$1, vargs__$1, _QMARK_msg_fmt, vargs__$2, auto_error_QMARK_, msg_fmt_QMARK_, vec__36185, v0) {
      return function() {
        var G__36195 = msg_type;
        if (cljs.core._EQ_.call(null, null, G__36195)) {
          return "";
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), G__36195)) {
            return taoensso.timbre.str_join.call(null, vargs__$2);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "f", "f", -1597136552), G__36195)) {
              return taoensso.encore.format_STAR_.call(null, typeof _QMARK_msg_fmt === "string" ? _QMARK_msg_fmt : taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.timbre", null, "(string? ?msg-fmt)", _QMARK_msg_fmt, null, null), vargs__$2);
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(msg_type)].join(""));
            }
          }
        }
      };
    }(_QMARK_meta, _QMARK_err__$1, _QMARK_meta__$1, vargs__$1, _QMARK_msg_fmt, vargs__$2, auto_error_QMARK_, msg_fmt_QMARK_, vec__36185, v0), null);
    return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "?err", "?err", 549653299), _QMARK_err__$1, new cljs.core.Keyword(null, "?meta", "?meta", -793560773), _QMARK_meta__$1, new cljs.core.Keyword(null, "?msg-fmt", "?msg-fmt", -852453891), _QMARK_msg_fmt, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3), msg_, new cljs.core.Keyword(null, "vargs", "vargs", -966597273), vargs__$2], null);
  }
};
taoensso.timbre._log_BANG_ = function taoensso$timbre$_log_BANG_(var_args) {
  var args36196 = [];
  var len__9707__auto___36201 = arguments.length;
  var i__9708__auto___36202 = 0;
  while (true) {
    if (i__9708__auto___36202 < len__9707__auto___36201) {
      args36196.push(arguments[i__9708__auto___36202]);
      var G__36203 = i__9708__auto___36202 + 1;
      i__9708__auto___36202 = G__36203;
      continue;
    } else {
    }
    break;
  }
  var G__36198 = args36196.length;
  switch(G__36198) {
    case 9:
      return taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36196.length)].join(""));;
  }
};
taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$9 = function(config, level, _QMARK_ns_str, _QMARK_file, _QMARK_line, msg_type, _QMARK_err, vargs_, _QMARK_base_data) {
  return taoensso.timbre._log_BANG_.call(null, config, level, _QMARK_ns_str, _QMARK_file, _QMARK_line, msg_type, _QMARK_err, vargs_, _QMARK_base_data, null);
};
taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10 = function(config, level, _QMARK_ns_str, _QMARK_file, _QMARK_line, msg_type, _QMARK_err, vargs_, _QMARK_base_data, callsite_id) {
  if (taoensso.timbre.may_log_QMARK_.call(null, level, _QMARK_ns_str, config)) {
    var instant_36205 = taoensso.encore.now_dt.call(null);
    var context_36206 = taoensso.timbre._STAR_context_STAR_;
    var vargs_36207 = cljs.core.deref.call(null, vargs_);
    var margs_36208 = taoensso.timbre.vargs__GT_margs.call(null, _QMARK_err, msg_type, vargs_36207);
    var data_36209 = cljs.core.merge.call(null, _QMARK_base_data, margs_36208, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "hash_", "hash_", -827203612), new cljs.core.Keyword(null, "instant", "instant", 655498374), new cljs.core.Keyword(null, "config", "config", 994861415), new cljs.core.Keyword(null, "?file", "?file", 1533429675), new cljs.core.Keyword(null, "error-level?", "error-level?", 778415885), new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966), new cljs.core.Keyword(null, 
    "level", "level", 1290497552), new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148), new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "?line", "?line", -631853385), new cljs.core.Keyword(null, "?err_", "?err_", 789480858)], [new cljs.core.Delay(function(instant_36205, context_36206, vargs_36207, margs_36208) {
      return function() {
        return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [callsite_id, (new cljs.core.Keyword(null, "?msg-fmt", "?msg-fmt", -852453891)).cljs$core$IFn$_invoke$arity$1(margs_36208), cljs.core.get_in.call(null, margs_36208, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "?meta", "?meta", -793560773), new cljs.core.Keyword(null, "hash", "hash", -13781596)], null), (new cljs.core.Keyword(null, 
        "vargs", "vargs", -966597273)).cljs$core$IFn$_invoke$arity$1(margs_36208))], null));
      };
    }(instant_36205, context_36206, vargs_36207, margs_36208), null), instant_36205, config, _QMARK_file, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), null, new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null)).call(null, level), _QMARK_ns_str, level, new cljs.core.Delay(function(instant_36205, context_36206, vargs_36207, margs_36208) {
      return function() {
        return (new cljs.core.Keyword(null, "vargs", "vargs", -966597273)).cljs$core$IFn$_invoke$arity$1(margs_36208);
      };
    }(instant_36205, context_36206, vargs_36207, margs_36208), null), context_36206, _QMARK_line, new cljs.core.Delay(function(instant_36205, context_36206, vargs_36207, margs_36208) {
      return function() {
        return (new cljs.core.Keyword(null, "?err", "?err", 549653299)).cljs$core$IFn$_invoke$arity$1(margs_36208);
      };
    }(instant_36205, context_36206, vargs_36207, margs_36208), null)]));
    var _QMARK_data_36210 = cljs.core.reduce.call(null, function(instant_36205, context_36206, vargs_36207, margs_36208, data_36209) {
      return function(acc, mf) {
        var result = mf.call(null, acc);
        if (result == null) {
          return cljs.core.reduced.call(null, null);
        } else {
          return result;
        }
      };
    }(instant_36205, context_36206, vargs_36207, margs_36208, data_36209), data_36209, (new cljs.core.Keyword(null, "middleware", "middleware", 1462115504)).cljs$core$IFn$_invoke$arity$1(config));
    var temp__4657__auto___36211 = _QMARK_data_36210;
    if (cljs.core.truth_(temp__4657__auto___36211)) {
      var data_36212__$1 = temp__4657__auto___36211;
      var output_fn1_36213 = taoensso.encore.memoize_.call(null, cljs.core.get.call(null, config, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), taoensso.timbre.default_output_fn));
      cljs.core.reduce_kv.call(null, function(output_fn1_36213, data_36212__$1, temp__4657__auto___36211, instant_36205, context_36206, vargs_36207, margs_36208, data_36209, _QMARK_data_36210) {
        return function(_, id, appender) {
          if (cljs.core.truth_(function() {
            var and__8620__auto__ = (new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057)).cljs$core$IFn$_invoke$arity$1(appender);
            if (cljs.core.truth_(and__8620__auto__)) {
              return taoensso.timbre.level_GT__EQ_.call(null, level, function() {
                var or__8632__auto__ = (new cljs.core.Keyword(null, "min-level", "min-level", 1634684919)).cljs$core$IFn$_invoke$arity$1(appender);
                if (cljs.core.truth_(or__8632__auto__)) {
                  return or__8632__auto__;
                } else {
                  return new cljs.core.Keyword(null, "trace", "trace", -1082747415);
                }
              }());
            } else {
              return and__8620__auto__;
            }
          }())) {
            if (cljs.core.truth_(taoensso.timbre.ns_filter.call(null, (new cljs.core.Keyword(null, "ns-whitelist", "ns-whitelist", -1717299774)).cljs$core$IFn$_invoke$arity$1(appender), (new cljs.core.Keyword(null, "ns-blacklist", "ns-blacklist", 1957763142)).cljs$core$IFn$_invoke$arity$1(appender), _QMARK_ns_str))) {
              var rate_limit_specs = (new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022)).cljs$core$IFn$_invoke$arity$1(appender);
              var rate_limit_okay_QMARK_ = function() {
                var or__8632__auto__ = cljs.core.empty_QMARK_.call(null, rate_limit_specs);
                if (or__8632__auto__) {
                  return or__8632__auto__;
                } else {
                  var rl_fn = taoensso.timbre.get_rate_limiter.call(null, id, rate_limit_specs);
                  return cljs.core.not.call(null, rl_fn.call(null, cljs.core.force.call(null, (new cljs.core.Keyword(null, "hash_", "hash_", -827203612)).cljs$core$IFn$_invoke$arity$1(data_36212__$1))));
                }
              }();
              if (rate_limit_okay_QMARK_) {
                var map__36199 = appender;
                var map__36199__$1 = (!(map__36199 == null) ? map__36199.cljs$lang$protocol_mask$partition0$ & 64 || map__36199.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36199) : map__36199;
                var apfn = cljs.core.get.call(null, map__36199__$1, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
                var async_QMARK_ = cljs.core.get.call(null, map__36199__$1, new cljs.core.Keyword(null, "async?", "async?", 1523057758));
                var output_fn = function() {
                  var f = (new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539)).cljs$core$IFn$_invoke$arity$1(appender);
                  if (cljs.core.truth_(function() {
                    var or__8632__auto__ = f == null;
                    if (or__8632__auto__) {
                      return or__8632__auto__;
                    } else {
                      return taoensso.encore.kw_identical_QMARK_.call(null, f, new cljs.core.Keyword(null, "inherit", "inherit", -1840815422));
                    }
                  }())) {
                    return output_fn1_36213;
                  } else {
                    return f;
                  }
                }();
                var output_ = new cljs.core.Delay(function(map__36199, map__36199__$1, apfn, async_QMARK_, output_fn, rate_limit_specs, rate_limit_okay_QMARK_, output_fn1_36213, data_36212__$1, temp__4657__auto___36211, instant_36205, context_36206, vargs_36207, margs_36208, data_36209, _QMARK_data_36210) {
                  return function() {
                    return output_fn.call(null, data_36212__$1);
                  };
                }(map__36199, map__36199__$1, apfn, async_QMARK_, output_fn, rate_limit_specs, rate_limit_okay_QMARK_, output_fn1_36213, data_36212__$1, temp__4657__auto___36211, instant_36205, context_36206, vargs_36207, margs_36208, data_36209, _QMARK_data_36210), null);
                var data__$2 = cljs.core.conj.call(null, data_36212__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "appender-id", "appender-id", -1917983538), id, new cljs.core.Keyword(null, "appender", "appender", 1267426510), appender, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), output_fn, new cljs.core.Keyword(null, "output_", "output_", -36797880), output_], null));
                var _QMARK_data__$1 = function() {
                  var temp__4655__auto__ = (new cljs.core.Keyword(null, "middleware-fn", "middleware-fn", -61585752)).cljs$core$IFn$_invoke$arity$1(appender);
                  if (cljs.core.truth_(temp__4655__auto__)) {
                    var mfn = temp__4655__auto__;
                    return mfn.call(null, data__$2);
                  } else {
                    return data__$2;
                  }
                }();
                var temp__4657__auto____$1 = _QMARK_data__$1;
                if (cljs.core.truth_(temp__4657__auto____$1)) {
                  var data__$3 = temp__4657__auto____$1;
                  return apfn.call(null, data__$3);
                } else {
                  return null;
                }
              } else {
                return null;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(output_fn1_36213, data_36212__$1, temp__4657__auto___36211, instant_36205, context_36206, vargs_36207, margs_36208, data_36209, _QMARK_data_36210), null, (new cljs.core.Keyword(null, "appenders", "appenders", 1245583998)).cljs$core$IFn$_invoke$arity$1(config));
    } else {
    }
  } else {
  }
  return null;
};
taoensso.timbre._log_BANG_.cljs$lang$maxFixedArity = 10;
taoensso.timbre.stacktrace = function taoensso$timbre$stacktrace(var_args) {
  var args36214 = [];
  var len__9707__auto___36217 = arguments.length;
  var i__9708__auto___36218 = 0;
  while (true) {
    if (i__9708__auto___36218 < len__9707__auto___36217) {
      args36214.push(arguments[i__9708__auto___36218]);
      var G__36219 = i__9708__auto___36218 + 1;
      i__9708__auto___36218 = G__36219;
      continue;
    } else {
    }
    break;
  }
  var G__36216 = args36214.length;
  switch(G__36216) {
    case 1:
      return taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36214.length)].join(""));;
  }
};
taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$1 = function(err) {
  return taoensso.timbre.stacktrace.call(null, err, null);
};
taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$2 = function(err, opts) {
  return [cljs.core.str(err)].join("");
};
taoensso.timbre.stacktrace.cljs$lang$maxFixedArity = 2;
taoensso.timbre.console__QMARK_appender = taoensso.timbre.appenders.core.console_appender;
taoensso.timbre.ordered_levels = taoensso.timbre._levels_vec;
taoensso.timbre.log_QMARK_ = taoensso.timbre.may_log_QMARK_;
taoensso.timbre.logging_enabled_QMARK_ = function taoensso$timbre$logging_enabled_QMARK_(level, compile_time_ns) {
  return taoensso.timbre.may_log_QMARK_.call(null, level, [cljs.core.str(compile_time_ns)].join(""));
};
taoensso.timbre.str_println = function taoensso$timbre$str_println(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36222 = arguments.length;
  var i__9708__auto___36223 = 0;
  while (true) {
    if (i__9708__auto___36223 < len__9707__auto___36222) {
      args__9714__auto__.push(arguments[i__9708__auto___36223]);
      var G__36224 = i__9708__auto___36223 + 1;
      i__9708__auto___36223 = G__36224;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 0 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(0), 0, null) : null;
  return taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic(argseq__9715__auto__);
};
taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return taoensso.timbre.str_join.call(null, xs);
};
taoensso.timbre.str_println.cljs$lang$maxFixedArity = 0;
taoensso.timbre.str_println.cljs$lang$applyTo = function(seq36221) {
  return taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq36221));
};
goog.provide("taoensso.sente");
goog.require("cljs.core");
goog.require("taoensso.timbre");
goog.require("taoensso.sente.interfaces");
goog.require("cljs.core.async");
goog.require("taoensso.encore");
goog.require("clojure.string");
if (cljs.core.vector_QMARK_.call(null, taoensso.encore.encore_version)) {
  taoensso.encore.assert_min_encore_version.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 79, 1], null));
} else {
  taoensso.encore.assert_min_encore_version.call(null, 2.79);
}
taoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 11, 0], null);
taoensso.sente.node_target_QMARK_ = cljs.core._EQ_.call(null, cljs.core._STAR_target_STAR_, "nodejs");
if (typeof taoensso.sente.debug_mode_QMARK__ !== "undefined") {
} else {
  taoensso.sente.debug_mode_QMARK__ = cljs.core.atom.call(null, false);
}
taoensso.sente.expected = function taoensso$sente$expected(expected__$1, x) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "expected", "expected", 1583670997), expected__$1, new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, x), new cljs.core.Keyword(null, "value", "value", 305978217), x], null)], null);
};
taoensso.sente.validate_event = function taoensso$sente$validate_event(x) {
  if (!cljs.core.vector_QMARK_.call(null, x)) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "wrong-type", "wrong-type", 929556915), taoensso.sente.expected.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), x)], null);
  } else {
    if (cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [1, null, 2, null], null), null)).call(null, cljs.core.count.call(null, x)))) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "wrong-length", "wrong-length", 1367572281), taoensso.sente.expected.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [1, null, 2, null], null), null), x)], null);
    } else {
      var vec__36230 = x;
      var ev_id = cljs.core.nth.call(null, vec__36230, 0, null);
      var _ = cljs.core.nth.call(null, vec__36230, 1, null);
      if (!(ev_id instanceof cljs.core.Keyword)) {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "wrong-id-type", "wrong-id-type", -1213601689), taoensso.sente.expected.call(null, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), ev_id)], null);
      } else {
        if (cljs.core.not.call(null, cljs.core.namespace.call(null, ev_id))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "unnamespaced-id", "unnamespaced-id", 1976189772), taoensso.sente.expected.call(null, new cljs.core.Keyword(null, "namespaced-keyword", "namespaced-keyword", 131372895), ev_id)], null);
        } else {
          return null;
        }
      }
    }
  }
};
taoensso.sente.assert_event = function taoensso$sente$assert_event(x) {
  var temp__4657__auto__ = taoensso.sente.validate_event.call(null, x);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var errs = temp__4657__auto__;
    throw cljs.core.ex_info.call(null, "Invalid event", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "given", "given", 716253602), x, new cljs.core.Keyword(null, "errors", "errors", -908790718), errs], null));
  } else {
    return null;
  }
};
taoensso.sente.event_QMARK_ = function taoensso$sente$event_QMARK_(x) {
  return taoensso.sente.validate_event.call(null, x) == null;
};
taoensso.sente.as_event = function taoensso$sente$as_event(x) {
  var temp__4655__auto__ = taoensso.sente.validate_event.call(null, x);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var errs = temp__4655__auto__;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "bad-event", "chsk/bad-event", -565206930), x], null);
  } else {
    return x;
  }
};
taoensso.sente.client_event_msg_QMARK_ = function taoensso$sente$client_event_msg_QMARK_(x) {
  var and__8620__auto__ = cljs.core.map_QMARK_.call(null, x);
  if (and__8620__auto__) {
    var and__8620__auto____$1 = taoensso.encore.ks_EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "event", "event", 301435442), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "?data", "?data", -9471433), null, new cljs.core.Keyword(null, "send-fn", 
    "send-fn", 351002041), null], null), null), x);
    if (and__8620__auto____$1) {
      var map__36243 = x;
      var map__36243__$1 = (!(map__36243 == null) ? map__36243.cljs$lang$protocol_mask$partition0$ & 64 || map__36243.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36243) : map__36243;
      var ch_recv = cljs.core.get.call(null, map__36243__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
      var send_fn = cljs.core.get.call(null, map__36243__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
      var state = cljs.core.get.call(null, map__36243__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var event = cljs.core.get.call(null, map__36243__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
      var and__8620__auto____$2 = taoensso.encore.chan_QMARK_.call(null, ch_recv);
      if (and__8620__auto____$2) {
        var and__8620__auto____$3 = cljs.core.ifn_QMARK_.call(null, send_fn);
        if (and__8620__auto____$3) {
          var and__8620__auto____$4 = taoensso.encore.atom_QMARK_.call(null, state);
          if (and__8620__auto____$4) {
            return taoensso.sente.event_QMARK_.call(null, event);
          } else {
            return and__8620__auto____$4;
          }
        } else {
          return and__8620__auto____$3;
        }
      } else {
        return and__8620__auto____$2;
      }
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
taoensso.sente.server_event_msg_QMARK_ = function taoensso$sente$server_event_msg_QMARK_(x) {
  var and__8620__auto__ = cljs.core.map_QMARK_.call(null, x);
  if (and__8620__auto__) {
    var and__8620__auto____$1 = taoensso.encore.ks_EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), null, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), null, new cljs.core.Keyword(null, "uid", "uid", -1447769400), 
    null, new cljs.core.Keyword(null, "event", "event", 301435442), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), null, new cljs.core.Keyword(null, "?data", "?data", -9471433), null, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), null], null), null), x);
    if (and__8620__auto____$1) {
      var map__36255 = x;
      var map__36255__$1 = (!(map__36255 == null) ? map__36255.cljs$lang$protocol_mask$partition0$ & 64 || map__36255.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36255) : map__36255;
      var ch_recv = cljs.core.get.call(null, map__36255__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
      var send_fn = cljs.core.get.call(null, map__36255__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
      var connected_uids = cljs.core.get.call(null, map__36255__$1, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231));
      var ring_req = cljs.core.get.call(null, map__36255__$1, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961));
      var client_id = cljs.core.get.call(null, map__36255__$1, new cljs.core.Keyword(null, "client-id", "client-id", -464622140));
      var event = cljs.core.get.call(null, map__36255__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
      var _QMARK_reply_fn = cljs.core.get.call(null, map__36255__$1, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592));
      var and__8620__auto____$2 = taoensso.encore.chan_QMARK_.call(null, ch_recv);
      if (and__8620__auto____$2) {
        var and__8620__auto____$3 = cljs.core.ifn_QMARK_.call(null, send_fn);
        if (and__8620__auto____$3) {
          var and__8620__auto____$4 = taoensso.encore.atom_QMARK_.call(null, connected_uids);
          if (and__8620__auto____$4) {
            var and__8620__auto____$5 = cljs.core.map_QMARK_.call(null, ring_req);
            if (and__8620__auto____$5) {
              var and__8620__auto____$6 = taoensso.encore.nblank_str_QMARK_.call(null, client_id);
              if (and__8620__auto____$6) {
                var and__8620__auto____$7 = taoensso.sente.event_QMARK_.call(null, event);
                if (cljs.core.truth_(and__8620__auto____$7)) {
                  return _QMARK_reply_fn == null || cljs.core.ifn_QMARK_.call(null, _QMARK_reply_fn);
                } else {
                  return and__8620__auto____$7;
                }
              } else {
                return and__8620__auto____$6;
              }
            } else {
              return and__8620__auto____$5;
            }
          } else {
            return and__8620__auto____$4;
          }
        } else {
          return and__8620__auto____$3;
        }
      } else {
        return and__8620__auto____$2;
      }
    } else {
      return and__8620__auto____$1;
    }
  } else {
    return and__8620__auto__;
  }
};
taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv, p__36257) {
  var map__36263 = p__36257;
  var map__36263__$1 = (!(map__36263 == null) ? map__36263.cljs$lang$protocol_mask$partition0$ & 64 || map__36263.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36263) : map__36263;
  var ev_msg = map__36263__$1;
  var event = cljs.core.get.call(null, map__36263__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  var _QMARK_reply_fn = cljs.core.get.call(null, map__36263__$1, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592));
  var vec__36265 = taoensso.sente.as_event.call(null, event);
  var ev_id = cljs.core.nth.call(null, vec__36265, 0, null);
  var ev__QMARK_data = cljs.core.nth.call(null, vec__36265, 1, null);
  var valid_event = vec__36265;
  var ev_msg_STAR_ = cljs.core.merge.call(null, ev_msg, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "event", "event", 301435442), valid_event, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), _QMARK_reply_fn, new cljs.core.Keyword(null, "id", "id", -1388402092), ev_id, new cljs.core.Keyword(null, "?data", "?data", -9471433), ev__QMARK_data], null));
  if (cljs.core.not.call(null, taoensso.sente.server_event_msg_QMARK_.call(null, ev_msg_STAR_))) {
    return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 187, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__36265, ev_id, ev__QMARK_data, valid_event, ev_msg_STAR_, map__36263, map__36263__$1, ev_msg, event, _QMARK_reply_fn) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Bad ev-msg: %s", ev_msg], null);
      };
    }(vec__36265, ev_id, ev__QMARK_data, valid_event, ev_msg_STAR_, map__36263, map__36263__$1, ev_msg, event, _QMARK_reply_fn), null), null, -1774175834);
  } else {
    return cljs.core.async.put_BANG_.call(null, ch_recv, ev_msg_STAR_);
  }
};
taoensso.sente.cb_error_QMARK_ = function taoensso$sente$cb_error_QMARK_(cb_reply_clj) {
  return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264), null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439), null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489), null], null), null)).call(null, cb_reply_clj);
};
taoensso.sente.cb_success_QMARK_ = function taoensso$sente$cb_success_QMARK_(cb_reply_clj) {
  return cljs.core.not.call(null, taoensso.sente.cb_error_QMARK_.call(null, cb_reply_clj));
};
taoensso.sente.unpack = function taoensso$sente$unpack(packer, prefixed_pstr) {
  if (typeof prefixed_pstr === "string") {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(string? prefixed-pstr)", prefixed_pstr, null, null);
  }
  var wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_.call(null, prefixed_pstr, "+");
  var pstr = cljs.core.subs.call(null, prefixed_pstr, 1);
  var clj = function() {
    try {
      return taoensso.sente.interfaces.unpack.call(null, packer, pstr);
    } catch (e36275) {
      var t = e36275;
      taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 208, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(t, wrapped_QMARK_, pstr) {
        return function() {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Bad package: %s (%s)", pstr, t], null);
        };
      }(t, wrapped_QMARK_, pstr), null), null, -1801964054);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "bad-package", "chsk/bad-package", 501893679), pstr], null);
    }
  }();
  var vec__36272 = wrapped_QMARK_ ? clj : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj, null], null);
  var clj__$1 = cljs.core.nth.call(null, vec__36272, 0, null);
  var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__36272, 1, null);
  var _QMARK_cb_uuid__$1 = cljs.core._EQ_.call(null, 0, _QMARK_cb_uuid) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : _QMARK_cb_uuid;
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 214, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(wrapped_QMARK_, pstr, clj, vec__36272, clj__$1, _QMARK_cb_uuid, _QMARK_cb_uuid__$1) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unpacking: %s -\x3e %s", prefixed_pstr, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1, _QMARK_cb_uuid__$1], null)], null);
    };
  }(wrapped_QMARK_, pstr, clj, vec__36272, clj__$1, _QMARK_cb_uuid, _QMARK_cb_uuid__$1), null), null, 1716250574);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1, _QMARK_cb_uuid__$1], null);
};
taoensso.sente.with__QMARK_meta = function taoensso$sente$with__QMARK_meta(x, _QMARK_m) {
  if (cljs.core.seq.call(null, _QMARK_m)) {
    return cljs.core.with_meta.call(null, x, _QMARK_m);
  } else {
    return x;
  }
};
taoensso.sente.pack = function taoensso$sente$pack(var_args) {
  var args36276 = [];
  var len__9707__auto___36279 = arguments.length;
  var i__9708__auto___36280 = 0;
  while (true) {
    if (i__9708__auto___36280 < len__9707__auto___36279) {
      args36276.push(arguments[i__9708__auto___36280]);
      var G__36281 = i__9708__auto___36280 + 1;
      i__9708__auto___36280 = G__36281;
      continue;
    } else {
    }
    break;
  }
  var G__36278 = args36276.length;
  switch(G__36278) {
    case 3:
      return taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return taoensso.sente.pack.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36276.length)].join(""));;
  }
};
taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = function(packer, _QMARK_packer_meta, clj) {
  var pstr = [cljs.core.str("-"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, packer, taoensso.sente.with__QMARK_meta.call(null, clj, _QMARK_packer_meta)))].join("");
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 224, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(pstr) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Packing (unwrapped): %s -\x3e %s", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_packer_meta, clj], null), pstr], null);
    };
  }(pstr), null), null, 374203190);
  return pstr;
};
taoensso.sente.pack.cljs$core$IFn$_invoke$arity$4 = function(packer, _QMARK_packer_meta, clj, _QMARK_cb_uuid) {
  var _QMARK_cb_uuid__$1 = cljs.core._EQ_.call(null, _QMARK_cb_uuid, new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321)) ? 0 : _QMARK_cb_uuid;
  var wrapped_clj = cljs.core.truth_(_QMARK_cb_uuid__$1) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj, _QMARK_cb_uuid__$1], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null);
  var pstr = [cljs.core.str("+"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, packer, taoensso.sente.with__QMARK_meta.call(null, wrapped_clj, _QMARK_packer_meta)))].join("");
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 234, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(_QMARK_cb_uuid__$1, wrapped_clj, pstr) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Packing (wrapped): %s -\x3e %s", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_packer_meta, clj, _QMARK_cb_uuid__$1], null), pstr], null);
    };
  }(_QMARK_cb_uuid__$1, wrapped_clj, pstr), null), null, 715848454);
  return pstr;
};
taoensso.sente.pack.cljs$lang$maxFixedArity = 4;
taoensso.sente.EdnPacker = function() {
};
taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = true;
taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.encore.pr_edn.call(null, x);
};
taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.encore.read_edn.call(null, s);
};
taoensso.sente.EdnPacker.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.sente.EdnPacker.cljs$lang$type = true;
taoensso.sente.EdnPacker.cljs$lang$ctorStr = "taoensso.sente/EdnPacker";
taoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.sente/EdnPacker");
};
taoensso.sente.__GT_EdnPacker = function taoensso$sente$__GT_EdnPacker() {
  return new taoensso.sente.EdnPacker;
};
taoensso.sente.default_edn_packer = new taoensso.sente.EdnPacker;
taoensso.sente.coerce_packer = function taoensso$sente$coerce_packer(x) {
  if (cljs.core._EQ_.call(null, x, new cljs.core.Keyword(null, "edn", "edn", 1317840885))) {
    return taoensso.sente.default_edn_packer;
  } else {
    var e = function() {
      try {
        if (function(p1__36283_SHARP_) {
          if (!(p1__36283_SHARP_ == null)) {
            if (false || p1__36283_SHARP_.taoensso$sente$interfaces$IPacker$) {
              return true;
            } else {
              if (!p1__36283_SHARP_.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, p1__36283_SHARP_);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, p1__36283_SHARP_);
          }
        }.call(null, x)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e36286) {
        if (e36286 instanceof Error) {
          var e = e36286;
          return e;
        } else {
          throw e36286;
        }
      }
    }();
    if (e == null) {
      return x;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "((fn* [p1__36283#] (satisfies? interfaces/IPacker p1__36283#)) x)", x, e, null);
    }
  }
};
taoensso.sente.next_idx_BANG_ = taoensso.encore.idx_fn.call(null);
taoensso.sente.make_channel_socket_server_BANG_ = function taoensso$sente$make_channel_socket_server_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___36594 = arguments.length;
  var i__9708__auto___36595 = 0;
  while (true) {
    if (i__9708__auto___36595 < len__9707__auto___36594) {
      args__9714__auto__.push(arguments[i__9708__auto___36595]);
      var G__36596 = i__9708__auto___36595 + 1;
      i__9708__auto___36595 = G__36596;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(web_server_ch_adapter, p__36291) {
  var vec__36292 = p__36291;
  var map__36295 = cljs.core.nth.call(null, vec__36292, 0, null);
  var map__36295__$1 = (!(map__36295 == null) ? map__36295.cljs$lang$protocol_mask$partition0$ & 64 || map__36295.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36295) : map__36295;
  var recv_buf_or_n = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "recv-buf-or-n", "recv-buf-or-n", 1363950355), cljs.core.async.sliding_buffer.call(null, 1E3));
  var ws_kalive_ms = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), taoensso.encore.ms.call(null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), 25));
  var lp_timeout_ms = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "lp-timeout-ms", "lp-timeout-ms", -1451963133), taoensso.encore.ms.call(null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), 20));
  var send_buf_ms_ajax = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "send-buf-ms-ajax", "send-buf-ms-ajax", 1546129037), 100);
  var send_buf_ms_ws = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "send-buf-ms-ws", "send-buf-ms-ws", -1149586238), 30);
  var user_id_fn = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "user-id-fn", "user-id-fn", -1532150029), function(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws) {
    return function(ring_req) {
      return cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null));
    };
  }(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws));
  var csrf_token_fn = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "csrf-token-fn", "csrf-token-fn", -1846298394), function(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn) {
    return function(ring_req) {
      var or__8632__auto__ = cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)], null));
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword("ring.middleware.anti-forgery", "anti-forgery-token", "ring.middleware.anti-forgery/anti-forgery-token", 571563484)], null));
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          return cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), "__anti-forgery-token"], null));
        }
      }
    };
  }(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn));
  var handshake_data_fn = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "handshake-data-fn", "handshake-data-fn", 2011983089), function(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn) {
    return function(ring_req) {
      return null;
    };
  }(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn));
  var packer = cljs.core.get.call(null, map__36295__$1, new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "edn", "edn", 1317840885));
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var e = function() {
      try {
        if (taoensso.encore.pos_int_QMARK_.call(null, send_buf_ms_ajax)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e36297) {
        if (e36297 instanceof Error) {
          var e = e36297;
          return e;
        } else {
          throw e36297;
        }
      }
    }();
    if (e == null) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/pos-int? send-buf-ms-ajax)", send_buf_ms_ajax, e, null);
    }
  }(), function() {
    var e = function() {
      try {
        if (taoensso.encore.pos_int_QMARK_.call(null, send_buf_ms_ws)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e36298) {
        if (e36298 instanceof Error) {
          var e = e36298;
          return e;
        } else {
          throw e36298;
        }
      }
    }();
    if (e == null) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/pos-int? send-buf-ms-ws)", send_buf_ms_ws, e, null);
    }
  }()], null);
  var e_36597 = function() {
    try {
      if (function(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(p1__36288_SHARP_) {
          if (!(p1__36288_SHARP_ == null)) {
            if (false || p1__36288_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$) {
              return true;
            } else {
              if (!p1__36288_SHARP_.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IServerChanAdapter, p1__36288_SHARP_);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IServerChanAdapter, p1__36288_SHARP_);
          }
        };
      }(vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer).call(null, web_server_ch_adapter)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e36299) {
      if (e36299 instanceof Error) {
        var e = e36299;
        return e;
      } else {
        throw e36299;
      }
    }
  }();
  if (e_36597 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "((fn* [p1__36288#] (satisfies? interfaces/IServerChanAdapter p1__36288#)) web-server-ch-adapter)", web_server_ch_adapter, e_36597, null);
  }
  var max_ms_36598 = taoensso.sente.default_client_side_ajax_timeout_ms;
  if (lp_timeout_ms >= max_ms_36598) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(":lp-timeout-ms must be \x3c "), cljs.core.str(max_ms_36598)].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "lp-timeout-ms", "lp-timeout-ms", -1451963133), lp_timeout_ms, new cljs.core.Keyword(null, "default-client-side-ajax-timeout-ms", "default-client-side-ajax-timeout-ms", 1149929762), max_ms_36598], null));
  } else {
  }
  var packer__$1 = taoensso.sente.coerce_packer.call(null, packer);
  var ch_recv = cljs.core.async.chan.call(null, recv_buf_or_n);
  var user_id_fn__$1 = function(packer__$1, ch_recv, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(ring_req, client_id) {
      var or__8632__auto__ = user_id_fn.call(null, cljs.core.assoc.call(null, ring_req, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id));
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return new cljs.core.Keyword("taoensso.sente", "nil-uid", "taoensso.sente/nil-uid", -2111603486);
      }
    };
  }(packer__$1, ch_recv, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var conns_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentArrayMap.EMPTY], null));
  var send_buffers_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentArrayMap.EMPTY], null));
  var connected_uids_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.PersistentHashSet.EMPTY], null));
  var upd_conn_BANG_ = function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function() {
      var G__36599 = null;
      var G__36599__3 = function(conn_type, uid, client_id) {
        return taoensso.encore.swap_in_BANG_.call(null, conns_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type, uid, client_id], null), function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(_QMARK_v) {
            var vec__36301 = _QMARK_v;
            var _QMARK_sch = cljs.core.nth.call(null, vec__36301, 0, null);
            var _udt = cljs.core.nth.call(null, vec__36301, 1, null);
            var new_udt = taoensso.encore.now_udt.call(null);
            return taoensso.encore.swapped.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch, new_udt], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "init?", "init?", 438181499), _QMARK_v == null, new cljs.core.Keyword(null, "udt", "udt", 2011712751), new_udt, new cljs.core.Keyword(null, "?sch", "?sch", 2064493898), _QMARK_sch], null));
          };
        }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
      };
      var G__36599__4 = function(conn_type, uid, client_id, new__QMARK_sch) {
        return taoensso.encore.swap_in_BANG_.call(null, conns_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type, uid, client_id], null), function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(_QMARK_v) {
            var new_udt = taoensso.encore.now_udt.call(null);
            return taoensso.encore.swapped.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch, new_udt], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "init?", "init?", 438181499), _QMARK_v == null, new cljs.core.Keyword(null, "udt", "udt", 2011712751), new_udt, new cljs.core.Keyword(null, "?sch", "?sch", 2064493898), new__QMARK_sch], null));
          };
        }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
      };
      G__36599 = function(conn_type, uid, client_id, new__QMARK_sch) {
        switch(arguments.length) {
          case 3:
            return G__36599__3.call(this, conn_type, uid, client_id);
          case 4:
            return G__36599__4.call(this, conn_type, uid, client_id, new__QMARK_sch);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__36599.cljs$core$IFn$_invoke$arity$3 = G__36599__3;
      G__36599.cljs$core$IFn$_invoke$arity$4 = G__36599__4;
      return G__36599;
    }();
  }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var connect_uid_BANG_ = function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(conn_type, uid) {
      if (cljs.core.truth_(function() {
        var e = function() {
          try {
            if (taoensso.truss.impl.some_QMARK_.call(null, uid)) {
              return null;
            } else {
              return taoensso.truss.impl._dummy_error;
            }
          } catch (e36304) {
            if (e36304 instanceof Error) {
              var e = e36304;
              return e;
            } else {
              throw e36304;
            }
          }
        }();
        if (e == null) {
          return true;
        } else {
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/some? uid)", uid, e, null);
        }
      }())) {
      } else {
        throw new Error("Assert failed: (have? uid)");
      }
      var newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.call(null, connected_uids_, cljs.core.PersistentVector.EMPTY, function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(p__36305) {
          var map__36306 = p__36305;
          var map__36306__$1 = (!(map__36306 == null) ? map__36306.cljs$lang$protocol_mask$partition0$ & 64 || map__36306.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36306) : map__36306;
          var old_m = map__36306__$1;
          var ws = cljs.core.get.call(null, map__36306__$1, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          var ajax = cljs.core.get.call(null, map__36306__$1, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          var any = cljs.core.get.call(null, map__36306__$1, new cljs.core.Keyword(null, "any", "any", 1705907423));
          var new_m = function() {
            var G__36308 = conn_type instanceof cljs.core.Keyword ? conn_type.fqn : null;
            switch(G__36308) {
              case "ws":
                return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.conj.call(null, ws, uid), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), ajax, new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.conj.call(null, any, uid)], null);
                break;
              case "ajax":
                return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), ws, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.conj.call(null, ajax, uid), new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.conj.call(null, any, uid)], null);
                break;
              default:
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(conn_type)].join(""));;
            }
          }();
          return taoensso.encore.swapped.call(null, new_m, function() {
            var old_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(old_m);
            var new_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(new_m);
            if (!cljs.core.contains_QMARK_.call(null, old_any, uid) && cljs.core.contains_QMARK_.call(null, new_any, uid)) {
              return new cljs.core.Keyword(null, "newly-connected", "newly-connected", -2029862681);
            } else {
              return null;
            }
          }());
        };
      }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
      return newly_connected_QMARK_;
    };
  }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var upd_connected_uid_BANG_ = function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(uid) {
      if (cljs.core.truth_(function() {
        var e = function() {
          try {
            if (taoensso.truss.impl.some_QMARK_.call(null, uid)) {
              return null;
            } else {
              return taoensso.truss.impl._dummy_error;
            }
          } catch (e36309) {
            if (e36309 instanceof Error) {
              var e = e36309;
              return e;
            } else {
              throw e36309;
            }
          }
        }();
        if (e == null) {
          return true;
        } else {
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/some? uid)", uid, e, null);
        }
      }())) {
      } else {
        throw new Error("Assert failed: (have? uid)");
      }
      var newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.call(null, connected_uids_, cljs.core.PersistentVector.EMPTY, function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(p__36310) {
          var map__36311 = p__36310;
          var map__36311__$1 = (!(map__36311 == null) ? map__36311.cljs$lang$protocol_mask$partition0$ & 64 || map__36311.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36311) : map__36311;
          var old_m = map__36311__$1;
          var ws = cljs.core.get.call(null, map__36311__$1, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          var ajax = cljs.core.get.call(null, map__36311__$1, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          var any = cljs.core.get.call(null, map__36311__$1, new cljs.core.Keyword(null, "any", "any", 1705907423));
          var conns_SINGLEQUOTE_ = cljs.core.deref.call(null, conns_);
          var any_ws_clients_QMARK_ = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ws", "ws", 86841443)).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_), uid);
          var any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ajax", "ajax", 814345549)).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_), uid);
          var any_clients_QMARK_ = any_ws_clients_QMARK_ || any_ajax_clients_QMARK_;
          var new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), any_ws_clients_QMARK_ ? cljs.core.conj.call(null, ws, uid) : cljs.core.disj.call(null, ws, uid), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), any_ajax_clients_QMARK_ ? cljs.core.conj.call(null, ajax, uid) : cljs.core.disj.call(null, ajax, uid), new cljs.core.Keyword(null, "any", "any", 1705907423), any_clients_QMARK_ ? cljs.core.conj.call(null, any, uid) : cljs.core.disj.call(null, 
          any, uid)], null);
          return taoensso.encore.swapped.call(null, new_m, function() {
            var old_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(old_m);
            var new_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(new_m);
            if (cljs.core.contains_QMARK_.call(null, old_any, uid) && !cljs.core.contains_QMARK_.call(null, new_any, uid)) {
              return new cljs.core.Keyword(null, "newly-disconnected", "newly-disconnected", -1586164962);
            } else {
              return null;
            }
          }());
        };
      }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
      return newly_disconnected_QMARK_;
    };
  }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var send_fn = function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function() {
      var G__36601__delegate = function(user_id, ev, p__36313) {
        var vec__36314 = p__36313;
        var map__36317 = cljs.core.nth.call(null, vec__36314, 0, null);
        var map__36317__$1 = (!(map__36317 == null) ? map__36317.cljs$lang$protocol_mask$partition0$ & 64 || map__36317.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36317) : map__36317;
        var opts = map__36317__$1;
        var flush_QMARK_ = cljs.core.get.call(null, map__36317__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
        var uid_36602 = cljs.core._EQ_.call(null, user_id, new cljs.core.Keyword("sente", "all-users-without-uid", "sente/all-users-without-uid", -42979578)) ? new cljs.core.Keyword("taoensso.sente", "nil-uid", "taoensso.sente/nil-uid", -2111603486) : user_id;
        var __36603 = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 405, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(uid_36602, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, 
        send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function() {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send: (-\x3euid %s) %s", uid_36602, ev], null);
          };
        }(uid_36602, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, -1487114431);
        var __36604__$1 = cljs.core.truth_(uid_36602) ? null : function() {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Support for sending to `nil` user-ids has been REMOVED. "), cljs.core.str("Please send to `:sente/all-users-without-uid` instead.")].join("")), cljs.core.str("\n"), cljs.core.str("uid")].join(""));
        }();
        var __36605__$2 = taoensso.sente.assert_event.call(null, ev);
        var ev_uuid_36606 = taoensso.encore.uuid_str.call(null);
        var flush_buffer_BANG__36607 = function(uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(conn_type) {
            var temp__4657__auto__ = taoensso.encore.swap_in_BANG_.call(null, send_buffers_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null), function(uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, 
            recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function(m) {
                var vec__36319 = cljs.core.get.call(null, m, uid_36602);
                var ___$3 = cljs.core.nth.call(null, vec__36319, 0, null);
                var ev_uuids = cljs.core.nth.call(null, vec__36319, 1, null);
                if (cljs.core.contains_QMARK_.call(null, ev_uuids, ev_uuid_36606)) {
                  return taoensso.encore.swapped.call(null, cljs.core.dissoc.call(null, m, uid_36602), cljs.core.get.call(null, m, uid_36602));
                } else {
                  return taoensso.encore.swapped.call(null, m, null);
                }
              };
            }(uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
            if (cljs.core.truth_(temp__4657__auto__)) {
              var pulled = temp__4657__auto__;
              var vec__36322 = pulled;
              var buffered_evs = cljs.core.nth.call(null, vec__36322, 0, null);
              var ev_uuids = cljs.core.nth.call(null, vec__36322, 1, null);
              if (cljs.core.vector_QMARK_.call(null, buffered_evs)) {
              } else {
                taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(vector? buffered-evs)", buffered_evs, null, null);
              }
              if (cljs.core.set_QMARK_.call(null, ev_uuids)) {
              } else {
                taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(set? ev-uuids)", ev_uuids, null, null);
              }
              var packer_metas = cljs.core.mapv.call(null, cljs.core.meta, buffered_evs);
              var combined_packer_meta = cljs.core.reduce.call(null, cljs.core.merge, cljs.core.PersistentArrayMap.EMPTY, packer_metas);
              var buffered_evs_ppstr = taoensso.sente.pack.call(null, packer__$1, combined_packer_meta, buffered_evs);
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 441, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(packer_metas, combined_packer_meta, buffered_evs_ppstr, vec__36322, buffered_evs, ev_uuids, pulled, temp__4657__auto__, 
              uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["buffered-evs-ppstr: %s (with meta %s)", buffered_evs_ppstr, combined_packer_meta], null);
                };
              }(packer_metas, combined_packer_meta, buffered_evs_ppstr, vec__36322, buffered_evs, ev_uuids, pulled, temp__4657__auto__, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
              user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, 151668132);
              var G__36325 = conn_type instanceof cljs.core.Keyword ? conn_type.fqn : null;
              switch(G__36325) {
                case "ws":
                  return taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null, conns_, uid_36602, buffered_evs_ppstr, upd_conn_BANG_);
                  break;
                case "ajax":
                  return taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null, conns_, uid_36602, buffered_evs_ppstr);
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(conn_type)].join(""));;
              }
            } else {
              return null;
            }
          };
        }(uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
        if (cljs.core._EQ_.call(null, ev, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "close", "chsk/close", 1840295819)], null))) {
          taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 452, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, 
          opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
            return function() {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk closing (client may reconnect): %s", uid_36602], null);
            };
          }(uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, -515834594);
          if (cljs.core.truth_(flush_QMARK_)) {
            flush_buffer_BANG__36607.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443));
            flush_buffer_BANG__36607.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          } else {
          }
          var seq__36326_36609 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), uid_36602], null))));
          var chunk__36327_36610 = null;
          var count__36328_36611 = 0;
          var i__36329_36612 = 0;
          while (true) {
            if (i__36329_36612 < count__36328_36611) {
              var vec__36330_36613 = cljs.core._nth.call(null, chunk__36327_36610, i__36329_36612);
              var _QMARK_sch_36614 = cljs.core.nth.call(null, vec__36330_36613, 0, null);
              var _udt_36615 = cljs.core.nth.call(null, vec__36330_36613, 1, null);
              var temp__4657__auto___36616 = _QMARK_sch_36614;
              if (cljs.core.truth_(temp__4657__auto___36616)) {
                var sch_36617 = temp__4657__auto___36616;
                taoensso.sente.interfaces.sch_close_BANG_.call(null, sch_36617);
              } else {
              }
              var G__36618 = seq__36326_36609;
              var G__36619 = chunk__36327_36610;
              var G__36620 = count__36328_36611;
              var G__36621 = i__36329_36612 + 1;
              seq__36326_36609 = G__36618;
              chunk__36327_36610 = G__36619;
              count__36328_36611 = G__36620;
              i__36329_36612 = G__36621;
              continue;
            } else {
              var temp__4657__auto___36622 = cljs.core.seq.call(null, seq__36326_36609);
              if (temp__4657__auto___36622) {
                var seq__36326_36623__$1 = temp__4657__auto___36622;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__36326_36623__$1)) {
                  var c__9443__auto___36624 = cljs.core.chunk_first.call(null, seq__36326_36623__$1);
                  var G__36625 = cljs.core.chunk_rest.call(null, seq__36326_36623__$1);
                  var G__36626 = c__9443__auto___36624;
                  var G__36627 = cljs.core.count.call(null, c__9443__auto___36624);
                  var G__36628 = 0;
                  seq__36326_36609 = G__36625;
                  chunk__36327_36610 = G__36626;
                  count__36328_36611 = G__36627;
                  i__36329_36612 = G__36628;
                  continue;
                } else {
                  var vec__36333_36629 = cljs.core.first.call(null, seq__36326_36623__$1);
                  var _QMARK_sch_36630 = cljs.core.nth.call(null, vec__36333_36629, 0, null);
                  var _udt_36631 = cljs.core.nth.call(null, vec__36333_36629, 1, null);
                  var temp__4657__auto___36632__$1 = _QMARK_sch_36630;
                  if (cljs.core.truth_(temp__4657__auto___36632__$1)) {
                    var sch_36633 = temp__4657__auto___36632__$1;
                    taoensso.sente.interfaces.sch_close_BANG_.call(null, sch_36633);
                  } else {
                  }
                  var G__36634 = cljs.core.next.call(null, seq__36326_36623__$1);
                  var G__36635 = null;
                  var G__36636 = 0;
                  var G__36637 = 0;
                  seq__36326_36609 = G__36634;
                  chunk__36327_36610 = G__36635;
                  count__36328_36611 = G__36636;
                  i__36329_36612 = G__36637;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var seq__36336_36638 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid_36602], null))));
          var chunk__36337_36639 = null;
          var count__36338_36640 = 0;
          var i__36339_36641 = 0;
          while (true) {
            if (i__36339_36641 < count__36338_36640) {
              var vec__36340_36642 = cljs.core._nth.call(null, chunk__36337_36639, i__36339_36641);
              var _QMARK_sch_36643 = cljs.core.nth.call(null, vec__36340_36642, 0, null);
              var _udt_36644 = cljs.core.nth.call(null, vec__36340_36642, 1, null);
              var temp__4657__auto___36645 = _QMARK_sch_36643;
              if (cljs.core.truth_(temp__4657__auto___36645)) {
                var sch_36646 = temp__4657__auto___36645;
                taoensso.sente.interfaces.sch_close_BANG_.call(null, sch_36646);
              } else {
              }
              var G__36647 = seq__36336_36638;
              var G__36648 = chunk__36337_36639;
              var G__36649 = count__36338_36640;
              var G__36650 = i__36339_36641 + 1;
              seq__36336_36638 = G__36647;
              chunk__36337_36639 = G__36648;
              count__36338_36640 = G__36649;
              i__36339_36641 = G__36650;
              continue;
            } else {
              var temp__4657__auto___36651 = cljs.core.seq.call(null, seq__36336_36638);
              if (temp__4657__auto___36651) {
                var seq__36336_36652__$1 = temp__4657__auto___36651;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__36336_36652__$1)) {
                  var c__9443__auto___36653 = cljs.core.chunk_first.call(null, seq__36336_36652__$1);
                  var G__36654 = cljs.core.chunk_rest.call(null, seq__36336_36652__$1);
                  var G__36655 = c__9443__auto___36653;
                  var G__36656 = cljs.core.count.call(null, c__9443__auto___36653);
                  var G__36657 = 0;
                  seq__36336_36638 = G__36654;
                  chunk__36337_36639 = G__36655;
                  count__36338_36640 = G__36656;
                  i__36339_36641 = G__36657;
                  continue;
                } else {
                  var vec__36343_36658 = cljs.core.first.call(null, seq__36336_36652__$1);
                  var _QMARK_sch_36659 = cljs.core.nth.call(null, vec__36343_36658, 0, null);
                  var _udt_36660 = cljs.core.nth.call(null, vec__36343_36658, 1, null);
                  var temp__4657__auto___36661__$1 = _QMARK_sch_36659;
                  if (cljs.core.truth_(temp__4657__auto___36661__$1)) {
                    var sch_36662 = temp__4657__auto___36661__$1;
                    taoensso.sente.interfaces.sch_close_BANG_.call(null, sch_36662);
                  } else {
                  }
                  var G__36663 = cljs.core.next.call(null, seq__36336_36652__$1);
                  var G__36664 = null;
                  var G__36665 = 0;
                  var G__36666 = 0;
                  seq__36336_36638 = G__36663;
                  chunk__36337_36639 = G__36664;
                  count__36338_36640 = G__36665;
                  i__36339_36641 = G__36666;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        } else {
          var seq__36346_36667 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "ajax", "ajax", 814345549)], null));
          var chunk__36347_36668 = null;
          var count__36348_36669 = 0;
          var i__36349_36670 = 0;
          while (true) {
            if (i__36349_36670 < count__36348_36669) {
              var conn_type_36671 = cljs.core._nth.call(null, chunk__36347_36668, i__36349_36670);
              taoensso.encore.swap_in_BANG_.call(null, send_buffers_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_36671, uid_36602], null), function(seq__36346_36667, chunk__36347_36668, count__36348_36669, i__36349_36670, conn_type_36671, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, 
              upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function(_QMARK_v) {
                  if (cljs.core.not.call(null, _QMARK_v)) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null), cljs.core.PersistentHashSet.fromArray([ev_uuid_36606], true)], null);
                  } else {
                    var vec__36350 = _QMARK_v;
                    var buffered_evs = cljs.core.nth.call(null, vec__36350, 0, null);
                    var ev_uuids = cljs.core.nth.call(null, vec__36350, 1, null);
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, buffered_evs, ev), cljs.core.conj.call(null, ev_uuids, ev_uuid_36606)], null);
                  }
                };
              }(seq__36346_36667, chunk__36347_36668, count__36348_36669, i__36349_36670, conn_type_36671, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
              user_id_fn, csrf_token_fn, handshake_data_fn, packer));
              var G__36672 = seq__36346_36667;
              var G__36673 = chunk__36347_36668;
              var G__36674 = count__36348_36669;
              var G__36675 = i__36349_36670 + 1;
              seq__36346_36667 = G__36672;
              chunk__36347_36668 = G__36673;
              count__36348_36669 = G__36674;
              i__36349_36670 = G__36675;
              continue;
            } else {
              var temp__4657__auto___36676 = cljs.core.seq.call(null, seq__36346_36667);
              if (temp__4657__auto___36676) {
                var seq__36346_36677__$1 = temp__4657__auto___36676;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__36346_36677__$1)) {
                  var c__9443__auto___36678 = cljs.core.chunk_first.call(null, seq__36346_36677__$1);
                  var G__36679 = cljs.core.chunk_rest.call(null, seq__36346_36677__$1);
                  var G__36680 = c__9443__auto___36678;
                  var G__36681 = cljs.core.count.call(null, c__9443__auto___36678);
                  var G__36682 = 0;
                  seq__36346_36667 = G__36679;
                  chunk__36347_36668 = G__36680;
                  count__36348_36669 = G__36681;
                  i__36349_36670 = G__36682;
                  continue;
                } else {
                  var conn_type_36683 = cljs.core.first.call(null, seq__36346_36677__$1);
                  taoensso.encore.swap_in_BANG_.call(null, send_buffers_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_36683, uid_36602], null), function(seq__36346_36667, chunk__36347_36668, count__36348_36669, i__36349_36670, conn_type_36683, seq__36346_36677__$1, temp__4657__auto___36676, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, 
                  user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function(_QMARK_v) {
                      if (cljs.core.not.call(null, _QMARK_v)) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null), cljs.core.PersistentHashSet.fromArray([ev_uuid_36606], true)], null);
                      } else {
                        var vec__36353 = _QMARK_v;
                        var buffered_evs = cljs.core.nth.call(null, vec__36353, 0, null);
                        var ev_uuids = cljs.core.nth.call(null, vec__36353, 1, null);
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, buffered_evs, ev), cljs.core.conj.call(null, ev_uuids, ev_uuid_36606)], null);
                      }
                    };
                  }(seq__36346_36667, chunk__36347_36668, count__36348_36669, i__36349_36670, conn_type_36683, seq__36346_36677__$1, temp__4657__auto___36676, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, 
                  lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
                  var G__36684 = cljs.core.next.call(null, seq__36346_36677__$1);
                  var G__36685 = null;
                  var G__36686 = 0;
                  var G__36687 = 0;
                  seq__36346_36667 = G__36684;
                  chunk__36347_36668 = G__36685;
                  count__36348_36669 = G__36686;
                  i__36349_36670 = G__36687;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          if (cljs.core.truth_(flush_QMARK_)) {
            flush_buffer_BANG__36607.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443));
            flush_buffer_BANG__36607.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          } else {
            var ws_timeout_36688 = cljs.core.async.timeout.call(null, send_buf_ms_ws);
            var ajax_timeout_36689 = cljs.core.async.timeout.call(null, send_buf_ms_ajax);
            var c__30349__auto___36690 = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___36690, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
            send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function() {
                var f__30350__auto__ = function() {
                  var switch__30237__auto__ = function(c__30349__auto___36690, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
                  send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function(state_36360) {
                      var state_val_36361 = state_36360[1];
                      if (state_val_36361 === 1) {
                        var state_36360__$1 = state_36360;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36360__$1, 2, ws_timeout_36688);
                      } else {
                        if (state_val_36361 === 2) {
                          var inst_36357 = state_36360[2];
                          var inst_36358 = flush_buffer_BANG__36607.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443));
                          var state_36360__$1 = function() {
                            var statearr_36362 = state_36360;
                            statearr_36362[7] = inst_36357;
                            return statearr_36362;
                          }();
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36360__$1, inst_36358);
                        } else {
                          return null;
                        }
                      }
                    };
                  }(c__30349__auto___36690, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                  handshake_data_fn, packer);
                  return function(switch__30237__auto__, c__30349__auto___36690, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
                  send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function() {
                      var taoensso$sente$state_machine__30238__auto__ = null;
                      var taoensso$sente$state_machine__30238__auto____0 = function() {
                        var statearr_36366 = [null, null, null, null, null, null, null, null];
                        statearr_36366[0] = taoensso$sente$state_machine__30238__auto__;
                        statearr_36366[1] = 1;
                        return statearr_36366;
                      };
                      var taoensso$sente$state_machine__30238__auto____1 = function(state_36360) {
                        while (true) {
                          var ret_value__30239__auto__ = function() {
                            try {
                              while (true) {
                                var result__30240__auto__ = switch__30237__auto__.call(null, state_36360);
                                if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  continue;
                                } else {
                                  return result__30240__auto__;
                                }
                                break;
                              }
                            } catch (e36367) {
                              if (e36367 instanceof Object) {
                                var ex__30241__auto__ = e36367;
                                var statearr_36368_36691 = state_36360;
                                statearr_36368_36691[5] = ex__30241__auto__;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36360);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e36367;
                              }
                            }
                          }();
                          if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var G__36692 = state_36360;
                            state_36360 = G__36692;
                            continue;
                          } else {
                            return ret_value__30239__auto__;
                          }
                          break;
                        }
                      };
                      taoensso$sente$state_machine__30238__auto__ = function(state_36360) {
                        switch(arguments.length) {
                          case 0:
                            return taoensso$sente$state_machine__30238__auto____0.call(this);
                          case 1:
                            return taoensso$sente$state_machine__30238__auto____1.call(this, state_36360);
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                      taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                      return taoensso$sente$state_machine__30238__auto__;
                    }();
                  }(switch__30237__auto__, c__30349__auto___36690, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
                  user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                }();
                var state__30351__auto__ = function() {
                  var statearr_36369 = f__30350__auto__.call(null);
                  statearr_36369[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___36690;
                  return statearr_36369;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
              };
            }(c__30349__auto___36690, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
            handshake_data_fn, packer));
            var c__30349__auto___36693 = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___36693, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
            send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function() {
                var f__30350__auto__ = function() {
                  var switch__30237__auto__ = function(c__30349__auto___36693, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
                  send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function(state_36374) {
                      var state_val_36375 = state_36374[1];
                      if (state_val_36375 === 1) {
                        var state_36374__$1 = state_36374;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36374__$1, 2, ajax_timeout_36689);
                      } else {
                        if (state_val_36375 === 2) {
                          var inst_36371 = state_36374[2];
                          var inst_36372 = flush_buffer_BANG__36607.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
                          var state_36374__$1 = function() {
                            var statearr_36376 = state_36374;
                            statearr_36376[7] = inst_36371;
                            return statearr_36376;
                          }();
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36374__$1, inst_36372);
                        } else {
                          return null;
                        }
                      }
                    };
                  }(c__30349__auto___36693, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                  handshake_data_fn, packer);
                  return function(switch__30237__auto__, c__30349__auto___36693, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
                  send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function() {
                      var taoensso$sente$state_machine__30238__auto__ = null;
                      var taoensso$sente$state_machine__30238__auto____0 = function() {
                        var statearr_36380 = [null, null, null, null, null, null, null, null];
                        statearr_36380[0] = taoensso$sente$state_machine__30238__auto__;
                        statearr_36380[1] = 1;
                        return statearr_36380;
                      };
                      var taoensso$sente$state_machine__30238__auto____1 = function(state_36374) {
                        while (true) {
                          var ret_value__30239__auto__ = function() {
                            try {
                              while (true) {
                                var result__30240__auto__ = switch__30237__auto__.call(null, state_36374);
                                if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  continue;
                                } else {
                                  return result__30240__auto__;
                                }
                                break;
                              }
                            } catch (e36381) {
                              if (e36381 instanceof Object) {
                                var ex__30241__auto__ = e36381;
                                var statearr_36382_36694 = state_36374;
                                statearr_36382_36694[5] = ex__30241__auto__;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36374);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e36381;
                              }
                            }
                          }();
                          if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var G__36695 = state_36374;
                            state_36374 = G__36695;
                            continue;
                          } else {
                            return ret_value__30239__auto__;
                          }
                          break;
                        }
                      };
                      taoensso$sente$state_machine__30238__auto__ = function(state_36374) {
                        switch(arguments.length) {
                          case 0:
                            return taoensso$sente$state_machine__30238__auto____0.call(this);
                          case 1:
                            return taoensso$sente$state_machine__30238__auto____1.call(this, state_36374);
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                      taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                      return taoensso$sente$state_machine__30238__auto__;
                    }();
                  }(switch__30237__auto__, c__30349__auto___36693, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
                  user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                }();
                var state__30351__auto__ = function() {
                  var statearr_36383 = f__30350__auto__.call(null);
                  statearr_36383[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___36693;
                  return statearr_36383;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
              };
            }(c__30349__auto___36693, ws_timeout_36688, ajax_timeout_36689, uid_36602, __36603, __36604__$1, __36605__$2, ev_uuid_36606, flush_buffer_BANG__36607, vec__36314, map__36317, map__36317__$1, opts, flush_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
            handshake_data_fn, packer));
          }
        }
        return null;
      };
      var G__36601 = function(user_id, ev, var_args) {
        var p__36313 = null;
        if (arguments.length > 2) {
          var G__36696__i = 0, G__36696__a = new Array(arguments.length - 2);
          while (G__36696__i < G__36696__a.length) {
            G__36696__a[G__36696__i] = arguments[G__36696__i + 2];
            ++G__36696__i;
          }
          p__36313 = new cljs.core.IndexedSeq(G__36696__a, 0);
        }
        return G__36601__delegate.call(this, user_id, ev, p__36313);
      };
      G__36601.cljs$lang$maxFixedArity = 2;
      G__36601.cljs$lang$applyTo = function(arglist__36697) {
        var user_id = cljs.core.first(arglist__36697);
        arglist__36697 = cljs.core.next(arglist__36697);
        var ev = cljs.core.first(arglist__36697);
        var p__36313 = cljs.core.rest(arglist__36697);
        return G__36601__delegate(user_id, ev, p__36313);
      };
      G__36601.cljs$core$IFn$_invoke$arity$variadic = G__36601__delegate;
      return G__36601;
    }();
  }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var ev_msg_const = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), ch_recv, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), connected_uids_], null);
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), ch_recv, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), connected_uids_, new cljs.core.Keyword(null, "ajax-post-fn", "ajax-post-fn", 1830071264), function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, 
  send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(ring_req) {
      return taoensso.sente.interfaces.ring_req__GT_server_ch_resp.call(null, web_server_ch_adapter, ring_req, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-open", "on-open", -1391088163), function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
      user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(server_ch, websocket_QMARK_) {
          if (cljs.core.not.call(null, websocket_QMARK_)) {
          } else {
            throw new Error("Assert failed: (not websocket?)");
          }
          var params = cljs.core.get.call(null, ring_req, new cljs.core.Keyword(null, "params", "params", 710516235));
          var ppstr = cljs.core.get.call(null, params, new cljs.core.Keyword(null, "ppstr", "ppstr", 1557495252));
          var client_id = cljs.core.get.call(null, params, new cljs.core.Keyword(null, "client-id", "client-id", -464622140));
          var vec__36384 = taoensso.sente.unpack.call(null, packer__$1, ppstr);
          var clj = cljs.core.nth.call(null, vec__36384, 0, null);
          var has_cb_QMARK_ = cljs.core.nth.call(null, vec__36384, 1, null);
          var reply_fn = function() {
            var replied_QMARK__ = cljs.core.atom.call(null, false);
            return function(replied_QMARK__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function(resp_clj) {
                if (cljs.core.truth_(cljs.core.compare_and_set_BANG_.call(null, replied_QMARK__, false, true))) {
                  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 521, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(replied_QMARK__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, 
                  send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function() {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ajax post reply): %s", resp_clj], null);
                    };
                  }(replied_QMARK__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, 1025508743);
                  return taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, websocket_QMARK_, taoensso.sente.pack.call(null, packer__$1, cljs.core.meta.call(null, resp_clj), resp_clj));
                } else {
                  return null;
                }
              };
            }(replied_QMARK__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
          }();
          taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_.call(null, ch_recv, cljs.core.merge.call(null, ev_msg_const, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), ring_req, new cljs.core.Keyword(null, "event", "event", 301435442), clj, new cljs.core.Keyword(null, "uid", "uid", -1447769400), user_id_fn__$1.call(null, ring_req, client_id), new cljs.core.Keyword(null, 
          "?reply-fn", "?reply-fn", -1479510592), cljs.core.truth_(has_cb_QMARK_) ? reply_fn : null], null)));
          if (cljs.core.truth_(has_cb_QMARK_)) {
            var temp__4657__auto__ = lp_timeout_ms;
            if (cljs.core.truth_(temp__4657__auto__)) {
              var ms = temp__4657__auto__;
              var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
              cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__, ms, temp__4657__auto__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, reply_fn, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
              packer) {
                return function() {
                  var f__30350__auto__ = function() {
                    var switch__30237__auto__ = function(c__30349__auto__, ms, temp__4657__auto__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, reply_fn, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                      return function(state_36392) {
                        var state_val_36393 = state_36392[1];
                        if (state_val_36393 === 1) {
                          var inst_36387 = cljs.core.async.timeout.call(null, ms);
                          var state_36392__$1 = state_36392;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36392__$1, 2, inst_36387);
                        } else {
                          if (state_val_36393 === 2) {
                            var inst_36389 = state_36392[2];
                            var inst_36390 = reply_fn.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
                            var state_36392__$1 = function() {
                              var statearr_36394 = state_36392;
                              statearr_36394[7] = inst_36389;
                              return statearr_36394;
                            }();
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36392__$1, inst_36390);
                          } else {
                            return null;
                          }
                        }
                      };
                    }(c__30349__auto__, ms, temp__4657__auto__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, reply_fn, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                    return function(switch__30237__auto__, c__30349__auto__, ms, temp__4657__auto__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, reply_fn, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                      return function() {
                        var taoensso$sente$state_machine__30238__auto__ = null;
                        var taoensso$sente$state_machine__30238__auto____0 = function() {
                          var statearr_36398 = [null, null, null, null, null, null, null, null];
                          statearr_36398[0] = taoensso$sente$state_machine__30238__auto__;
                          statearr_36398[1] = 1;
                          return statearr_36398;
                        };
                        var taoensso$sente$state_machine__30238__auto____1 = function(state_36392) {
                          while (true) {
                            var ret_value__30239__auto__ = function() {
                              try {
                                while (true) {
                                  var result__30240__auto__ = switch__30237__auto__.call(null, state_36392);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                    continue;
                                  } else {
                                    return result__30240__auto__;
                                  }
                                  break;
                                }
                              } catch (e36399) {
                                if (e36399 instanceof Object) {
                                  var ex__30241__auto__ = e36399;
                                  var statearr_36400_36698 = state_36392;
                                  statearr_36400_36698[5] = ex__30241__auto__;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36392);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  throw e36399;
                                }
                              }
                            }();
                            if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              var G__36699 = state_36392;
                              state_36392 = G__36699;
                              continue;
                            } else {
                              return ret_value__30239__auto__;
                            }
                            break;
                          }
                        };
                        taoensso$sente$state_machine__30238__auto__ = function(state_36392) {
                          switch(arguments.length) {
                            case 0:
                              return taoensso$sente$state_machine__30238__auto____0.call(this);
                            case 1:
                              return taoensso$sente$state_machine__30238__auto____1.call(this, state_36392);
                          }
                          throw new Error("Invalid arity: " + arguments.length);
                        };
                        taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                        taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                        return taoensso$sente$state_machine__30238__auto__;
                      }();
                    }(switch__30237__auto__, c__30349__auto__, ms, temp__4657__auto__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, reply_fn, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                  }();
                  var state__30351__auto__ = function() {
                    var statearr_36401 = f__30350__auto__.call(null);
                    statearr_36401[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
                    return statearr_36401;
                  }();
                  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
                };
              }(c__30349__auto__, ms, temp__4657__auto__, params, ppstr, client_id, vec__36384, clj, has_cb_QMARK_, reply_fn, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
              return c__30349__auto__;
            } else {
              return null;
            }
          } else {
            return reply_fn.call(null, new cljs.core.Keyword("chsk", "dummy-cb-200", "chsk/dummy-cb-200", -1663130337));
          }
        };
      }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer)], null));
    };
  }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), new cljs.core.Keyword(null, "ajax-get-or-ws-handshake-fn", "ajax-get-or-ws-handshake-fn", -1210409233), function(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, 
  connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(ring_req) {
      var sch_uuid = taoensso.encore.uuid_str.call(null, 6);
      var params = cljs.core.get.call(null, ring_req, new cljs.core.Keyword(null, "params", "params", 710516235));
      var client_id = cljs.core.get.call(null, params, new cljs.core.Keyword(null, "client-id", "client-id", -464622140));
      var csrf_token = csrf_token_fn.call(null, ring_req);
      var uid = user_id_fn__$1.call(null, ring_req, client_id);
      var receive_event_msg_BANG_ = function(sch_uuid, params, client_id, csrf_token, uid, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function() {
          var taoensso$sente$self = null;
          var taoensso$sente$self__1 = function(event) {
            return taoensso$sente$self.call(null, event, null);
          };
          var taoensso$sente$self__2 = function(event, _QMARK_reply_fn) {
            return taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_.call(null, ch_recv, cljs.core.merge.call(null, ev_msg_const, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), ring_req, new cljs.core.Keyword(null, "event", "event", 301435442), event, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), _QMARK_reply_fn, new cljs.core.Keyword(null, 
            "uid", "uid", -1447769400), uid], null)));
          };
          taoensso$sente$self = function(event, _QMARK_reply_fn) {
            switch(arguments.length) {
              case 1:
                return taoensso$sente$self__1.call(this, event);
              case 2:
                return taoensso$sente$self__2.call(this, event, _QMARK_reply_fn);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          taoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;
          taoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;
          return taoensso$sente$self;
        }();
      }(sch_uuid, params, client_id, csrf_token, uid, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
      var send_handshake_BANG_ = function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(server_ch, websocket_QMARK_) {
          taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 566, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, 
          connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
            return function() {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["send-handshake!"], null);
            };
          }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, -1042287659);
          var _QMARK_handshake_data = handshake_data_fn.call(null, ring_req);
          var handshake_ev = _QMARK_handshake_data == null ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid, csrf_token], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), new cljs.core.PersistentVector(null, 
          3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid, csrf_token, _QMARK_handshake_data], null)], null);
          return taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, websocket_QMARK_, taoensso.sente.pack.call(null, packer__$1, null, handshake_ev));
        };
      }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
      if (clojure.string.blank_QMARK_.call(null, client_id)) {
        var err_msg = "Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` \x26 `wrap-keyword-params`)?";
        taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 577, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(err_msg, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, 
        conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function() {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(err_msg), cljs.core.str(": %s")].join(""), ring_req], null);
          };
        }(err_msg, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, 1338107307);
        throw cljs.core.ex_info.call(null, err_msg, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), ring_req], null));
      } else {
        return taoensso.sente.interfaces.ring_req__GT_server_ch_resp.call(null, web_server_ch_adapter, ring_req, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "on-open", "on-open", -1391088163), function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, 
        map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(server_ch, websocket_QMARK_) {
            if (cljs.core.truth_(websocket_QMARK_)) {
              var _ = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 586, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, 
              user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["New WebSocket channel: %s (%s)", uid, sch_uuid], null);
                };
              }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, 2089656518);
              var updated_conn = upd_conn_BANG_.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), uid, client_id, server_ch);
              var udt_open = (new cljs.core.Keyword(null, "udt", "udt", 2011712751)).cljs$core$IFn$_invoke$arity$1(updated_conn);
              if (cljs.core.truth_(connect_uid_BANG_.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), uid))) {
                receive_event_msg_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "uidport-open", "chsk/uidport-open", 1685786954), uid], null));
              } else {
              }
              send_handshake_BANG_.call(null, server_ch, websocket_QMARK_);
              var temp__4657__auto__ = ws_kalive_ms;
              if (cljs.core.truth_(temp__4657__auto__)) {
                var ms = temp__4657__auto__;
                var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
                cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
                user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                  return function() {
                    var f__30350__auto__ = function() {
                      var switch__30237__auto__ = function(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, 
                      csrf_token_fn, handshake_data_fn, packer) {
                        return function(state_36437) {
                          var state_val_36438 = state_36437[1];
                          if (state_val_36438 === 7) {
                            var inst_36433 = state_36437[2];
                            var state_36437__$1 = state_36437;
                            var statearr_36439_36700 = state_36437__$1;
                            statearr_36439_36700[2] = inst_36433;
                            statearr_36439_36700[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_36438 === 1) {
                              var inst_36402 = udt_open;
                              var state_36437__$1 = function() {
                                var statearr_36440 = state_36437;
                                statearr_36440[7] = inst_36402;
                                return statearr_36440;
                              }();
                              var statearr_36441_36701 = state_36437__$1;
                              statearr_36441_36701[2] = null;
                              statearr_36441_36701[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_36438 === 4) {
                                var inst_36411 = state_36437[8];
                                var inst_36406 = state_36437[2];
                                var inst_36407 = cljs.core.deref.call(null, conns_);
                                var inst_36408 = cljs.core.PersistentVector.EMPTY_NODE;
                                var inst_36409 = [new cljs.core.Keyword(null, "ws", "ws", 86841443), uid, client_id];
                                var inst_36410 = new cljs.core.PersistentVector(null, 3, 5, inst_36408, inst_36409, null);
                                var inst_36411__$1 = cljs.core.get_in.call(null, inst_36407, inst_36410);
                                var state_36437__$1 = function() {
                                  var statearr_36442 = state_36437;
                                  statearr_36442[8] = inst_36411__$1;
                                  statearr_36442[9] = inst_36406;
                                  return statearr_36442;
                                }();
                                if (cljs.core.truth_(inst_36411__$1)) {
                                  var statearr_36443_36702 = state_36437__$1;
                                  statearr_36443_36702[1] = 5;
                                } else {
                                  var statearr_36444_36703 = state_36437__$1;
                                  statearr_36444_36703[1] = 6;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_36438 === 13) {
                                  var inst_36417 = state_36437[10];
                                  var inst_36426 = state_36437[2];
                                  var inst_36402 = inst_36417;
                                  var state_36437__$1 = function() {
                                    var statearr_36445 = state_36437;
                                    statearr_36445[11] = inst_36426;
                                    statearr_36445[7] = inst_36402;
                                    return statearr_36445;
                                  }();
                                  var statearr_36446_36704 = state_36437__$1;
                                  statearr_36446_36704[2] = null;
                                  statearr_36446_36704[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_36438 === 6) {
                                    var state_36437__$1 = state_36437;
                                    var statearr_36447_36705 = state_36437__$1;
                                    statearr_36447_36705[2] = null;
                                    statearr_36447_36705[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_36438 === 3) {
                                      var inst_36435 = state_36437[2];
                                      var state_36437__$1 = state_36437;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36437__$1, inst_36435);
                                    } else {
                                      if (state_val_36438 === 12) {
                                        var state_36437__$1 = state_36437;
                                        var statearr_36448_36706 = state_36437__$1;
                                        statearr_36448_36706[2] = null;
                                        statearr_36448_36706[1] = 13;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_36438 === 2) {
                                          var inst_36404 = cljs.core.async.timeout.call(null, ms);
                                          var state_36437__$1 = state_36437;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36437__$1, 4, inst_36404);
                                        } else {
                                          if (state_val_36438 === 11) {
                                            var inst_36422 = taoensso.sente.pack.call(null, packer__$1, null, new cljs.core.Keyword("chsk", "ws-ping", "chsk/ws-ping", 191675304));
                                            var inst_36423 = taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, websocket_QMARK_, inst_36422);
                                            var state_36437__$1 = state_36437;
                                            var statearr_36449_36707 = state_36437__$1;
                                            statearr_36449_36707[2] = inst_36423;
                                            statearr_36449_36707[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_36438 === 9) {
                                              var state_36437__$1 = state_36437;
                                              var statearr_36450_36708 = state_36437__$1;
                                              statearr_36450_36708[2] = null;
                                              statearr_36450_36708[1] = 10;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_36438 === 5) {
                                                var inst_36411 = state_36437[8];
                                                var inst_36416 = cljs.core.nth.call(null, inst_36411, 0, null);
                                                var inst_36417 = cljs.core.nth.call(null, inst_36411, 1, null);
                                                var inst_36418 = taoensso.sente.interfaces.sch_open_QMARK_.call(null, server_ch);
                                                var state_36437__$1 = function() {
                                                  var statearr_36451 = state_36437;
                                                  statearr_36451[12] = inst_36416;
                                                  statearr_36451[10] = inst_36417;
                                                  return statearr_36451;
                                                }();
                                                if (cljs.core.truth_(inst_36418)) {
                                                  var statearr_36452_36709 = state_36437__$1;
                                                  statearr_36452_36709[1] = 8;
                                                } else {
                                                  var statearr_36453_36710 = state_36437__$1;
                                                  statearr_36453_36710[1] = 9;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_36438 === 10) {
                                                  var inst_36430 = state_36437[2];
                                                  var state_36437__$1 = state_36437;
                                                  var statearr_36454_36711 = state_36437__$1;
                                                  statearr_36454_36711[2] = inst_36430;
                                                  statearr_36454_36711[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_36438 === 8) {
                                                    var inst_36402 = state_36437[7];
                                                    var inst_36417 = state_36437[10];
                                                    var inst_36420 = cljs.core._EQ_.call(null, inst_36417, inst_36402);
                                                    var state_36437__$1 = state_36437;
                                                    if (inst_36420) {
                                                      var statearr_36455_36712 = state_36437__$1;
                                                      statearr_36455_36712[1] = 11;
                                                    } else {
                                                      var statearr_36456_36713 = state_36437__$1;
                                                      statearr_36456_36713[1] = 12;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        };
                      }(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
                      packer);
                      return function(switch__30237__auto__, c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
                      user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                        return function() {
                          var taoensso$sente$state_machine__30238__auto__ = null;
                          var taoensso$sente$state_machine__30238__auto____0 = function() {
                            var statearr_36460 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
                            statearr_36460[0] = taoensso$sente$state_machine__30238__auto__;
                            statearr_36460[1] = 1;
                            return statearr_36460;
                          };
                          var taoensso$sente$state_machine__30238__auto____1 = function(state_36437) {
                            while (true) {
                              var ret_value__30239__auto__ = function() {
                                try {
                                  while (true) {
                                    var result__30240__auto__ = switch__30237__auto__.call(null, state_36437);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                      continue;
                                    } else {
                                      return result__30240__auto__;
                                    }
                                    break;
                                  }
                                } catch (e36461) {
                                  if (e36461 instanceof Object) {
                                    var ex__30241__auto__ = e36461;
                                    var statearr_36462_36714 = state_36437;
                                    statearr_36462_36714[5] = ex__30241__auto__;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36437);
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    throw e36461;
                                  }
                                }
                              }();
                              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                var G__36715 = state_36437;
                                state_36437 = G__36715;
                                continue;
                              } else {
                                return ret_value__30239__auto__;
                              }
                              break;
                            }
                          };
                          taoensso$sente$state_machine__30238__auto__ = function(state_36437) {
                            switch(arguments.length) {
                              case 0:
                                return taoensso$sente$state_machine__30238__auto____0.call(this);
                              case 1:
                                return taoensso$sente$state_machine__30238__auto____1.call(this, state_36437);
                            }
                            throw new Error("Invalid arity: " + arguments.length);
                          };
                          taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                          taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                          return taoensso$sente$state_machine__30238__auto__;
                        }();
                      }(switch__30237__auto__, c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                      handshake_data_fn, packer);
                    }();
                    var state__30351__auto__ = function() {
                      var statearr_36463 = f__30350__auto__.call(null);
                      statearr_36463[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
                      return statearr_36463;
                    }();
                    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
                  };
                }(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
                packer));
                return c__30349__auto__;
              } else {
                return null;
              }
            } else {
              var _ = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 615, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, 
              user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["New Ajax handshake/poll: %s (%s)", uid, sch_uuid], null);
                };
              }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, -1410297977);
              var updated_conn = upd_conn_BANG_.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid, client_id, server_ch);
              var udt_open = (new cljs.core.Keyword(null, "udt", "udt", 2011712751)).cljs$core$IFn$_invoke$arity$1(updated_conn);
              var handshake_QMARK_ = function() {
                var or__8632__auto__ = (new cljs.core.Keyword(null, "init?", "init?", 438181499)).cljs$core$IFn$_invoke$arity$1(updated_conn);
                if (cljs.core.truth_(or__8632__auto__)) {
                  return or__8632__auto__;
                } else {
                  return (new cljs.core.Keyword(null, "handshake?", "handshake?", -423743093)).cljs$core$IFn$_invoke$arity$1(params);
                }
              }();
              if (cljs.core.truth_(connect_uid_BANG_.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid))) {
                receive_event_msg_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "uidport-open", "chsk/uidport-open", 1685786954), uid], null));
              } else {
              }
              if (cljs.core.truth_(handshake_QMARK_)) {
                return send_handshake_BANG_.call(null, server_ch, websocket_QMARK_);
              } else {
                var temp__4657__auto__ = lp_timeout_ms;
                if (cljs.core.truth_(temp__4657__auto__)) {
                  var ms = temp__4657__auto__;
                  var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
                  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, handshake_QMARK_, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
                  send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function() {
                      var f__30350__auto__ = function() {
                        var switch__30237__auto__ = function(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, handshake_QMARK_, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
                        send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                          return function(state_36489) {
                            var state_val_36490 = state_36489[1];
                            if (state_val_36490 === 1) {
                              var inst_36464 = cljs.core.async.timeout.call(null, ms);
                              var state_36489__$1 = state_36489;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36489__$1, 2, inst_36464);
                            } else {
                              if (state_val_36490 === 2) {
                                var inst_36471 = state_36489[7];
                                var inst_36466 = state_36489[2];
                                var inst_36467 = cljs.core.deref.call(null, conns_);
                                var inst_36468 = cljs.core.PersistentVector.EMPTY_NODE;
                                var inst_36469 = [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid, client_id];
                                var inst_36470 = new cljs.core.PersistentVector(null, 3, 5, inst_36468, inst_36469, null);
                                var inst_36471__$1 = cljs.core.get_in.call(null, inst_36467, inst_36470);
                                var state_36489__$1 = function() {
                                  var statearr_36491 = state_36489;
                                  statearr_36491[7] = inst_36471__$1;
                                  statearr_36491[8] = inst_36466;
                                  return statearr_36491;
                                }();
                                if (cljs.core.truth_(inst_36471__$1)) {
                                  var statearr_36492_36716 = state_36489__$1;
                                  statearr_36492_36716[1] = 3;
                                } else {
                                  var statearr_36493_36717 = state_36489__$1;
                                  statearr_36493_36717[1] = 4;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_36490 === 3) {
                                  var inst_36471 = state_36489[7];
                                  var inst_36476 = cljs.core.nth.call(null, inst_36471, 0, null);
                                  var inst_36477 = cljs.core.nth.call(null, inst_36471, 1, null);
                                  var inst_36478 = cljs.core._EQ_.call(null, inst_36477, udt_open);
                                  var state_36489__$1 = function() {
                                    var statearr_36494 = state_36489;
                                    statearr_36494[9] = inst_36476;
                                    return statearr_36494;
                                  }();
                                  if (inst_36478) {
                                    var statearr_36495_36718 = state_36489__$1;
                                    statearr_36495_36718[1] = 6;
                                  } else {
                                    var statearr_36496_36719 = state_36489__$1;
                                    statearr_36496_36719[1] = 7;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_36490 === 4) {
                                    var state_36489__$1 = state_36489;
                                    var statearr_36497_36720 = state_36489__$1;
                                    statearr_36497_36720[2] = null;
                                    statearr_36497_36720[1] = 5;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_36490 === 5) {
                                      var inst_36487 = state_36489[2];
                                      var state_36489__$1 = state_36489;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36489__$1, inst_36487);
                                    } else {
                                      if (state_val_36490 === 6) {
                                        var inst_36480 = taoensso.sente.pack.call(null, packer__$1, null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
                                        var inst_36481 = taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, websocket_QMARK_, inst_36480);
                                        var state_36489__$1 = state_36489;
                                        var statearr_36498_36721 = state_36489__$1;
                                        statearr_36498_36721[2] = inst_36481;
                                        statearr_36498_36721[1] = 8;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_36490 === 7) {
                                          var state_36489__$1 = state_36489;
                                          var statearr_36499_36722 = state_36489__$1;
                                          statearr_36499_36722[2] = null;
                                          statearr_36499_36722[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_36490 === 8) {
                                            var inst_36484 = state_36489[2];
                                            var state_36489__$1 = state_36489;
                                            var statearr_36500_36723 = state_36489__$1;
                                            statearr_36500_36723[2] = inst_36484;
                                            statearr_36500_36723[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          };
                        }(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, handshake_QMARK_, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                        handshake_data_fn, packer);
                        return function(switch__30237__auto__, c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, handshake_QMARK_, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, 
                        send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                          return function() {
                            var taoensso$sente$state_machine__30238__auto__ = null;
                            var taoensso$sente$state_machine__30238__auto____0 = function() {
                              var statearr_36504 = [null, null, null, null, null, null, null, null, null, null];
                              statearr_36504[0] = taoensso$sente$state_machine__30238__auto__;
                              statearr_36504[1] = 1;
                              return statearr_36504;
                            };
                            var taoensso$sente$state_machine__30238__auto____1 = function(state_36489) {
                              while (true) {
                                var ret_value__30239__auto__ = function() {
                                  try {
                                    while (true) {
                                      var result__30240__auto__ = switch__30237__auto__.call(null, state_36489);
                                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                        continue;
                                      } else {
                                        return result__30240__auto__;
                                      }
                                      break;
                                    }
                                  } catch (e36505) {
                                    if (e36505 instanceof Object) {
                                      var ex__30241__auto__ = e36505;
                                      var statearr_36506_36724 = state_36489;
                                      statearr_36506_36724[5] = ex__30241__auto__;
                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36489);
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      throw e36505;
                                    }
                                  }
                                }();
                                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  var G__36725 = state_36489;
                                  state_36489 = G__36725;
                                  continue;
                                } else {
                                  return ret_value__30239__auto__;
                                }
                                break;
                              }
                            };
                            taoensso$sente$state_machine__30238__auto__ = function(state_36489) {
                              switch(arguments.length) {
                                case 0:
                                  return taoensso$sente$state_machine__30238__auto____0.call(this);
                                case 1:
                                  return taoensso$sente$state_machine__30238__auto____1.call(this, state_36489);
                              }
                              throw new Error("Invalid arity: " + arguments.length);
                            };
                            taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                            taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                            return taoensso$sente$state_machine__30238__auto__;
                          }();
                        }(switch__30237__auto__, c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, handshake_QMARK_, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
                        user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                      }();
                      var state__30351__auto__ = function() {
                        var statearr_36507 = f__30350__auto__.call(null);
                        statearr_36507[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
                        return statearr_36507;
                      }();
                      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
                    };
                  }(c__30349__auto__, ms, temp__4657__auto__, _, updated_conn, udt_open, handshake_QMARK_, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                  handshake_data_fn, packer));
                  return c__30349__auto__;
                } else {
                  return null;
                }
              }
            }
          };
        }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), new cljs.core.Keyword(null, "on-msg", "on-msg", -2021925279), function(sch_uuid, 
        params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(server_ch, websocket_QMARK_, req_ppstr) {
            if (cljs.core.truth_(websocket_QMARK_)) {
            } else {
              throw new Error("Assert failed: websocket?");
            }
            upd_conn_BANG_.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), uid, client_id);
            var vec__36508 = taoensso.sente.unpack.call(null, packer__$1, req_ppstr);
            var clj = cljs.core.nth.call(null, vec__36508, 0, null);
            var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__36508, 1, null);
            return receive_event_msg_BANG_.call(null, clj, cljs.core.truth_(_QMARK_cb_uuid) ? function(vec__36508, clj, _QMARK_cb_uuid, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, 
            user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function taoensso$sente$reply_fn(resp_clj) {
                taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 645, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__36508, clj, _QMARK_cb_uuid, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, 
                packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                  return function() {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ws reply): %s", resp_clj], null);
                  };
                }(vec__36508, clj, _QMARK_cb_uuid, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, -1406173521);
                return taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, websocket_QMARK_, taoensso.sente.pack.call(null, packer__$1, cljs.core.meta.call(null, resp_clj), resp_clj, _QMARK_cb_uuid));
              };
            }(vec__36508, clj, _QMARK_cb_uuid, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) : null);
          };
        }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), new cljs.core.Keyword(null, "on-close", "on-close", -761178394), 
        function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(server_ch, websocket_QMARK_, _status) {
            var conn_type = cljs.core.truth_(websocket_QMARK_) ? new cljs.core.Keyword(null, "ws", "ws", 86841443) : new cljs.core.Keyword(null, "ajax", "ajax", 814345549);
            var _ = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 654, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(conn_type, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, 
            ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function() {
                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["%s channel closed: %s (%s)", cljs.core.truth_(websocket_QMARK_) ? "WebSocket" : "Ajax", uid, sch_uuid], null);
              };
            }(conn_type, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, -871920238);
            var updated_conn = upd_conn_BANG_.call(null, conn_type, uid, client_id, null);
            var udt_close = (new cljs.core.Keyword(null, "udt", "udt", 2011712751)).cljs$core$IFn$_invoke$arity$1(updated_conn);
            var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, 
            csrf_token_fn, handshake_data_fn, packer) {
              return function() {
                var f__30350__auto__ = function() {
                  var switch__30237__auto__ = function(c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                  handshake_data_fn, packer) {
                    return function(state_36562) {
                      var state_val_36563 = state_36562[1];
                      if (state_val_36563 === 7) {
                        var state_36562__$1 = state_36562;
                        var statearr_36564_36726 = state_36562__$1;
                        statearr_36564_36726[2] = null;
                        statearr_36564_36726[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_36563 === 1) {
                          var inst_36511 = cljs.core.async.timeout.call(null, 5E3);
                          var state_36562__$1 = state_36562;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36562__$1, 2, inst_36511);
                        } else {
                          if (state_val_36563 === 4) {
                            var state_36562__$1 = state_36562;
                            var statearr_36565_36727 = state_36562__$1;
                            statearr_36565_36727[2] = null;
                            statearr_36565_36727[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_36563 === 13) {
                              var state_36562__$1 = state_36562;
                              var statearr_36566_36728 = state_36562__$1;
                              statearr_36566_36728[2] = null;
                              statearr_36566_36728[1] = 14;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_36563 === 6) {
                                var inst_36539 = state_36562[7];
                                var inst_36523 = state_36562[8];
                                var inst_36522 = state_36562[9];
                                var inst_36521 = state_36562[10];
                                var inst_36534 = cljs.core.PersistentVector.EMPTY_NODE;
                                var inst_36535 = [conn_type, uid, client_id];
                                var inst_36536 = new cljs.core.PersistentVector(null, 3, 5, inst_36534, inst_36535, null);
                                var inst_36538 = function() {
                                  var vec__36514 = inst_36521;
                                  var __QMARK_sch = inst_36522;
                                  var udt_t1 = inst_36523;
                                  return function(vec__36514, __QMARK_sch, udt_t1, inst_36539, inst_36523, inst_36522, inst_36521, inst_36534, inst_36535, inst_36536, state_val_36563, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, 
                                  map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                                    return function(p__36537) {
                                      var vec__36567 = p__36537;
                                      var _sch = cljs.core.nth.call(null, vec__36567, 0, null);
                                      var udt_t1__$1 = cljs.core.nth.call(null, vec__36567, 1, null);
                                      if (cljs.core._EQ_.call(null, udt_t1__$1, udt_close)) {
                                        return taoensso.encore.swapped.call(null, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782), true);
                                      } else {
                                        return taoensso.encore.swapped.call(null, udt_t1__$1, false);
                                      }
                                    };
                                  }(vec__36514, __QMARK_sch, udt_t1, inst_36539, inst_36523, inst_36522, inst_36521, inst_36534, inst_36535, inst_36536, state_val_36563, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, 
                                  map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                                }();
                                var inst_36539__$1 = taoensso.encore.swap_in_BANG_.call(null, conns_, inst_36536, inst_36538);
                                var state_36562__$1 = function() {
                                  var statearr_36570 = state_36562;
                                  statearr_36570[7] = inst_36539__$1;
                                  return statearr_36570;
                                }();
                                if (cljs.core.truth_(inst_36539__$1)) {
                                  var statearr_36571_36729 = state_36562__$1;
                                  statearr_36571_36729[1] = 9;
                                } else {
                                  var statearr_36572_36730 = state_36562__$1;
                                  statearr_36572_36730[1] = 10;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_36563 === 3) {
                                  var inst_36523 = state_36562[8];
                                  var inst_36522 = state_36562[9];
                                  var inst_36521 = state_36562[10];
                                  var inst_36526 = function() {
                                    var vec__36514 = inst_36521;
                                    var __QMARK_sch = inst_36522;
                                    var udt_t1 = inst_36523;
                                    return function(vec__36514, __QMARK_sch, udt_t1, inst_36523, inst_36522, inst_36521, state_val_36563, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, 
                                    ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                                      return function() {
                                        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["close-timeout: %s %s %s %s", conn_type, uid, sch_uuid, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, udt_t1, udt_close), udt_t1, udt_close], null)], null);
                                      };
                                    }(vec__36514, __QMARK_sch, udt_t1, inst_36523, inst_36522, inst_36521, state_val_36563, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, 
                                    lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                                  }();
                                  var inst_36527 = new cljs.core.Delay(inst_36526, null);
                                  var inst_36528 = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 668, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), inst_36527, null, -525169634);
                                  var state_36562__$1 = state_36562;
                                  var statearr_36573_36731 = state_36562__$1;
                                  statearr_36573_36731[2] = inst_36528;
                                  statearr_36573_36731[1] = 5;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_36563 === 12) {
                                    var inst_36548 = cljs.core.PersistentVector.EMPTY_NODE;
                                    var inst_36549 = [new cljs.core.Keyword("chsk", "uidport-close", "chsk/uidport-close", 901058678), uid];
                                    var inst_36550 = new cljs.core.PersistentVector(null, 2, 5, inst_36548, inst_36549, null);
                                    var inst_36551 = receive_event_msg_BANG_.call(null, inst_36550);
                                    var state_36562__$1 = state_36562;
                                    var statearr_36574_36732 = state_36562__$1;
                                    statearr_36574_36732[2] = inst_36551;
                                    statearr_36574_36732[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_36563 === 2) {
                                      var inst_36521 = state_36562[10];
                                      var inst_36513 = state_36562[2];
                                      var inst_36517 = cljs.core.deref.call(null, conns_);
                                      var inst_36518 = cljs.core.PersistentVector.EMPTY_NODE;
                                      var inst_36519 = [conn_type, uid, client_id];
                                      var inst_36520 = new cljs.core.PersistentVector(null, 3, 5, inst_36518, inst_36519, null);
                                      var inst_36521__$1 = cljs.core.get_in.call(null, inst_36517, inst_36520);
                                      var inst_36522 = cljs.core.nth.call(null, inst_36521__$1, 0, null);
                                      var inst_36523 = cljs.core.nth.call(null, inst_36521__$1, 1, null);
                                      var inst_36524 = cljs.core.deref.call(null, taoensso.sente.debug_mode_QMARK__);
                                      var state_36562__$1 = function() {
                                        var statearr_36575 = state_36562;
                                        statearr_36575[8] = inst_36523;
                                        statearr_36575[9] = inst_36522;
                                        statearr_36575[11] = inst_36513;
                                        statearr_36575[10] = inst_36521__$1;
                                        return statearr_36575;
                                      }();
                                      if (cljs.core.truth_(inst_36524)) {
                                        var statearr_36576_36733 = state_36562__$1;
                                        statearr_36576_36733[1] = 3;
                                      } else {
                                        var statearr_36577_36734 = state_36562__$1;
                                        statearr_36577_36734[1] = 4;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_36563 === 11) {
                                        var inst_36557 = state_36562[2];
                                        var state_36562__$1 = state_36562;
                                        var statearr_36578_36735 = state_36562__$1;
                                        statearr_36578_36735[2] = inst_36557;
                                        statearr_36578_36735[1] = 8;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_36563 === 9) {
                                          var inst_36539 = state_36562[7];
                                          var inst_36523 = state_36562[8];
                                          var inst_36522 = state_36562[9];
                                          var inst_36521 = state_36562[10];
                                          var inst_36541 = cljs.core.PersistentVector.EMPTY_NODE;
                                          var inst_36542 = [conn_type, uid];
                                          var inst_36543 = new cljs.core.PersistentVector(null, 2, 5, inst_36541, inst_36542, null);
                                          var inst_36544 = function() {
                                            var vec__36514 = inst_36521;
                                            var __QMARK_sch = inst_36522;
                                            var udt_t1 = inst_36523;
                                            var disconnect_QMARK_ = inst_36539;
                                            return function(vec__36514, __QMARK_sch, udt_t1, disconnect_QMARK_, inst_36539, inst_36523, inst_36522, inst_36521, inst_36541, inst_36542, inst_36543, state_val_36563, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, 
                                            ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                                              return function(_QMARK_m) {
                                                if (cljs.core.empty_QMARK_.call(null, _QMARK_m)) {
                                                  return new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782);
                                                } else {
                                                  return _QMARK_m;
                                                }
                                              };
                                            }(vec__36514, __QMARK_sch, udt_t1, disconnect_QMARK_, inst_36539, inst_36523, inst_36522, inst_36521, inst_36541, inst_36542, inst_36543, state_val_36563, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, 
                                            vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                                          }();
                                          var inst_36545 = taoensso.encore.swap_in_BANG_.call(null, conns_, inst_36543, inst_36544);
                                          var inst_36546 = upd_connected_uid_BANG_.call(null, uid);
                                          var state_36562__$1 = function() {
                                            var statearr_36579 = state_36562;
                                            statearr_36579[12] = inst_36545;
                                            return statearr_36579;
                                          }();
                                          if (cljs.core.truth_(inst_36546)) {
                                            var statearr_36580_36736 = state_36562__$1;
                                            statearr_36580_36736[1] = 12;
                                          } else {
                                            var statearr_36581_36737 = state_36562__$1;
                                            statearr_36581_36737[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_36563 === 5) {
                                            var inst_36523 = state_36562[8];
                                            var inst_36531 = state_36562[2];
                                            var inst_36532 = cljs.core._EQ_.call(null, inst_36523, udt_close);
                                            var state_36562__$1 = function() {
                                              var statearr_36582 = state_36562;
                                              statearr_36582[13] = inst_36531;
                                              return statearr_36582;
                                            }();
                                            if (inst_36532) {
                                              var statearr_36583_36738 = state_36562__$1;
                                              statearr_36583_36738[1] = 6;
                                            } else {
                                              var statearr_36584_36739 = state_36562__$1;
                                              statearr_36584_36739[1] = 7;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_36563 === 14) {
                                              var inst_36554 = state_36562[2];
                                              var state_36562__$1 = state_36562;
                                              var statearr_36585_36740 = state_36562__$1;
                                              statearr_36585_36740[2] = inst_36554;
                                              statearr_36585_36740[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_36563 === 10) {
                                                var state_36562__$1 = state_36562;
                                                var statearr_36586_36741 = state_36562__$1;
                                                statearr_36586_36741[2] = null;
                                                statearr_36586_36741[1] = 11;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_36563 === 8) {
                                                  var inst_36560 = state_36562[2];
                                                  var state_36562__$1 = state_36562;
                                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36562__$1, inst_36560);
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    };
                  }(c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                  return function(switch__30237__auto__, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                  handshake_data_fn, packer) {
                    return function() {
                      var taoensso$sente$state_machine__30238__auto__ = null;
                      var taoensso$sente$state_machine__30238__auto____0 = function() {
                        var statearr_36590 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                        statearr_36590[0] = taoensso$sente$state_machine__30238__auto__;
                        statearr_36590[1] = 1;
                        return statearr_36590;
                      };
                      var taoensso$sente$state_machine__30238__auto____1 = function(state_36562) {
                        while (true) {
                          var ret_value__30239__auto__ = function() {
                            try {
                              while (true) {
                                var result__30240__auto__ = switch__30237__auto__.call(null, state_36562);
                                if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  continue;
                                } else {
                                  return result__30240__auto__;
                                }
                                break;
                              }
                            } catch (e36591) {
                              if (e36591 instanceof Object) {
                                var ex__30241__auto__ = e36591;
                                var statearr_36592_36742 = state_36562;
                                statearr_36592_36742[5] = ex__30241__auto__;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36562);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e36591;
                              }
                            }
                          }();
                          if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var G__36743 = state_36562;
                            state_36562 = G__36743;
                            continue;
                          } else {
                            return ret_value__30239__auto__;
                          }
                          break;
                        }
                      };
                      taoensso$sente$state_machine__30238__auto__ = function(state_36562) {
                        switch(arguments.length) {
                          case 0:
                            return taoensso$sente$state_machine__30238__auto____0.call(this);
                          case 1:
                            return taoensso$sente$state_machine__30238__auto____1.call(this, state_36562);
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                      taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                      return taoensso$sente$state_machine__30238__auto__;
                    }();
                  }(switch__30237__auto__, c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
                  packer);
                }();
                var state__30351__auto__ = function() {
                  var statearr_36593 = f__30350__auto__.call(null);
                  statearr_36593[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
                  return statearr_36593;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
              };
            }(c__30349__auto__, conn_type, _, updated_conn, udt_close, sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
            return c__30349__auto__;
          };
        }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), new cljs.core.Keyword(null, "on-error", "on-error", 1728533530), 
        function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(server_ch, websocket_QMARK_, error) {
            return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 690, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, 
            user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function() {
                return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ring-req-\x3eserver-ch-resp error: %s (%s)", error, uid, sch_uuid], null);
              };
            }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null, 382341668);
          };
        }(sch_uuid, params, client_id, csrf_token, uid, receive_event_msg_BANG_, send_handshake_BANG_, packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer)], null));
      }
    };
  }(packer__$1, ch_recv, user_id_fn__$1, conns_, send_buffers_, connected_uids_, upd_conn_BANG_, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__36292, map__36295, map__36295__$1, recv_buf_or_n, ws_kalive_ms, lp_timeout_ms, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer)], null);
};
taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = function(seq36289) {
  var G__36290 = cljs.core.first.call(null, seq36289);
  var seq36289__$1 = cljs.core.next.call(null, seq36289);
  return taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__36290, seq36289__$1);
};
taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_, uid, buffered_evs_pstr, upd_conn_BANG_) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 696, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["send-buffered-server-evs\x3ews-clients!: %s", buffered_evs_pstr], null);
  }, null), null, -257581698);
  var seq__36760 = cljs.core.seq.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), uid], null)));
  var chunk__36761 = null;
  var count__36762 = 0;
  var i__36763 = 0;
  while (true) {
    if (i__36763 < count__36762) {
      var vec__36764 = cljs.core._nth.call(null, chunk__36761, i__36763);
      var client_id = cljs.core.nth.call(null, vec__36764, 0, null);
      var vec__36767 = cljs.core.nth.call(null, vec__36764, 1, null);
      var _QMARK_sch = cljs.core.nth.call(null, vec__36767, 0, null);
      var _udt = cljs.core.nth.call(null, vec__36767, 1, null);
      var temp__4657__auto___36776 = _QMARK_sch;
      if (cljs.core.truth_(temp__4657__auto___36776)) {
        var sch_36777 = temp__4657__auto___36776;
        upd_conn_BANG_.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), uid, client_id);
        taoensso.sente.interfaces.sch_send_BANG_.call(null, sch_36777, new cljs.core.Keyword(null, "websocket", "websocket", -1714963101), buffered_evs_pstr);
      } else {
      }
      var G__36778 = seq__36760;
      var G__36779 = chunk__36761;
      var G__36780 = count__36762;
      var G__36781 = i__36763 + 1;
      seq__36760 = G__36778;
      chunk__36761 = G__36779;
      count__36762 = G__36780;
      i__36763 = G__36781;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__36760);
      if (temp__4657__auto__) {
        var seq__36760__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__36760__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first.call(null, seq__36760__$1);
          var G__36782 = cljs.core.chunk_rest.call(null, seq__36760__$1);
          var G__36783 = c__9443__auto__;
          var G__36784 = cljs.core.count.call(null, c__9443__auto__);
          var G__36785 = 0;
          seq__36760 = G__36782;
          chunk__36761 = G__36783;
          count__36762 = G__36784;
          i__36763 = G__36785;
          continue;
        } else {
          var vec__36770 = cljs.core.first.call(null, seq__36760__$1);
          var client_id = cljs.core.nth.call(null, vec__36770, 0, null);
          var vec__36773 = cljs.core.nth.call(null, vec__36770, 1, null);
          var _QMARK_sch = cljs.core.nth.call(null, vec__36773, 0, null);
          var _udt = cljs.core.nth.call(null, vec__36773, 1, null);
          var temp__4657__auto___36786__$1 = _QMARK_sch;
          if (cljs.core.truth_(temp__4657__auto___36786__$1)) {
            var sch_36787 = temp__4657__auto___36786__$1;
            upd_conn_BANG_.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), uid, client_id);
            taoensso.sente.interfaces.sch_send_BANG_.call(null, sch_36787, new cljs.core.Keyword(null, "websocket", "websocket", -1714963101), buffered_evs_pstr);
          } else {
          }
          var G__36788 = cljs.core.next.call(null, seq__36760__$1);
          var G__36789 = null;
          var G__36790 = 0;
          var G__36791 = 0;
          seq__36760 = G__36788;
          chunk__36761 = G__36789;
          count__36762 = G__36790;
          i__36763 = G__36791;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_, uid, buffered_evs_pstr) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 706, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["send-buffered-server-evs\x3eajax-clients!: %s", buffered_evs_pstr], null);
  }, null), null, -2045505976);
  var ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [90, 180, 360, 720, 1440], null);
  var client_ids_unsatisfied = cljs.core.keys.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid], null)));
  if (cljs.core.empty_QMARK_.call(null, client_ids_unsatisfied)) {
    return null;
  } else {
    var c__30349__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto__, ms_backoffs, client_ids_unsatisfied) {
      return function() {
        var f__30350__auto__ = function() {
          var switch__30237__auto__ = function(c__30349__auto__, ms_backoffs, client_ids_unsatisfied) {
            return function(state_36922) {
              var state_val_36923 = state_36922[1];
              if (state_val_36923 === 7) {
                var inst_36884 = state_36922[7];
                var inst_36877 = state_36922[8];
                var inst_36878 = state_36922[9];
                var inst_36894 = function() {
                  var n = inst_36877;
                  var client_ids_satisfied = inst_36878;
                  var _QMARK_pulled = inst_36884;
                  return function(n, client_ids_satisfied, _QMARK_pulled, inst_36884, inst_36877, inst_36878, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied) {
                    return function(s, client_id, p__36893) {
                      var vec__36924 = p__36893;
                      var _QMARK_sch = cljs.core.nth.call(null, vec__36924, 0, null);
                      var _udt = cljs.core.nth.call(null, vec__36924, 1, null);
                      var sent_QMARK_ = function() {
                        var temp__4657__auto__ = _QMARK_sch;
                        if (cljs.core.truth_(temp__4657__auto__)) {
                          var sch = temp__4657__auto__;
                          return taoensso.sente.interfaces.sch_send_BANG_.call(null, _QMARK_sch, cljs.core.not.call(null, new cljs.core.Keyword(null, "websocket", "websocket", -1714963101)), buffered_evs_pstr);
                        } else {
                          return null;
                        }
                      }();
                      if (cljs.core.truth_(sent_QMARK_)) {
                        return cljs.core.conj.call(null, s, client_id);
                      } else {
                        return s;
                      }
                    };
                  }(n, client_ids_satisfied, _QMARK_pulled, inst_36884, inst_36877, inst_36878, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied);
                }();
                var inst_36895 = cljs.core.PersistentHashSet.EMPTY;
                var inst_36896 = cljs.core.reduce_kv.call(null, inst_36894, inst_36895, inst_36884);
                var state_36922__$1 = state_36922;
                var statearr_36927_36960 = state_36922__$1;
                statearr_36927_36960[2] = inst_36896;
                statearr_36927_36960[1] = 9;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_36923 === 1) {
                  var inst_36876 = cljs.core.PersistentHashSet.EMPTY;
                  var inst_36877 = 0;
                  var inst_36878 = inst_36876;
                  var state_36922__$1 = function() {
                    var statearr_36928 = state_36922;
                    statearr_36928[8] = inst_36877;
                    statearr_36928[9] = inst_36878;
                    return statearr_36928;
                  }();
                  var statearr_36929_36961 = state_36922__$1;
                  statearr_36929_36961[2] = null;
                  statearr_36929_36961[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_36923 === 4) {
                    var state_36922__$1 = state_36922;
                    var statearr_36930_36962 = state_36922__$1;
                    statearr_36930_36962[2] = true;
                    statearr_36930_36962[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_36923 === 15) {
                      var inst_36915 = state_36922[2];
                      var state_36922__$1 = state_36922;
                      var statearr_36931_36963 = state_36922__$1;
                      statearr_36931_36963[2] = inst_36915;
                      statearr_36931_36963[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_36923 === 13) {
                        var inst_36901 = state_36922[10];
                        var inst_36906 = cljs.core.rand_int.call(null, inst_36901);
                        var inst_36907 = inst_36901 + inst_36906;
                        var inst_36908 = cljs.core.async.timeout.call(null, inst_36907);
                        var state_36922__$1 = state_36922;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36922__$1, 16, inst_36908);
                      } else {
                        if (state_val_36923 === 6) {
                          var inst_36884 = state_36922[7];
                          var inst_36891 = state_36922[2];
                          var state_36922__$1 = function() {
                            var statearr_36932 = state_36922;
                            statearr_36932[11] = inst_36891;
                            return statearr_36932;
                          }();
                          if (cljs.core.truth_(inst_36884)) {
                            var statearr_36933_36964 = state_36922__$1;
                            statearr_36933_36964[1] = 7;
                          } else {
                            var statearr_36934_36965 = state_36922__$1;
                            statearr_36934_36965[1] = 8;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_36923 === 3) {
                            var inst_36920 = state_36922[2];
                            var state_36922__$1 = state_36922;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36922__$1, inst_36920);
                          } else {
                            if (state_val_36923 === 12) {
                              var inst_36918 = state_36922[2];
                              var state_36922__$1 = state_36922;
                              var statearr_36935_36966 = state_36922__$1;
                              statearr_36935_36966[2] = inst_36918;
                              statearr_36935_36966[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_36923 === 2) {
                                var inst_36884 = state_36922[7];
                                var inst_36877 = state_36922[8];
                                var inst_36878 = state_36922[9];
                                var inst_36880 = cljs.core.PersistentVector.EMPTY_NODE;
                                var inst_36881 = [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid];
                                var inst_36882 = new cljs.core.PersistentVector(null, 2, 5, inst_36880, inst_36881, null);
                                var inst_36883 = function() {
                                  var n = inst_36877;
                                  var client_ids_satisfied = inst_36878;
                                  return function(n, client_ids_satisfied, inst_36884, inst_36877, inst_36878, inst_36880, inst_36881, inst_36882, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied) {
                                    return function(m) {
                                      var ks_to_pull = cljs.core.remove.call(null, client_ids_satisfied, cljs.core.keys.call(null, m));
                                      if (cljs.core.empty_QMARK_.call(null, ks_to_pull)) {
                                        return taoensso.encore.swapped.call(null, m, null);
                                      } else {
                                        return taoensso.encore.swapped.call(null, cljs.core.reduce.call(null, function(ks_to_pull, n, client_ids_satisfied, inst_36884, inst_36877, inst_36878, inst_36880, inst_36881, inst_36882, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied) {
                                          return function(m__$1, k) {
                                            var vec__36936 = cljs.core.get.call(null, m__$1, k);
                                            var _QMARK_sch = cljs.core.nth.call(null, vec__36936, 0, null);
                                            var udt = cljs.core.nth.call(null, vec__36936, 1, null);
                                            return cljs.core.assoc.call(null, m__$1, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, udt], null));
                                          };
                                        }(ks_to_pull, n, client_ids_satisfied, inst_36884, inst_36877, inst_36878, inst_36880, inst_36881, inst_36882, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied), m, ks_to_pull), cljs.core.select_keys.call(null, m, ks_to_pull));
                                      }
                                    };
                                  }(n, client_ids_satisfied, inst_36884, inst_36877, inst_36878, inst_36880, inst_36881, inst_36882, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied);
                                }();
                                var inst_36884__$1 = taoensso.encore.swap_in_BANG_.call(null, conns_, inst_36882, inst_36883);
                                var inst_36885 = function() {
                                  var n = inst_36877;
                                  var client_ids_satisfied = inst_36878;
                                  var _QMARK_pulled = inst_36884__$1;
                                  return function(n, client_ids_satisfied, _QMARK_pulled, inst_36884, inst_36877, inst_36878, inst_36880, inst_36881, inst_36882, inst_36883, inst_36884__$1, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied) {
                                    return function(x) {
                                      var or__8632__auto__ = x == null;
                                      if (or__8632__auto__) {
                                        return or__8632__auto__;
                                      } else {
                                        return taoensso.truss.impl.non_throwing.call(null, cljs.core.map_QMARK_).call(null, x);
                                      }
                                    };
                                  }(n, client_ids_satisfied, _QMARK_pulled, inst_36884, inst_36877, inst_36878, inst_36880, inst_36881, inst_36882, inst_36883, inst_36884__$1, state_val_36923, c__30349__auto__, ms_backoffs, client_ids_unsatisfied);
                                }();
                                var inst_36886 = inst_36885.call(null, inst_36884__$1);
                                var state_36922__$1 = function() {
                                  var statearr_36939 = state_36922;
                                  statearr_36939[7] = inst_36884__$1;
                                  return statearr_36939;
                                }();
                                if (cljs.core.truth_(inst_36886)) {
                                  var statearr_36940_36967 = state_36922__$1;
                                  statearr_36940_36967[1] = 4;
                                } else {
                                  var statearr_36941_36968 = state_36922__$1;
                                  statearr_36941_36968[1] = 5;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_36923 === 11) {
                                  var state_36922__$1 = state_36922;
                                  var statearr_36942_36969 = state_36922__$1;
                                  statearr_36942_36969[2] = null;
                                  statearr_36942_36969[1] = 12;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_36923 === 9) {
                                    var inst_36901 = state_36922[10];
                                    var inst_36877 = state_36922[8];
                                    var inst_36878 = state_36922[9];
                                    var inst_36899 = state_36922[2];
                                    var inst_36900 = cljs.core.into.call(null, inst_36878, inst_36899);
                                    var inst_36901__$1 = cljs.core.get.call(null, ms_backoffs, inst_36877);
                                    var state_36922__$1 = function() {
                                      var statearr_36943 = state_36922;
                                      statearr_36943[12] = inst_36900;
                                      statearr_36943[10] = inst_36901__$1;
                                      return statearr_36943;
                                    }();
                                    if (cljs.core.truth_(inst_36901__$1)) {
                                      var statearr_36944_36970 = state_36922__$1;
                                      statearr_36944_36970[1] = 10;
                                    } else {
                                      var statearr_36945_36971 = state_36922__$1;
                                      statearr_36945_36971[1] = 11;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_36923 === 5) {
                                      var inst_36884 = state_36922[7];
                                      var inst_36889 = taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "([:or nil? map?] ?pulled)", inst_36884, null, null);
                                      var state_36922__$1 = state_36922;
                                      var statearr_36946_36972 = state_36922__$1;
                                      statearr_36946_36972[2] = inst_36889;
                                      statearr_36946_36972[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_36923 === 14) {
                                        var state_36922__$1 = state_36922;
                                        var statearr_36947_36973 = state_36922__$1;
                                        statearr_36947_36973[2] = null;
                                        statearr_36947_36973[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_36923 === 16) {
                                          var inst_36900 = state_36922[12];
                                          var inst_36877 = state_36922[8];
                                          var inst_36910 = state_36922[2];
                                          var inst_36911 = inst_36877 + 1;
                                          var inst_36877__$1 = inst_36911;
                                          var inst_36878 = inst_36900;
                                          var state_36922__$1 = function() {
                                            var statearr_36948 = state_36922;
                                            statearr_36948[13] = inst_36910;
                                            statearr_36948[8] = inst_36877__$1;
                                            statearr_36948[9] = inst_36878;
                                            return statearr_36948;
                                          }();
                                          var statearr_36949_36974 = state_36922__$1;
                                          statearr_36949_36974[2] = null;
                                          statearr_36949_36974[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_36923 === 10) {
                                            var inst_36900 = state_36922[12];
                                            var inst_36903 = cljs.core.complement.call(null, inst_36900);
                                            var inst_36904 = taoensso.encore.rsome.call(null, inst_36903, client_ids_unsatisfied);
                                            var state_36922__$1 = state_36922;
                                            if (cljs.core.truth_(inst_36904)) {
                                              var statearr_36950_36975 = state_36922__$1;
                                              statearr_36950_36975[1] = 13;
                                            } else {
                                              var statearr_36951_36976 = state_36922__$1;
                                              statearr_36951_36976[1] = 14;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_36923 === 8) {
                                              var state_36922__$1 = state_36922;
                                              var statearr_36952_36977 = state_36922__$1;
                                              statearr_36952_36977[2] = null;
                                              statearr_36952_36977[1] = 9;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__30349__auto__, ms_backoffs, client_ids_unsatisfied);
          return function(switch__30237__auto__, c__30349__auto__, ms_backoffs, client_ids_unsatisfied) {
            return function() {
              var taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto__ = null;
              var taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto____0 = function() {
                var statearr_36956 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_36956[0] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto__;
                statearr_36956[1] = 1;
                return statearr_36956;
              };
              var taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto____1 = function(state_36922) {
                while (true) {
                  var ret_value__30239__auto__ = function() {
                    try {
                      while (true) {
                        var result__30240__auto__ = switch__30237__auto__.call(null, state_36922);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__30240__auto__;
                        }
                        break;
                      }
                    } catch (e36957) {
                      if (e36957 instanceof Object) {
                        var ex__30241__auto__ = e36957;
                        var statearr_36958_36978 = state_36922;
                        statearr_36958_36978[5] = ex__30241__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36922);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e36957;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__36979 = state_36922;
                    state_36922 = G__36979;
                    continue;
                  } else {
                    return ret_value__30239__auto__;
                  }
                  break;
                }
              };
              taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto__ = function(state_36922) {
                switch(arguments.length) {
                  case 0:
                    return taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto____0.call(this);
                  case 1:
                    return taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto____1.call(this, state_36922);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto____0;
              taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto____1;
              return taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__30238__auto__;
            }();
          }(switch__30237__auto__, c__30349__auto__, ms_backoffs, client_ids_unsatisfied);
        }();
        var state__30351__auto__ = function() {
          var statearr_36959 = f__30350__auto__.call(null);
          statearr_36959[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto__;
          return statearr_36959;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
      };
    }(c__30349__auto__, ms_backoffs, client_ids_unsatisfied));
    return c__30349__auto__;
  }
};
taoensso.sente.ajax_lite = taoensso.encore.ajax_lite;
taoensso.sente.IChSocket = function() {
};
taoensso.sente._chsk_connect_BANG_ = function taoensso$sente$_chsk_connect_BANG_(chsk) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)) {
    return chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);
  } else {
    var x__9295__auto__ = chsk == null ? null : chsk;
    var m__9296__auto__ = taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, chsk);
    } else {
      var m__9296__auto____$1 = taoensso.sente._chsk_connect_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, chsk);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-connect!", chsk);
      }
    }
  }
};
taoensso.sente._chsk_disconnect_BANG_ = function taoensso$sente$_chsk_disconnect_BANG_(chsk, reason) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)) {
    return chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk, reason);
  } else {
    var x__9295__auto__ = chsk == null ? null : chsk;
    var m__9296__auto__ = taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, chsk, reason);
    } else {
      var m__9296__auto____$1 = taoensso.sente._chsk_disconnect_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, chsk, reason);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-disconnect!", chsk);
      }
    }
  }
};
taoensso.sente._chsk_reconnect_BANG_ = function taoensso$sente$_chsk_reconnect_BANG_(chsk) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)) {
    return chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);
  } else {
    var x__9295__auto__ = chsk == null ? null : chsk;
    var m__9296__auto__ = taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, chsk);
    } else {
      var m__9296__auto____$1 = taoensso.sente._chsk_reconnect_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, chsk);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-reconnect!", chsk);
      }
    }
  }
};
taoensso.sente._chsk_send_BANG_ = function taoensso$sente$_chsk_send_BANG_(chsk, ev, opts) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)) {
    return chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk, ev, opts);
  } else {
    var x__9295__auto__ = chsk == null ? null : chsk;
    var m__9296__auto__ = taoensso.sente._chsk_send_BANG_[goog.typeOf(x__9295__auto__)];
    if (!(m__9296__auto__ == null)) {
      return m__9296__auto__.call(null, chsk, ev, opts);
    } else {
      var m__9296__auto____$1 = taoensso.sente._chsk_send_BANG_["_"];
      if (!(m__9296__auto____$1 == null)) {
        return m__9296__auto____$1.call(null, chsk, ev, opts);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-send!", chsk);
      }
    }
  }
};
taoensso.sente.chsk_connect_BANG_ = function taoensso$sente$chsk_connect_BANG_(chsk) {
  return taoensso.sente._chsk_connect_BANG_.call(null, chsk);
};
taoensso.sente.chsk_disconnect_BANG_ = function taoensso$sente$chsk_disconnect_BANG_(chsk) {
  return taoensso.sente._chsk_disconnect_BANG_.call(null, chsk, new cljs.core.Keyword(null, "requested-disconnect", "requested-disconnect", 1037120641));
};
taoensso.sente.chsk_reconnect_BANG_ = function taoensso$sente$chsk_reconnect_BANG_(chsk) {
  return taoensso.sente._chsk_reconnect_BANG_.call(null, chsk);
};
taoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;
taoensso.sente.chsk_send_BANG_ = function taoensso$sente$chsk_send_BANG_(var_args) {
  var args36980 = [];
  var len__9707__auto___36983 = arguments.length;
  var i__9708__auto___36984 = 0;
  while (true) {
    if (i__9708__auto___36984 < len__9707__auto___36983) {
      args36980.push(arguments[i__9708__auto___36984]);
      var G__36985 = i__9708__auto___36984 + 1;
      i__9708__auto___36984 = G__36985;
      continue;
    } else {
    }
    break;
  }
  var G__36982 = args36980.length;
  switch(G__36982) {
    case 2:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 3:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36980.length)].join(""));;
  }
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = function(chsk, ev) {
  return taoensso.sente.chsk_send_BANG_.call(null, chsk, ev, cljs.core.PersistentArrayMap.EMPTY);
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = function(chsk, ev, _QMARK_timeout_ms, _QMARK_cb) {
  return taoensso.sente.chsk_send_BANG_.call(null, chsk, ev, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), _QMARK_timeout_ms, new cljs.core.Keyword(null, "cb", "cb", 589947841), _QMARK_cb], null));
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = function(chsk, ev, opts) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 783, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send: (%s) %s", cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "cb", "cb", 589947841), cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "cb", "cb", 589947841)).cljs$core$IFn$_invoke$arity$1(opts))), ev], null);
  }, null), null, 1630079999);
  return taoensso.sente._chsk_send_BANG_.call(null, chsk, ev, opts);
};
taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4;
taoensso.sente.chsk_send__GT_closed_BANG_ = function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 788, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send against closed chsk."], null);
  }, null), null, -685553638);
  if (cljs.core.truth_(_QMARK_cb_fn)) {
    _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264));
  } else {
  }
  return false;
};
taoensso.sente.assert_send_args = function taoensso$sente$assert_send_args(x, _QMARK_timeout_ms, _QMARK_cb) {
  taoensso.sente.assert_event.call(null, x);
  if (_QMARK_timeout_ms == null && _QMARK_cb == null || taoensso.encore.nat_int_QMARK_.call(null, _QMARK_timeout_ms)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("cb requires a timeout; timeout-ms should be a +ive integer: "), cljs.core.str(_QMARK_timeout_ms)].join("")), cljs.core.str("\n"), cljs.core.str("(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))")].join(""));
  }
  if (_QMARK_cb == null || cljs.core.ifn_QMARK_.call(null, _QMARK_cb) || taoensso.encore.chan_QMARK_.call(null, _QMARK_cb)) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("cb should be nil, an ifn, or a channel: "), cljs.core.str(cljs.core.type.call(null, _QMARK_cb))].join("")), cljs.core.str("\n"), cljs.core.str("(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))")].join(""));
  }
};
taoensso.sente.pull_unused_cb_fn_BANG_ = function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_, _QMARK_cb_uuid) {
  var temp__4657__auto__ = _QMARK_cb_uuid;
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb_uuid = temp__4657__auto__;
    return taoensso.encore.swap_in_BANG_.call(null, cbs_waiting_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null), function(cb_uuid, temp__4657__auto__) {
      return function(_QMARK_f) {
        return taoensso.encore.swapped.call(null, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782), _QMARK_f);
      };
    }(cb_uuid, temp__4657__auto__));
  } else {
    return null;
  }
};
taoensso.sente.swap_chsk_state_BANG_ = function taoensso$sente$swap_chsk_state_BANG_(chsk, f) {
  var vec__36990 = taoensso.encore.swap_in_BANG_.call(null, (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(chsk), function(old_state) {
    var new_state = f.call(null, old_state);
    var new_state__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530)).cljs$core$IFn$_invoke$arity$1(old_state)) ? cljs.core.assoc.call(null, new_state, new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530), false) : new_state;
    var new_state__$2 = cljs.core.truth_((new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(new_state__$1)) ? cljs.core.dissoc.call(null, new_state__$1, new cljs.core.Keyword(null, "udt-next-reconnect", "udt-next-reconnect", -1990375733)) : new_state__$1;
    return taoensso.encore.swapped.call(null, new_state__$2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state, new_state__$2], null));
  });
  var old_state = cljs.core.nth.call(null, vec__36990, 0, null);
  var new_state = cljs.core.nth.call(null, vec__36990, 1, null);
  if (cljs.core.not_EQ_.call(null, old_state, new_state)) {
    var output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state, new_state], null);
    cljs.core.async.put_BANG_.call(null, cljs.core.get_in.call(null, chsk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "state", "state", -1988618099)], null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "state", "chsk/state", -1991397620), output], null));
    return output;
  } else {
    return null;
  }
};
taoensso.sente.chsk_state__GT_closed = function taoensso$sente$chsk_state__GT_closed(state, reason) {
  var e_36997 = function() {
    try {
      if (cljs.core.map_QMARK_.call(null, state)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e36995) {
      if (e36995 instanceof Error) {
        var e = e36995;
        return e;
      } else {
        throw e36995;
      }
    }
  }();
  if (e_36997 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(map? state)", state, e_36997, null);
  }
  var e_36998 = function() {
    try {
      if (function(x) {
        return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "requested-disconnect", "requested-disconnect", 1037120641), null, new cljs.core.Keyword(null, "downgrading-ws-to-ajax", "downgrading-ws-to-ajax", 402136720), null, new cljs.core.Keyword(null, "unexpected", "unexpected", -1137752424), null, new cljs.core.Keyword(null, "requested-reconnect", "requested-reconnect", 
        2008347707), null], null), null)), x);
      }.call(null, reason)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e36996) {
      if (e36996 instanceof Error) {
        var e = e36996;
        return e;
      } else {
        throw e36996;
      }
    }
  }();
  if (e_36998 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)", reason, e_36998, null);
  }
  if (cljs.core.truth_(function() {
    var or__8632__auto__ = (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(state);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return cljs.core.not_EQ_.call(null, reason, new cljs.core.Keyword(null, "unexpected", "unexpected", -1137752424));
    }
  }())) {
    return cljs.core.assoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword(null, "udt-next-reconnect", "udt-next-reconnect", -1990375733)), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "last-close", "last-close", -2054255782), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "udt", "udt", 2011712751), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "reason", "reason", -2070751759), reason], 
    null));
  } else {
    return state;
  }
};
taoensso.sente.cb_chan_as_fn = function taoensso$sente$cb_chan_as_fn(_QMARK_cb, ev) {
  if (_QMARK_cb == null || cljs.core.ifn_QMARK_.call(null, _QMARK_cb)) {
    return _QMARK_cb;
  } else {
    var e_37007 = function() {
      try {
        if (taoensso.encore.chan_QMARK_.call(null, _QMARK_cb)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e37003) {
        if (e37003 instanceof Error) {
          var e = e37003;
          return e;
        } else {
          throw e37003;
        }
      }
    }();
    if (e_37007 == null) {
    } else {
      taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/chan? ?cb)", _QMARK_cb, e_37007, null);
    }
    taoensso.sente.assert_event.call(null, ev);
    var vec__37004 = ev;
    var ev_id = cljs.core.nth.call(null, vec__37004, 0, null);
    var _ = cljs.core.nth.call(null, vec__37004, 1, null);
    var cb_ch = _QMARK_cb;
    return function(vec__37004, ev_id, _, cb_ch) {
      return function(reply) {
        return cljs.core.async.put_BANG_.call(null, cb_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, [cljs.core.str(taoensso.encore.as_qname.call(null, ev_id)), cljs.core.str(".cb")].join("")), reply], null));
      };
    }(vec__37004, ev_id, _, cb_ch);
  }
};
taoensso.sente.receive_buffered_evs_BANG_ = function taoensso$sente$receive_buffered_evs_BANG_(chs, clj) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 868, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["receive-buffered-evs!: %s", clj], null);
  }, null), null, 1559187428);
  var buffered_evs = cljs.core.vector_QMARK_.call(null, clj) ? clj : taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(vector? clj)", clj, null, null);
  var seq__37018 = cljs.core.seq.call(null, buffered_evs);
  var chunk__37019 = null;
  var count__37020 = 0;
  var i__37021 = 0;
  while (true) {
    if (i__37021 < count__37020) {
      var ev = cljs.core._nth.call(null, chunk__37019, i__37021);
      taoensso.sente.assert_event.call(null, ev);
      var vec__37022_37028 = ev;
      var id_37029 = cljs.core.nth.call(null, vec__37022_37028, 0, null);
      if (cljs.core.not_EQ_.call(null, cljs.core.namespace.call(null, id_37029), "chsk")) {
      } else {
        throw new Error('Assert failed: (not\x3d (namespace id) "chsk")');
      }
      cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(chs), ev);
      var G__37030 = seq__37018;
      var G__37031 = chunk__37019;
      var G__37032 = count__37020;
      var G__37033 = i__37021 + 1;
      seq__37018 = G__37030;
      chunk__37019 = G__37031;
      count__37020 = G__37032;
      i__37021 = G__37033;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__37018);
      if (temp__4657__auto__) {
        var seq__37018__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__37018__$1)) {
          var c__9443__auto__ = cljs.core.chunk_first.call(null, seq__37018__$1);
          var G__37034 = cljs.core.chunk_rest.call(null, seq__37018__$1);
          var G__37035 = c__9443__auto__;
          var G__37036 = cljs.core.count.call(null, c__9443__auto__);
          var G__37037 = 0;
          seq__37018 = G__37034;
          chunk__37019 = G__37035;
          count__37020 = G__37036;
          i__37021 = G__37037;
          continue;
        } else {
          var ev = cljs.core.first.call(null, seq__37018__$1);
          taoensso.sente.assert_event.call(null, ev);
          var vec__37025_37038 = ev;
          var id_37039 = cljs.core.nth.call(null, vec__37025_37038, 0, null);
          if (cljs.core.not_EQ_.call(null, cljs.core.namespace.call(null, id_37039), "chsk")) {
          } else {
            throw new Error('Assert failed: (not\x3d (namespace id) "chsk")');
          }
          cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(chs), ev);
          var G__37040 = cljs.core.next.call(null, seq__37018__$1);
          var G__37041 = null;
          var G__37042 = 0;
          var G__37043 = 0;
          seq__37018 = G__37040;
          chunk__37019 = G__37041;
          count__37020 = G__37042;
          i__37021 = G__37043;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
taoensso.sente.handshake_QMARK_ = function taoensso$sente$handshake_QMARK_(x) {
  var and__8620__auto__ = cljs.core.vector_QMARK_.call(null, x);
  if (and__8620__auto__) {
    var vec__37053 = x;
    var x1 = cljs.core.nth.call(null, vec__37053, 0, null);
    return cljs.core._EQ_.call(null, x1, new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686));
  } else {
    return and__8620__auto__;
  }
};
taoensso.sente.receive_handshake_BANG_ = function taoensso$sente$receive_handshake_BANG_(chsk_type, chsk, clj) {
  var e_37077 = function() {
    try {
      if (function(x) {
        return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), null], null), null)), x);
      }.call(null, chsk_type)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e37067) {
      if (e37067 instanceof Error) {
        var e = e37067;
        return e;
      } else {
        throw e37067;
      }
    }
  }();
  if (e_37077 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "([:el #{:ws :ajax}] chsk-type)", chsk_type, e_37077, null);
  }
  var e_37078 = function() {
    try {
      if (cljs.core.truth_(taoensso.sente.handshake_QMARK_.call(null, clj))) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e37068) {
      if (e37068 instanceof Error) {
        var e = e37068;
        return e;
      } else {
        throw e37068;
      }
    }
  }();
  if (e_37078 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(handshake? clj)", clj, e_37078, null);
  }
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 885, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["receive-handshake! (%s): %s", chsk_type, clj], null);
  }, null), null, 765777406);
  var vec__37069 = clj;
  var _ = cljs.core.nth.call(null, vec__37069, 0, null);
  var vec__37072 = cljs.core.nth.call(null, vec__37069, 1, null);
  var _QMARK_uid = cljs.core.nth.call(null, vec__37072, 0, null);
  var _QMARK_csrf_token = cljs.core.nth.call(null, vec__37072, 1, null);
  var _QMARK_handshake_data = cljs.core.nth.call(null, vec__37072, 2, null);
  var map__37075 = chsk;
  var map__37075__$1 = (!(map__37075 == null) ? map__37075.cljs$lang$protocol_mask$partition0$ & 64 || map__37075.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37075) : map__37075;
  var chs = cljs.core.get.call(null, map__37075__$1, new cljs.core.Keyword(null, "chs", "chs", 376886120));
  var ever_opened_QMARK__ = cljs.core.get.call(null, map__37075__$1, new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913));
  var first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_.call(null, ever_opened_QMARK__, false, true);
  var new_state = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "type", "type", 1174270348), chsk_type, new cljs.core.Keyword(null, "open?", "open?", 1238443125), true, new cljs.core.Keyword(null, "ever-opened?", "ever-opened?", 1128459732), true, new cljs.core.Keyword(null, "uid", "uid", -1447769400), _QMARK_uid, new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), _QMARK_csrf_token, new cljs.core.Keyword(null, "handshake-data", "handshake-data", -278378864), 
  _QMARK_handshake_data, new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530), first_handshake_QMARK_], null);
  var handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid, _QMARK_csrf_token, _QMARK_handshake_data, first_handshake_QMARK_], null)], null);
  taoensso.sente.assert_event.call(null, handshake_ev);
  if (clojure.string.blank_QMARK_.call(null, _QMARK_csrf_token)) {
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 904, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__37069, _, vec__37072, _QMARK_uid, _QMARK_csrf_token, _QMARK_handshake_data, map__37075, map__37075__$1, chs, ever_opened_QMARK__, 
    first_handshake_QMARK_, new_state, handshake_ev) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SECURITY WARNING: no CSRF token available for use by Sente"], null);
      };
    }(vec__37069, _, vec__37072, _QMARK_uid, _QMARK_csrf_token, _QMARK_handshake_data, map__37075, map__37075__$1, chs, ever_opened_QMARK__, first_handshake_QMARK_, new_state, handshake_ev), null), null, -1997609281);
  } else {
  }
  taoensso.sente.swap_chsk_state_BANG_.call(null, chsk, function(vec__37069, _, vec__37072, _QMARK_uid, _QMARK_csrf_token, _QMARK_handshake_data, map__37075, map__37075__$1, chs, ever_opened_QMARK__, first_handshake_QMARK_, new_state, handshake_ev) {
    return function(p1__37056_SHARP_) {
      return cljs.core.merge.call(null, p1__37056_SHARP_, new_state);
    };
  }(vec__37069, _, vec__37072, _QMARK_uid, _QMARK_csrf_token, _QMARK_handshake_data, map__37075, map__37075__$1, chs, ever_opened_QMARK__, first_handshake_QMARK_, new_state, handshake_ev));
  cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(chs), handshake_ev);
  return new cljs.core.Keyword(null, "handled", "handled", 1889700151);
};
taoensso.sente._QMARK_node_npm_websocket_ = new cljs.core.Delay(function() {
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = taoensso.sente.node_target_QMARK_;
    if (cljs.core.truth_(and__8620__auto__)) {
      return typeof require !== "undefined";
    } else {
      return and__8620__auto__;
    }
  }())) {
    try {
      return require("websocket");
    } catch (e37079) {
      var e = e37079;
      return null;
    }
  } else {
    return null;
  }
}, null);
taoensso.sente.ChWebSocket = function(client_id, chs, params, packer, url, ws_kalive_ms, state_, instance_handle_, retry_count_, ever_opened_QMARK__, backoff_ms_fn, cbs_waiting_, socket_, udt_last_comms_, __meta, __extmap, __hash) {
  this.client_id = client_id;
  this.chs = chs;
  this.params = params;
  this.packer = packer;
  this.url = url;
  this.ws_kalive_ms = ws_kalive_ms;
  this.state_ = state_;
  this.instance_handle_ = instance_handle_;
  this.retry_count_ = retry_count_;
  this.ever_opened_QMARK__ = ever_opened_QMARK__;
  this.backoff_ms_fn = backoff_ms_fn;
  this.cbs_waiting_ = cbs_waiting_;
  this.socket_ = socket_;
  this.udt_last_comms_ = udt_last_comms_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k37086, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__37088 = k37086 instanceof cljs.core.Keyword ? k37086.fqn : null;
  switch(G__37088) {
    case "ws-kalive-ms":
      return self__.ws_kalive_ms;
      break;
    case "ever-opened?_":
      return self__.ever_opened_QMARK__;
      break;
    case "client-id":
      return self__.client_id;
      break;
    case "packer":
      return self__.packer;
      break;
    case "chs":
      return self__.chs;
      break;
    case "udt-last-comms_":
      return self__.udt_last_comms_;
      break;
    case "params":
      return self__.params;
      break;
    case "retry-count_":
      return self__.retry_count_;
      break;
    case "backoff-ms-fn":
      return self__.backoff_ms_fn;
      break;
    case "socket_":
      return self__.socket_;
      break;
    case "url":
      return self__.url;
      break;
    case "instance-handle_":
      return self__.instance_handle_;
      break;
    case "cbs-waiting_":
      return self__.cbs_waiting_;
      break;
    case "state_":
      return self__.state_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k37086, else__9257__auto__);
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#taoensso.sente.ChWebSocket{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), self__.ws_kalive_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "instance-handle_", "instance-handle_", -1923384457), self__.instance_handle_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), self__.retry_count_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), self__.ever_opened_QMARK__], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), self__.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "socket_", "socket_", -361048908), self__.socket_], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "udt-last-comms_", "udt-last-comms_", -145799639), self__.udt_last_comms_], null)], null), self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$ = true;
taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__37085) {
  var self__ = this;
  var G__37085__$1 = this;
  return new cljs.core.RecordIter(0, G__37085__$1, 14, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), 
  new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), 
  new cljs.core.Keyword(null, "udt-last-comms_", "udt-last-comms_", -145799639)], null), cljs.core._iterator.call(null, self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 14 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), null, new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, 
  "udt-last-comms_", "udt-last-comms_", -145799639), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), null, new cljs.core.Keyword(null, "socket_", "socket_", -361048908), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), null, new cljs.core.Keyword(null, 
  "cbs-waiting_", "cbs-waiting_", -1519029061), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__37085) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__37089 = cljs.core.keyword_identical_QMARK_;
  var expr__37090 = k__9262__auto__;
  if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), expr__37090))) {
    return new taoensso.sente.ChWebSocket(G__37085, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), expr__37090))) {
      return new taoensso.sente.ChWebSocket(self__.client_id, G__37085, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__37090))) {
        return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, G__37085, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "packer", "packer", 66077544), expr__37090))) {
          return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, G__37085, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), expr__37090))) {
            return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, G__37085, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), expr__37090))) {
              return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, G__37085, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), expr__37090))) {
                return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, G__37085, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), expr__37090))) {
                  return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, G__37085, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), expr__37090))) {
                    return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, G__37085, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), expr__37090))) {
                      return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, G__37085, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
                    } else {
                      if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), expr__37090))) {
                        return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, G__37085, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
                      } else {
                        if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), expr__37090))) {
                          return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, G__37085, self__.socket_, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
                        } else {
                          if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "socket_", "socket_", -361048908), expr__37090))) {
                            return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, G__37085, self__.udt_last_comms_, self__.__meta, self__.__extmap, null);
                          } else {
                            if (cljs.core.truth_(pred__37089.call(null, new cljs.core.Keyword(null, "udt-last-comms_", "udt-last-comms_", -145799639), expr__37090))) {
                              return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, G__37085, self__.__meta, self__.__extmap, null);
                            } else {
                              return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__37085), null);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), self__.ws_kalive_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), self__.instance_handle_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), self__.retry_count_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), self__.ever_opened_QMARK__], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), self__.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "socket_", "socket_", -361048908), self__.socket_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "udt-last-comms_", "udt-last-comms_", 
  -145799639), self__.udt_last_comms_], null)], null), self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__37085) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.ws_kalive_ms, self__.state_, self__.instance_handle_, self__.retry_count_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.cbs_waiting_, self__.socket_, self__.udt_last_comms_, G__37085, self__.__extmap, self__.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = true;
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = function(chsk, reason) {
  var self__ = this;
  var chsk__$1 = this;
  cljs.core.reset_BANG_.call(null, self__.instance_handle_, null);
  taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(chsk__$1) {
    return function(p1__37080_SHARP_) {
      return taoensso.sente.chsk_state__GT_closed.call(null, p1__37080_SHARP_, reason);
    };
  }(chsk__$1));
  var temp__4657__auto__ = cljs.core.deref.call(null, self__.socket_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var s = temp__4657__auto__;
    return s.close(1E3, "CLOSE_NORMAL");
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  taoensso.sente._chsk_disconnect_BANG_.call(null, chsk__$1, new cljs.core.Keyword(null, "requested-reconnect", "requested-reconnect", 2008347707));
  return taoensso.sente._chsk_connect_BANG_.call(null, chsk__$1);
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = function(chsk, ev, opts) {
  var self__ = this;
  var chsk__$1 = this;
  var map__37092 = opts;
  var map__37092__$1 = (!(map__37092 == null) ? map__37092.cljs$lang$protocol_mask$partition0$ & 64 || map__37092.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37092) : map__37092;
  var _QMARK_timeout_ms = cljs.core.get.call(null, map__37092__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406));
  var _QMARK_cb = cljs.core.get.call(null, map__37092__$1, new cljs.core.Keyword(null, "cb", "cb", 589947841));
  var flush_QMARK_ = cljs.core.get.call(null, map__37092__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  var _ = taoensso.sente.assert_send_args.call(null, ev, _QMARK_timeout_ms, _QMARK_cb);
  var _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn.call(null, _QMARK_cb, ev);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
    return taoensso.sente.chsk_send__GT_closed_BANG_.call(null, _QMARK_cb_fn);
  } else {
    var _QMARK_cb_uuid = cljs.core.truth_(_QMARK_cb_fn) ? taoensso.encore.uuid_str.call(null, 6) : null;
    var ppstr = taoensso.sente.pack.call(null, self__.packer, cljs.core.meta.call(null, ev), ev, _QMARK_cb_uuid);
    var temp__4657__auto___37183 = _QMARK_cb_uuid;
    if (cljs.core.truth_(temp__4657__auto___37183)) {
      var cb_uuid_37184 = temp__4657__auto___37183;
      taoensso.encore.reset_in_BANG_.call(null, self__.cbs_waiting_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_37184], null), function() {
        var e = function() {
          try {
            if (taoensso.truss.impl.some_QMARK_.call(null, _QMARK_cb_fn)) {
              return null;
            } else {
              return taoensso.truss.impl._dummy_error;
            }
          } catch (e37094) {
            if (e37094 instanceof Error) {
              var e = e37094;
              return e;
            } else {
              throw e37094;
            }
          }
        }();
        if (e == null) {
          return _QMARK_cb_fn;
        } else {
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/some? ?cb-fn)", _QMARK_cb_fn, e, null);
        }
      }());
      var temp__4657__auto___37185__$1 = _QMARK_timeout_ms;
      if (cljs.core.truth_(temp__4657__auto___37185__$1)) {
        var timeout_ms_37186 = temp__4657__auto___37185__$1;
        var c__30349__auto___37187 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___37187, timeout_ms_37186, temp__4657__auto___37185__$1, cb_uuid_37184, temp__4657__auto___37183, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
          return function() {
            var f__30350__auto__ = function() {
              var switch__30237__auto__ = function(c__30349__auto___37187, timeout_ms_37186, temp__4657__auto___37185__$1, cb_uuid_37184, temp__4657__auto___37183, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
                return function(state_37105) {
                  var state_val_37106 = state_37105[1];
                  if (state_val_37106 === 1) {
                    var inst_37095 = cljs.core.async.timeout.call(null, timeout_ms_37186);
                    var state_37105__$1 = state_37105;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37105__$1, 2, inst_37095);
                  } else {
                    if (state_val_37106 === 2) {
                      var inst_37098 = state_37105[7];
                      var inst_37097 = state_37105[2];
                      var inst_37098__$1 = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, _QMARK_cb_uuid);
                      var state_37105__$1 = function() {
                        var statearr_37107 = state_37105;
                        statearr_37107[7] = inst_37098__$1;
                        statearr_37107[8] = inst_37097;
                        return statearr_37107;
                      }();
                      if (cljs.core.truth_(inst_37098__$1)) {
                        var statearr_37108_37188 = state_37105__$1;
                        statearr_37108_37188[1] = 3;
                      } else {
                        var statearr_37109_37189 = state_37105__$1;
                        statearr_37109_37189[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_37106 === 3) {
                        var inst_37098 = state_37105[7];
                        var inst_37100 = inst_37098.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
                        var state_37105__$1 = state_37105;
                        var statearr_37110_37190 = state_37105__$1;
                        statearr_37110_37190[2] = inst_37100;
                        statearr_37110_37190[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_37106 === 4) {
                          var state_37105__$1 = state_37105;
                          var statearr_37111_37191 = state_37105__$1;
                          statearr_37111_37191[2] = null;
                          statearr_37111_37191[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_37106 === 5) {
                            var inst_37103 = state_37105[2];
                            var state_37105__$1 = state_37105;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37105__$1, inst_37103);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                };
              }(c__30349__auto___37187, timeout_ms_37186, temp__4657__auto___37185__$1, cb_uuid_37184, temp__4657__auto___37183, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1);
              return function(switch__30237__auto__, c__30349__auto___37187, timeout_ms_37186, temp__4657__auto___37185__$1, cb_uuid_37184, temp__4657__auto___37183, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
                return function() {
                  var taoensso$sente$state_machine__30238__auto__ = null;
                  var taoensso$sente$state_machine__30238__auto____0 = function() {
                    var statearr_37115 = [null, null, null, null, null, null, null, null, null];
                    statearr_37115[0] = taoensso$sente$state_machine__30238__auto__;
                    statearr_37115[1] = 1;
                    return statearr_37115;
                  };
                  var taoensso$sente$state_machine__30238__auto____1 = function(state_37105) {
                    while (true) {
                      var ret_value__30239__auto__ = function() {
                        try {
                          while (true) {
                            var result__30240__auto__ = switch__30237__auto__.call(null, state_37105);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__30240__auto__;
                            }
                            break;
                          }
                        } catch (e37116) {
                          if (e37116 instanceof Object) {
                            var ex__30241__auto__ = e37116;
                            var statearr_37117_37192 = state_37105;
                            statearr_37117_37192[5] = ex__30241__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37105);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e37116;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__37193 = state_37105;
                        state_37105 = G__37193;
                        continue;
                      } else {
                        return ret_value__30239__auto__;
                      }
                      break;
                    }
                  };
                  taoensso$sente$state_machine__30238__auto__ = function(state_37105) {
                    switch(arguments.length) {
                      case 0:
                        return taoensso$sente$state_machine__30238__auto____0.call(this);
                      case 1:
                        return taoensso$sente$state_machine__30238__auto____1.call(this, state_37105);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                  taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                  return taoensso$sente$state_machine__30238__auto__;
                }();
              }(switch__30237__auto__, c__30349__auto___37187, timeout_ms_37186, temp__4657__auto___37185__$1, cb_uuid_37184, temp__4657__auto___37183, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1);
            }();
            var state__30351__auto__ = function() {
              var statearr_37118 = f__30350__auto__.call(null);
              statearr_37118[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___37187;
              return statearr_37118;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
          };
        }(c__30349__auto___37187, timeout_ms_37186, temp__4657__auto___37185__$1, cb_uuid_37184, temp__4657__auto___37183, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1));
      } else {
      }
    } else {
    }
    try {
      cljs.core.deref.call(null, self__.socket_).send(ppstr);
      cljs.core.reset_BANG_.call(null, self__.udt_last_comms_, taoensso.encore.now_udt.call(null));
      return new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
    } catch (e37119) {
      var e = e37119;
      taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 986, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(e, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
        return function() {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, "Chsk send error"], null);
        };
      }(e, _QMARK_cb_uuid, ppstr, map__37092, map__37092__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1), null), null, 582043206);
      var temp__4657__auto___37194 = _QMARK_cb_uuid;
      if (cljs.core.truth_(temp__4657__auto___37194)) {
        var cb_uuid_37195 = temp__4657__auto___37194;
        var cb_fn_STAR__37196 = function() {
          var or__8632__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, cb_uuid_37195);
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            var e__$1 = function() {
              try {
                if (taoensso.truss.impl.some_QMARK_.call(null, _QMARK_cb_fn)) {
                  return null;
                } else {
                  return taoensso.truss.impl._dummy_error;
                }
              } catch (e37120) {
                if (e37120 instanceof Error) {
                  var e__$1 = e37120;
                  return e__$1;
                } else {
                  throw e37120;
                }
              }
            }();
            if (e__$1 == null) {
              return _QMARK_cb_fn;
            } else {
              return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/some? ?cb-fn)", _QMARK_cb_fn, e__$1, null);
            }
          }
        }();
        cb_fn_STAR__37196.call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439));
      } else {
      }
      return false;
    }
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  var temp__4657__auto__ = function() {
    var or__8632__auto__ = taoensso.encore.oget.call(null, goog.global, "WebSocket");
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      var or__8632__auto____$1 = taoensso.encore.oget.call(null, goog.global, "MozWebSocket");
      if (cljs.core.truth_(or__8632__auto____$1)) {
        return or__8632__auto____$1;
      } else {
        return taoensso.encore.oget.call(null, cljs.core.deref.call(null, taoensso.sente._QMARK_node_npm_websocket_), "w3cwebsocket");
      }
    }
  }();
  if (cljs.core.truth_(temp__4657__auto__)) {
    var WebSocket = temp__4657__auto__;
    var instance_handle = cljs.core.reset_BANG_.call(null, self__.instance_handle_, taoensso.encore.uuid_str.call(null));
    var have_handle_QMARK_ = function(instance_handle, WebSocket, temp__4657__auto__, chsk__$1) {
      return function() {
        return cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.instance_handle_), instance_handle);
      };
    }(instance_handle, WebSocket, temp__4657__auto__, chsk__$1);
    var connect_fn = function(instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
      return function taoensso$sente$connect_fn() {
        if (cljs.core.truth_(have_handle_QMARK_.call(null))) {
          var retry_fn = function(instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
            return function() {
              if (cljs.core.truth_(have_handle_QMARK_.call(null))) {
                var retry_count_STAR_ = cljs.core.swap_BANG_.call(null, self__.retry_count_, cljs.core.inc);
                var backoff_ms = self__.backoff_ms_fn.call(null, retry_count_STAR_);
                var udt_next_reconnect = taoensso.encore.now_udt.call(null) + backoff_ms;
                taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1011, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, 
                chsk__$1) {
                  return function() {
                    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk is closed: will try reconnect attempt (%s) in %s ms", retry_count_STAR_, backoff_ms], null);
                  };
                }(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1), null), null, 1882869183);
                goog.global.setTimeout(taoensso$sente$connect_fn, backoff_ms);
                return taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                  return function(p1__37081_SHARP_) {
                    return cljs.core.assoc.call(null, p1__37081_SHARP_, new cljs.core.Keyword(null, "udt-next-reconnect", "udt-next-reconnect", -1990375733), udt_next_reconnect);
                  };
                }(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1));
              } else {
                return null;
              }
            };
          }(instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1);
          var _QMARK_socket = function() {
            try {
              return new WebSocket(taoensso.encore.merge_url_with_query_string.call(null, self__.url, cljs.core.merge.call(null, self__.params, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null))));
            } catch (e37127) {
              var e = e37127;
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1025, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(e, retry_fn, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, "WebSocket error"], null);
                };
              }(e, retry_fn, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1), null), null, 1827501489);
              return null;
            }
          }();
          if (cljs.core.not.call(null, _QMARK_socket)) {
            return retry_fn.call(null);
          } else {
            return cljs.core.reset_BANG_.call(null, self__.socket_, function() {
              var G__37128 = _QMARK_socket;
              G__37128["onerror"] = function(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                return function(ws_ev) {
                  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1035, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                    return function() {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["WebSocket error: %s", function() {
                        try {
                          return cljs.core.js__GT_clj.call(null, ws_ev);
                        } catch (e37129) {
                          var _ = e37129;
                          return ws_ev;
                        }
                      }()], null);
                    };
                  }(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1), null), null, 1164635131);
                  var last_ws_error = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "udt", "udt", 2011712751), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "ev", "ev", -406827324), ws_ev], null);
                  return taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(last_ws_error, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                    return function(p1__37082_SHARP_) {
                      return cljs.core.assoc.call(null, p1__37082_SHARP_, new cljs.core.Keyword(null, "last-ws-error", "last-ws-error", -820288502), last_ws_error);
                    };
                  }(last_ws_error, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1));
                };
              }(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1);
              G__37128["onmessage"] = function(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                return function(ws_ev) {
                  var ppstr = taoensso.encore.oget.call(null, ws_ev, "data");
                  var vec__37130 = taoensso.sente.unpack.call(null, self__.packer, ppstr);
                  var clj = cljs.core.nth.call(null, vec__37130, 0, null);
                  var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__37130, 1, null);
                  cljs.core.reset_BANG_.call(null, self__.udt_last_comms_, taoensso.encore.now_udt.call(null));
                  var or__8632__auto__ = cljs.core.truth_(taoensso.sente.handshake_QMARK_.call(null, clj)) ? function() {
                    taoensso.sente.receive_handshake_BANG_.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), chsk__$1, clj);
                    cljs.core.reset_BANG_.call(null, self__.retry_count_, 0);
                    return new cljs.core.Keyword(null, "handshake", "handshake", 68079331);
                  }() : null;
                  if (cljs.core.truth_(or__8632__auto__)) {
                    return or__8632__auto__;
                  } else {
                    var or__8632__auto____$1 = cljs.core._EQ_.call(null, clj, new cljs.core.Keyword("chsk", "ws-ping", "chsk/ws-ping", 191675304)) ? function() {
                      cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(self__.chs), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "ws-ping", "chsk/ws-ping", 191675304)], null));
                      return new cljs.core.Keyword(null, "noop", "noop", -673731258);
                    }() : null;
                    if (cljs.core.truth_(or__8632__auto____$1)) {
                      return or__8632__auto____$1;
                    } else {
                      var temp__4655__auto__ = _QMARK_cb_uuid;
                      if (cljs.core.truth_(temp__4655__auto__)) {
                        var cb_uuid = temp__4655__auto__;
                        var temp__4655__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, cb_uuid);
                        if (cljs.core.truth_(temp__4655__auto____$1)) {
                          var cb_fn = temp__4655__auto____$1;
                          return cb_fn.call(null, clj);
                        } else {
                          return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1071, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(temp__4655__auto____$1, cb_uuid, temp__4655__auto__, or__8632__auto____$1, or__8632__auto__, ppstr, 
                          vec__37130, clj, _QMARK_cb_uuid, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                            return function() {
                              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Cb reply w/o local cb-fn: %s", clj], null);
                            };
                          }(temp__4655__auto____$1, cb_uuid, temp__4655__auto__, or__8632__auto____$1, or__8632__auto__, ppstr, vec__37130, clj, _QMARK_cb_uuid, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1), null), null, -79234703);
                        }
                      } else {
                        var buffered_evs = clj;
                        return taoensso.sente.receive_buffered_evs_BANG_.call(null, self__.chs, buffered_evs);
                      }
                    }
                  }
                };
              }(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1);
              G__37128["onclose"] = function(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                return function(ws_ev) {
                  var clean_QMARK_ = taoensso.encore.oget.call(null, ws_ev, "wasClean");
                  var code = taoensso.encore.oget.call(null, ws_ev, "code");
                  var reason = taoensso.encore.oget.call(null, ws_ev, "reason");
                  var last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "udt", "udt", 2011712751), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "ev", "ev", -406827324), ws_ev, new cljs.core.Keyword(null, "clean?", "clean?", -1675631009), clean_QMARK_, new cljs.core.Keyword(null, "code", "code", 1586293142), code, new cljs.core.Keyword(null, "reason", "reason", -2070751759), reason], null);
                  if (cljs.core.truth_(clean_QMARK_)) {
                    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1093, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(clean_QMARK_, code, reason, last_ws_close, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, 
                    WebSocket, temp__4657__auto__, chsk__$1) {
                      return function() {
                        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clean WebSocket close, will not attempt reconnect"], null);
                      };
                    }(clean_QMARK_, code, reason, last_ws_close, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1), null), null, 1528664577);
                    return taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(clean_QMARK_, code, reason, last_ws_close, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                      return function(p1__37083_SHARP_) {
                        return cljs.core.assoc.call(null, p1__37083_SHARP_, new cljs.core.Keyword(null, "last-ws-close", "last-ws-close", -798104932), last_ws_close);
                      };
                    }(clean_QMARK_, code, reason, last_ws_close, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1));
                  } else {
                    taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(clean_QMARK_, code, reason, last_ws_close, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1) {
                      return function(p1__37084_SHARP_) {
                        return cljs.core.assoc.call(null, taoensso.sente.chsk_state__GT_closed.call(null, p1__37084_SHARP_, new cljs.core.Keyword(null, "unexpected", "unexpected", -1137752424)), new cljs.core.Keyword(null, "last-ws-close", "last-ws-close", -798104932), last_ws_close);
                      };
                    }(clean_QMARK_, code, reason, last_ws_close, G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1));
                    return retry_fn.call(null);
                  }
                };
              }(G__37128, retry_fn, _QMARK_socket, instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1);
              return G__37128;
            }());
          }
        } else {
          return null;
        }
      };
    }(instance_handle, have_handle_QMARK_, WebSocket, temp__4657__auto__, chsk__$1);
    var temp__4657__auto___37197__$1 = self__.ws_kalive_ms;
    if (cljs.core.truth_(temp__4657__auto___37197__$1)) {
      var ms_37198 = temp__4657__auto___37197__$1;
      var c__30349__auto___37199 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___37199, ms_37198, temp__4657__auto___37197__$1, instance_handle, have_handle_QMARK_, connect_fn, WebSocket, temp__4657__auto__, chsk__$1) {
        return function() {
          var f__30350__auto__ = function() {
            var switch__30237__auto__ = function(c__30349__auto___37199, ms_37198, temp__4657__auto___37197__$1, instance_handle, have_handle_QMARK_, connect_fn, WebSocket, temp__4657__auto__, chsk__$1) {
              return function(state_37160) {
                var state_val_37161 = state_37160[1];
                if (state_val_37161 === 7) {
                  var inst_37156 = state_37160[2];
                  var state_37160__$1 = state_37160;
                  var statearr_37162_37200 = state_37160__$1;
                  statearr_37162_37200[2] = inst_37156;
                  statearr_37162_37200[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_37161 === 1) {
                    var state_37160__$1 = state_37160;
                    var statearr_37163_37201 = state_37160__$1;
                    statearr_37163_37201[2] = null;
                    statearr_37163_37201[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37161 === 4) {
                      var inst_37137 = state_37160[2];
                      var inst_37138 = have_handle_QMARK_.call(null);
                      var state_37160__$1 = function() {
                        var statearr_37164 = state_37160;
                        statearr_37164[7] = inst_37137;
                        return statearr_37164;
                      }();
                      if (cljs.core.truth_(inst_37138)) {
                        var statearr_37165_37202 = state_37160__$1;
                        statearr_37165_37202[1] = 5;
                      } else {
                        var statearr_37166_37203 = state_37160__$1;
                        statearr_37166_37203[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_37161 === 6) {
                        var state_37160__$1 = state_37160;
                        var statearr_37167_37204 = state_37160__$1;
                        statearr_37167_37204[2] = null;
                        statearr_37167_37204[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_37161 === 3) {
                          var inst_37158 = state_37160[2];
                          var state_37160__$1 = state_37160;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37160__$1, inst_37158);
                        } else {
                          if (state_val_37161 === 2) {
                            var inst_37134 = cljs.core.deref.call(null, self__.udt_last_comms_);
                            var inst_37135 = cljs.core.async.timeout.call(null, ms_37198);
                            var state_37160__$1 = function() {
                              var statearr_37168 = state_37160;
                              statearr_37168[8] = inst_37134;
                              return statearr_37168;
                            }();
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37160__$1, 4, inst_37135);
                          } else {
                            if (state_val_37161 === 9) {
                              var state_37160__$1 = state_37160;
                              var statearr_37169_37205 = state_37160__$1;
                              statearr_37169_37205[2] = null;
                              statearr_37169_37205[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_37161 === 5) {
                                var inst_37134 = state_37160[8];
                                var inst_37140 = cljs.core.deref.call(null, self__.udt_last_comms_);
                                var inst_37141 = cljs.core._EQ_.call(null, inst_37134, inst_37140);
                                var state_37160__$1 = state_37160;
                                if (inst_37141) {
                                  var statearr_37170_37206 = state_37160__$1;
                                  statearr_37170_37206[1] = 8;
                                } else {
                                  var statearr_37171_37207 = state_37160__$1;
                                  statearr_37171_37207[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_37161 === 10) {
                                  var inst_37152 = state_37160[2];
                                  var state_37160__$1 = function() {
                                    var statearr_37172 = state_37160;
                                    statearr_37172[9] = inst_37152;
                                    return statearr_37172;
                                  }();
                                  var statearr_37173_37208 = state_37160__$1;
                                  statearr_37173_37208[2] = null;
                                  statearr_37173_37208[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_37161 === 8) {
                                    var inst_37143 = cljs.core.PersistentVector.EMPTY_NODE;
                                    var inst_37144 = [new cljs.core.Keyword("chsk", "ws-ping", "chsk/ws-ping", 191675304)];
                                    var inst_37145 = new cljs.core.PersistentVector(null, 1, 5, inst_37143, inst_37144, null);
                                    var inst_37146 = [new cljs.core.Keyword(null, "flush?", "flush?", -108887231)];
                                    var inst_37147 = [true];
                                    var inst_37148 = cljs.core.PersistentHashMap.fromArrays(inst_37146, inst_37147);
                                    var inst_37149 = taoensso.sente._chsk_send_BANG_.call(null, chsk__$1, inst_37145, inst_37148);
                                    var state_37160__$1 = state_37160;
                                    var statearr_37174_37209 = state_37160__$1;
                                    statearr_37174_37209[2] = inst_37149;
                                    statearr_37174_37209[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__30349__auto___37199, ms_37198, temp__4657__auto___37197__$1, instance_handle, have_handle_QMARK_, connect_fn, WebSocket, temp__4657__auto__, chsk__$1);
            return function(switch__30237__auto__, c__30349__auto___37199, ms_37198, temp__4657__auto___37197__$1, instance_handle, have_handle_QMARK_, connect_fn, WebSocket, temp__4657__auto__, chsk__$1) {
              return function() {
                var taoensso$sente$state_machine__30238__auto__ = null;
                var taoensso$sente$state_machine__30238__auto____0 = function() {
                  var statearr_37178 = [null, null, null, null, null, null, null, null, null, null];
                  statearr_37178[0] = taoensso$sente$state_machine__30238__auto__;
                  statearr_37178[1] = 1;
                  return statearr_37178;
                };
                var taoensso$sente$state_machine__30238__auto____1 = function(state_37160) {
                  while (true) {
                    var ret_value__30239__auto__ = function() {
                      try {
                        while (true) {
                          var result__30240__auto__ = switch__30237__auto__.call(null, state_37160);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__30240__auto__;
                          }
                          break;
                        }
                      } catch (e37179) {
                        if (e37179 instanceof Object) {
                          var ex__30241__auto__ = e37179;
                          var statearr_37180_37210 = state_37160;
                          statearr_37180_37210[5] = ex__30241__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37160);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e37179;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__37211 = state_37160;
                      state_37160 = G__37211;
                      continue;
                    } else {
                      return ret_value__30239__auto__;
                    }
                    break;
                  }
                };
                taoensso$sente$state_machine__30238__auto__ = function(state_37160) {
                  switch(arguments.length) {
                    case 0:
                      return taoensso$sente$state_machine__30238__auto____0.call(this);
                    case 1:
                      return taoensso$sente$state_machine__30238__auto____1.call(this, state_37160);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__30238__auto____0;
                taoensso$sente$state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__30238__auto____1;
                return taoensso$sente$state_machine__30238__auto__;
              }();
            }(switch__30237__auto__, c__30349__auto___37199, ms_37198, temp__4657__auto___37197__$1, instance_handle, have_handle_QMARK_, connect_fn, WebSocket, temp__4657__auto__, chsk__$1);
          }();
          var state__30351__auto__ = function() {
            var statearr_37181 = f__30350__auto__.call(null);
            statearr_37181[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___37199;
            return statearr_37181;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
        };
      }(c__30349__auto___37199, ms_37198, temp__4657__auto___37197__$1, instance_handle, have_handle_QMARK_, connect_fn, WebSocket, temp__4657__auto__, chsk__$1));
    } else {
    }
    cljs.core.reset_BANG_.call(null, self__.retry_count_, 0);
    connect_fn.call(null);
    return chsk__$1;
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket.getBasis = function() {
  return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null), new cljs.core.Symbol(null, "chs", "chs", 2017417647, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "packer", "packer", 1706609071, null), new cljs.core.Symbol(null, "url", "url", 1916828573, null), new cljs.core.Symbol(null, "ws-kalive-ms", "ws-kalive-ms", -1212255801, null), new cljs.core.Symbol(null, 
  "state_", "state_", -1696768667, null), new cljs.core.Symbol(null, "instance-handle_", "instance-handle_", -282852930, null), new cljs.core.Symbol(null, "retry-count_", "retry-count_", 1660769620, null), new cljs.core.Symbol(null, "ever-opened?_", "ever-opened?_", -1013096856, null), new cljs.core.Symbol(null, "backoff-ms-fn", "backoff-ms-fn", -1881539814, null), new cljs.core.Symbol(null, "cbs-waiting_", "cbs-waiting_", 121502466, null), new cljs.core.Symbol(null, "socket_", "socket_", 1279482619, 
  null), new cljs.core.Symbol(null, "udt-last-comms_", "udt-last-comms_", 1494731888, null)], null);
};
taoensso.sente.ChWebSocket.cljs$lang$type = true;
taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChWebSocket");
};
taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "taoensso.sente/ChWebSocket");
};
taoensso.sente.__GT_ChWebSocket = function taoensso$sente$__GT_ChWebSocket(client_id, chs, params, packer, url, ws_kalive_ms, state_, instance_handle_, retry_count_, ever_opened_QMARK__, backoff_ms_fn, cbs_waiting_, socket_, udt_last_comms_) {
  return new taoensso.sente.ChWebSocket(client_id, chs, params, packer, url, ws_kalive_ms, state_, instance_handle_, retry_count_, ever_opened_QMARK__, backoff_ms_fn, cbs_waiting_, socket_, udt_last_comms_, null, null, null);
};
taoensso.sente.map__GT_ChWebSocket = function taoensso$sente$map__GT_ChWebSocket(G__37087) {
  return new taoensso.sente.ChWebSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(G__37087), 
  (new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "ever-opened?_", 
  "ever-opened?_", 1641338913)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "socket_", "socket_", -361048908)).cljs$core$IFn$_invoke$arity$1(G__37087), (new cljs.core.Keyword(null, "udt-last-comms_", "udt-last-comms_", -145799639)).cljs$core$IFn$_invoke$arity$1(G__37087), 
  null, cljs.core.dissoc.call(null, G__37087, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, 
  "instance-handle_", "instance-handle_", -1923384457), new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), new cljs.core.Keyword(null, "udt-last-comms_", "udt-last-comms_", -145799639)), null);
};
taoensso.sente.new_ChWebSocket = function taoensso$sente$new_ChWebSocket(opts) {
  return taoensso.sente.map__GT_ChWebSocket.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "state_", "state_", 957667102), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "ever-opened?", "ever-opened?", 1128459732), 
  false], null)), new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), cljs.core.atom.call(null, null), new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), cljs.core.atom.call(null, 0), new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), cljs.core.atom.call(null, false), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, 
  "socket_", "socket_", -361048908), cljs.core.atom.call(null, null), new cljs.core.Keyword(null, "udt-last-comms_", "udt-last-comms_", -145799639), cljs.core.atom.call(null, null)], null), opts));
};
taoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.call(null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), 60);
taoensso.sente.ChAjaxSocket = function(client_id, chs, params, packer, url, state_, instance_handle_, ever_opened_QMARK__, backoff_ms_fn, ajax_opts, curr_xhr_, __meta, __extmap, __hash) {
  this.client_id = client_id;
  this.chs = chs;
  this.params = params;
  this.packer = packer;
  this.url = url;
  this.state_ = state_;
  this.instance_handle_ = instance_handle_;
  this.ever_opened_QMARK__ = ever_opened_QMARK__;
  this.backoff_ms_fn = backoff_ms_fn;
  this.ajax_opts = ajax_opts;
  this.curr_xhr_ = curr_xhr_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k37219, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__37221 = k37219 instanceof cljs.core.Keyword ? k37219.fqn : null;
  switch(G__37221) {
    case "curr-xhr_":
      return self__.curr_xhr_;
      break;
    case "ever-opened?_":
      return self__.ever_opened_QMARK__;
      break;
    case "client-id":
      return self__.client_id;
      break;
    case "packer":
      return self__.packer;
      break;
    case "chs":
      return self__.chs;
      break;
    case "params":
      return self__.params;
      break;
    case "backoff-ms-fn":
      return self__.backoff_ms_fn;
      break;
    case "url":
      return self__.url;
      break;
    case "instance-handle_":
      return self__.instance_handle_;
      break;
    case "ajax-opts":
      return self__.ajax_opts;
      break;
    case "state_":
      return self__.state_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k37219, else__9257__auto__);
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#taoensso.sente.ChAjaxSocket{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), self__.instance_handle_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "ever-opened?_", "ever-opened?_", 1641338913), self__.ever_opened_QMARK__], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), self__.ajax_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), self__.curr_xhr_], null)], null), self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$ = true;
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__37218) {
  var self__ = this;
  var G__37218__$1 = this;
  return new cljs.core.RecordIter(0, G__37218__$1, 11, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, 
  "instance-handle_", "instance-handle_", -1923384457), new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696)], null), cljs.core._iterator.call(null, self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 11 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), null, new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, 
  "params", "params", 710516235), null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__37218) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__37222 = cljs.core.keyword_identical_QMARK_;
  var expr__37223 = k__9262__auto__;
  if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), expr__37223))) {
    return new taoensso.sente.ChAjaxSocket(G__37218, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), expr__37223))) {
      return new taoensso.sente.ChAjaxSocket(self__.client_id, G__37218, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__37223))) {
        return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, G__37218, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "packer", "packer", 66077544), expr__37223))) {
          return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, G__37218, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), expr__37223))) {
            return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, G__37218, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), expr__37223))) {
              return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, G__37218, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), expr__37223))) {
                return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, G__37218, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), expr__37223))) {
                  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, G__37218, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), expr__37223))) {
                    return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, G__37218, self__.ajax_opts, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), expr__37223))) {
                      return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, G__37218, self__.curr_xhr_, self__.__meta, self__.__extmap, null);
                    } else {
                      if (cljs.core.truth_(pred__37222.call(null, new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), expr__37223))) {
                        return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, G__37218, self__.__meta, self__.__extmap, null);
                      } else {
                        return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__37218), null);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), self__.instance_handle_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), self__.ever_opened_QMARK__], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), self__.ajax_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), self__.curr_xhr_], null)], 
  null), self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__37218) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.instance_handle_, self__.ever_opened_QMARK__, self__.backoff_ms_fn, self__.ajax_opts, self__.curr_xhr_, G__37218, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = true;
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = function(chsk, reason) {
  var self__ = this;
  var chsk__$1 = this;
  cljs.core.reset_BANG_.call(null, self__.instance_handle_, null);
  taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(chsk__$1) {
    return function(p1__37212_SHARP_) {
      return taoensso.sente.chsk_state__GT_closed.call(null, p1__37212_SHARP_, reason);
    };
  }(chsk__$1));
  var temp__4657__auto__ = cljs.core.deref.call(null, self__.curr_xhr_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var x = temp__4657__auto__;
    return x.abort();
  } else {
    return null;
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  taoensso.sente._chsk_disconnect_BANG_.call(null, chsk__$1, new cljs.core.Keyword(null, "requested-reconnect", "requested-reconnect", 2008347707));
  return taoensso.sente._chsk_connect_BANG_.call(null, chsk__$1);
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = function(chsk, ev, opts) {
  var self__ = this;
  var chsk__$1 = this;
  var map__37225 = opts;
  var map__37225__$1 = (!(map__37225 == null) ? map__37225.cljs$lang$protocol_mask$partition0$ & 64 || map__37225.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37225) : map__37225;
  var _QMARK_timeout_ms = cljs.core.get.call(null, map__37225__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406));
  var _QMARK_cb = cljs.core.get.call(null, map__37225__$1, new cljs.core.Keyword(null, "cb", "cb", 589947841));
  var flush_QMARK_ = cljs.core.get.call(null, map__37225__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  var _ = taoensso.sente.assert_send_args.call(null, ev, _QMARK_timeout_ms, _QMARK_cb);
  var _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn.call(null, _QMARK_cb, ev);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
    return taoensso.sente.chsk_send__GT_closed_BANG_.call(null, _QMARK_cb_fn);
  } else {
    var csrf_token = (new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_));
    taoensso.sente.ajax_lite.call(null, self__.url, cljs.core.merge.call(null, self__.ajax_opts, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), function() {
      var or__8632__auto__ = _QMARK_timeout_ms;
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        var or__8632__auto____$1 = (new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406)).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);
        if (cljs.core.truth_(or__8632__auto____$1)) {
          return or__8632__auto____$1;
        } else {
          return taoensso.sente.default_client_side_ajax_timeout_ms;
        }
      }
    }(), new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "headers", "headers", -835030129), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "X-CSRF-Token", "X-CSRF-Token", 1562992453), csrf_token], null)), new cljs.core.Keyword(null, 
    "params", "params", 710516235), function() {
      var ppstr = taoensso.sente.pack.call(null, self__.packer, cljs.core.meta.call(null, ev), ev, cljs.core.truth_(_QMARK_cb_fn) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : null);
      return cljs.core.merge.call(null, self__.params, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "udt", "udt", 2011712751), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), csrf_token, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id, new cljs.core.Keyword(null, "ppstr", "ppstr", 1557495252), ppstr], null));
    }()], null)), function(csrf_token, map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
      return function taoensso$sente$ajax_cb(p__37227) {
        var map__37233 = p__37227;
        var map__37233__$1 = (!(map__37233 == null) ? map__37233.cljs$lang$protocol_mask$partition0$ & 64 || map__37233.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37233) : map__37233;
        var _QMARK_error = cljs.core.get.call(null, map__37233__$1, new cljs.core.Keyword(null, "?error", "?error", 1070752222));
        var _QMARK_content = cljs.core.get.call(null, map__37233__$1, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
        if (cljs.core.truth_(_QMARK_error)) {
          if (cljs.core._EQ_.call(null, _QMARK_error, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
            if (cljs.core.truth_(_QMARK_cb_fn)) {
              return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
            } else {
              return null;
            }
          } else {
            taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(map__37233, map__37233__$1, _QMARK_error, _QMARK_content, csrf_token, map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
              return function(p1__37213_SHARP_) {
                return taoensso.sente.chsk_state__GT_closed.call(null, p1__37213_SHARP_, new cljs.core.Keyword(null, "unexpected", "unexpected", -1137752424));
              };
            }(map__37233, map__37233__$1, _QMARK_error, _QMARK_content, csrf_token, map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1));
            if (cljs.core.truth_(_QMARK_cb_fn)) {
              return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439));
            } else {
              return null;
            }
          }
        } else {
          var content = _QMARK_content;
          var resp_ppstr = content;
          var vec__37235 = taoensso.sente.unpack.call(null, self__.packer, resp_ppstr);
          var resp_clj = cljs.core.nth.call(null, vec__37235, 0, null);
          var ___$1 = cljs.core.nth.call(null, vec__37235, 1, null);
          if (cljs.core.truth_(_QMARK_cb_fn)) {
            _QMARK_cb_fn.call(null, resp_clj);
          } else {
            if (cljs.core.not_EQ_.call(null, resp_clj, new cljs.core.Keyword("chsk", "dummy-cb-200", "chsk/dummy-cb-200", -1663130337))) {
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1213, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(content, resp_ppstr, vec__37235, resp_clj, ___$1, map__37233, map__37233__$1, _QMARK_error, _QMARK_content, csrf_token, 
              map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Cb reply w/o local cb-fn: %s", resp_clj], null);
                };
              }(content, resp_ppstr, vec__37235, resp_clj, ___$1, map__37233, map__37233__$1, _QMARK_error, _QMARK_content, csrf_token, map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1), null), null, -1901324080);
            } else {
            }
          }
          return taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(content, resp_ppstr, vec__37235, resp_clj, ___$1, map__37233, map__37233__$1, _QMARK_error, _QMARK_content, csrf_token, map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1) {
            return function(p1__37214_SHARP_) {
              return cljs.core.assoc.call(null, p1__37214_SHARP_, new cljs.core.Keyword(null, "open?", "open?", 1238443125), true);
            };
          }(content, resp_ppstr, vec__37235, resp_clj, ___$1, map__37233, map__37233__$1, _QMARK_error, _QMARK_content, csrf_token, map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1));
        }
      };
    }(csrf_token, map__37225, map__37225__$1, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_, _, _QMARK_cb_fn, chsk__$1));
    return new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  var instance_handle = cljs.core.reset_BANG_.call(null, self__.instance_handle_, taoensso.encore.uuid_str.call(null));
  var have_handle_QMARK_ = function(instance_handle, chsk__$1) {
    return function() {
      return cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.instance_handle_), instance_handle);
    };
  }(instance_handle, chsk__$1);
  var poll_fn = function(instance_handle, have_handle_QMARK_, chsk__$1) {
    return function taoensso$sente$poll_fn(retry_count) {
      taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1223, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(instance_handle, have_handle_QMARK_, chsk__$1) {
        return function() {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["async-poll-for-update!"], null);
        };
      }(instance_handle, have_handle_QMARK_, chsk__$1), null), null, -2092227338);
      if (cljs.core.truth_(have_handle_QMARK_.call(null))) {
        var retry_fn = function(instance_handle, have_handle_QMARK_, chsk__$1) {
          return function() {
            if (cljs.core.truth_(have_handle_QMARK_.call(null))) {
              var retry_count_STAR_ = retry_count + 1;
              var backoff_ms = self__.backoff_ms_fn.call(null, retry_count_STAR_);
              var udt_next_reconnect = taoensso.encore.now_udt.call(null) + backoff_ms;
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1231, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, chsk__$1) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk is closed: will try reconnect attempt (%s) in %s ms", retry_count_STAR_, backoff_ms], null);
                };
              }(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, chsk__$1), null), null, -1347602167);
              goog.global.setTimeout(function(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, chsk__$1) {
                return function() {
                  return taoensso$sente$poll_fn.call(null, retry_count_STAR_);
                };
              }(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, chsk__$1), backoff_ms);
              return taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, chsk__$1) {
                return function(p1__37215_SHARP_) {
                  return cljs.core.assoc.call(null, p1__37215_SHARP_, new cljs.core.Keyword(null, "udt-next-reconnect", "udt-next-reconnect", -1990375733), udt_next_reconnect);
                };
              }(retry_count_STAR_, backoff_ms, udt_next_reconnect, instance_handle, have_handle_QMARK_, chsk__$1));
            } else {
              return null;
            }
          };
        }(instance_handle, have_handle_QMARK_, chsk__$1);
        return cljs.core.reset_BANG_.call(null, self__.curr_xhr_, taoensso.sente.ajax_lite.call(null, self__.url, cljs.core.merge.call(null, self__.ajax_opts, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), function() {
          var or__8632__auto__ = (new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406)).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);
          if (cljs.core.truth_(or__8632__auto__)) {
            return or__8632__auto__;
          } else {
            return taoensso.sente.default_client_side_ajax_timeout_ms;
          }
        }(), new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.merge.call(null, self__.params, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "udt", "udt", 2011712751), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), cljs.core.truth_((new cljs.core.Keyword(null, 
        "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_))) ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "handshake?", "handshake?", -423743093), true], null))], null)), function(retry_fn, instance_handle, have_handle_QMARK_, chsk__$1) {
          return function taoensso$sente$poll_fn_$_ajax_cb(p__37249) {
            var map__37255 = p__37249;
            var map__37255__$1 = (!(map__37255 == null) ? map__37255.cljs$lang$protocol_mask$partition0$ & 64 || map__37255.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37255) : map__37255;
            var _QMARK_error = cljs.core.get.call(null, map__37255__$1, new cljs.core.Keyword(null, "?error", "?error", 1070752222));
            var _QMARK_content = cljs.core.get.call(null, map__37255__$1, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
            if (cljs.core.truth_(_QMARK_error)) {
              if (cljs.core._EQ_.call(null, _QMARK_error, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
                return taoensso$sente$poll_fn.call(null, 0);
              } else {
                taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(map__37255, map__37255__$1, _QMARK_error, _QMARK_content, retry_fn, instance_handle, have_handle_QMARK_, chsk__$1) {
                  return function(p1__37216_SHARP_) {
                    return taoensso.sente.chsk_state__GT_closed.call(null, p1__37216_SHARP_, new cljs.core.Keyword(null, "unexpected", "unexpected", -1137752424));
                  };
                }(map__37255, map__37255__$1, _QMARK_error, _QMARK_content, retry_fn, instance_handle, have_handle_QMARK_, chsk__$1));
                return retry_fn.call(null);
              }
            } else {
              var content = _QMARK_content;
              var ppstr = content;
              var vec__37257 = taoensso.sente.unpack.call(null, self__.packer, ppstr);
              var clj = cljs.core.nth.call(null, vec__37257, 0, null);
              var handshake_QMARK_ = taoensso.sente.handshake_QMARK_.call(null, clj);
              if (cljs.core.truth_(handshake_QMARK_)) {
                taoensso.sente.receive_handshake_BANG_.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), chsk__$1, clj);
              } else {
              }
              taoensso.sente.swap_chsk_state_BANG_.call(null, chsk__$1, function(content, ppstr, vec__37257, clj, handshake_QMARK_, map__37255, map__37255__$1, _QMARK_error, _QMARK_content, retry_fn, instance_handle, have_handle_QMARK_, chsk__$1) {
                return function(p1__37217_SHARP_) {
                  return cljs.core.assoc.call(null, p1__37217_SHARP_, new cljs.core.Keyword(null, "open?", "open?", 1238443125), true);
                };
              }(content, ppstr, vec__37257, clj, handshake_QMARK_, map__37255, map__37255__$1, _QMARK_error, _QMARK_content, retry_fn, instance_handle, have_handle_QMARK_, chsk__$1));
              taoensso$sente$poll_fn.call(null, 0);
              if (cljs.core.truth_(handshake_QMARK_)) {
                return null;
              } else {
                var or__8632__auto__ = cljs.core._EQ_.call(null, clj, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489)) ? function() {
                  if (cljs.core.truth_(cljs.core.deref.call(null, taoensso.sente.debug_mode_QMARK__))) {
                    taoensso.sente.receive_buffered_evs_BANG_.call(null, self__.chs, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("debug", "timeout", "debug/timeout", 309499949)], null)], null));
                  } else {
                  }
                  return new cljs.core.Keyword(null, "noop", "noop", -673731258);
                }() : null;
                if (cljs.core.truth_(or__8632__auto__)) {
                  return or__8632__auto__;
                } else {
                  var buffered_evs = clj;
                  return taoensso.sente.receive_buffered_evs_BANG_.call(null, self__.chs, buffered_evs);
                }
              }
            }
          };
        }(retry_fn, instance_handle, have_handle_QMARK_, chsk__$1)));
      } else {
        return null;
      }
    };
  }(instance_handle, have_handle_QMARK_, chsk__$1);
  poll_fn.call(null, 0);
  return chsk__$1;
};
taoensso.sente.ChAjaxSocket.getBasis = function() {
  return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null), new cljs.core.Symbol(null, "chs", "chs", 2017417647, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "packer", "packer", 1706609071, null), new cljs.core.Symbol(null, "url", "url", 1916828573, null), new cljs.core.Symbol(null, "state_", "state_", -1696768667, null), new cljs.core.Symbol(null, 
  "instance-handle_", "instance-handle_", -282852930, null), new cljs.core.Symbol(null, "ever-opened?_", "ever-opened?_", -1013096856, null), new cljs.core.Symbol(null, "backoff-ms-fn", "backoff-ms-fn", -1881539814, null), new cljs.core.Symbol(null, "ajax-opts", "ajax-opts", 1122292418, null), new cljs.core.Symbol(null, "curr-xhr_", "curr-xhr_", 321757831, null)], null);
};
taoensso.sente.ChAjaxSocket.cljs$lang$type = true;
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.__GT_ChAjaxSocket = function taoensso$sente$__GT_ChAjaxSocket(client_id, chs, params, packer, url, state_, instance_handle_, ever_opened_QMARK__, backoff_ms_fn, ajax_opts, curr_xhr_) {
  return new taoensso.sente.ChAjaxSocket(client_id, chs, params, packer, url, state_, instance_handle_, ever_opened_QMARK__, backoff_ms_fn, ajax_opts, curr_xhr_, null, null, null);
};
taoensso.sente.map__GT_ChAjaxSocket = function taoensso$sente$map__GT_ChAjaxSocket(G__37220) {
  return new taoensso.sente.ChAjaxSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(G__37220), 
  (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "ajax-opts", 
  "ajax-opts", -518239109)).cljs$core$IFn$_invoke$arity$1(G__37220), (new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696)).cljs$core$IFn$_invoke$arity$1(G__37220), null, cljs.core.dissoc.call(null, G__37220, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 
  276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696)), null);
};
taoensso.sente.new_ChAjaxSocket = function taoensso$sente$new_ChAjaxSocket(opts) {
  return taoensso.sente.map__GT_ChAjaxSocket.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "state_", "state_", 957667102), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "ever-opened?", "ever-opened?", 1128459732), 
  false], null)), new cljs.core.Keyword(null, "instance-handle_", "instance-handle_", -1923384457), cljs.core.atom.call(null, null), new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913), cljs.core.atom.call(null, false), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), cljs.core.atom.call(null, null)], null), opts));
};
taoensso.sente.ChAutoSocket = function(ws_chsk_opts, ajax_chsk_opts, state_, impl_, __meta, __extmap, __hash) {
  this.ws_chsk_opts = ws_chsk_opts;
  this.ajax_chsk_opts = ajax_chsk_opts;
  this.state_ = state_;
  this.impl_ = impl_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__9254__auto__, k__9255__auto__) {
  var self__ = this;
  var this__9254__auto____$1 = this;
  return cljs.core._lookup.call(null, this__9254__auto____$1, k__9255__auto__, null);
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__9256__auto__, k37262, else__9257__auto__) {
  var self__ = this;
  var this__9256__auto____$1 = this;
  var G__37264 = k37262 instanceof cljs.core.Keyword ? k37262.fqn : null;
  switch(G__37264) {
    case "ws-chsk-opts":
      return self__.ws_chsk_opts;
      break;
    case "ajax-chsk-opts":
      return self__.ajax_chsk_opts;
      break;
    case "state_":
      return self__.state_;
      break;
    case "impl_":
      return self__.impl_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k37262, else__9257__auto__);
  }
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__9268__auto__, writer__9269__auto__, opts__9270__auto__) {
  var self__ = this;
  var this__9268__auto____$1 = this;
  var pr_pair__9271__auto__ = function(this__9268__auto____$1) {
    return function(keyval__9272__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, cljs.core.pr_writer, "", " ", "", opts__9270__auto__, keyval__9272__auto__);
    };
  }(this__9268__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__9269__auto__, pr_pair__9271__auto__, "#taoensso.sente.ChAutoSocket{", ", ", "}", opts__9270__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104), self__.ws_chsk_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327), self__.ajax_chsk_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "impl_", "impl_", 1218818179), self__.impl_], null)], null), self__.__extmap));
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$ = true;
taoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__37261) {
  var self__ = this;
  var G__37261__$1 = this;
  return new cljs.core.RecordIter(0, G__37261__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104), new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "impl_", "impl_", 1218818179)], null), cljs.core._iterator.call(null, self__.__extmap));
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__9252__auto__) {
  var self__ = this;
  var this__9252__auto____$1 = this;
  return self__.__meta;
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__9248__auto__) {
  var self__ = this;
  var this__9248__auto____$1 = this;
  return new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts, self__.ajax_chsk_opts, self__.state_, self__.impl_, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(this__9258__auto__) {
  var self__ = this;
  var this__9258__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(this__9249__auto__) {
  var self__ = this;
  var this__9249__auto____$1 = this;
  var h__9067__auto__ = self__.__hash;
  if (!(h__9067__auto__ == null)) {
    return h__9067__auto__;
  } else {
    var h__9067__auto____$1 = cljs.core.hash_imap.call(null, this__9249__auto____$1);
    self__.__hash = h__9067__auto____$1;
    return h__9067__auto____$1;
  }
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__9250__auto__, other__9251__auto__) {
  var self__ = this;
  var this__9250__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__8620__auto__ = other__9251__auto__;
    if (cljs.core.truth_(and__8620__auto__)) {
      var and__8620__auto____$1 = this__9250__auto____$1.constructor === other__9251__auto__.constructor;
      if (and__8620__auto____$1) {
        return cljs.core.equiv_map.call(null, this__9250__auto____$1, other__9251__auto__);
      } else {
        return and__8620__auto____$1;
      }
    } else {
      return and__8620__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__9263__auto__, k__9264__auto__) {
  var self__ = this;
  var this__9263__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "impl_", "impl_", 1218818179), null, new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null, new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327), null], null), null), k__9264__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9263__auto____$1), self__.__meta), k__9264__auto__);
  } else {
    return new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts, self__.ajax_chsk_opts, self__.state_, self__.impl_, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__9264__auto__)), null);
  }
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__9261__auto__, k__9262__auto__, G__37261) {
  var self__ = this;
  var this__9261__auto____$1 = this;
  var pred__37265 = cljs.core.keyword_identical_QMARK_;
  var expr__37266 = k__9262__auto__;
  if (cljs.core.truth_(pred__37265.call(null, new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104), expr__37266))) {
    return new taoensso.sente.ChAutoSocket(G__37261, self__.ajax_chsk_opts, self__.state_, self__.impl_, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__37265.call(null, new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327), expr__37266))) {
      return new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts, G__37261, self__.state_, self__.impl_, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__37265.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), expr__37266))) {
        return new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts, self__.ajax_chsk_opts, G__37261, self__.impl_, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__37265.call(null, new cljs.core.Keyword(null, "impl_", "impl_", 1218818179), expr__37266))) {
          return new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts, self__.ajax_chsk_opts, self__.state_, G__37261, self__.__meta, self__.__extmap, null);
        } else {
          return new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts, self__.ajax_chsk_opts, self__.state_, self__.impl_, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__9262__auto__, G__37261), null);
        }
      }
    }
  }
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__9266__auto__) {
  var self__ = this;
  var this__9266__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104), self__.ws_chsk_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327), self__.ajax_chsk_opts], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "impl_", "impl_", 1218818179), self__.impl_], null)], null), self__.__extmap));
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__9253__auto__, G__37261) {
  var self__ = this;
  var this__9253__auto____$1 = this;
  return new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts, self__.ajax_chsk_opts, self__.state_, self__.impl_, G__37261, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__9259__auto__, entry__9260__auto__) {
  var self__ = this;
  var this__9259__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__9260__auto__)) {
    return cljs.core._assoc.call(null, this__9259__auto____$1, cljs.core._nth.call(null, entry__9260__auto__, 0), cljs.core._nth.call(null, entry__9260__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__9259__auto____$1, entry__9260__auto__);
  }
};
taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = true;
taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = function(chsk, reason) {
  var self__ = this;
  var chsk__$1 = this;
  var temp__4657__auto__ = cljs.core.deref.call(null, self__.impl_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var impl = temp__4657__auto__;
    return taoensso.sente._chsk_disconnect_BANG_.call(null, impl, reason);
  } else {
    return null;
  }
};
taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  var temp__4657__auto__ = cljs.core.deref.call(null, self__.impl_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var impl = temp__4657__auto__;
    taoensso.sente._chsk_disconnect_BANG_.call(null, impl, new cljs.core.Keyword(null, "requested-reconnect", "requested-reconnect", 2008347707));
    return taoensso.sente._chsk_connect_BANG_.call(null, chsk__$1);
  } else {
    return null;
  }
};
taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = function(chsk, ev, opts) {
  var self__ = this;
  var chsk__$1 = this;
  var temp__4655__auto__ = cljs.core.deref.call(null, self__.impl_);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var impl = temp__4655__auto__;
    return taoensso.sente._chsk_send_BANG_.call(null, impl, ev, opts);
  } else {
    var map__37268 = opts;
    var map__37268__$1 = (!(map__37268 == null) ? map__37268.cljs$lang$protocol_mask$partition0$ & 64 || map__37268.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37268) : map__37268;
    var _QMARK_cb = cljs.core.get.call(null, map__37268__$1, new cljs.core.Keyword(null, "cb", "cb", 589947841));
    var _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn.call(null, _QMARK_cb, ev);
    return taoensso.sente.chsk_send__GT_closed_BANG_.call(null, _QMARK_cb_fn);
  }
};
taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  var ajax_chsk_opts__$1 = cljs.core.assoc.call(null, self__.ajax_chsk_opts, new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_);
  var ws_chsk_opts__$1 = cljs.core.assoc.call(null, self__.ws_chsk_opts, new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_);
  var ajax_conn_BANG_ = function(ajax_chsk_opts__$1, ws_chsk_opts__$1, chsk__$1) {
    return function() {
      cljs.core.remove_watch.call(null, self__.state_, new cljs.core.Keyword("chsk", "auto-ajax-downgrade", "chsk/auto-ajax-downgrade", -831528080));
      return taoensso.sente._chsk_connect_BANG_.call(null, taoensso.sente.new_ChAjaxSocket.call(null, ajax_chsk_opts__$1));
    };
  }(ajax_chsk_opts__$1, ws_chsk_opts__$1, chsk__$1);
  var ws_conn_BANG_ = function(ajax_chsk_opts__$1, ws_chsk_opts__$1, ajax_conn_BANG_, chsk__$1) {
    return function() {
      var downgraded_QMARK___37271 = cljs.core.atom.call(null, false);
      cljs.core.add_watch.call(null, self__.state_, new cljs.core.Keyword("chsk", "auto-ajax-downgrade", "chsk/auto-ajax-downgrade", -831528080), function(downgraded_QMARK___37271, ajax_chsk_opts__$1, ws_chsk_opts__$1, ajax_conn_BANG_, chsk__$1) {
        return function(_, ___$1, old_state, new_state) {
          var temp__4657__auto__ = cljs.core.deref.call(null, self__.impl_);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var impl = temp__4657__auto__;
            var temp__4657__auto____$1 = (new cljs.core.Keyword(null, "ever-opened?_", "ever-opened?_", 1641338913)).cljs$core$IFn$_invoke$arity$1(impl);
            if (cljs.core.truth_(temp__4657__auto____$1)) {
              var ever_opened_QMARK__ = temp__4657__auto____$1;
              if (cljs.core.truth_(cljs.core.deref.call(null, ever_opened_QMARK__))) {
                return null;
              } else {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "last-error", "last-error", 1848699973)).cljs$core$IFn$_invoke$arity$1(new_state))) {
                  if (cljs.core.truth_(cljs.core.compare_and_set_BANG_.call(null, downgraded_QMARK___37271, false, true))) {
                    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1359, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(ever_opened_QMARK__, temp__4657__auto____$1, impl, temp__4657__auto__, downgraded_QMARK___37271, ajax_chsk_opts__$1, 
                    ws_chsk_opts__$1, ajax_conn_BANG_, chsk__$1) {
                      return function() {
                        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Permanently downgrading :auto chsk -\x3e :ajax"], null);
                      };
                    }(ever_opened_QMARK__, temp__4657__auto____$1, impl, temp__4657__auto__, downgraded_QMARK___37271, ajax_chsk_opts__$1, ws_chsk_opts__$1, ajax_conn_BANG_, chsk__$1), null), null, 272794225);
                    taoensso.sente._chsk_disconnect_BANG_.call(null, impl, new cljs.core.Keyword(null, "downgrading-ws-to-ajax", "downgrading-ws-to-ajax", 402136720));
                    return cljs.core.reset_BANG_.call(null, self__.impl_, ajax_conn_BANG_.call(null));
                  } else {
                    return null;
                  }
                } else {
                  return null;
                }
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(downgraded_QMARK___37271, ajax_chsk_opts__$1, ws_chsk_opts__$1, ajax_conn_BANG_, chsk__$1));
      return taoensso.sente._chsk_connect_BANG_.call(null, taoensso.sente.new_ChWebSocket.call(null, ws_chsk_opts__$1));
    };
  }(ajax_chsk_opts__$1, ws_chsk_opts__$1, ajax_conn_BANG_, chsk__$1);
  cljs.core.reset_BANG_.call(null, self__.impl_, function() {
    var or__8632__auto__ = ws_conn_BANG_.call(null);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return ajax_conn_BANG_.call(null);
    }
  }());
  return chsk__$1;
};
taoensso.sente.ChAutoSocket.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ws-chsk-opts", "ws-chsk-opts", -349638577, null), new cljs.core.Symbol(null, "ajax-chsk-opts", "ajax-chsk-opts", -1051844442, null), new cljs.core.Symbol(null, "state_", "state_", -1696768667, null), new cljs.core.Symbol(null, "impl_", "impl_", -1435617590, null)], null);
};
taoensso.sente.ChAutoSocket.cljs$lang$type = true;
taoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = function(this__9288__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChAutoSocket");
};
taoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = function(this__9288__auto__, writer__9289__auto__) {
  return cljs.core._write.call(null, writer__9289__auto__, "taoensso.sente/ChAutoSocket");
};
taoensso.sente.__GT_ChAutoSocket = function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts, ajax_chsk_opts, state_, impl_) {
  return new taoensso.sente.ChAutoSocket(ws_chsk_opts, ajax_chsk_opts, state_, impl_, null, null, null);
};
taoensso.sente.map__GT_ChAutoSocket = function taoensso$sente$map__GT_ChAutoSocket(G__37263) {
  return new taoensso.sente.ChAutoSocket((new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104)).cljs$core$IFn$_invoke$arity$1(G__37263), (new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327)).cljs$core$IFn$_invoke$arity$1(G__37263), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(G__37263), (new cljs.core.Keyword(null, "impl_", "impl_", 1218818179)).cljs$core$IFn$_invoke$arity$1(G__37263), null, cljs.core.dissoc.call(null, 
  G__37263, new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104), new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "impl_", "impl_", 1218818179)), null);
};
taoensso.sente.new_ChAutoSocket = function taoensso$sente$new_ChAutoSocket(opts) {
  return taoensso.sente.map__GT_ChAutoSocket.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "state_", "state_", 957667102), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "ever-opened?", "ever-opened?", 1128459732), 
  false], null)), new cljs.core.Keyword(null, "impl_", "impl_", 1218818179), cljs.core.atom.call(null, null)], null), opts));
};
taoensso.sente.get_chsk_url = function taoensso$sente$get_chsk_url(protocol, host, path, type) {
  var protocol__$1 = function() {
    var G__37276 = protocol instanceof cljs.core.Keyword ? protocol.fqn : null;
    switch(G__37276) {
      case "http":
        return "http:";
        break;
      case "https":
        return "https:";
        break;
      default:
        return protocol;
    }
  }();
  var protocol__$2 = function() {
    var e = function() {
      try {
        if (function(protocol__$1) {
          return function(x) {
            return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["https:", null, "http:", null], null), null)), x);
          };
        }(protocol__$1).call(null, protocol__$1)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e37277) {
        if (e37277 instanceof Error) {
          var e = e37277;
          return e;
        } else {
          throw e37277;
        }
      }
    }();
    if (e == null) {
      return protocol__$1;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, '([:el #{"https:" "http:"}] protocol)', protocol__$1, e, null);
    }
  }();
  var protocol__$3 = function() {
    var G__37278 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__37278) {
      case "ajax":
        return protocol__$2;
        break;
      case "ws":
        var G__37279 = protocol__$2;
        switch(G__37279) {
          case "https:":
            return "wss:";
            break;
          case "http:":
            return "ws:";
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(protocol__$2)].join(""));;
        }
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
    }
  }();
  return [cljs.core.str(protocol__$3), cljs.core.str("//"), cljs.core.str(taoensso.encore.path.call(null, host, path))].join("");
};
taoensso.sente.make_channel_socket_client_BANG_ = function taoensso$sente$make_channel_socket_client_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___37300 = arguments.length;
  var i__9708__auto___37301 = 0;
  while (true) {
    if (i__9708__auto___37301 < len__9707__auto___37300) {
      args__9714__auto__.push(arguments[i__9708__auto___37301]);
      var G__37302 = i__9708__auto___37301 + 1;
      i__9708__auto___37301 = G__37302;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(path, p__37285) {
  var vec__37286 = p__37285;
  var map__37289 = cljs.core.nth.call(null, vec__37286, 0, null);
  var map__37289__$1 = (!(map__37289 == null) ? map__37289.cljs$lang$protocol_mask$partition0$ & 64 || map__37289.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37289) : map__37289;
  var opts = map__37289__$1;
  var ajax_opts = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109));
  var ws_kalive_ms = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), taoensso.encore.ms.call(null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), 20));
  var client_id = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), function() {
    var or__8632__auto__ = (new cljs.core.Keyword(null, "client-uuid", "client-uuid", -1717531965)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return taoensso.encore.uuid_str.call(null);
    }
  }());
  var protocol = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "protocol", "protocol", 652470118));
  var packer = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "edn", "edn", 1317840885));
  var params = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var type = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "auto", "auto", -566279492));
  var host = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "host", "host", -1558485167));
  var recv_buf_or_n = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "recv-buf-or-n", "recv-buf-or-n", 1363950355), cljs.core.async.sliding_buffer.call(null, 2048));
  var backoff_ms_fn = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), taoensso.encore.exp_backoff);
  var wrap_recv_evs_QMARK_ = cljs.core.get.call(null, map__37289__$1, new cljs.core.Keyword(null, "wrap-recv-evs?", "wrap-recv-evs?", -1996694153), true);
  var _deprecated_more_opts = cljs.core.nth.call(null, vec__37286, 1, null);
  var e_37303 = function() {
    try {
      if (function(vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
        return function(x) {
          return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), null, new cljs.core.Keyword(null, "auto", "auto", -566279492), null], null), null)), x);
        };
      }(vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts).call(null, type)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e37291) {
      if (e37291 instanceof Error) {
        var e = e37291;
        return e;
      } else {
        throw e37291;
      }
    }
  }();
  if (e_37303 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "([:in #{:ws :ajax :auto}] type)", type, e_37303, null);
  }
  var e_37304 = function() {
    try {
      if (taoensso.encore.nblank_str_QMARK_.call(null, client_id)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e37292) {
      if (e37292 instanceof Error) {
        var e = e37292;
        return e;
      } else {
        throw e37292;
      }
    }
  }();
  if (e_37304 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/nblank-str? client-id)", client_id, e_37304, null);
  }
  if (!(_deprecated_more_opts == null)) {
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1424, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, 
    backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0."], null);
      };
    }(vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), null), null, 773163869);
  } else {
  }
  if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "lp-timeout", "lp-timeout", 1149461302))) {
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1425, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, 
    backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [":lp-timeout opt has CHANGED; please use :lp-timout-ms."], null);
      };
    }(vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), null), null, 768419496);
  } else {
  }
  var packer__$1 = taoensso.sente.coerce_packer.call(null, packer);
  var vec__37293 = function() {
    var win_loc = taoensso.encore.get_win_loc.call(null);
    var path__$1 = function() {
      var or__8632__auto__ = path;
      if (cljs.core.truth_(or__8632__auto__)) {
        return or__8632__auto__;
      } else {
        return (new cljs.core.Keyword(null, "pathname", "pathname", -1420497528)).cljs$core$IFn$_invoke$arity$1(win_loc);
      }
    }();
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "chsk-url-fn", "chsk-url-fn", 1968894294)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var f = temp__4655__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, path__$1, win_loc, new cljs.core.Keyword(null, "ws", "ws", 86841443)), f.call(null, path__$1, win_loc, new cljs.core.Keyword(null, "ajax", "ajax", 814345549))], null);
    } else {
      var protocol__$1 = function() {
        var or__8632__auto__ = protocol;
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          var or__8632__auto____$1 = (new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(win_loc);
          if (cljs.core.truth_(or__8632__auto____$1)) {
            return or__8632__auto____$1;
          } else {
            return new cljs.core.Keyword(null, "http", "http", 382524695);
          }
        }
      }();
      var host__$1 = function() {
        var or__8632__auto__ = host;
        if (cljs.core.truth_(or__8632__auto__)) {
          return or__8632__auto__;
        } else {
          return (new cljs.core.Keyword(null, "host", "host", -1558485167)).cljs$core$IFn$_invoke$arity$1(win_loc);
        }
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url.call(null, protocol__$1, host__$1, path__$1, new cljs.core.Keyword(null, "ws", "ws", 86841443)), taoensso.sente.get_chsk_url.call(null, protocol__$1, host__$1, path__$1, new cljs.core.Keyword(null, "ajax", "ajax", 814345549))], null);
    }
  }();
  var ws_url = cljs.core.nth.call(null, vec__37293, 0, null);
  var ajax_url = cljs.core.nth.call(null, vec__37293, 1, null);
  var private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "internal", "internal", -854870097), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 128)), new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 10)), new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537), function() {
    var buf = cljs.core.async.sliding_buffer.call(null, 512);
    if (cljs.core.truth_(wrap_recv_evs_QMARK_)) {
      return cljs.core.async.chan.call(null, buf, cljs.core.map.call(null, function(buf, packer__$1, vec__37293, ws_url, ajax_url, vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
        return function(ev) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "recv", "chsk/recv", 561097091), ev], null);
        };
      }(buf, packer__$1, vec__37293, ws_url, ajax_url, vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts)));
    } else {
      return cljs.core.async.chan.call(null, buf);
    }
  }()], null);
  var common_chsk_opts = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id, new cljs.core.Keyword(null, "chs", "chs", 376886120), private_chs, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "packer", "packer", 66077544), packer__$1, new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), ws_kalive_ms], null);
  var ws_chsk_opts = cljs.core.merge.call(null, common_chsk_opts, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "url", "url", 276297046), ws_url, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), backoff_ms_fn], null));
  var ajax_chsk_opts = cljs.core.merge.call(null, common_chsk_opts, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "url", "url", 276297046), ajax_url, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), ajax_opts, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), backoff_ms_fn], null));
  var auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws-chsk-opts", "ws-chsk-opts", -1990170104), ws_chsk_opts, new cljs.core.Keyword(null, "ajax-chsk-opts", "ajax-chsk-opts", 1602591327), ajax_chsk_opts], null);
  var _QMARK_chsk = taoensso.sente._chsk_connect_BANG_.call(null, function() {
    var G__37296 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__37296) {
      case "ws":
        return taoensso.sente.new_ChWebSocket.call(null, ws_chsk_opts);
        break;
      case "ajax":
        return taoensso.sente.new_ChAjaxSocket.call(null, ajax_chsk_opts);
        break;
      case "auto":
        return taoensso.sente.new_ChAutoSocket.call(null, auto_chsk_opts);
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
    }
  }());
  var temp__4655__auto__ = _QMARK_chsk;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var chsk = temp__4655__auto__;
    var chsk_state_ = (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(chsk);
    var internal_ch = (new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(private_chs);
    var send_fn = cljs.core.partial.call(null, taoensso.sente.chsk_send_BANG_, chsk);
    var ev_ch = cljs.core.async.merge.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(private_chs), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(private_chs), (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(private_chs)], null), recv_buf_or_n);
    var ev_msg_ch = cljs.core.async.chan.call(null, 1, cljs.core.map.call(null, function(chsk_state_, internal_ch, send_fn, ev_ch, chsk, temp__4655__auto__, packer__$1, vec__37293, ws_url, ajax_url, private_chs, common_chsk_opts, ws_chsk_opts, ajax_chsk_opts, auto_chsk_opts, _QMARK_chsk, vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
      return function(ev) {
        var vec__37297 = taoensso.sente.as_event.call(null, ev);
        var ev_id = cljs.core.nth.call(null, vec__37297, 0, null);
        var ev__QMARK_data = cljs.core.nth.call(null, vec__37297, 1, null);
        var ev__$1 = vec__37297;
        return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), internal_ch, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "state", "state", -1988618099), chsk_state_, new cljs.core.Keyword(null, "event", "event", 301435442), ev__$1, new cljs.core.Keyword(null, "id", "id", -1388402092), ev_id, new cljs.core.Keyword(null, "?data", "?data", -9471433), ev__QMARK_data], null);
      };
    }(chsk_state_, internal_ch, send_fn, ev_ch, chsk, temp__4655__auto__, packer__$1, vec__37293, ws_url, ajax_url, private_chs, common_chsk_opts, ws_chsk_opts, ajax_chsk_opts, auto_chsk_opts, _QMARK_chsk, vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts)));
    cljs.core.async.pipe.call(null, ev_ch, ev_msg_ch);
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "chsk", "chsk", -863703081), chsk, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), ev_msg_ch, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "state", "state", -1988618099), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(chsk)], null);
  } else {
    return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1513, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(temp__4655__auto__, packer__$1, vec__37293, ws_url, ajax_url, private_chs, common_chsk_opts, ws_chsk_opts, ajax_chsk_opts, 
    auto_chsk_opts, _QMARK_chsk, vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Failed to create channel socket"], null);
      };
    }(temp__4655__auto__, packer__$1, vec__37293, ws_url, ajax_url, private_chs, common_chsk_opts, ws_chsk_opts, ajax_chsk_opts, auto_chsk_opts, _QMARK_chsk, vec__37286, map__37289, map__37289__$1, opts, ajax_opts, ws_kalive_ms, client_id, protocol, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), null), null, 1891170908);
  }
};
taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = function(seq37283) {
  var G__37284 = cljs.core.first.call(null, seq37283);
  var seq37283__$1 = cljs.core.next.call(null, seq37283);
  return taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__37284, seq37283__$1);
};
taoensso.sente._start_chsk_router_BANG_ = function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_, ch_recv, event_msg_handler, opts) {
  var map__37385 = opts;
  var map__37385__$1 = (!(map__37385 == null) ? map__37385.cljs$lang$protocol_mask$partition0$ & 64 || map__37385.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37385) : map__37385;
  var trace_evs_QMARK_ = cljs.core.get.call(null, map__37385__$1, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  var error_handler = cljs.core.get.call(null, map__37385__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  var simple_auto_threading_QMARK_ = cljs.core.get.call(null, map__37385__$1, new cljs.core.Keyword(null, "simple-auto-threading?", "simple-auto-threading?", 1950754184));
  var ch_ctrl = cljs.core.async.chan.call(null);
  var execute1 = function(map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl) {
    return function(f) {
      return f.call(null);
    };
  }(map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl);
  var c__30349__auto___37464 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
    return function() {
      var f__30350__auto__ = function() {
        var switch__30237__auto__ = function(c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
          return function(state_37431) {
            var state_val_37432 = state_37431[1];
            if (state_val_37432 === 7) {
              var inst_37427 = state_37431[2];
              var state_37431__$1 = state_37431;
              var statearr_37433_37465 = state_37431__$1;
              statearr_37433_37465[2] = inst_37427;
              statearr_37433_37465[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_37432 === 1) {
                var state_37431__$1 = state_37431;
                var statearr_37434_37466 = state_37431__$1;
                statearr_37434_37466[2] = null;
                statearr_37434_37466[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_37432 === 4) {
                  var inst_37397 = state_37431[7];
                  var inst_37395 = state_37431[8];
                  var inst_37398 = state_37431[9];
                  var inst_37395__$1 = state_37431[2];
                  var inst_37396 = cljs.core.nth.call(null, inst_37395__$1, 0, null);
                  var inst_37397__$1 = cljs.core.nth.call(null, inst_37395__$1, 1, null);
                  var inst_37398__$1 = cljs.core._EQ_.call(null, inst_37397__$1, ch_ctrl);
                  var state_37431__$1 = function() {
                    var statearr_37435 = state_37431;
                    statearr_37435[7] = inst_37397__$1;
                    statearr_37435[8] = inst_37395__$1;
                    statearr_37435[9] = inst_37398__$1;
                    statearr_37435[10] = inst_37396;
                    return statearr_37435;
                  }();
                  if (inst_37398__$1) {
                    var statearr_37436_37467 = state_37431__$1;
                    statearr_37436_37467[1] = 5;
                  } else {
                    var statearr_37437_37468 = state_37431__$1;
                    statearr_37437_37468[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_37432 === 15) {
                    var inst_37396 = state_37431[10];
                    var state_37431__$1 = state_37431;
                    var statearr_37438_37469 = state_37431__$1;
                    statearr_37438_37469[2] = inst_37396;
                    statearr_37438_37469[1] = 16;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37432 === 13) {
                      var inst_37413 = state_37431[2];
                      var state_37431__$1 = state_37431;
                      var statearr_37439_37470 = state_37431__$1;
                      statearr_37439_37470[2] = inst_37413;
                      statearr_37439_37470[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_37432 === 6) {
                        var inst_37396 = state_37431[10];
                        var inst_37403 = inst_37396 == null;
                        var inst_37404 = cljs.core.not.call(null, inst_37403);
                        var state_37431__$1 = state_37431;
                        if (inst_37404) {
                          var statearr_37440_37471 = state_37431__$1;
                          statearr_37440_37471[1] = 8;
                        } else {
                          var statearr_37441_37472 = state_37431__$1;
                          statearr_37441_37472[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_37432 === 3) {
                          var inst_37429 = state_37431[2];
                          var state_37431__$1 = state_37431;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37431__$1, inst_37429);
                        } else {
                          if (state_val_37432 === 12) {
                            var state_37431__$1 = state_37431;
                            var statearr_37442_37473 = state_37431__$1;
                            statearr_37442_37473[2] = false;
                            statearr_37442_37473[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_37432 === 2) {
                              var inst_37391 = cljs.core.PersistentVector.EMPTY_NODE;
                              var inst_37392 = [ch_recv, ch_ctrl];
                              var inst_37393 = new cljs.core.PersistentVector(null, 2, 5, inst_37391, inst_37392, null);
                              var state_37431__$1 = state_37431;
                              return cljs.core.async.ioc_alts_BANG_.call(null, state_37431__$1, 4, inst_37393);
                            } else {
                              if (state_val_37432 === 11) {
                                var state_37431__$1 = state_37431;
                                var statearr_37443_37474 = state_37431__$1;
                                statearr_37443_37474[2] = true;
                                statearr_37443_37474[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_37432 === 9) {
                                  var state_37431__$1 = state_37431;
                                  var statearr_37444_37475 = state_37431__$1;
                                  statearr_37444_37475[2] = false;
                                  statearr_37444_37475[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_37432 === 5) {
                                    var state_37431__$1 = state_37431;
                                    var statearr_37445_37476 = state_37431__$1;
                                    statearr_37445_37476[2] = null;
                                    statearr_37445_37476[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_37432 === 14) {
                                      var inst_37396 = state_37431[10];
                                      var inst_37418 = cljs.core.apply.call(null, cljs.core.hash_map, inst_37396);
                                      var state_37431__$1 = state_37431;
                                      var statearr_37446_37477 = state_37431__$1;
                                      statearr_37446_37477[2] = inst_37418;
                                      statearr_37446_37477[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_37432 === 16) {
                                        var inst_37397 = state_37431[7];
                                        var inst_37395 = state_37431[8];
                                        var inst_37398 = state_37431[9];
                                        var inst_37396 = state_37431[10];
                                        var inst_37421 = state_37431[2];
                                        var inst_37422 = cljs.core.get.call(null, inst_37421, new cljs.core.Keyword(null, "event", "event", 301435442));
                                        var inst_37423 = function() {
                                          var vec__37388 = inst_37395;
                                          var v = inst_37396;
                                          var p = inst_37397;
                                          var stop_QMARK_ = inst_37398;
                                          var map__37401 = inst_37421;
                                          var event_msg = inst_37421;
                                          var event = inst_37422;
                                          return function(vec__37388, v, p, stop_QMARK_, map__37401, event_msg, event, inst_37397, inst_37395, inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
                                            return function() {
                                              try {
                                                if (cljs.core.truth_(trace_evs_QMARK_)) {
                                                  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1540, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__37388, v, p, stop_QMARK_, map__37401, event_msg, event, inst_37397, inst_37395, 
                                                  inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
                                                    return function() {
                                                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pre-handler event: %s", event], null);
                                                    };
                                                  }(vec__37388, v, p, stop_QMARK_, map__37401, event_msg, event, inst_37397, inst_37395, inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1), null), null, -408619058);
                                                } else {
                                                }
                                                return event_msg_handler.call(null, cljs.core.truth_(server_QMARK_) ? function() {
                                                  var e = function() {
                                                    try {
                                                      if (cljs.core.truth_(taoensso.sente.server_event_msg_QMARK_.call(null, event_msg))) {
                                                        return null;
                                                      } else {
                                                        return taoensso.truss.impl._dummy_error;
                                                      }
                                                    } catch (e37449) {
                                                      if (e37449 instanceof Error) {
                                                        var e = e37449;
                                                        return e;
                                                      } else {
                                                        throw e37449;
                                                      }
                                                    }
                                                  }();
                                                  if (e == null) {
                                                    return event_msg;
                                                  } else {
                                                    return taoensso.truss.impl._invar_violation_BANG_.call(null, null, "taoensso.sente", null, "(server-event-msg? event-msg)", event_msg, e, null);
                                                  }
                                                }() : function() {
                                                  var e = function() {
                                                    try {
                                                      if (cljs.core.truth_(taoensso.sente.client_event_msg_QMARK_.call(null, event_msg))) {
                                                        return null;
                                                      } else {
                                                        return taoensso.truss.impl._dummy_error;
                                                      }
                                                    } catch (e37450) {
                                                      if (e37450 instanceof Error) {
                                                        var e = e37450;
                                                        return e;
                                                      } else {
                                                        throw e37450;
                                                      }
                                                    }
                                                  }();
                                                  if (e == null) {
                                                    return event_msg;
                                                  } else {
                                                    return taoensso.truss.impl._invar_violation_BANG_.call(null, null, "taoensso.sente", null, "(client-event-msg? event-msg)", event_msg, e, null);
                                                  }
                                                }());
                                              } catch (e37447) {
                                                if (e37447 instanceof Error) {
                                                  var e1 = e37447;
                                                  try {
                                                    var temp__4655__auto__ = error_handler;
                                                    if (cljs.core.truth_(temp__4655__auto__)) {
                                                      var eh = temp__4655__auto__;
                                                      return error_handler.call(null, e1, event_msg);
                                                    } else {
                                                      return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1549, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(temp__4655__auto__, e1, vec__37388, v, p, stop_QMARK_, map__37401, event_msg, 
                                                      event, inst_37397, inst_37395, inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
                                                        return function() {
                                                          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1, "Chsk router `event-msg-handler` error: %s", event], null);
                                                        };
                                                      }(temp__4655__auto__, e1, vec__37388, v, p, stop_QMARK_, map__37401, event_msg, event, inst_37397, inst_37395, inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1), null), null, 635428693);
                                                    }
                                                  } catch (e37448) {
                                                    if (e37448 instanceof Error) {
                                                      var e2 = e37448;
                                                      return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 1550, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(e2, e1, vec__37388, v, p, stop_QMARK_, map__37401, event_msg, event, inst_37397, 
                                                      inst_37395, inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
                                                        return function() {
                                                          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2, "Chsk router `error-handler` error: %s", event], null);
                                                        };
                                                      }(e2, e1, vec__37388, v, p, stop_QMARK_, map__37401, event_msg, event, inst_37397, inst_37395, inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1), null), null, -2061634548);
                                                    } else {
                                                      throw e37448;
                                                    }
                                                  }
                                                } else {
                                                  throw e37447;
                                                }
                                              }
                                            };
                                          }(vec__37388, v, p, stop_QMARK_, map__37401, event_msg, event, inst_37397, inst_37395, inst_37398, inst_37396, inst_37421, inst_37422, state_val_37432, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1);
                                        }();
                                        var inst_37424 = execute1.call(null, inst_37423);
                                        var state_37431__$1 = function() {
                                          var statearr_37451 = state_37431;
                                          statearr_37451[11] = inst_37424;
                                          return statearr_37451;
                                        }();
                                        var statearr_37452_37478 = state_37431__$1;
                                        statearr_37452_37478[2] = null;
                                        statearr_37452_37478[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_37432 === 10) {
                                          var inst_37416 = state_37431[2];
                                          var state_37431__$1 = state_37431;
                                          if (cljs.core.truth_(inst_37416)) {
                                            var statearr_37453_37479 = state_37431__$1;
                                            statearr_37453_37479[1] = 14;
                                          } else {
                                            var statearr_37454_37480 = state_37431__$1;
                                            statearr_37454_37480[1] = 15;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_37432 === 8) {
                                            var inst_37396 = state_37431[10];
                                            var inst_37406 = inst_37396.cljs$lang$protocol_mask$partition0$;
                                            var inst_37407 = inst_37406 & 64;
                                            var inst_37408 = inst_37396.cljs$core$ISeq$;
                                            var inst_37409 = inst_37407 || inst_37408;
                                            var state_37431__$1 = state_37431;
                                            if (cljs.core.truth_(inst_37409)) {
                                              var statearr_37455_37481 = state_37431__$1;
                                              statearr_37455_37481[1] = 11;
                                            } else {
                                              var statearr_37456_37482 = state_37431__$1;
                                              statearr_37456_37482[1] = 12;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1);
        return function(switch__30237__auto__, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
          return function() {
            var taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto__ = null;
            var taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto____0 = function() {
              var statearr_37460 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_37460[0] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto__;
              statearr_37460[1] = 1;
              return statearr_37460;
            };
            var taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto____1 = function(state_37431) {
              while (true) {
                var ret_value__30239__auto__ = function() {
                  try {
                    while (true) {
                      var result__30240__auto__ = switch__30237__auto__.call(null, state_37431);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__30240__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__30240__auto__;
                      }
                      break;
                    }
                  } catch (e37461) {
                    if (e37461 instanceof Object) {
                      var ex__30241__auto__ = e37461;
                      var statearr_37462_37483 = state_37431;
                      statearr_37462_37483[5] = ex__30241__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37431);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37461;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__30239__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37484 = state_37431;
                  state_37431 = G__37484;
                  continue;
                } else {
                  return ret_value__30239__auto__;
                }
                break;
              }
            };
            taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto__ = function(state_37431) {
              switch(arguments.length) {
                case 0:
                  return taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto____0.call(this);
                case 1:
                  return taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto____1.call(this, state_37431);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto____0;
            taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto____1;
            return taoensso$sente$_start_chsk_router_BANG__$_state_machine__30238__auto__;
          }();
        }(switch__30237__auto__, c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1);
      }();
      var state__30351__auto__ = function() {
        var statearr_37463 = f__30350__auto__.call(null);
        statearr_37463[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__30349__auto___37464;
        return statearr_37463;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__30351__auto__);
    };
  }(c__30349__auto___37464, map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1));
  return function(map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1) {
    return function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_() {
      return cljs.core.async.close_BANG_.call(null, ch_ctrl);
    };
  }(map__37385, map__37385__$1, trace_evs_QMARK_, error_handler, simple_auto_threading_QMARK_, ch_ctrl, execute1);
};
taoensso.sente.start_server_chsk_router_BANG_ = function taoensso$sente$start_server_chsk_router_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___37494 = arguments.length;
  var i__9708__auto___37495 = 0;
  while (true) {
    if (i__9708__auto___37495 < len__9707__auto___37494) {
      args__9714__auto__.push(arguments[i__9708__auto___37495]);
      var G__37496 = i__9708__auto___37495 + 1;
      i__9708__auto___37495 = G__37496;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ch_recv, event_msg_handler, p__37488) {
  var vec__37489 = p__37488;
  var map__37492 = cljs.core.nth.call(null, vec__37489, 0, null);
  var map__37492__$1 = (!(map__37492 == null) ? map__37492.cljs$lang$protocol_mask$partition0$ & 64 || map__37492.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37492) : map__37492;
  var opts = map__37492__$1;
  var trace_evs_QMARK_ = cljs.core.get.call(null, map__37492__$1, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  var error_handler = cljs.core.get.call(null, map__37492__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  var simple_auto_threading_QMARK_ = cljs.core.get.call(null, map__37492__$1, new cljs.core.Keyword(null, "simple-auto-threading?", "simple-auto-threading?", 1950754184));
  return taoensso.sente._start_chsk_router_BANG_.call(null, new cljs.core.Keyword(null, "server", "server", 1499190120), ch_recv, event_msg_handler, opts);
};
taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = function(seq37485) {
  var G__37486 = cljs.core.first.call(null, seq37485);
  var seq37485__$1 = cljs.core.next.call(null, seq37485);
  var G__37487 = cljs.core.first.call(null, seq37485__$1);
  var seq37485__$2 = cljs.core.next.call(null, seq37485__$1);
  return taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__37486, G__37487, seq37485__$2);
};
taoensso.sente.start_client_chsk_router_BANG_ = function taoensso$sente$start_client_chsk_router_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___37506 = arguments.length;
  var i__9708__auto___37507 = 0;
  while (true) {
    if (i__9708__auto___37507 < len__9707__auto___37506) {
      args__9714__auto__.push(arguments[i__9708__auto___37507]);
      var G__37508 = i__9708__auto___37507 + 1;
      i__9708__auto___37507 = G__37508;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 2 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(2), 0, null) : null;
  return taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9715__auto__);
};
taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ch_recv, event_msg_handler, p__37500) {
  var vec__37501 = p__37500;
  var map__37504 = cljs.core.nth.call(null, vec__37501, 0, null);
  var map__37504__$1 = (!(map__37504 == null) ? map__37504.cljs$lang$protocol_mask$partition0$ & 64 || map__37504.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37504) : map__37504;
  var opts = map__37504__$1;
  var trace_evs_QMARK_ = cljs.core.get.call(null, map__37504__$1, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  var error_handler = cljs.core.get.call(null, map__37504__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  return taoensso.sente._start_chsk_router_BANG_.call(null, cljs.core.not.call(null, new cljs.core.Keyword(null, "server", "server", 1499190120)), ch_recv, event_msg_handler, opts);
};
taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = function(seq37497) {
  var G__37498 = cljs.core.first.call(null, seq37497);
  var seq37497__$1 = cljs.core.next.call(null, seq37497);
  var G__37499 = cljs.core.first.call(null, seq37497__$1);
  var seq37497__$2 = cljs.core.next.call(null, seq37497__$1);
  return taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__37498, G__37499, seq37497__$2);
};
taoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;
taoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;
taoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;
taoensso.sente.start_chsk_router_loop_BANG_ = function taoensso$sente$start_chsk_router_loop_BANG_(event_handler, ch_recv) {
  return taoensso.sente.start_client_chsk_router_BANG_.call(null, ch_recv, function(ev_msg) {
    return event_handler.call(null, (new cljs.core.Keyword(null, "event", "event", 301435442)).cljs$core$IFn$_invoke$arity$1(ev_msg), (new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861)).cljs$core$IFn$_invoke$arity$1(ev_msg));
  });
};
taoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;
taoensso.sente.ajax_call = taoensso.encore.ajax_lite;
taoensso.sente.default_chsk_url_fn = function taoensso$sente$default_chsk_url_fn(path, p__37509, websocket_QMARK_) {
  var map__37512 = p__37509;
  var map__37512__$1 = (!(map__37512 == null) ? map__37512.cljs$lang$protocol_mask$partition0$ & 64 || map__37512.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37512) : map__37512;
  var location = map__37512__$1;
  var protocol = cljs.core.get.call(null, map__37512__$1, new cljs.core.Keyword(null, "protocol", "protocol", 652470118));
  var host = cljs.core.get.call(null, map__37512__$1, new cljs.core.Keyword(null, "host", "host", -1558485167));
  var pathname = cljs.core.get.call(null, map__37512__$1, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528));
  var protocol__$1 = cljs.core.truth_(websocket_QMARK_) ? cljs.core._EQ_.call(null, protocol, "https:") ? "wss:" : "ws:" : protocol;
  return [cljs.core.str(protocol__$1), cljs.core.str("//"), cljs.core.str(host), cljs.core.str(function() {
    var or__8632__auto__ = path;
    if (cljs.core.truth_(or__8632__auto__)) {
      return or__8632__auto__;
    } else {
      return pathname;
    }
  }())].join("");
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "\x3d", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  if (typeof Symbol != "undefined") {
    types.ITERATOR = Symbol.iterator;
  } else {
    types.ITERATOR = "@@iterator";
  }
  types.TaggedValue = function Transit$TaggedValue(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740991");
  types.MIN_INT = Long.fromString("-9007199254740991");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function Transit$Keyword(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this._name;
  };
  types.Keyword.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Keyword.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this._name == other._name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function Transit$Symbol(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Symbol.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Symbol.prototype.toString = function() {
    return this._name;
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this._name == other._name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function Transit$UUID(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function() {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function() {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.TransitMapIterator = function Transit$MapIterator(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.TransitMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.mapEquals = function(me, you) {
    if (me instanceof types.TransitMap && types.isMap(you)) {
      if (me.size !== you.size) {
        return false;
      }
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (me instanceof types.TransitArrayMap && types.isMap(you)) {
        if (me.size !== you.size) {
          return false;
        }
        var entries = me._entries;
        for (var j = 0;j < entries.length;j += 2) {
          if (!eq.equals(entries[j + 1], you.get(entries[j]))) {
            return false;
          }
        }
        return true;
      } else {
        if (you != null && typeof you === "object") {
          var ks = util.objectKeys(you), kslen = ks.length;
          if (me.size === kslen) {
            for (var i = 0;i < kslen;i++) {
              var k = ks[i];
              if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
                return false;
              }
            }
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.print = function(x) {
    if (x == null) {
      return "null";
    }
    if (goog.isArray(x)) {
      return "[" + x.toString() + "]";
    } else {
      if (goog.isString(x)) {
        return '"' + x + '"';
      } else {
        return x.toString();
      }
    }
  };
  types.printMap = function(map) {
    var idx = 0, str = "TransitMap {";
    map.forEach(function(v, k) {
      str += types.print(k) + " \x3d\x3e " + types.print(v);
      if (idx < map.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.printSet = function(set) {
    var idx = 0, str = "TransitSet {";
    set.forEach(function(v) {
      str += types.print(v);
      if (idx < set.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.TransitArrayMap = function Transit$ArrayMap(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitArrayMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      var ret = this.backingMap["delete"](k);
      this.size = this.backingMap.size;
      return ret;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          var ret = this._entries[i + 1];
          this._entries.splice(i, 2);
          this.size--;
          return ret;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitArrayMap.prototype["clone"] = types.TransitArrayMap.prototype.clone;
  types.TransitArrayMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function Transit$Map(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        var ret = bucket[i + 1];
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        return ret;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitMap.prototype["clone"] = types.TransitMap.prototype.clone;
  types.TransitMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function Transit$Set(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return types.printSet(this);
  };
  types.TransitSet.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    var ret = this.map["delete"](value);
    this.size = this.map.size;
    return ret;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.clone = function() {
    var clone = types.set();
    this.forEach(function(k) {
      clone.add(k);
    });
    return clone;
  };
  types.TransitSet.prototype["clone"] = types.TransitSet.prototype.clone;
  types.TransitSet.prototype[types.ITERATOR] = function() {
    return this.values();
  };
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.TaggedValue && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function Transit$WriteCache() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function Transit$ReadCache() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function Transit$Tag(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function Transit$Decoder(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init(node);
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function Transit$JSONUnmarshaller(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function Transit$Reader(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function Transit$NilHandler() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function Transit$StringHandler() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function Transit$NumberHandler() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function Transit$IntegerHandler() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function Transit$BooleanHandler() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function Transit$ArrayHandler() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function Transit$MapHandler() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function Transit$VerboseDateHandler() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function Transit$DateHandler() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function Transit$UUIDHandler() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function Transit$KeywordHandler() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function Transit$SymbolHandler() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function Transit$TaggedHandler() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function Transit$TransitSetHandler() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function Transit$ArrayMapHandler() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function Transit$MapHandler() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function Transit$BufferHandler() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function Transit$Uint8ArrayHandler() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function Transit$Handlers() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function Transit$JSONMarshaller(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        if (k !== undefined) {
          self.handlers.set(k, v);
        } else {
          throw new Error("Cannot create handler for JavaScript undefined");
        }
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString();
    ret = ret.substr("function ".length);
    ret = ret.substr(0, ret.indexOf("("));
    isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    var arr = null, rep = null, tag = null, ks = null, i = 0;
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          ks = util.objectKeys(obj);
          ret = {};
          for (;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            arr = em.unpack(obj);
            ret = ["^ "];
            if (arr) {
              for (;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          ret = ["^ "];
          ks = util.objectKeys(obj);
          for (;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function Transit$Writer(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var util = com.cognitect.transit.util, reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.MapLike;
  transit.SetLike;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashArrayLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.objectToMap = function(obj) {
    var ret = transit.map();
    for (var p in obj) {
      if (obj.hasOwnProperty(p)) {
        ret.set(p, obj[p]);
      }
    }
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = util.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.objectToMap", transit.objectToMap);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", util.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, objectToMap:transit.objectToMap, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:util.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = true;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.hash.call(null, this$__$1.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__37520_37524 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__37521_37525 = null;
  var count__37522_37526 = 0;
  var i__37523_37527 = 0;
  while (true) {
    if (i__37523_37527 < count__37522_37526) {
      var k_37528 = cljs.core._nth.call(null, chunk__37521_37525, i__37523_37527);
      var v_37529 = b[k_37528];
      a[k_37528] = v_37529;
      var G__37530 = seq__37520_37524;
      var G__37531 = chunk__37521_37525;
      var G__37532 = count__37522_37526;
      var G__37533 = i__37523_37527 + 1;
      seq__37520_37524 = G__37530;
      chunk__37521_37525 = G__37531;
      count__37522_37526 = G__37532;
      i__37523_37527 = G__37533;
      continue;
    } else {
      var temp__4657__auto___37534 = cljs.core.seq.call(null, seq__37520_37524);
      if (temp__4657__auto___37534) {
        var seq__37520_37535__$1 = temp__4657__auto___37534;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__37520_37535__$1)) {
          var c__9443__auto___37536 = cljs.core.chunk_first.call(null, seq__37520_37535__$1);
          var G__37537 = cljs.core.chunk_rest.call(null, seq__37520_37535__$1);
          var G__37538 = c__9443__auto___37536;
          var G__37539 = cljs.core.count.call(null, c__9443__auto___37536);
          var G__37540 = 0;
          seq__37520_37524 = G__37537;
          chunk__37521_37525 = G__37538;
          count__37522_37526 = G__37539;
          i__37523_37527 = G__37540;
          continue;
        } else {
          var k_37541 = cljs.core.first.call(null, seq__37520_37535__$1);
          var v_37542 = b[k_37541];
          a[k_37541] = v_37542;
          var G__37543 = cljs.core.next.call(null, seq__37520_37535__$1);
          var G__37544 = null;
          var G__37545 = 0;
          var G__37546 = 0;
          seq__37520_37524 = G__37543;
          chunk__37521_37525 = G__37544;
          count__37522_37526 = G__37545;
          i__37523_37527 = G__37546;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var args37547 = [];
  var len__9707__auto___37550 = arguments.length;
  var i__9708__auto___37551 = 0;
  while (true) {
    if (i__9708__auto___37551 < len__9707__auto___37550) {
      args37547.push(arguments[i__9708__auto___37551]);
      var G__37552 = i__9708__auto___37551 + 1;
      i__9708__auto___37551 = G__37552;
      continue;
    } else {
    }
    break;
  }
  var G__37549 = args37547.length;
  switch(G__37549) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37547.length)].join(""));;
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.call(null, type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
    return cljs.core.symbol.call(null, v);
  }, ":", function(v) {
    return cljs.core.keyword.call(null, v);
  }, "set", function(v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
  }, "list", function(v) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
  }, "cmap", function(v) {
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < v.length) {
        var G__37554 = i + 2;
        var G__37555 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
        i = G__37554;
        ret = G__37555;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, ret);
      }
      break;
    }
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__37556_37560 = cljs.core.seq.call(null, v);
  var chunk__37557_37561 = null;
  var count__37558_37562 = 0;
  var i__37559_37563 = 0;
  while (true) {
    if (i__37559_37563 < count__37558_37562) {
      var x_37564 = cljs.core._nth.call(null, chunk__37557_37561, i__37559_37563);
      ret.push(x_37564);
      var G__37565 = seq__37556_37560;
      var G__37566 = chunk__37557_37561;
      var G__37567 = count__37558_37562;
      var G__37568 = i__37559_37563 + 1;
      seq__37556_37560 = G__37565;
      chunk__37557_37561 = G__37566;
      count__37558_37562 = G__37567;
      i__37559_37563 = G__37568;
      continue;
    } else {
      var temp__4657__auto___37569 = cljs.core.seq.call(null, seq__37556_37560);
      if (temp__4657__auto___37569) {
        var seq__37556_37570__$1 = temp__4657__auto___37569;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__37556_37570__$1)) {
          var c__9443__auto___37571 = cljs.core.chunk_first.call(null, seq__37556_37570__$1);
          var G__37572 = cljs.core.chunk_rest.call(null, seq__37556_37570__$1);
          var G__37573 = c__9443__auto___37571;
          var G__37574 = cljs.core.count.call(null, c__9443__auto___37571);
          var G__37575 = 0;
          seq__37556_37560 = G__37572;
          chunk__37557_37561 = G__37573;
          count__37558_37562 = G__37574;
          i__37559_37563 = G__37575;
          continue;
        } else {
          var x_37576 = cljs.core.first.call(null, seq__37556_37570__$1);
          ret.push(x_37576);
          var G__37577 = cljs.core.next.call(null, seq__37556_37570__$1);
          var G__37578 = null;
          var G__37579 = 0;
          var G__37580 = 0;
          seq__37556_37560 = G__37577;
          chunk__37557_37561 = G__37578;
          count__37558_37562 = G__37579;
          i__37559_37563 = G__37580;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__37581_37585 = cljs.core.seq.call(null, v);
  var chunk__37582_37586 = null;
  var count__37583_37587 = 0;
  var i__37584_37588 = 0;
  while (true) {
    if (i__37584_37588 < count__37583_37587) {
      var x_37589 = cljs.core._nth.call(null, chunk__37582_37586, i__37584_37588);
      ret.push(x_37589);
      var G__37590 = seq__37581_37585;
      var G__37591 = chunk__37582_37586;
      var G__37592 = count__37583_37587;
      var G__37593 = i__37584_37588 + 1;
      seq__37581_37585 = G__37590;
      chunk__37582_37586 = G__37591;
      count__37583_37587 = G__37592;
      i__37584_37588 = G__37593;
      continue;
    } else {
      var temp__4657__auto___37594 = cljs.core.seq.call(null, seq__37581_37585);
      if (temp__4657__auto___37594) {
        var seq__37581_37595__$1 = temp__4657__auto___37594;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__37581_37595__$1)) {
          var c__9443__auto___37596 = cljs.core.chunk_first.call(null, seq__37581_37595__$1);
          var G__37597 = cljs.core.chunk_rest.call(null, seq__37581_37595__$1);
          var G__37598 = c__9443__auto___37596;
          var G__37599 = cljs.core.count.call(null, c__9443__auto___37596);
          var G__37600 = 0;
          seq__37581_37585 = G__37597;
          chunk__37582_37586 = G__37598;
          count__37583_37587 = G__37599;
          i__37584_37588 = G__37600;
          continue;
        } else {
          var x_37601 = cljs.core.first.call(null, seq__37581_37595__$1);
          ret.push(x_37601);
          var G__37602 = cljs.core.next.call(null, seq__37581_37595__$1);
          var G__37603 = null;
          var G__37604 = 0;
          var G__37605 = 0;
          seq__37581_37585 = G__37602;
          chunk__37582_37586 = G__37603;
          count__37583_37587 = G__37604;
          i__37584_37588 = G__37605;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__37606_37610 = cljs.core.seq.call(null, v);
  var chunk__37607_37611 = null;
  var count__37608_37612 = 0;
  var i__37609_37613 = 0;
  while (true) {
    if (i__37609_37613 < count__37608_37612) {
      var x_37614 = cljs.core._nth.call(null, chunk__37607_37611, i__37609_37613);
      ret.push(x_37614);
      var G__37615 = seq__37606_37610;
      var G__37616 = chunk__37607_37611;
      var G__37617 = count__37608_37612;
      var G__37618 = i__37609_37613 + 1;
      seq__37606_37610 = G__37615;
      chunk__37607_37611 = G__37616;
      count__37608_37612 = G__37617;
      i__37609_37613 = G__37618;
      continue;
    } else {
      var temp__4657__auto___37619 = cljs.core.seq.call(null, seq__37606_37610);
      if (temp__4657__auto___37619) {
        var seq__37606_37620__$1 = temp__4657__auto___37619;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__37606_37620__$1)) {
          var c__9443__auto___37621 = cljs.core.chunk_first.call(null, seq__37606_37620__$1);
          var G__37622 = cljs.core.chunk_rest.call(null, seq__37606_37620__$1);
          var G__37623 = c__9443__auto___37621;
          var G__37624 = cljs.core.count.call(null, c__9443__auto___37621);
          var G__37625 = 0;
          seq__37606_37610 = G__37622;
          chunk__37607_37611 = G__37623;
          count__37608_37612 = G__37624;
          i__37609_37613 = G__37625;
          continue;
        } else {
          var x_37626 = cljs.core.first.call(null, seq__37606_37620__$1);
          ret.push(x_37626);
          var G__37627 = cljs.core.next.call(null, seq__37606_37620__$1);
          var G__37628 = null;
          var G__37629 = 0;
          var G__37630 = 0;
          seq__37606_37610 = G__37627;
          chunk__37607_37611 = G__37628;
          count__37608_37612 = G__37629;
          i__37609_37613 = G__37630;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var args37631 = [];
  var len__9707__auto___37646 = arguments.length;
  var i__9708__auto___37647 = 0;
  while (true) {
    if (i__9708__auto___37647 < len__9707__auto___37646) {
      args37631.push(arguments[i__9708__auto___37647]);
      var G__37648 = i__9708__auto___37647 + 1;
      i__9708__auto___37647 = G__37648;
      continue;
    } else {
    }
    break;
  }
  var G__37633 = args37631.length;
  switch(G__37633) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37631.length)].join(""));;
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.call(null, type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
  cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
  symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
  return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__37634 = obj;
          G__37634.push(kfn.call(null, k), vfn.call(null, v));
          return G__37634;
        };
      }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x37635 = cljs.core.clone.call(null, handlers);
    x37635.forEach = function(x37635, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__37636 = cljs.core.seq.call(null, coll);
        var chunk__37637 = null;
        var count__37638 = 0;
        var i__37639 = 0;
        while (true) {
          if (i__37639 < count__37638) {
            var vec__37640 = cljs.core._nth.call(null, chunk__37637, i__37639);
            var k = cljs.core.nth.call(null, vec__37640, 0, null);
            var v = cljs.core.nth.call(null, vec__37640, 1, null);
            f.call(null, v, k);
            var G__37650 = seq__37636;
            var G__37651 = chunk__37637;
            var G__37652 = count__37638;
            var G__37653 = i__37639 + 1;
            seq__37636 = G__37650;
            chunk__37637 = G__37651;
            count__37638 = G__37652;
            i__37639 = G__37653;
            continue;
          } else {
            var temp__4657__auto__ = cljs.core.seq.call(null, seq__37636);
            if (temp__4657__auto__) {
              var seq__37636__$1 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__37636__$1)) {
                var c__9443__auto__ = cljs.core.chunk_first.call(null, seq__37636__$1);
                var G__37654 = cljs.core.chunk_rest.call(null, seq__37636__$1);
                var G__37655 = c__9443__auto__;
                var G__37656 = cljs.core.count.call(null, c__9443__auto__);
                var G__37657 = 0;
                seq__37636 = G__37654;
                chunk__37637 = G__37655;
                count__37638 = G__37656;
                i__37639 = G__37657;
                continue;
              } else {
                var vec__37643 = cljs.core.first.call(null, seq__37636__$1);
                var k = cljs.core.nth.call(null, vec__37643, 0, null);
                var v = cljs.core.nth.call(null, vec__37643, 1, null);
                f.call(null, v, k);
                var G__37658 = cljs.core.next.call(null, seq__37636__$1);
                var G__37659 = null;
                var G__37660 = 0;
                var G__37661 = 0;
                seq__37636 = G__37658;
                chunk__37637 = G__37659;
                count__37638 = G__37660;
                i__37639 = G__37661;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x37635, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x37635;
  }(), "unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var args37662 = [];
  var len__9707__auto___37668 = arguments.length;
  var i__9708__auto___37669 = 0;
  while (true) {
    if (i__9708__auto___37669 < len__9707__auto___37668) {
      args37662.push(arguments[i__9708__auto___37669]);
      var G__37670 = i__9708__auto___37669 + 1;
      i__9708__auto___37669 = G__37670;
      continue;
    } else {
    }
    break;
  }
  var G__37664 = args37662.length;
  switch(G__37664) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37662.length)].join(""));;
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t_cognitect$transit37665 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit37665 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta37666) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta37666 = meta37666;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit37665.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_37667, meta37666__$1) {
      var self__ = this;
      var _37667__$1 = this;
      return new cognitect.transit.t_cognitect$transit37665(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta37666__$1);
    };
    cognitect.transit.t_cognitect$transit37665.prototype.cljs$core$IMeta$_meta$arity$1 = function(_37667) {
      var self__ = this;
      var _37667__$1 = this;
      return self__.meta37666;
    };
    cognitect.transit.t_cognitect$transit37665.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit37665.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit37665.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.str_rep_fn)) {
        return self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit37665.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.verbose_handler_fn)) {
        return self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit37665.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta37666", "meta37666", 486719989, null)], null);
    };
    cognitect.transit.t_cognitect$transit37665.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit37665.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit37665";
    cognitect.transit.t_cognitect$transit37665.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
      return cljs.core._write.call(null, writer__9239__auto__, "cognitect.transit/t_cognitect$transit37665");
    };
    cognitect.transit.__GT_t_cognitect$transit37665 = function cognitect$transit$__GT_t_cognitect$transit37665(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta37666) {
      return new cognitect.transit.t_cognitect$transit37665(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta37666);
    };
  }
  return new cognitect.transit.t_cognitect$transit37665(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  var or__8632__auto__ = com.cognitect.transit.types.isUUID.call(null, x);
  if (cljs.core.truth_(or__8632__auto__)) {
    return or__8632__auto__;
  } else {
    return x instanceof cljs.core.UUID;
  }
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("taoensso.sente.packers.transit");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("taoensso.encore");
goog.require("cognitect.transit");
goog.require("taoensso.sente.interfaces");
taoensso.sente.packers.transit.get_transit_writer_fn = taoensso.encore.memoize_.call(null, function(fmt, opts) {
  var writer = cognitect.transit.writer.call(null, fmt, opts);
  return function(writer) {
    return function(x) {
      return cognitect.transit.write.call(null, writer, x);
    };
  }(writer);
});
taoensso.sente.packers.transit.get_transit_reader_fn = taoensso.encore.memoize_.call(null, function(fmt, opts) {
  var reader = cognitect.transit.reader.call(null, fmt, opts);
  return function(reader) {
    return function(s) {
      return cognitect.transit.read.call(null, reader, s);
    };
  }(reader);
});
taoensso.sente.packers.transit.TransitPacker = function(transit_fmt, writer_opts, reader_opts) {
  this.transit_fmt = transit_fmt;
  this.writer_opts = writer_opts;
  this.reader_opts = reader_opts;
};
taoensso.sente.packers.transit.TransitPacker.prototype.taoensso$sente$interfaces$IPacker$ = true;
taoensso.sente.packers.transit.TransitPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.sente.packers.transit.get_transit_writer_fn.call(null, self__.transit_fmt, self__.writer_opts).call(null, x);
};
taoensso.sente.packers.transit.TransitPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.sente.packers.transit.get_transit_reader_fn.call(null, self__.transit_fmt, self__.reader_opts).call(null, s);
};
taoensso.sente.packers.transit.TransitPacker.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "transit-fmt", "transit-fmt", 913727703, null), new cljs.core.Symbol(null, "writer-opts", "writer-opts", 1122222818, null), new cljs.core.Symbol(null, "reader-opts", "reader-opts", -1524615329, null)], null);
};
taoensso.sente.packers.transit.TransitPacker.cljs$lang$type = true;
taoensso.sente.packers.transit.TransitPacker.cljs$lang$ctorStr = "taoensso.sente.packers.transit/TransitPacker";
taoensso.sente.packers.transit.TransitPacker.cljs$lang$ctorPrWriter = function(this__9238__auto__, writer__9239__auto__, opt__9240__auto__) {
  return cljs.core._write.call(null, writer__9239__auto__, "taoensso.sente.packers.transit/TransitPacker");
};
taoensso.sente.packers.transit.__GT_TransitPacker = function taoensso$sente$packers$transit$__GT_TransitPacker(transit_fmt, writer_opts, reader_opts) {
  return new taoensso.sente.packers.transit.TransitPacker(transit_fmt, writer_opts, reader_opts);
};
taoensso.sente.packers.transit.get_transit_packer = function taoensso$sente$packers$transit$get_transit_packer(var_args) {
  var args37674 = [];
  var len__9707__auto___37680 = arguments.length;
  var i__9708__auto___37681 = 0;
  while (true) {
    if (i__9708__auto___37681 < len__9707__auto___37680) {
      args37674.push(arguments[i__9708__auto___37681]);
      var G__37682 = i__9708__auto___37681 + 1;
      i__9708__auto___37681 = G__37682;
      continue;
    } else {
    }
    break;
  }
  var G__37676 = args37674.length;
  switch(G__37676) {
    case 0:
      return taoensso.sente.packers.transit.get_transit_packer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.sente.packers.transit.get_transit_packer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return taoensso.sente.packers.transit.get_transit_packer.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37674.length)].join(""));;
  }
};
taoensso.sente.packers.transit.get_transit_packer.cljs$core$IFn$_invoke$arity$0 = function() {
  return taoensso.sente.packers.transit.get_transit_packer.call(null, new cljs.core.Keyword(null, "json", "json", 1279968570), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY);
};
taoensso.sente.packers.transit.get_transit_packer.cljs$core$IFn$_invoke$arity$1 = function(transit_fmt) {
  return taoensso.sente.packers.transit.get_transit_packer.call(null, transit_fmt, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY);
};
taoensso.sente.packers.transit.get_transit_packer.cljs$core$IFn$_invoke$arity$3 = function(transit_fmt, writer_opts, reader_opts) {
  var e_37684 = function() {
    try {
      if (function(x) {
        return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "json", "json", 1279968570), null], null), null)), x);
      }.call(null, transit_fmt)) {
        return null;
      } else {
        return taoensso.truss.impl._dummy_error;
      }
    } catch (e37677) {
      if (e37677 instanceof Error) {
        var e = e37677;
        return e;
      } else {
        throw e37677;
      }
    }
  }();
  if (e_37684 == null) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente.packers.transit", null, "([:el #{:json}] transit-fmt)", transit_fmt, e_37684, null);
  }
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var e = function() {
      try {
        if (cljs.core.map_QMARK_.call(null, writer_opts)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e37678) {
        if (e37678 instanceof Error) {
          var e = e37678;
          return e;
        } else {
          throw e37678;
        }
      }
    }();
    if (e == null) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente.packers.transit", null, "(map? writer-opts)", writer_opts, e, null);
    }
  }(), function() {
    var e = function() {
      try {
        if (cljs.core.map_QMARK_.call(null, reader_opts)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e37679) {
        if (e37679 instanceof Error) {
          var e = e37679;
          return e;
        } else {
          throw e37679;
        }
      }
    }();
    if (e == null) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente.packers.transit", null, "(map? reader-opts)", reader_opts, e, null);
    }
  }()], null);
  return new taoensso.sente.packers.transit.TransitPacker(transit_fmt, writer_opts, reader_opts);
};
taoensso.sente.packers.transit.get_transit_packer.cljs$lang$maxFixedArity = 3;
goog.provide("example.client");
goog.require("cljs.core");
goog.require("taoensso.sente");
goog.require("taoensso.sente.packers.transit");
goog.require("taoensso.timbre");
goog.require("cljs.core.async");
goog.require("taoensso.encore");
goog.require("clojure.string");
example.client.output_el = document.getElementById("output");
example.client.__GT_output_BANG_ = function example$client$__GT_output_BANG_(var_args) {
  var args__9714__auto__ = [];
  var len__9707__auto___37689 = arguments.length;
  var i__9708__auto___37690 = 0;
  while (true) {
    if (i__9708__auto___37690 < len__9707__auto___37689) {
      args__9714__auto__.push(arguments[i__9708__auto___37690]);
      var G__37691 = i__9708__auto___37690 + 1;
      i__9708__auto___37690 = G__37691;
      continue;
    } else {
    }
    break;
  }
  var argseq__9715__auto__ = 1 < args__9714__auto__.length ? new cljs.core.IndexedSeq(args__9714__auto__.slice(1), 0, null) : null;
  return example.client.__GT_output_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9715__auto__);
};
example.client.__GT_output_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(fmt, args) {
  var msg = cljs.core.apply.call(null, taoensso.encore.format, fmt, args);
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "example.client", "C:\\Users\\Bill\\AppData\\Local\\Temp\\form-init2685278426753171536.clj", 25, new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(msg) {
    return function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null);
    };
  }(msg), null), null, -631222453);
  example.client.output_el["value"] = [cljs.core.str("• "), cljs.core.str(example.client.output_el.value), cljs.core.str("\n"), cljs.core.str(msg)].join("");
  return example.client.output_el["scrollTop"] = example.client.output_el.scrollHeight;
};
example.client.__GT_output_BANG_.cljs$lang$maxFixedArity = 1;
example.client.__GT_output_BANG_.cljs$lang$applyTo = function(seq37687) {
  var G__37688 = cljs.core.first.call(null, seq37687);
  var seq37687__$1 = cljs.core.next.call(null, seq37687);
  return example.client.__GT_output_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__37688, seq37687__$1);
};
example.client.__GT_output_BANG_.call(null, "ClojureScript appears to have loaded correctly.");
var rand_chsk_type_37694 = cljs.core.rand.call(null) >= .5 ? new cljs.core.Keyword(null, "ajax", "ajax", 814345549) : new cljs.core.Keyword(null, "auto", "auto", -566279492);
var __37695 = example.client.__GT_output_BANG_.call(null, "Randomly selected chsk type: %s", rand_chsk_type_37694);
var packer_37696 = new cljs.core.Keyword(null, "edn", "edn", 1317840885);
var map__37692_37697 = taoensso.sente.make_channel_socket_client_BANG_.call(null, "/chsk", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), rand_chsk_type_37694, new cljs.core.Keyword(null, "packer", "packer", 66077544), packer_37696], null));
var map__37692_37698__$1 = (!(map__37692_37697 == null) ? map__37692_37697.cljs$lang$protocol_mask$partition0$ & 64 || map__37692_37697.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37692_37697) : map__37692_37697;
var chsk_37699 = cljs.core.get.call(null, map__37692_37698__$1, new cljs.core.Keyword(null, "chsk", "chsk", -863703081));
var ch_recv_37700 = cljs.core.get.call(null, map__37692_37698__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
var send_fn_37701 = cljs.core.get.call(null, map__37692_37698__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
var state_37702 = cljs.core.get.call(null, map__37692_37698__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
example.client.chsk = chsk_37699;
example.client.ch_chsk = ch_recv_37700;
example.client.chsk_send_BANG_ = send_fn_37701;
example.client.chsk_state = state_37702;
if (typeof example.client._event_msg_handler !== "undefined") {
} else {
  example.client._event_msg_handler = function() {
    var method_table__9557__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__9558__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__9559__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__9560__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__9561__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "example.client", "-event-msg-handler"), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__9561__auto__, method_table__9557__auto__, prefer_table__9558__auto__, method_cache__9559__auto__, cached_hierarchy__9560__auto__);
  }();
}
example.client.event_msg_handler = function example$client$event_msg_handler(p__37703) {
  var map__37706 = p__37703;
  var map__37706__$1 = (!(map__37706 == null) ? map__37706.cljs$lang$protocol_mask$partition0$ & 64 || map__37706.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37706) : map__37706;
  var ev_msg = map__37706__$1;
  var id = cljs.core.get.call(null, map__37706__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var _QMARK_data = cljs.core.get.call(null, map__37706__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  var event = cljs.core.get.call(null, map__37706__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  return example.client._event_msg_handler.call(null, ev_msg);
};
cljs.core._add_method.call(null, example.client._event_msg_handler, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__37708) {
  var map__37709 = p__37708;
  var map__37709__$1 = (!(map__37709 == null) ? map__37709.cljs$lang$protocol_mask$partition0$ & 64 || map__37709.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37709) : map__37709;
  var ev_msg = map__37709__$1;
  var event = cljs.core.get.call(null, map__37709__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  return example.client.__GT_output_BANG_.call(null, "Unhandled event: %s", event);
});
cljs.core._add_method.call(null, example.client._event_msg_handler, new cljs.core.Keyword("chsk", "state", "chsk/state", -1991397620), function(p__37711) {
  var map__37712 = p__37711;
  var map__37712__$1 = (!(map__37712 == null) ? map__37712.cljs$lang$protocol_mask$partition0$ & 64 || map__37712.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37712) : map__37712;
  var ev_msg = map__37712__$1;
  var _QMARK_data = cljs.core.get.call(null, map__37712__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  var vec__37714 = function() {
    var e = function() {
      try {
        if (cljs.core.vector_QMARK_.call(null, _QMARK_data)) {
          return null;
        } else {
          return taoensso.truss.impl._dummy_error;
        }
      } catch (e37717) {
        if (e37717 instanceof Error) {
          var e = e37717;
          return e;
        } else {
          throw e37717;
        }
      }
    }();
    if (e == null) {
      return _QMARK_data;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "example.client", null, "(vector? ?data)", _QMARK_data, e, null);
    }
  }();
  var old_state_map = cljs.core.nth.call(null, vec__37714, 0, null);
  var new_state_map = cljs.core.nth.call(null, vec__37714, 1, null);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530)).cljs$core$IFn$_invoke$arity$1(new_state_map))) {
    return example.client.__GT_output_BANG_.call(null, "Channel socket successfully established!: %s", new_state_map);
  } else {
    return example.client.__GT_output_BANG_.call(null, "Channel socket state change: %s", new_state_map);
  }
});
cljs.core._add_method.call(null, example.client._event_msg_handler, new cljs.core.Keyword("chsk", "recv", "chsk/recv", 561097091), function(p__37718) {
  var map__37719 = p__37718;
  var map__37719__$1 = (!(map__37719 == null) ? map__37719.cljs$lang$protocol_mask$partition0$ & 64 || map__37719.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37719) : map__37719;
  var ev_msg = map__37719__$1;
  var _QMARK_data = cljs.core.get.call(null, map__37719__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  return example.client.__GT_output_BANG_.call(null, "Push event from server: %s", _QMARK_data);
});
cljs.core._add_method.call(null, example.client._event_msg_handler, new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), function(p__37721) {
  var map__37722 = p__37721;
  var map__37722__$1 = (!(map__37722 == null) ? map__37722.cljs$lang$protocol_mask$partition0$ & 64 || map__37722.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37722) : map__37722;
  var ev_msg = map__37722__$1;
  var _QMARK_data = cljs.core.get.call(null, map__37722__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  var vec__37724 = _QMARK_data;
  var _QMARK_uid = cljs.core.nth.call(null, vec__37724, 0, null);
  var _QMARK_csrf_token = cljs.core.nth.call(null, vec__37724, 1, null);
  var _QMARK_handshake_data = cljs.core.nth.call(null, vec__37724, 2, null);
  return example.client.__GT_output_BANG_.call(null, "Handshake: %s", _QMARK_data);
});
if (typeof example.client.router_ !== "undefined") {
} else {
  example.client.router_ = cljs.core.atom.call(null, null);
}
example.client.stop_router_BANG_ = function example$client$stop_router_BANG_() {
  var temp__4657__auto__ = cljs.core.deref.call(null, example.client.router_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var stop_f = temp__4657__auto__;
    return stop_f.call(null);
  } else {
    return null;
  }
};
example.client.start_router_BANG_ = function example$client$start_router_BANG_() {
  example.client.stop_router_BANG_.call(null);
  return cljs.core.reset_BANG_.call(null, example.client.router_, taoensso.sente.start_client_chsk_router_BANG_.call(null, example.client.ch_chsk, example.client.event_msg_handler));
};
var temp__4657__auto___37727 = document.getElementById("btn1");
if (cljs.core.truth_(temp__4657__auto___37727)) {
  var target_el_37728 = temp__4657__auto___37727;
  target_el_37728.addEventListener("click", function(target_el_37728, temp__4657__auto___37727) {
    return function(ev) {
      example.client.__GT_output_BANG_.call(null, "Button 1 was clicked (won't receive any reply from server)");
      return example.client.chsk_send_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("example", "button1", "example/button1", -349884645), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "had-a-callback?", "had-a-callback?", -512946762), "nope"], null)], null));
    };
  }(target_el_37728, temp__4657__auto___37727));
} else {
}
var temp__4657__auto___37729 = document.getElementById("btn2");
if (cljs.core.truth_(temp__4657__auto___37729)) {
  var target_el_37730 = temp__4657__auto___37729;
  target_el_37730.addEventListener("click", function(target_el_37730, temp__4657__auto___37729) {
    return function(ev) {
      example.client.__GT_output_BANG_.call(null, "Button 2 was clicked (will receive reply from server)");
      return example.client.chsk_send_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("example", "button2", "example/button2", -675598425), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "had-a-callback?", "had-a-callback?", -512946762), "indeed"], null)], null), 5E3, function(target_el_37730, temp__4657__auto___37729) {
        return function(cb_reply) {
          return example.client.__GT_output_BANG_.call(null, "Callback reply: %s", cb_reply);
        };
      }(target_el_37730, temp__4657__auto___37729));
    };
  }(target_el_37730, temp__4657__auto___37729));
} else {
}
var temp__4657__auto___37731 = document.getElementById("btn3");
if (cljs.core.truth_(temp__4657__auto___37731)) {
  var target_el_37732 = temp__4657__auto___37731;
  target_el_37732.addEventListener("click", function(target_el_37732, temp__4657__auto___37731) {
    return function(ev) {
      example.client.__GT_output_BANG_.call(null, "Button 3 was clicked (will ask server to test rapid async push)");
      return example.client.chsk_send_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("example", "test-rapid-push", "example/test-rapid-push", -93412097)], null));
    };
  }(target_el_37732, temp__4657__auto___37731));
} else {
}
var temp__4657__auto___37733 = document.getElementById("btn4");
if (cljs.core.truth_(temp__4657__auto___37733)) {
  var target_el_37734 = temp__4657__auto___37733;
  target_el_37734.addEventListener("click", function(target_el_37734, temp__4657__auto___37733) {
    return function(ev) {
      example.client.__GT_output_BANG_.call(null, "Button 4 was clicked (will toggle async broadcast loop)");
      return example.client.chsk_send_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("example", "toggle-broadcast", "example/toggle-broadcast", -1640005413)], null), 5E3, function(target_el_37734, temp__4657__auto___37733) {
        return function(cb_reply) {
          if (cljs.core.truth_(taoensso.sente.cb_success_QMARK_.call(null, cb_reply))) {
            var loop_enabled_QMARK_ = cb_reply;
            if (cljs.core.truth_(loop_enabled_QMARK_)) {
              return example.client.__GT_output_BANG_.call(null, "Async broadcast loop now enabled");
            } else {
              return example.client.__GT_output_BANG_.call(null, "Async broadcast loop now disabled");
            }
          } else {
            return null;
          }
        };
      }(target_el_37734, temp__4657__auto___37733));
    };
  }(target_el_37734, temp__4657__auto___37733));
} else {
}
var temp__4657__auto___37735 = document.getElementById("btn5");
if (cljs.core.truth_(temp__4657__auto___37735)) {
  var target_el_37736 = temp__4657__auto___37735;
  target_el_37736.addEventListener("click", function(target_el_37736, temp__4657__auto___37735) {
    return function(ev) {
      example.client.__GT_output_BANG_.call(null, "Disconnecting");
      return taoensso.sente.chsk_disconnect_BANG_.call(null, example.client.chsk);
    };
  }(target_el_37736, temp__4657__auto___37735));
} else {
}
var temp__4657__auto___37737 = document.getElementById("btn6");
if (cljs.core.truth_(temp__4657__auto___37737)) {
  var target_el_37738 = temp__4657__auto___37737;
  target_el_37738.addEventListener("click", function(target_el_37738, temp__4657__auto___37737) {
    return function(ev) {
      example.client.__GT_output_BANG_.call(null, "Reconnecting");
      return taoensso.sente.chsk_reconnect_BANG_.call(null, example.client.chsk);
    };
  }(target_el_37738, temp__4657__auto___37737));
} else {
}
var temp__4657__auto___37739 = document.getElementById("btn-login");
if (cljs.core.truth_(temp__4657__auto___37739)) {
  var target_el_37740 = temp__4657__auto___37739;
  target_el_37740.addEventListener("click", function(target_el_37740, temp__4657__auto___37739) {
    return function(ev) {
      var user_id = document.getElementById("input-login").value;
      if (clojure.string.blank_QMARK_.call(null, user_id)) {
        return alert("Please enter a user-id first");
      } else {
        example.client.__GT_output_BANG_.call(null, "Logging in with user-id %s", user_id);
        return taoensso.sente.ajax_lite.call(null, "/login", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "headers", "headers", -835030129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "X-CSRF-Token", "X-CSRF-Token", 1562992453), (new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        example.client.chsk_state))], null), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "user-id", "user-id", -206822291), [cljs.core.str(user_id)].join("")], null)], null), function(user_id, target_el_37740, temp__4657__auto___37739) {
          return function(ajax_resp) {
            example.client.__GT_output_BANG_.call(null, "Ajax login response: %s", ajax_resp);
            var login_successful_QMARK_ = true;
            if (!login_successful_QMARK_) {
              return example.client.__GT_output_BANG_.call(null, "Login failed");
            } else {
              example.client.__GT_output_BANG_.call(null, "Login successful");
              return taoensso.sente.chsk_reconnect_BANG_.call(null, example.client.chsk);
            }
          };
        }(user_id, target_el_37740, temp__4657__auto___37739));
      }
    };
  }(target_el_37740, temp__4657__auto___37739));
} else {
}
example.client.start_BANG_ = function example$client$start_BANG_() {
  return example.client.start_router_BANG_.call(null);
};
if (typeof example.client._start_once !== "undefined") {
} else {
  example.client._start_once = example.client.start_BANG_.call(null);
}
;